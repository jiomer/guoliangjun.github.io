<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>18岁了。</title>
    <url>/393/</url>
    <content><![CDATA[<p>嗯明天就是自己18岁生日了。先给亲爱的自己说声生日快乐。好了我该睡觉了以后也就是成年人了要长大了该负责很多很多事情了</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>2010.01.26---2014.01.26</title>
    <url>/241/</url>
    <content><![CDATA[<p>中国梦，我的梦。每个人心里都会有一个美好且属于自己的梦，而梦很多时候与现实是两码事，在你经历了无数次的失败、拒绝、伤心甚至想死的时候你不妨去找找其他方法。</p>
<p>许多事情，总是在经历以后才会懂得，一如感情：错过了，遗憾了，才知道其实生活并不需要这么多无谓的执著。二如被骗了：骗过了才知道你下次不会再被骗。</p>
<p>同样的梦，同样有着自己的理想梦为什么我的遇到怎么多阻拦？这2013年我遇到了多少苦难多少挫折多少不为人知的事？伤病、爱情、友情、成绩…..哪有咋了？不也一样自己去面对了，事后也会在一个小角落上静静的呆着眼角露出了小泪珠，很多时候我们不开心，却假装很开心；很多时候我们不知道，却假装知道；很多事情我们知道，却假装不知道。哭其实也是一种发泄内心的一种方式。</p>
<p>最后祝自己坚持写博4年了。从14岁到18岁、从初二到高二、从不懂事到懂事、从叛逆的孩子到成熟的男孩、从.TK到.org再到.com。这都是一种过程一种经历一种演变罢了。</p>
<p>2010.01.26—–2014.0126</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.06.08</title>
    <url>/349/</url>
    <content><![CDATA[<p>高考最后一天了。也在家里玩了几天了,一点作业也没有做各种懒、</p>
<p>明天也是高二的回去会考了、希望师兄师姐们能拿3个C以上。</p>
<p>刚在微博上看到了一个MV、是TF乐队的俩可爱男生。</p>
<p>虽然那个MV过了很久但是也很好听不解释、好了好了不说了去打球@奸雄求虐!!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>mv</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.07.25</title>
    <url>/357/</url>
    <content><![CDATA[<p>下午又是一场大雨洗劫了我打球的心。</p>
<p>雨后的田野很美,还有很多人在哪里拔花生、真的,看着很好玩的样子。</p>
<p>或许这只是我的好奇心吧，如果那拔花生的人是我、我也不想拔。太费力了。但是这也不可能的因为这就是经济的来源。</p>
<p>然后我也上前去弯腰开始拔，使劲一拔，没把花生拔起来，倒把叶子拔了下来，然后那些阿姨笑了我。唉唉，其实拔花生很辛苦的不解释呀。</p>
<p> 好了该睡觉了。不早了,全世界晚安!!!都做一个梦。 最后上一首歌把。“Save Me From That Cage”</p>
<p>  </p>
<p>好了睡觉把。晚安我爱的人、晚安爱我的人。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.07.31</title>
    <url>/358/</url>
    <content><![CDATA[<p>奸雄,当你再次访问我博客是时候你觉得速度怎么样了?</p>
<p>嗯哼,现在换了去HK主机上、你不会再抱怨整天你那里访问我这博客慢死还有卡死。</p>
<p>哦对了搬了主机、请大家帮忙看看有什么错误的地方记得留言告诉我。谢谢了!!!</p>
<p>这几天都在玩一个梦之队的游戏、然后就在网上看看英文的电影。老师说可以提高英语水平。</p>
<p>我也先吐槽一下。你们有兴趣的朋友们。可以进入我们的Q群。群号：170145523。</p>
<p>宗旨：</p>
<p>①小思访谈进行中..<br>②互联网最新话题讨论<br>③聊八卦，写爆料<br>④每天大声说一句话</p>
<p>这个群是小思创的。不错的。每天吐槽自己的心情哈哈哈</p>
<p>最后感谢<a href="http://www.fyvps.com/">枫叶主机</a>&amp;<a href="http://asheblog.org/">asheblog</a>这几个月对我的巨大支持.这几个月我用的很开心!</p>
<p>嗯哼,</p>
<p>现在呢就一个大叔在包养呀。虽然奸雄那货叫我去三号哪里。说包养我罩住我。哈哈哈你就不怕苏宁打死你!!</p>
<p>好了再次感谢大叔<a href="http://www.idcweed.com/aff.php?aff=008">野草主机</a>的大力支持。有兴趣的朋友可以留言。我可以帮你们拿优惠码喔</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.08.04</title>
    <url>/211/</url>
    <content><![CDATA[<p>今天天气不错、今天很早起来就去跑步了，早上看到了一些老人家都两两的跑。但是我不羡慕我只是来舒缓舒缓心情的。我不想每天都这样浑浑噩噩的过日子。是的，我一直在逃避着什么。但也在努力想争取到什么!!!</p>
<p>暑假一个月过去了，暑假前给自己制定的学习任务只学了十分之一。我笑了，微微的一笑。虽然我没徐志摩的那一份豪放、那一份轻轻地来也轻轻的走!!</p>
<p>嗯，没心情吐槽了也没有那么文艺去吐槽了。但我只想说我责任心强了，至少比以前强多了。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.08.05</title>
    <url>/359/</url>
    <content><![CDATA[<p>一天又一天。时间过得很快，这一天我说的话不超过10句。心情很底，真想回到以前自己把自己锁到房间里不出了。</p>
<p>老妈还是出去打麻将了。而已依旧在电脑面前啪啪啪的打着字。QQ、微博、博客每天必备的。但是又有几个人能认真的听我的故事、倾听我内心的世界呢?</p>
<p>从小学就开始了，是的小学的时候老妈上午下午晚上都去打麻将。而已就和姐呆在家里，遇到了事情了就自己安慰自己。渐渐的不爱说话。也把自己锁了起来，而我爸，我爸一直在忙。每刺回家手机都忙个不停等有空了还是晚上了。我能说谁能陪我说说话?或者我就自己和自己说吧。</p>
<p>现在的东西我已经可以独立了。是的现在身上很多东西都是我自己辛苦换来的。我现在已经没有问老爸老妈拿很多很多的钱。虽然我姐每次叫我爸妈买东西我爸妈都会买、而我从小就不闻不理。我知道我爸妈只会那样。但是我很开心老天给予我比人快一步的成熟。</p>
<p>嗯哼我不想说了听歌吧,Twins——成长</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.08.16</title>
    <url>/361/</url>
    <content><![CDATA[<p>很久没有写了。最近可以迷上了游戏吧。一个篮球游戏,挺有乐趣了哈哈哈哈。这个游戏我不想公开因为公开你们就会给腾讯赚钱的。</p>
<p>经过这十几天这样玩那个游戏、真心的说眼睛很疼。赚钱也很难呜呜!!</p>
<p>还有最近七牛好像免费使用了吧。QQ邮箱那里看到很多七牛云存储发来的广告。不知道是不是开始也免费了、前几个月用了一下七牛真心不错的。不过那时候还是体验吧。</p>
<p>好了我今天真的不想说话。你们看一下乐事的视频吧。因为我今天真的很背、不对是天天都这么的背。求大师们帮我辟邪~</p>
<p>  </p>
<p>一共五集。我不会告诉你们看完了会去买乐事来吃的。我看完了就买了几包回家擦。骗钱的我是!!!!哈哈哈哈哈</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2013.08.23</title>
    <url>/215/</url>
    <content><![CDATA[<p>在生命的长廊里，我们会经历不同的失败和困惑。然而在这个充满激情和挑战的社会，我们不可能为了那么一点点挫折而放弃自己，放弃这个充满着青春气息的社会。我只想用几句小语送给亲爱的，希望你我共勉！</p>
<p>19号军训了把，某人曾经说自己我会挨过去的、但是就为了那么的一点事就说我要回家。我挨不过去了、我想谁谁谁。这样不想的。你这次逃避了不能跨过这道难关。那么以后的难关呢？怎么去面对距离军训完还要一天半。加油吧、或者这道难关过了以后还要很多的难关、但是你会从中知道、懂得很多事情，而不会动不动就说我要放弃我不行了！！</p>
<p>记得“当你没有人可以依靠的时候，哪怕再苦，再累，再痛，都要告诉自己别放弃，要坚强。”</p>
<p>嗯加油没事的挺过去!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>军训</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.09.19</title>
    <url>/363/</url>
    <content><![CDATA[<p>明月几时有，把饼问青天，不知饼中何馅，今日是莲蓉，我欲乘舟观月，又恐飞船太慢，远处不胜寒。</p>
<p>这是是苏轼的改版。你们知道明天是什么节日了吧。中秋节、一个全家团团圆圆的好日子。</p>
<p>正是这个时候，我才能在博客是写自己的话。知道吗？原来高二和高一不同，高二已经可以说是准高三了，老师说过：“高一的时间是自己支配的，高二的时间是老师一半自己一半，到了高三时间是老师锁住的。“</p>
<p>看了看上次发的文章，已经半个月没有哼过自己的心情了。因为最近都很忙很忙，放假时间就很少了，然后还要小组去写一个月刊。想到就头大了！！！</p>
<p>嗯哼,我介绍大家看一个微电影，叫&lt;深深浅浅&gt;一个很纯真的友谊。我不会告诉你们我们班的女孩子看了哭个满天飞!!哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈。</p>
<p>好了最后祝大家中秋节快乐。小俊谨献表以闻。次奥用上文言文了!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.09.30</title>
    <url>/364/</url>
    <content><![CDATA[<p>很累.</p>
<p>今天放假了.国庆来了。但是这国庆假期来之不易,因为因为因为因为我们已经上了9天的课了!!次奥。</p>
<p>其实我真的不想放这么长的假。真的,因为放假等于没有放、各种压力各种作业最可恨的就是轮到我做校园月刊的!!我现在还没有找材料找内容。</p>
<p>还有就是真心不会做但是我有这个决心,谁一出生就会?对不。所以只要你敢去尝试哪怕是不好你也有付出过,就像你成绩一样有付出就会有收获,哪怕现在没有、将来一定会有、</p>
<p>嗯哈~最后祝大家国庆长假快乐。so 也需要大家给我找找一些关于校园<a href="http://199604.com/?tag=%E7%94%9F%E6%B4%BB" title="查看标签为 生活 的文章">生活</a>的文章、最好是高中<a href="http://199604.com/?tag=%E7%94%9F%E6%B4%BB" title="查看标签为 生活 的文章">生活</a>的。</p>
<p>有的联系我、或者注解邮箱我</p>
<p>邮箱地址：<a href="mailto:&#x61;&#x39;&#53;&#50;&#55;&#x32;&#48;&#50;&#50;&#x33;&#64;&#118;&#x69;&#112;&#x2e;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;">&#x61;&#x39;&#53;&#50;&#55;&#x32;&#48;&#50;&#50;&#x33;&#64;&#118;&#x69;&#112;&#x2e;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;</a></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.10.19</title>
    <url>/366/</url>
    <content><![CDATA[<p>今天呢,喜忧参半。真的、因为今天是放假的好日子但是呢回家开电脑开不了一直叫然后一看内存卡松了。</p>
<p>就因为一个月前我家里来了一个为了潜水的表哥、你妈逼一个多月一直在我家里吃我的喝我的还要说我的床更那个的是把我心爱的电脑也弄中毒and内存卡断了!!!好不容易把电脑弄好一上博客。马上弹出广告来.我还以为是我博客给人劫持了、然后问了别人说没有弹出广告。我就觉得是自己的电脑。</p>
<p>唉唉,然后我查了一下。我路由器的DNS给劫持了。弄得我的电脑了劫持了。然后中毒。全线中毒、</p>
<p>可恨的是IP地址是韩国。哥哥你很犀利了。小弟真的不知怎么去追踪你，因为小弟的电脑已经是肉鸡了，真心不想再吐槽了。</p>
<p>因为我这星期已经够背了。</p>
<p>星期一、喉咙痛。…….一直到星期三发高烧….然后级组还要校医写证明才可以出去打点滴。</p>
<p>到现在我还喉咙发炎。这个月已经第二次喉咙发炎了、我爸也服了我体质为什么会怎么的差.</p>
<p>不吐槽了。这星期就记录这些、累了睡觉、全世界晚安.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.10.13</title>
    <url>/365/</url>
    <content><![CDATA[<p>我真心的想了很久,现在写博的时间越来越少了。</p>
<p>以前可以一个月写4.5篇。而现在已经是一个月1到2篇了。</p>
<p>或者我越来越内向了。</p>
<p>或者我不爱去分享与分担了。</p>
<p>或者的或者。现实就这么的矛盾,失去了才懂得珍惜、失去了才知道后悔</p>
<p>嗯哈,这些天发生了很多的时候,人生本该是这样,不经历磨难怎么会有彩虹,</p>
<p>一次次的失败与一次次的成功,背后都有无数的汗水与泪水。</p>
<p>就像高三的师兄师姐们,为了国庆能多一天两天,就像电视台举报,或者你们得到了你们想要的假期。但是你也伤害了其他想去考重本,考好的大学的师兄师姐、这是不是叫害己更害人!!!</p>
<p>其实我最想说的就是你们身在福中不知福。老师们免费给你们补课,他们也可以放假。他们是为了你们好,因为他们是老师,我们清远本来教育就落后了,起点就很低了,还不努力还不加倍努力去学。那拿什么去和珠三角的人争？</p>
<p>最后也希望“广东电视台的DV现场”能尊重下我们学校的措施。每个学校都有自己的灵魂,现在一个报到就把一个学校的灵魂弄得支离破碎,灵魂没了学校还有动力?</p>
<p>好了我也吐槽完了、如果是有得罪的地方我马上删帖!!!请不要再侮辱我们学校!!</p>
<p>因为我们都爱清新一中!!!!!</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.11.02</title>
    <url>/367/</url>
    <content><![CDATA[<p>电脑好了,就吐槽一下。</p>
<p>其实我用了em的伪静态。我就一个2b问题，伪静态怎么连显示主页都没有了- -。我好纠结要不要换回动态。真心不适应。每次更新日志都要更新伪静态各种不习惯。然后收录不也一样其实我这博客可能更适合动态吧。</p>
<p>下星期就期中考试了。复习了一点，但是英语一直在坑我的总分。虽然最近身子越来越差了不知道为啥、一个地方好了又到另一个地方，我的运动量已经够大了咋免疫力还怎么差？</p>
<p>各种各样的心情。各种各样的烦恼男人就是累男人就是累。</p>
<p>好咯、该去补习了、就先吐槽到这样。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2013.11.17</title>
    <url>/368/</url>
    <content><![CDATA[<p>很久没有来谢博客了。</p>
<p>今天有空来看了，还是挺好的。</p>
<p>嗯哼期中考试英语和数学考砸了。理综也上了250分不错了但是呢哎哎成绩还是很差很差很差。</p>
<p>然后昨天开家长会了，老爸老妈都没有来。看着别人的爸妈都来开家长会心里真的不是滋味。</p>
<p>我那个写给爸妈的信他们也没有机会看了、然后自己就一个人独自在操场上发呆、呵呵可能是他们都没有空来吧。嗯但是那封信我还是没有勇气给我爸妈看、或许这就是代沟。</p>
<p>嗯，其实没什么大不了。</p>
<p>还好我还有小伙伴陪我去吃东西、因为昨天是广东清远国际旅游文化节的最后一天、作为清远人为什么不去参与。然后的然后就给那个黑商给骗了。我们6个2b给一个黑商！骗了一个叫化鸡。哎哎太不好吃。又贵又少最可恨是在冰箱的冷冰冰的。擦擦擦擦.</p>
<p>嗯哼不发泄了这就是我。一直都是这样写博的我。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.11.24</title>
    <url>/369/</url>
    <content><![CDATA[<p>今天的天气又有灰霾了、预兆是不是会有冷空气呢？我的衣服还没有干呢!!!我不要这样的天气、不然我在学校怎么过？</p>
<p>好啦好啦还是说正事。因为这星期我已经疯了4天了。4天的校运会一个字都没有看过、晚自修还陶醉在白天的欢笑中。因为那些妹子实在是太多了、太养眼了、哦我又想歪了。</p>
<p>其实我想说的是这届的校运会我们全班都不可能玩的开心、因为什么因为有我们那个班主任fuck.其他班都可以到处走走酒瓯我们只需待在大本营、看比赛在大本营、最变态的是不需玩手机不需玩其他只需看书!!!那么我还不如看美女、校长都说了校运会是参与的是围观的是放松的是享受的!!!这不是坑妹子的吗？这不是金鱼佬才做的吗？</p>
<p>好了献上我们班会课的女模特比赛</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.12.01</title>
    <url>/370/</url>
    <content><![CDATA[<p>今天收到空间服务商的消息、哦草,野草主机已经由“恒???有限公司”、接管所有事务、我去年买一个表、然后我就沉没了。那么我以前的靠山不见了死了那么那么那么还好吧一直背吧。为什么不是腾讯接管？如果是我马上滚蛋走人、</p>
<p>或许这就是一个成长、或许我也习惯了。每次生病都是自己面对。无论病的多犀利。无论我怎么样医生说什么我还是接受而我的爸妈只能说为什么一年生病怎么多少、你以为我真的很想？我也不想生病我也天天锻炼老天就要这样对我我有什么办法/我也想爸妈能在我身边和我一起面对、每次我都是自己一个去看病看着那些小朋友有爸妈爷爷奶奶在一起看病。而我、每次每次都这样独自的面对。我很难受真的有什么办法哭过以后还不是坚强了、</p>
<p>嗯哼吐槽完了。记录谢谢</p>
<p>我真的不想生病我不想这样医好了。那里有出现打的问题.我只想我能健康、</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.12.15</title>
    <url>/372/</url>
    <content><![CDATA[<p>这就是青春吧，来来回回，一个个循环，最终还是是停留在远点，不知道前方在哪，也许有幸福在的地方便是心的方向吧，你的青春有了我的脚印，我的青春有了你的驻留，这便足够了，我会永远铭记着你，陪我走过最美好的青春。</p>
<p>青春是一个挫折、困难但你需要去面对。因为我们还有很多的命运。但是我们都需要去努力，不是说了不做、想去做事好的。这起码也是一个开头但是没有付诸行动也是你日后的收获与否、</p>
<p>还有一年半高考、还有半年的小高考我又准备了没？每天想着玩玩玩玩、把玩的时候拿去学习那么时候那么成绩不就不会在一落千丈了吗?</p>
<p>但是我也向自己的心有一天可以变得麻木、但是你在哭泣你在upset。那又有什么帮助。所有想到了就像行动、</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.12.21</title>
    <url>/373/</url>
    <content><![CDATA[<p>喜不喜欢和适不适合是两码事。 <br>婚姻是一双鞋。不论什么鞋，最重要的是合脚；不论什么样的姻缘，最美妙的是和谐。切莫只贪图鞋 的华贵，而委屈了自己的脚。别人看到的是鞋，自己感受到的是脚。脚比鞋重要，这是一条真理，许许多多的人却常常忘记。<br>找一个能包容你的人。可能他不是你喜欢的类型。但他能包容你的一切。就像鞋子一样。漂亮的穿着不一定舒服，会挤脚，会破皮，会流血。<br>但合适的鞋子就不一样，他可能没有漂亮的外表，但他能包容你，任你蹬，任你踹，你会觉得舒服……会感到幸福。  </p>
<p>所以幸福不是忍耐，而是包容。每个情侣都是这样，需要相互的谦让。不是不合而是两个人都不丢下面子去道歉去忍让最后的结果大家都懂得、有一句俗话就是如果男朋友要战胜女朋友下场就是男的赢了但是他失去她。</p>
<p>最后献上我们每次英语口语练习的时候都会听的一首歌。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.12.29</title>
    <url>/374/</url>
    <content><![CDATA[<p>2013的最后一个周末了。回想着这一年我事怎么过的?浑浑噩噩的过着的生活一点意思都没有。曾经我每次英语听写都听不过而如果你努力了你有付出过你就可以知道你也会有回报。不要没有付出时给自己一个否定。我们都要给自己多点自信但过多的自信也可以变自卑或许这个就是人生一个难题、正如我爸给我说得,在自己遇到难题时你回咋面对、嗯这是我爸在我中考失败后吊出来的一句、面对两年前的我。我已经变了很多、最多脾气变了、成熟了,想想以前。初中时我事怎么的一个人,我爸妈或许最清楚了或许还有一个人时激发重新去认真学习、每次我失败都会想起我的恩师真的但是我每次见到他我不会说话变回一个小孩子、想要像我爸妈那个骂我疼我。每次见到他他都会捏我耳朵、然后问我最近有没不听话了有没边玩电脑边看书有没去打架什么的。其实他知道我已经变了很多了、恩我和我爸妈还有恩师说过我不会再去撩事斗非的。不会去做那些SB。不会再叛逆什么的。嗯哼每次回忆自己以前都是一种进步吧看以前自己都向把缺点改掉唯一改不了的是面对越好的人我就不会说话不懂得说话因为话都再心里。</p>
<p>恩,过两天就2014了、又大了一岁了。面对着准18岁我又能说点什么?成年了该懂得更多的事了。但是身边的朋友们.以前的8个兄弟只剩下我一个在读书、身边很多人还是老样子每次面对他们真的想骂他们但又怎么办呢?昨天我见到很光头佬、柴叔、咩星那些兄弟。但是呢还是老样子但是使我幸会的是他们都成熟了。恩希望几年后的我们都能友谊万岁。</p>
<p>2014.面对这自己的小高考水平测试、无论如何都要面对。无高考的人生是不完美。或许你没有付出过不知道什么是痛嗯哼、</p>
<p>请自己看了这封信后、努力奋斗,再看看你桌上写着的奋斗日期.在看看你写给你爸妈的信2014是最后一个奋斗年了/2014都到了2015还远吗?加油吧我亲爱的自己.不要在浑浑噩噩的过了,不是没有人不信你而要给别人怎么相信你知道没?好了从现在起还可以追.只是很吃力但是不怕因为我相信我亲爱的自己.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2013.8.31</title>
    <url>/362/</url>
    <content><![CDATA[<p>听,你们听过心碎的声音吗?</p>
<p>你们试过给人排斥吗?</p>
<p>你们试过自己明明做好了的但又给人骂吗?</p>
<p>你们试过想让人了解,但是人家却当你傻逼吗?</p>
<p>你们试过给家人们关在一个角落上吗?</p>
<p>……</p>
<p>我的世界里。就一个房间可以也我说话、</p>
<p>对,我平时不爱说话。也不想说话。</p>
<p>每个人都有自己的心事、</p>
<p>但是心事多了也会失落。</p>
<p>……</p>
<p>没有知觉,静悄悄的,心累到一定程度、连生气与计较的力气也没有了,这种感觉谁懂?</p>
<p>这种感觉连我的小伙伴都惊呆了。</p>
<p>就像无声胜有声,</p>
<p>虽然不能与到了社会上,给你的压力大。但是我们要明白一点,遇到这些事是老天给你的。是你的福气呀次奥。</p>
<p>……</p>
<p>没有声音,心碎,心死,还要什么声音再来点缀?</p>
<p>上学去了!!!!!!下星期六见。</p>
<p>我爱你们。各位加油!!.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>心碎</tag>
      </tags>
  </entry>
  <entry>
    <title>2013地球一小时</title>
    <url>/341/</url>
    <content><![CDATA[<p>2013年3月23日星期六，请在活动当晚8:30-9:30关闭所有不必要的电源，并开始坚持你一整年的环保改变吧！<br>地球一小时是一个关于环保的节日，并且有着自己的传统??地球一小时活动当天熄灯一小时（今年是3月23日）+做一个持续一整年的环保改变。  </p>
<p>关灯是表达你内心想法（即“关爱地球”）的一种简单方式。通过这一举动，你能够得知有许多人正和你一样关心着地球，你并不孤单。而比关灯更重要的，则是日常的环保改变??在我们每一天都做好来，坚持在每周的这一天行动起来。</p>
<p>地球的明天就是我们的明天不是吗？</p>
<p>你看我们现在的天气，复杂吧。都是我们人类自找的不是吗？所以我们都要把地球爱护起来，爱好地球不就是爱护自己的家远吗？</p>
<p>噢还要，<em>少用塑料袋，多用环保袋!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!这个是必须的</em></p>
<p>好了就写到这里把</p>
<p>记得我博客的口号：你好我好大家好,小俊真好。哈哈哈!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2014.01.01</title>
    <url>/376/</url>
    <content><![CDATA[<p>喜不喜欢和适不适合是两码事。 <br>婚姻是一双鞋。<br>不论什么鞋，最重要的是合脚；不论什么样的姻缘，最美妙的是和谐。切莫只贪图鞋 的华贵，而委屈了自己的脚。别人看到的是鞋，自己感受到的是脚。脚比鞋重要，这是一条真理，许许多多的人却常常忘记。<br>找一个能包容你的人。可能他不是你喜欢的类型。但他能包容你的一切。就像鞋子一样。漂亮的穿着不一定舒服，会挤脚，会破皮，会流血。<br>但合适的鞋子就不一样，他可能没有漂亮的外表，但他能包容你，任你蹬，任你踹，你会觉得舒服……会感到幸福。<br>幸福不是忍耐，而是包容。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2014.01.04</title>
    <url>/231/</url>
    <content><![CDATA[<p>这又是一部讲述青春的微电影，诙谐幽默，有一丝轻松，有一丝伤感，马上又是一年毕业季，那淡淡美好的感觉，正在离我们而去。不热血不搞怪不出格不特立独行.就不是青春了。喜欢看就看下吧.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2014.02.14</title>
    <url>/386/</url>
    <content><![CDATA[<p>忘记了是在什么地方，看到过这样一个故事，故事的内容是这样的，等到世界的每一个人都只剩下一块饼子可以吃的时候，你的朋友会掰一半给你，说：“咱们一人一半”你的爱人会给你一个被咬了一口的，说：“我吃了一口，剩下的给你。”但是，你的妈妈会把整个饼子给你，说：“你吃吧，妈不饿。”</p>
<p>这上面都是一些不对是一丝丝的逗人心扉感动，因为人生总有很好很好的朋友、同学，有你的避风港，你未来的另一半。不是什么人都对你好而对你好的人你需要好好珍惜。就像有梦想就去努力，因为在这一辈子里面，现在不去勇敢的努力，也许就再也没有机会了。你要去相信，一定要相信，没有到不了的明天。不要被命运打败，让自己变得更强大。让自己变得更加的有自信。</p>
<p>牵手是缘分，擦肩更是缘。回首，我们每天都与那些陌生的人或是相识的人来来往往擦肩而过，或许那个人默默的告诉你“其实我认识你，我想问你认识我吗？”人本多矛盾，事物本根就是一个矛盾货但是有了矛和盾才有了人的思想、人的认识、人的情感、人的各种各样……</p>
<p>放学回家时其实我真的想抱着你说一声我爱你，但是计划赶不上变化，还好我还是在看着你的背影看着你笑的表情我已满足。</p>
<p>原谅我今天的无声的错误。对不起，情人节快乐hhm。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2014.04.12</title>
    <url>/395/</url>
    <content><![CDATA[<p>做好自己无论如何。是的之前分析网站IP的DNSPOD账号给人上了然后添加了一个*。导致现在博客很差很差甚至连靠买外链的人都不要了恩但是我还是一样的写博客一样的生活写自己的记录我无论多少人知道我博客无论多少人知道我在写些什么无论再有没有人赞助无论的无论我都会坚持。</p>
<p>昨天我们还笑、今天就哭、也不知道明天会怎样！人生苦短、好让人伤感。所以我只有过好今天、做好今天的每一件事、不留遗憾于今天、不让明天再回头后悔！直至今日才发现自己什么都帮不了家人、所以只有做好自己、而自己以后做准备。</p>
<p>是的每个人眼里总是看到比自己优秀的人，说明你正在走上坡路；眼里总是看到和自己差不多的人，说明你差不多在混日子；眼里总是看到不如自己的人，说明你正在走下坡路。与其埋怨世界，不如改变自己。管好自己的心，做好自己的事，比什么都强。不要看不起小事，坚持做好每件小事就能过好自己的生活，改变自己的人生。如果更进一步，除了做好自己的本分，还能将每一件小事情做到极致，会怎样呢？有句台词说：他做的每件小事就好像抓住一棵救命稻草一样，到最后你才发现，他抱住的已经是参天大树了。</p>
<p>感触吧可能这只是发至内心的感触可能吧以后再也赞助商赞助博客但我还是继续写下去这就是这样了、</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Sun Nov 20 2016 08:00:00 GMT+0800 (中国标准时间)</title>
    <url>/174/</url>
    <content><![CDATA[<p>时间是最公平的资源，活一天就拥有24个小时，你浇灌在哪里，哪里就可能长出灿烂的花朵。你每周读一本书，十年就是520本，你就可以涉猎百家。你每天写500个字，十年就是180万字，你就可以著作等身。你每天发呆，十年就成呆萌。你每天狂吃，十年就成胖子。专业无它，专注而已。</p>
<p><img src="http://qn.199604.com/58096045293522145.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2016.12.08</title>
    <url>/207/</url>
    <content><![CDATA[<hr>
<p>生活本来很不易，不必事事渴求别人的理解和认同，静静的过自己的生活。</p>
<p>心若不动，风又奈何。你若不伤，岁月无恙-</p>
<hr>
<p><img src="http://qn.199604.com/691996701879403343.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2016.12.07</title>
    <url>/205/</url>
    <content><![CDATA[<p>感觉今晚做了一件我自己都无法相信的事情-</p>
<p><img src="http://qn.199604.com/863351573229756463.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>傻逼</tag>
        <tag>智障</tag>
      </tags>
  </entry>
  <entry>
    <title>Sun Dec 18 2016 08:00:00 GMT+0800 (中国标准时间)</title>
    <url>/212/</url>
    <content><![CDATA[<p>今天是北京时间2016-12-18</p>
<p>距离我上一次见我家的狗狗是2016-11-26</p>
<p>下次我们再见是什么时候</p>
<p>对不起 狗狗</p>
<p>在你最需要我在你身边的时候我没有在</p>
<p>而我最需要有人在身边陪伴的时候</p>
<p>狗狗一直在我身边</p>
<p>不管我晚上熬夜到几点</p>
<p>都会在我脚边</p>
<p>高中的时候</p>
<p>每次月考考砸</p>
<p>每次不开心</p>
<p>只有狗狗会在我身边左转右转</p>
<p>舔我脸</p>
<p>虽然你是有点调皮</p>
<p>虽然你是有点贪吃</p>
<p>虽然你是一直杂种的狗</p>
<p>但这就是我最爱的狗狗</p>
<p>陪伴了我一个非常失落的时间</p>
<p>嗯 下辈子记得遇到一个好的主人</p>
<p>大姑凉再见。好好生活</p>
<p><img src="http://qn.199604.com/814767939245905428.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>再见</tag>
        <tag>狗狗</tag>
      </tags>
  </entry>
  <entry>
    <title>2016.5.13</title>
    <url>/292/</url>
    <content><![CDATA[<p>很久没有更新了。</p>
<p>感觉自己的目标也开始有很大的变化了。</p>
<p>最近整天想着弄这个弄那个。</p>
<p>当想把一个Java功能的一个登录功能弄好</p>
<p>也需要我弄很久、至少了我1个月。</p>
<p>再说,最近也参加了计算机协会的一个网页设计大赛、  </p>
<p>感觉设置了一个静态的网站还是很有可能能把他做成动态的、</p>
<p>虽然里面很多JS、</p>
<p>但是有些JS是自己编写的。</p>
<p>感觉这次能用上自己的JS就已经是一大进步。</p>
<p>嗯,记录就到这里吧。！</p>
<p>]]&gt;</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>2016.5.13</tag>
      </tags>
  </entry>
  <entry>
    <title>2016-9-21晚</title>
    <url>/54/</url>
    <content><![CDATA[<p>我已经找不到一个好的标题去写自己今晚发生的事情吧 这也算是人之常情，虽然这个道理每个人都懂 但是，或是我帮人不够多还是人本该这样子 还是我天真的以为我选择快递员的专业是帮别人 或许当我遇事的时候 老天爷会眷顾着我 而我还是在赎罪吗 还是大学这个小社会也是这样子 需要有利益的才能有某些事? 今晚的事情 也让我去看透了一些我本该需要去看透的东西 你对别人好 别人可能不会去在意 到你真的非常需要去做 非常需要别人帮你的时候 你身边的人 你觉得他或者他们或挺身帮你的人 都会随风飘走 而你还是傻傻的 天真的认为 哎 算了 都不想说太多没有意义的东西 做好自己 不给自己太多负能量 今晚，谢谢我的裕鑫师兄 我们也会走心得好下去！ <img src="http://qn.199604.com/382162425974643653.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>心情</tag>
      </tags>
  </entry>
  <entry>
    <title>2016.5.19</title>
    <url>/291/</url>
    <content><![CDATA[<p>最近很少逛朋友的博客</p>
<p>感觉生活中少了很多的信息</p>
<p>也少了很多生活上遇事的经验可收</p>
<p>但是我发现了一个很大的问题</p>
<p>就是你们怎么都跑到WordPress。</p>
<p>重点不是这个</p>
<p>而是说好的在EMLOG一起到老呢</p>
<p>你这友谊的小船说翻就翻</p>
<p>感觉没啥意思</p>
<p>我有空也转去吧</p>
<p>比较在EMLOG这个待太久</p>
<p>感觉还是WordPress强大无比</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>?WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年华医网公需课答案</title>
    <url>/1456/</url>
    <content><![CDATA[<p><img src="http://199604.com/wp-content/uploads/2020/04/20200417123642-473x1024.jpg"> 2020.04.13：今晚发现了一个BUG，求一个未学习过得账号，就一个就行<del>留言或者QQ发我</del>今晚12点前 2020.04.11 22:26 BUG已经给修复–&gt;没刷到的节哀~ 操作方式：跳过漫长的观看视频环节，直达答题页面，答案也已一并提供，助你10分钟内完成30学时的课程。全部完成后请记得申请证书。 <img src="http://199604.com/wp-content/uploads/2020/04/20200411115103.png"></p>
<blockquote>
<p>ps: =请在电脑端操作，点击以下题目标题即可链接直达答题页面，答案也在下方=</p>
</blockquote>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=4f929168-4b85-4555-8de8-2ac39743cbf3">广东“十四五”经济社会发展面临的形势和挑战1</a> 答案： B、10</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=c105f5e5-7c78-4cfa-b29d-c0452ea76c8d">广东“十四五”经济社会发展面临的形势和挑战2</a> 答案： C、4.5 B、1/4</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=72b3d020-3503-4530-8364-71f922bb6a11">广东“十四五”经济社会发展面临的形势和挑战3</a> 答案： 广东：A、正确 深圳：B、错 B、3</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=83110dc2-48eb-447f-a54b-51e665bcb06a">十四五”时期广东产业发展战略与战略产业发展1</a> 答案： D、产业战略、产业政策、产业规划没有什么差别 D、战略性新兴产业就是主导产业 B、支柱产业一定是主导产业 B、先导产业就是主导产业 D、战略产业是永恒不变的</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=0917a93a-6ad5-4245-b871-0e6c3a660966">十四五”时期广东产业发展战略与战略产业发展2</a> 答案： B、三次产业从“一、二、三”结构演变为“二、三、一“结构，进一步演变为“三、二、一”结构 C、电子设备制造业占先进制造业的比重最高 A、2008年以后以重工业为主导 B、房地产业处于龙头地位</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=12a5244f-0e77-437d-9a5e-fe2b91d34fc1">十四五”时期广东产业发展战略与战略产业发展3</a> 答案： A、以4G、量子通信为引领的新一代信息技术及IT产业</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=5815f15e-f658-4c99-bb8d-1ecce60effe2">习近平总书记关于全面建成小康社会重要论述1</a> 答案： D、总体小康只是城市的，全面小康还包括农村 C、建成 决胜 C、十六大 E、以上都是 D、以上都是</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=123ca80e-d30d-4619-8ec0-990534ab0f43">习近平总书记关于全面建成小康社会重要论述2</a> 答案： D、是促进收入分配公平的根本措施 A、科技实力跃升，跻身创新型国家前列 A、人民生活总体上达到温饱 D、新时代</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=c494bffd-3334-4d0e-949b-73442147118d">习近平总书记关于全面建成小康社会重要论述3</a> 答案： B、二O二○年 E、以上都是 C、产业结构调整</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=4638dbc2-edef-4a46-93df-bdc036f443a6">广东“十四五”时期，迈向新时代的乡村振兴战略1</a> 答案： B、防范生态危机 D、人才强国战略、军民融合发展战略、乡村振兴战略 E、以上都是 E、以上都是</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=f8ded81f-4134-4361-8b5b-0bd54ddb8c81">广东“十四五”时期，迈向新时代的乡村振兴战略2</a> 答案： A、实施”头雁”工程 B、产业兴旺 生态宜居 乡风文明 治理有效 生活富裕 摆脱贫困 C、农民和土地 C、10年 D、以上都是</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=a2f31637-ff38-4f26-8abf-f010c4948f34">广东“十四五”时期，迈向新时代的乡村振兴战略3</a> 答案： E、以上都是 E、以上都是 E、以上都是</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=243c78eb-abe1-4974-bcb5-40962a4353ed">广东“十四五”时期，全面提升人口质量，优化人才资源配置1</a> 答案： A、正确</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=6bfa2bae-a688-4d97-b95a-f26e42ef1adb">广东“十四五”时期，全面提升人口质量，优化人才资源配置2</a> 答案： A、正确 A、正确</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=d94529d0-4a63-40ca-8fa5-464b50d6ec43">广东“十四五”时期，全面提升人口质量，优化人才资源配置4</a> 答案： B、错误</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=a756245e-4d52-48fd-8492-4e93132042f9">“十四五”生态文明建设思路，引领广东省实现高质量发展1</a> 答案： A、正确 A、正确</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=cec1825c-0872-43dd-81a5-2bcd3559a4c7">“十四五”生态文明建设思路，引领广东省实现高质量发展2</a> 答案： 《粤港澳……：B、错误 “十四五”……：A、正确</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=39277f28-026e-4469-a889-930524c9588a">“十四五”生态文明建设思路，引领广东省实现高质量发展3</a> 答案： 2019年……：B、错误 农业农村……：A、正确</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=50ebd500-62e6-4e55-a83e-707c98a95ebb">“十四五”如何推进粤港澳大湾区建设1</a> 答案： B、制度创新 D、以上都是</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=85507281-56e2-4ea7-8ec3-57547d9b6c38">“十四五”如何推进粤港澳大湾区建设2</a> 答案： A、市民待遇 B、市场高水平互联互通</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=256441bf-2ba8-4df3-97ed-22ab81f6af02">“十四五”如何推进粤港澳大湾区建设3</a> 答案： B、劳动力短缺 C、市场</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=2f450ec4-b292-4601-bf87-537fb882a64d">“十四五”如何推进粤港澳大湾区建设4</a> 答案： A、社会保险卡 D、权力清单、责任清单、负面清单</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=985787d5-0bd7-43f0-9b7d-d5eecc248a9f">“十四五”支持深圳建设中国特色社会主义先行示范区等战略重点1</a> 答案： B、129 D、以上都包括</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=3dfde5fd-b621-45c8-83ad-7d9aeb217343">“十四五”支持深圳建设中国特色社会主义先行示范区等战略重点2</a> 答案： A、迈入制造强国行列 B、维护祖国的团结稳定，早日实现“和平统一”</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=503f6395-70b8-443b-90e2-795570cfbe9e">“十四五”支持深圳建设中国特色社会主义先行示范区等战略重点3</a> 答案： B、局部领跑 D、坚持制度创新</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=64858893-9cb4-48fa-88e4-8904b71171bb">“十四五”支持深圳建设中国特色社会主义先行示范区等战略重点4</a> 答案： A、普惠性、高质量、可持续 D、敢闯敢试、敢为人先、埋头苦干 B、创新、创业、创意 B、住有所居 D、绿水青山就是金山银山</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=dde14fe1-4701-4358-9f07-606a262f7ac6">“十四五”期间粤港澳大湾区的建设重点与发展趋势1</a> 答案： 粤港澳大湾区包括了2个特别行政区和10个广东省城市：(B、错误) 《粤港澳大湾区发展规划纲要》于2019年2月正式公布全文(A、正确)</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=ef178c65-8cf7-4331-baab-e6254e9b17cf">“十四五”期间粤港澳大湾区的建设重点与发展趋势2</a> 答案： 粤港澳合作经历了“前店后厂”的阶段(A) 粤港澳大湾区的集装箱吞吐量低于东京湾区(B)</p>
<hr>
<p><a href="http://cme3.91huayi.com/pages/exam.aspx?cwid=94a17ddd-da2b-46e0-afb0-308e258beb0d">“十四五”期间粤港澳大湾区的建设重点与发展趋势3</a> 答案： 广深港澳科创走廊是粤港澳大湾区建设的重要抓手之一(A) 珠海是粤港澳大湾区的四个中心城市之一(B) 粤港澳大湾区和改革开放初期粤港澳合作的目标是完全相同的(B)</p>
<hr>
<p><img src="http://199604.com/wp-content/uploads/2020/04/zhifubao.png"> <img src="http://199604.com/wp-content/uploads/2020/04/weixin.png"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2021.03.18-记一次生产环境的重大事故-删库</title>
    <url>/1684/</url>
    <content><![CDATA[<p>以前常常听别人说这么一个段子：</p>
<p><img src="http://199604.com/wp-content/uploads/2021/03/20190921090433354.gif" alt="img"></p>
<p>今天的事故也告诉了我，尽量不要在生产环境服务器上使用rm -rf *</p>
<p>今天还好账号权限不大，通过今天的事情也告诉自己 能不用rm -rf 就不要用<del>真的rm -rf 每次使用你都要三思而后行。也希望各位大佬别轻易使用</del>加油各位打工人</p>
<p>使用mv代替：</p>
<p>要删除文件，需要mv文件到指定目录/delete/，一个定时任务，每周清空/delete/下文件。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>删库</tag>
      </tags>
  </entry>
  <entry>
    <title>this</title>
    <url>/581/</url>
    <content><![CDATA[<p><img src="http://199604.com/wp-content/uploads/2017/05/70521144517.jpg"></p>
<p>冷漠多了,自然就不想在乎了…</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>6年的兴趣...</title>
    <url>/1053/</url>
    <content><![CDATA[<p>凡是新的事情在起头总是这样一来的，起初热心的人很多，而不久就冷淡下去，撒手不做了，因为他已经明白，不经过一番苦工是做不成的，而只有想做的人，才忍得过这番痛苦。</p>
<hr>
<p>2013-02-07至2019-02-07</p>
<p><img src="http://199604.com/wp-content/uploads/2019/02/20190207213840.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>ActionInvocation实例的invoke()与invokeActionOnly()</title>
    <url>/296/</url>
    <content><![CDATA[<h2 id="ActionInvocation实例的invoke-方法"><a href="#ActionInvocation实例的invoke-方法" class="headerlink" title="ActionInvocation实例的invoke()方法"></a>ActionInvocation实例的invoke()方法</h2><p>ps:表示调用下一个拦截器或Action,调用invoke()方法时， intercept()方法可任意返回需要的字符串值，一般返回null即可.</p>
<ol>
<li>invoke()前的代码为请求向下走之前的业务流程处理</li>
<li>invoke()后的代码为嵌套调用流程执行完毕后，请求重新回到原处的后继业务流程处理，相当于方法嵌套调用完毕重新回到原处。</li>
<li>invoke()返回值为嵌套调用拦截器intercept()的返回值或Action返回的处理结果字符串，即上一个流程的返回值</li>
</ol>
<h2 id="ActionInvocation实例invokeActionOnly-方法"><a href="#ActionInvocation实例invokeActionOnly-方法" class="headerlink" title="ActionInvocation实例invokeActionOnly()方法"></a>ActionInvocation实例invokeActionOnly()方法</h2><p>ps:表示抛开所有末调用的嵌套拦截器，直接调用Action.</p>
<p>调用invokeActionOnly()方法时，需注意:</p>
<ol>
<li>intercept()方法需有返回值，否则Action将无法正确调用视图响应</li>
<li>intercept()方法中可直接返回到视图页面，而流程不往下传递。</li>
</ol>
<p>intercept()方法中可直接返回与控制器中Action配置相匹配的字符串，并找到响应视图</p>
<p>如返回“error”字符串，会自动找到对应在控制器配置的error页面响应。</p>
<hr>
<p>简单的项目作业…</p>
<p>设置一个登录页面 包含：用户名、密码输入框、提交按钮， 后台获取两个表单值后进行比对， 如果用户名与密码内容相同则跳到验证成功页面， 如果用户名与密码内容不同则跳到验证失败页面。用Struts框架完成。</p>
<p>增加两个自定义拦截器</p>
<p>拦截器1： 检查用户名、密码输入框是否为空 为空时返回到error1.jsp页面，并提示输入错误</p>
<p>拦截器2： 检查用户名中是否包含“admin”字符串 不包含“admin”字符串时返回到error2.jsp页面，提示没有权限</p>
<p>效果请自行测试，代码有点乱请别介意…</p>
<p>代码如下：</p>
<p>login.jsp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; pageEncoding=&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;/head&gt; </span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;center&gt;</span><br><span class="line">    &lt;form action=&quot;login.action&quot; method=&quot;post&quot; focus=&quot;login&quot;&gt;</span><br><span class="line">      &lt;h2&gt;系统登录：&lt;/h2&gt;</span><br><span class="line">      &lt;table border=&quot;0&quot;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td&gt;username:&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;input type = &quot;text&quot; name = &quot;username&quot; /&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td&gt;password:&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;input type = &quot;password&quot; name = &quot;password&quot; /&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;</span><br><span class="line">          &lt;input type = &quot;submit&quot; name = &quot;submit&quot; value = &quot;提      交&quot; /&gt;</span><br><span class="line">          &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">      &lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">   &lt;/center&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>success.jsp、fail.jsp、error.jsp三个页面省略…</p>
<p>Action类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj;</span><br><span class="line"></span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line">public class userAction extends ActionSupport&#123;</span><br><span class="line">	private String username;</span><br><span class="line">	private String password;</span><br><span class="line">	public String getUsername() &#123;</span><br><span class="line">		return username;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setUsername(String username) &#123;</span><br><span class="line">		this.username = username;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getPassword() &#123;</span><br><span class="line">		return password;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setPassword(String password) &#123;</span><br><span class="line">		this.password = password;</span><br><span class="line">	&#125;</span><br><span class="line">	@Override</span><br><span class="line">	public String execute() throws Exception &#123;</span><br><span class="line">		System.out.println(&quot;执行了userAction&quot;);</span><br><span class="line">		if (this.getUsername().equals(this.getPassword())) &#123;</span><br><span class="line">			return &quot;ok&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">			return &quot;no&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>interceptor 类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.inter;</span><br><span class="line"></span><br><span class="line">import com.glj.userAction;</span><br><span class="line">import com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line">import com.opensymphony.xwork2.interceptor.Interceptor;</span><br><span class="line"></span><br><span class="line">public class superCheck implements Interceptor&#123;</span><br><span class="line"></span><br><span class="line">	public void destroy() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void init() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public String intercept(ActionInvocation invocation) throws Exception &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		userAction user = (userAction) invocation.getAction();</span><br><span class="line">		String username = user.getUsername();</span><br><span class="line">		if(username.toLowerCase().contains(&quot;admin&quot;))&#123;</span><br><span class="line">			invocation.invoke();</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			return &quot;error&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(&quot;执行了superCheck&quot;);</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>验证是否是管理员</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.inter;</span><br><span class="line"></span><br><span class="line">import com.glj.userAction;</span><br><span class="line">import com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line">import com.opensymphony.xwork2.interceptor.Interceptor;</span><br><span class="line"></span><br><span class="line">public class formCheck implements Interceptor&#123;</span><br><span class="line"></span><br><span class="line">	public void destroy() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void init() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public String intercept(ActionInvocation invocation) throws Exception &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		userAction user = (userAction) invocation.getAction();</span><br><span class="line">		String username = user.getUsername();</span><br><span class="line">		String password = user.getPassword();</span><br><span class="line">		if(username==null||password==null||username.equals(&quot;&quot;)||password.equals(&quot;&quot;))&#123;</span><br><span class="line">			return &quot;error&quot;;</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			invocation.invoke();</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(&quot;执行了formCheck&quot;);</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>验证表单</p>
<p>Struts.xml</p>
<p>一旦使用了自定义的拦截器，本来配置在action上的默认的拦截器就失效了。 所以需要再加上defaultStack</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC &quot;-//Apache Software Foundation//DTD Struts Configuration 2.1//EN&quot; &quot;http://struts.apache.org/dtds/struts-2.1.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=&quot;webDemo&quot; extends=&quot;struts-default&quot; namespace=&quot;/&quot;&gt;</span><br><span class="line">		&lt;interceptors&gt;</span><br><span class="line">			&lt;interceptor name=&quot;formCheck&quot; class=&quot;com.inter.formCheck&quot;&gt;&lt;/interceptor&gt;</span><br><span class="line">			&lt;interceptor name=&quot;superCheck&quot; class=&quot;com.inter.superCheck&quot;&gt;&lt;/interceptor&gt;</span><br><span class="line">		&lt;/interceptors&gt;</span><br><span class="line">		&lt;action name=&quot;login&quot; class=&quot;com.glj.userAction&quot;&gt;</span><br><span class="line">			&lt;interceptor-ref name=&quot;defaultStack&quot;&gt;&lt;/interceptor-ref&gt;</span><br><span class="line">			&lt;interceptor-ref name=&quot;formCheck&quot;&gt;&lt;/interceptor-ref&gt;</span><br><span class="line">			&lt;interceptor-ref name=&quot;superCheck&quot;&gt;&lt;/interceptor-ref&gt;</span><br><span class="line">			&lt;result name=&quot;ok&quot;&gt;/success.jsp&lt;/result&gt;</span><br><span class="line">			&lt;result name=&quot;no&quot;&gt;/fail.jsp&lt;/result&gt;</span><br><span class="line">			&lt;result name=&quot;error&quot;&gt;/error.jsp&lt;/result&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;    </span><br></pre></td></tr></table></figure>

<p>Web.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app version=&quot;2.5&quot; </span><br><span class="line">	xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot; </span><br><span class="line">	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; </span><br><span class="line">	xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee </span><br><span class="line">	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&gt;</span><br><span class="line">  &lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;login.jsp&lt;/welcome-file&gt;</span><br><span class="line">  &lt;/welcome-file-list&gt;</span><br><span class="line">  &lt;filter&gt;</span><br><span class="line">  	&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class="line">  	&lt;filter-class&gt;</span><br><span class="line">  		org.apache.struts2.dispatcher.FilterDispatcher</span><br><span class="line">  	&lt;/filter-class&gt;</span><br><span class="line">  &lt;/filter&gt;</span><br><span class="line">  &lt;filter-mapping&gt;</span><br><span class="line">  	&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class="line">  	&lt;url-pattern&gt;*.action&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;&lt;/web-app&gt;</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/375611971363640027-1024x768.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
        <tag>jsp</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>arrays类常用方法</title>
    <url>/544/</url>
    <content><![CDATA[<p>最近好像做了一位高产的小博主~</p>
<hr>
<p>java.util.Arrays是针对数组的工具类，可以进行 排序，查找，复制填充等功能。 大大提高了开发人员的工作效率。</p>
<p>但是找了一个方法很久都没有找到。</p>
<p>只能在自己blog记录一下,这才能是记忆的角落嘛。</p>
<h3 id="copyOfRange-数据负责"><a href="#copyOfRange-数据负责" class="headerlink" title="copyOfRange -数据负责"></a>copyOfRange -数据负责</h3><p>与使用System.arraycopy进行数组复制类似的， Arrays提供了一个copyOfRange方法进行数组复制。 不同的是System.arraycopy，需要事先准备好目标数组，并分配长度。 copyOfRange 只需要源数组就就可以了，通过返回值，就能够得到目标数组了。</p>
<p>除此之外，需要注意的是 copyOfRange 的第3个参数，表示源数组的结束位置，是取不到的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line"> </span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line"> </span><br><span class="line">        // copyOfRange(int[] original, int from, int to)</span><br><span class="line">        // 第一个参数表示源数组</span><br><span class="line">        // 第二个参数表示开始位置(取得到)</span><br><span class="line">        // 第三个参数表示结束位置(取不到)</span><br><span class="line">        int[] b = Arrays.copyOfRange(a, 0, 3);</span><br><span class="line"> </span><br><span class="line">        for (int i = 0; i &lt; b.length; i++) &#123;</span><br><span class="line">            System.out.print(b[i] + &quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="toString-负责转换为字符串"><a href="#toString-负责转换为字符串" class="headerlink" title="toString-负责转换为字符串"></a>toString-负责转换为字符串</h3><p>如果要打印一个数组的内容，就需要通过for循环来挨个遍历，逐一打印。</p>
<p>但是Arrays提供了一个toString()方法，直接把一个数组，转换为字符串，这样方便观察数组的内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line">  </span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line">        String content = Arrays.toString(a);</span><br><span class="line">        System.out.println(content);</span><br><span class="line">  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="sort-排序"><a href="#sort-排序" class="headerlink" title="sort()-排序"></a>sort()-排序</h3><p>Arrays工具类提供了一个sort方法，只需要一行代码即可完成排序功能。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line">  </span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line">        System.out.println(&quot;排序之前 :&quot;);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        System.out.println(&quot;排序之后:&quot;);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Arrays-binarySearch（）-查询功能"><a href="#Arrays-binarySearch（）-查询功能" class="headerlink" title="Arrays.binarySearch（）-查询功能"></a>Arrays.binarySearch（）-查询功能</h3><p>查询元素出现的位置</p>
<p>需要注意的是，使用binarySearch进行查找之前，必须使用sort进行排序</p>
<p>如果数组中有多个相同的元素，查找结果是不确定的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line"> </span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line"> </span><br><span class="line">        Arrays.sort(a);</span><br><span class="line"> </span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        //使用binarySearch之前，必须先使用sort进行排序</span><br><span class="line">        System.out.println(&quot;数字 62出现的位置:&quot;+Arrays.binarySearch(a, 62));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Arrays-equals-判断是否相同"><a href="#Arrays-equals-判断是否相同" class="headerlink" title="Arrays.equals()-判断是否相同"></a>Arrays.equals()-判断是否相同</h3><p>Arrays.equals 返回类似也是布尔类型（true/false）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line"> </span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line">        int b[] = new int[] &#123; 18, 62, 68, 82, 65, 8 &#125;;</span><br><span class="line"> </span><br><span class="line">        System.out.println(Arrays.equals(a, b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Arrays-fill-填充"><a href="#Arrays-fill-填充" class="headerlink" title="Arrays.fill() - 填充"></a>Arrays.fill() - 填充</h3><p>fill()是使用同一个值去填充剩下空置的位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line">  </span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a[] = new int[10];</span><br><span class="line">  </span><br><span class="line">        Arrays.fill(a, 5);</span><br><span class="line">  </span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
<p>好了写完了。晚安各位</p>
<p><img src="http://qn.199604.com/typoraImg/292405134037248759-1024x768.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Arryas</tag>
        <tag>JAVA</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>bootstrap框架的IP查询</title>
    <url>/482/</url>
    <content><![CDATA[<p>利用bootstrap框架二次开发了ip查询的页面..</p>
<p>ip查询是基于淘宝API的函数…</p>
<p>域名whois查询,我是接入站长之家的…</p>
<p>新手做站.难免代码复杂…</p>
<p>效果请点击<a href="http://199604.com/ip">ip查询</a></p>
<p>以下是代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php header(&quot;content-Type: text/html; charset=utf-8&quot;);$weburl=$_SERVER[&#x27;SERVER_NAME&#x27;];$weblink=&quot;http://&quot;.$weburl.&quot;/&quot;;if(count($_GET)&gt;0)&#123;$urlip=array_keys($_GET);$urlip=str_replace(&quot;_&quot;,&quot;.&quot;,$urlip[0]);&#125;?&gt;</span><br><span class="line">&lt;!DOCTYPE &gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;&lt;?=$urlip;?&gt;&lt;?=$_POST[&#x27;ip&#x27;];?&gt;IP查询&lt;/title&gt;</span><br><span class="line">		&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;&gt;</span><br><span class="line">		&lt;link type=&quot;image/vnd.microsoft.icon&quot; href=&quot;img/favicon.png&quot; rel=&quot;shortcut icon&quot;&gt;</span><br><span class="line">		&lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot; &gt;</span><br><span class="line">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">		&lt;script language=&quot;JavaScript&quot;&gt;</span><br><span class="line">			function checkIP()&#123;</span><br><span class="line">	var ipArray,ip,j;ip = document.ipform.ip.value;</span><br><span class="line">	if(/[A-Za-z_-]/.test(ip))&#123;if(!/^([\w-]+\.)+((com)|(net)|(org)|(gov\.cn)|(info)|(cc)|(com\.cn)|(com\.hk)|(net\.cn)|(org\.cn)|(com\.ru)|(net\.ru)|(org\.ru)|(name)|(biz)|(hk)|(vn)|(com\.sg)|(pk)|(ph)|(ac)|(bz)|(de)|(net\.au)|(my)|(tv)|(us)|(jp)|(kr)|(sg)|(mn)|(cd)|(ue)|(sh)|(lc)|(hn)|(me)|(la)|(cc)|(tk)|(com\.tw)|(cm)|(cn)|(top)|(club)|(xin)|(xyz)|(shop)|(wang)|(site)|(vip)|(store)|(bid)|(ltd)|(ren)|(lol)|(online)|(tech)|(asia))$/.test(ip))&#123;alert(&quot;不是正确的域名,请检查域名格式或看是否有空格&quot;);	</span><br><span class="line">	document.ipform.ip.focus();return false;&#125;&#125;else&#123;ipArray = ip.split(&quot;.&quot;);j = ipArray.length;if(j!=4)&#123;alert(&quot;不是正确的IP&quot;);</span><br><span class="line">	document.ipform.ip.focus();return false;&#125;for(var i=0;i&lt;4;i++)&#123;if(ipArray[i].length==0 || ipArray[i]&gt;255)&#123;alert(&quot;不是正确的IP&quot;);</span><br><span class="line">	document.ipform.ip.focus();</span><br><span class="line">	return false;&#125;&#125;&#125;&#125;</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$ip=$_POST[&#x27;ip&#x27;]?$_POST[&#x27;ip&#x27;]:$urlip;if(!$ip)$ip=get_real_ip();</span><br><span class="line">$ip=preg_match(&#x27;/((\w|-)+\.)+[a-z]&#123;2,4&#125;/i&#x27;,$ip)?gethostbyname($ip) : $ip;</span><br><span class="line">$ipdata=ipdata($ip,&#x27;all&#x27;);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;div class=&quot;jumbotron&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot; align=&quot;center&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;text-info&quot; style=&quot;font-family:宋体;font-weight:bold;font-size:49px&quot;&gt;&lt;a href=&quot;http://199604.com/ip&quot; title=&quot;IP查询&quot; target=&quot;_blank&quot;&gt;IP查询&lt;/a&gt;&lt;/h2&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;div class=&quot;text-muted&quot;&gt;</span><br><span class="line">      	&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;ipform&quot; onsubmit=&quot;checkIP();&quot;&gt;</span><br><span class="line">			&lt;span class=&quot;text-primary&quot;&gt;IP地址或域名(不带http/https)：&lt;/span&gt;</span><br><span class="line">			&lt;input type=&quot;text&quot; name=&quot;ip&quot; size=&quot;27&quot; maxlength=&quot;100&quot; title=&quot;&lt;?=$weburl;?&gt;提醒您在此输入ip或域名&quot; id=&quot;url&quot; value=&quot;&lt;?php if(!$_POST[&#x27;ip&#x27;])&#123;echo $urlip;&#125;else&#123;echo $_POST[&#x27;ip&#x27;];&#125;?&gt;&quot;&gt; </span><br><span class="line">			&lt;input type=&quot;submit&quot; value=&quot;查 询&quot; id=&quot;sub&quot; class=&quot;btn btn-primary btn-xs&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;2&quot;&gt;&lt;/p&gt;</span><br><span class="line">      	&lt;/form&gt;</span><br><span class="line">  &lt;?php</span><br><span class="line">	if(is_ip($ip))&#123;</span><br><span class="line">		$ipaddress=$ipdata-&gt;country;</span><br><span class="line">		if($ipdata-&gt;region==$ipdata-&gt;city)&#123;$ipaddress.=$ipdata-&gt;city;&#125;else&#123;$ipaddress.=$ipdata-&gt;region.$ipdata-&gt;city;&#125;</span><br><span class="line">		$ipaddress.=$ipdata-&gt;isp;</span><br><span class="line">		echo &quot;您查询的IP:&amp;nbsp;[&lt;a href=&#x27;http://ip.chinaz.com/&quot;.$ip.&quot;&#x27;&gt;&lt;font color=#FF0000&gt;&quot;.$ip.&quot;&lt;/font&gt;&lt;/a&gt;]&lt;br/&gt;IP详细地址:&amp;nbsp;[&lt;font color=#FF0000&gt;&quot;.$ipaddress.&quot;&lt;/font&gt;]&lt;br/&gt;&quot;; </span><br><span class="line">	&#125;else&#123;echo &quot;囧，你输入的IP,居然不能查询到!不是输入错误？&quot;;&#125;</span><br><span class="line">	$ipdaili=$_SERVER[&#x27;REMOTE_ADDR&#x27;];</span><br><span class="line">	if(!in_array($ipdaili,array(&#x27;127.0.0.1&#x27;,$ip,$_SERVER[&#x27;SERVER_ADDR&#x27;],get_real_ip())))&#123;</span><br><span class="line">		echo &quot;您的代理IP是[&lt;a href=&#x27;http://ip.chinaz.com/&quot;.$ipdaili.&quot;&#x27;&gt;&lt;font color=#FF0000&gt;&quot;.$ipdaili.&quot;&lt;/font&gt;&lt;/a&gt;]&lt;br/&gt;来自&quot;.ipdata($ipdaili).&quot;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">$whiosip=$_POST[&#x27;ip&#x27;]?$_POST[&#x27;ip&#x27;]:$urlip;</span><br><span class="line">if($whiosip)&#123;preg_match(&#x27;/((\w|-)+\.)+[a-z]&#123;2,4&#125;/i&#x27;,$whiosip) ? $whois=str_replace(&quot;www.&quot;,&quot;&quot;,$whiosip):&quot;&quot;;&#125;</span><br><span class="line">if($whois)&#123;echo &quot;&lt;br /&gt;&lt;br /&gt;&lt;a href=&#x27;http://whois.chinaz.com/&quot;.$whois.&quot;&#x27; target=&#x27;_blank&#x27;&gt;点击查看域名 &quot;.$whois.&quot; 的WhoIs信息&lt;/a&gt;&quot;;&#125;</span><br><span class="line">?&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">&lt;table class=&quot;table table-hover table-bordered&quot;&gt;</span><br><span class="line">  &lt;thead&gt;</span><br><span class="line">     &lt;th&gt;IP&lt;/th&gt;</span><br><span class="line">     &lt;th&gt;国家/地区&lt;/th&gt;</span><br><span class="line">     &lt;th&gt;省份&lt;/th&gt;</span><br><span class="line">     &lt;th&gt;城市&lt;/th&gt;</span><br><span class="line">     &lt;th&gt;县&lt;/th&gt;</span><br><span class="line">     &lt;th&gt;运营商&lt;/th&gt;</span><br><span class="line">  &lt;/thead&gt;</span><br><span class="line">  &lt;tbody&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">		&lt;td class=&quot;text-primary&quot;&gt;&lt;span class=&quot;sip&quot;&gt;&lt;?=$ip;?&gt;&lt;/span&gt;&lt;/td&gt;</span><br><span class="line">		&lt;td class=&quot;text-primary&quot;&gt;&lt;?=$ipdata-&gt;country.$ipdata-&gt;area?&gt;&lt;/td&gt;</span><br><span class="line">		&lt;td class=&quot;text-primary&quot;&gt;&lt;?=$ipdata-&gt;region?&gt;&lt;/td&gt;</span><br><span class="line">		&lt;td class=&quot;text-primary&quot;&gt;&lt;?=$ipdata-&gt;city?&gt;&lt;/td&gt;</span><br><span class="line">		&lt;td class=&quot;text-primary&quot;&gt;&lt;?=$ipdata-&gt;county?&gt;&lt;/td&gt;</span><br><span class="line">		&lt;td class=&quot;text-primary&quot;&gt;&lt;?=$ipdata-&gt;isp?&gt;&lt;/td&gt; </span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">  &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">	&lt;p&gt;Copyright &amp;copy; 2012-&lt;?php echo date(&quot;Y&quot;)?&gt; &lt;a href=&quot;http://199604.com&quot; target=&quot;_blank&quot; data-toggle=&quot;tooltip&quot; title=&quot;记忆角落&quot;&gt;记忆角落&lt;/a&gt; All Rights Reserved&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;	</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   $(function () &#123; $(&quot;[data-toggle=&#x27;tooltip&#x27;]&quot;).tooltip(); &#125;);</span><br><span class="line">&lt;/script&gt;	</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">function get_real_ip()&#123;</span><br><span class="line">	if(getenv(&#x27;HTTP_CLIENT_IP&#x27;) &amp;&amp; strcasecmp(getenv(&#x27;HTTP_CLIENT_IP&#x27;), &#x27;unknown&#x27;))</span><br><span class="line">	&#123;$ip = getenv(&#x27;HTTP_CLIENT_IP&#x27;);&#125;</span><br><span class="line">	elseif(getenv(&#x27;HTTP_X_FORWARDED_FOR&#x27;) &amp;&amp; strcasecmp(getenv(&#x27;HTTP_X_FORWARDED_FOR&#x27;), &#x27;unknown&#x27;))</span><br><span class="line">	&#123;$ip = getenv(&#x27;HTTP_X_FORWARDED_FOR&#x27;);&#125;</span><br><span class="line">	elseif(getenv(&#x27;REMOTE_ADDR&#x27;) &amp;&amp; strcasecmp(getenv(&#x27;REMOTE_ADDR&#x27;), &#x27;unknown&#x27;))</span><br><span class="line">	&#123;$ip = getenv(&#x27;REMOTE_ADDR&#x27;);&#125;</span><br><span class="line">	elseif(isset($_SERVER[&#x27;REMOTE_ADDR&#x27;]) &amp;&amp; $_SERVER[&#x27;REMOTE_ADDR&#x27;] &amp;&amp; strcasecmp($_SERVER[&#x27;REMOTE_ADDR&#x27;], &#x27;unknown&#x27;))</span><br><span class="line">	&#123;$ip = $_SERVER[&#x27;REMOTE_ADDR&#x27;];&#125;</span><br><span class="line">	return preg_match(&quot;/[\d\.]&#123;7,15&#125;/&quot;, $ip, $matches) ? $matches[0] : false;</span><br><span class="line">&#125;</span><br><span class="line">function is_ip($str) &#123;</span><br><span class="line">    $ip = explode(&quot;.&quot;, $str);if (count($ip)&lt;4 || count($ip)&gt;4) return 0;</span><br><span class="line">    foreach($ip as $ip_addr) &#123;if ( !is_numeric($ip_addr) ) return 0;if ( $ip_addr&lt;0 || $ip_addr&gt;255 ) return 0;</span><br><span class="line">    &#125;return 1;</span><br><span class="line">&#125;</span><br><span class="line">function ipdata($ip,$name=&quot;0&quot;)</span><br><span class="line">&#123;</span><br><span class="line">	$url=&quot;http://ip.taobao.com/service/getIpInfo.php?ip=&quot;;</span><br><span class="line">	$data=json_decode(file_get_contents($url.$ip)); $ipdata=$data-&gt;data;</span><br><span class="line">	if($name==&quot;all&quot;)   &#123;return $ipdata;&#125;</span><br><span class="line">	else if($name==&quot;0&quot;)&#123;return $ipdata-&gt;country.$ipdata-&gt;region.$ipdata-&gt;city.$ipdata-&gt;isp;&#125;</span><br><span class="line">	else if($name==&quot;1&quot;)&#123;return $ipdata-&gt;country;&#125;</span><br><span class="line">	else if($name==&quot;2&quot;)&#123;return $ipdata-&gt;area;&#125;</span><br><span class="line">	else if($name==&quot;3&quot;)&#123;return $ipdata-&gt;region;&#125;</span><br><span class="line">	else if($name==&quot;4&quot;)&#123;return $ipdata-&gt;city;&#125;</span><br><span class="line">	else if($name==&quot;5&quot;)&#123;return $ipdata-&gt;county;&#125;</span><br><span class="line">	else if($name==&quot;6&quot;)&#123;return $ipdata-&gt;isp;&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>ip查询</tag>
      </tags>
  </entry>
  <entry>
    <title>case when的两种语法oracle/hive都通用？</title>
    <url>/997/</url>
    <content><![CDATA[<p>感觉用多了case when 的语句，会把以下两种语法混淆。现在总结一下吧。</p>
<p>以下的两种方法是等效的。</p>
<p>方法一：Case搜索函数(我的常用)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Case搜索函数</span><br><span class="line">case when tb1.language = &#x27;java&#x27; then &#x27;java&#x27;</span><br><span class="line">when tb1.language = &#x27;php&#x27; then &#x27;php&#x27;</span><br><span class="line">else &#x27;qita&#x27; end language</span><br></pre></td></tr></table></figure>

<p>方法二：简单Case函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">case tb1.language when &#x27;java&#x27; then &#x27;java&#x27;</span><br><span class="line">when &#x27;php&#x27; then &#x27;php&#x27;</span><br><span class="line">else &#x27;qita&#x27;</span><br><span class="line">end language</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>oralce</tag>
      </tags>
  </entry>
  <entry>
    <title>centOs7.X安装cmake</title>
    <url>/1581/</url>
    <content><![CDATA[<p>1、安装gcc等必备程序包（已安装则略过此步）<br>yum install -y gcc gcc-c++ make automake</p>
<p>2、安装wget （已安装则略过此步）<br>yum install -y wget</p>
<p>3、获取CMake源码包(或者手动自己windows下载)<br>wget <a href="https://cmake.org/files/v3.5/cmake-3.5.2.tar.gz">https://cmake.org/files/v3.5/cmake-3.5.2.tar.gz</a></p>
<p>4、解压CMake源码包<br>tar -zxvf cmake-3.5.2.tar.gz</p>
<p>5、进入cmark的源码目录<br>cd cmake-3.5.2</p>
<p>6、运行当前目录下的一个文件<br>./bootstrap –prefix=/usr</p>
<p><strong>ps:如果没有指定prefix，后面使用时会报错Could not find CMAKE_ROOT</strong></p>
<p>7、运行命令（这步时间有点长）<br>gmake</p>
<p>8、进行安装<br>gmake install</p>
<p>9、检查是否安装完成<br>cmake –version<br>or<br>which cmake</p>
]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7.X设置本地YUM源</title>
    <url>/1593/</url>
    <content><![CDATA[<h4 id="centos7-X设置本地YUM源"><a href="#centos7-X设置本地YUM源" class="headerlink" title="centos7.X设置本地YUM源"></a>centos7.X设置本地YUM源</h4><p>下面以centos7.5为例子</p>
<h5 id="1、首先把centos7-5的iso镜像文件拷贝-home下"><a href="#1、首先把centos7-5的iso镜像文件拷贝-home下" class="headerlink" title="1、首先把centos7.5的iso镜像文件拷贝/home下"></a>1、首先把centos7.5的iso镜像文件拷贝/home下</h5><p>iso镜像可到： <a href="http://mirrors.aliyun.com/centos-vault/7.5.1804/isos/x86_64/">http://mirrors.aliyun.com/centos-vault/7.5.1804/isos/x86_64/</a> 下载：CentOS-7-x86_64-DVD-1804.iso</p>
<h6 id="1-1-创建以下目录："><a href="#1-1-创建以下目录：" class="headerlink" title="1.1.创建以下目录："></a>1.1.创建以下目录：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /home/yum-iso</span><br><span class="line"></span><br><span class="line">mkdir /home/yum/</span><br></pre></td></tr></table></figure>

<h6 id="1-2-把iso系统解压到指定路径下："><a href="#1-2-把iso系统解压到指定路径下：" class="headerlink" title="1.2.把iso系统解压到指定路径下："></a>1.2.把iso系统解压到指定路径下：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -o loop CentOS-7-x86_64-DVD-1804.iso /home/yum-iso</span><br></pre></td></tr></table></figure>

<h6 id="1-3-把iso解压到yum-iso文件拷贝到yum路径下"><a href="#1-3-把iso解压到yum-iso文件拷贝到yum路径下" class="headerlink" title="1.3.把iso解压到yum-iso文件拷贝到yum路径下"></a>1.3.把iso解压到yum-iso文件拷贝到yum路径下</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r /home/yum-iso/ /home/yum</span><br></pre></td></tr></table></figure>

<h6 id="1-4-查看拷贝情况"><a href="#1-4-查看拷贝情况" class="headerlink" title="1.4.查看拷贝情况"></a>1.4.查看拷贝情况</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll yum</span><br></pre></td></tr></table></figure>

<h5 id="2、进入yum-repos-d文件路径下"><a href="#2、进入yum-repos-d文件路径下" class="headerlink" title="2、进入yum.repos.d文件路径下"></a>2、进入yum.repos.d文件路径下</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>

<h6 id="2-1-用tar打包备份文件"><a href="#2-1-用tar打包备份文件" class="headerlink" title="2.1.用tar打包备份文件"></a>2.1.用tar打包备份文件</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zcvf repo-bk.tar.gz CentOS-*</span><br></pre></td></tr></table></figure>

<h6 id="2-2-rm-f-删掉不必要的文件"><a href="#2-2-rm-f-删掉不必要的文件" class="headerlink" title="2.2.rm -f 删掉不必要的文件"></a>2.2.rm -f 删掉不必要的文件</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f CentOS-Base.repo CentOS-CR.repo CentOS-Debuginfo.repo CentOS-fasttrack.repo CentOS-Sources.repo CentOS-Vault.repo</span><br></pre></td></tr></table></figure>

<h5 id="3-配置本地CentOS-Media-repo"><a href="#3-配置本地CentOS-Media-repo" class="headerlink" title="3.配置本地CentOS-Media.repo"></a>3.配置本地CentOS-Media.repo</h5><p>vi CentOS-Media.repo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#修改的内容</span><br><span class="line"># CentOS-Media.repo</span><br><span class="line">#</span><br><span class="line">#  This repo can be used with mounted DVD media, verify the mount point for</span><br><span class="line">#  CentOS-7.  You can use this repo and yum to install items directly off the</span><br><span class="line">#  DVD ISO that we release.</span><br><span class="line">#</span><br><span class="line"># To use this repo, put in your DVD and use it with the other repos too:</span><br><span class="line">#  yum --enablerepo=c7-media [command]</span><br><span class="line">#  </span><br><span class="line"># or for ONLY the media repo, do this:</span><br><span class="line">#</span><br><span class="line">#  yum --disablerepo=\* --enablerepo=c7-media [command]</span><br><span class="line"></span><br><span class="line">[c7-media]</span><br><span class="line">name=CentOS-$releasever - Media</span><br><span class="line">baseurl=file:///home/yum/yum-iso/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>

<h6 id="3-1-检测安装软件是否成功"><a href="#3-1-检测安装软件是否成功" class="headerlink" title="3.1.检测安装软件是否成功"></a>3.1.检测安装软件是否成功</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">yum -y install ntp</span><br><span class="line"></span><br><span class="line">yum install ed openssh-clients zip unzip perl bind-utils net-tools -y</span><br></pre></td></tr></table></figure>

<h5 id="4-卸载挂载"><a href="#4-卸载挂载" class="headerlink" title="4.卸载挂载"></a>4.卸载挂载</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">umount /home/yum-iso</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7 安装ftp服务</title>
    <url>/1390/</url>
    <content><![CDATA[<h5 id="在安装前需提前确认是否已经安装了vsftpd-命令如下："><a href="#在安装前需提前确认是否已经安装了vsftpd-命令如下：" class="headerlink" title="在安装前需提前确认是否已经安装了vsftpd 命令如下："></a>在安装前需提前确认是否已经安装了vsftpd 命令如下：</h5><p>rpm -qagrep vsftpd</p>
<p>另外，默认的配置文件路径为： /etc/vsftpd/vsftpd.conf</p>
<h5 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令:"></a>安装命令:</h5><p>yum install -y vsftpd</p>
<h5 id="开启-重启-关闭-查看服务状态命令："><a href="#开启-重启-关闭-查看服务状态命令：" class="headerlink" title="开启 重启 关闭 查看服务状态命令："></a>开启 重启 关闭 查看服务状态命令：</h5><p>systemctl start vsftpd<br>systemctl restart vsftpd<br>systemctl stop vsftpd<br>systemctl status vsftpd.service</p>
<blockquote>
<p>这里建议先用客户端匿名访问下FTP，是否已经安装成功。因为这里服务可能存在防火墙，需要开放21端口</p>
</blockquote>
<h5 id="开启-重启-关闭-防火墙命令："><a href="#开启-重启-关闭-防火墙命令：" class="headerlink" title="开启 重启 关闭 防火墙命令："></a>开启 重启 关闭 防火墙命令：</h5><h5 id="配置端口："><a href="#配置端口：" class="headerlink" title="配置端口："></a>配置端口：</h5><p>centos7中的防火墙改成了firewall</p>
<p>使用iptables(iptables -I INPUT 1 -p tcp –dport 21 -j ACCEPT)无作用了</p>
<p>正确开放端口的方法如下：</p>
<p>firewall 的设置方式：<br>firewall-cmd –zone=public –add-service=ftp –permanent<br>firewall-cmd –zone=public –add-port=21/tcp –permanent</p>
<p>返回success为成功<br>命令含义：<br>–zone #作用域<br>–add-port=21/tcp #添加端口，格式为：端口/通讯协议<br>–permanent #永久生效</p>
<p>如果是centos6则使用：</p>
<p>IPtables 的设置方式：<br>vi /etc/sysconfig/iptables<br>#编辑iptables文件，添加如下内容，开启21端口<br>-A INPUT -m state –state NEW -m tcp -p tcp –dport 21 -j ACCEPT</p>
<h5 id="重启防火墙："><a href="#重启防火墙：" class="headerlink" title="重启防火墙："></a>重启防火墙：</h5><p>systemctl restart firewalld.service</p>
<h5 id="编辑ftp配置文件"><a href="#编辑ftp配置文件" class="headerlink" title="编辑ftp配置文件"></a>编辑ftp配置文件</h5><p>vi /etc/vsftpd/vsftpd.conf</p>
<p>修改这些：</p>
<p>anonymous_enable=NO<br>#关闭匿名登录<br>allow_writeable_chroot=YES<br>#加上这行解决了无法登陆的问题</p>
<h5 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h5><p>systemctl restart vsftpd.service</p>
<h5 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h5><p>systemctl enable vsftpd.service</p>
<p>ps : 可选是否（开启PASV（被动模式））使用开启内部发送端口，如选需要配置：</p>
<p>firewall-cmd –zone=public –add-port=30000-30999/tcp –permanent</p>
<p>配置端口号 vi /etc/vsftpd/vsftpd.conf:</p>
<p>在最后追加<br>pasv_enable=YES<br>pasv_min_port=30000<br>pasv_max_port=30999</p>
<p>重启所有服务</p>
<h5 id="卸载ftp服务"><a href="#卸载ftp服务" class="headerlink" title="卸载ftp服务"></a>卸载ftp服务</h5><p>yum remove vsftpd</p>
<hr>
<p><img src="http://199604.com/wp-content/uploads/2020/04/zhifubao.png"> <img src="http://199604.com/wp-content/uploads/2020/04/weixin.png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>centos7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS6/7修改主机名</title>
    <url>/1408/</url>
    <content><![CDATA[<h3 id="CentOS6下修改hostname"><a href="#CentOS6下修改hostname" class="headerlink" title="CentOS6下修改hostname"></a>CentOS6下修改hostname</h3><p># 查看当前的hostnmae hostname # 编辑network文件修改hostname行（重启生效）</p>
<p>vim /etc/sysconfig/network<br>HOSTNAME=gljLinux</p>
<p># 检查修改</p>
<p>cat /etc/sysconfig/network<br>NETWORKING=yes<br>HOSTNAME=gljLinux</p>
<p>#修改hosts文件</p>
<p># 编辑hosts文件，给127.0.0.1添加hostname–&gt;gljLinux<br>vim /etc/hosts</p>
<h1 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h1><p>cat /etc/hosts<br>127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 gljLinux<br>::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</p>
<hr>
<h3 id="CentOS7下修改hostname"><a href="#CentOS7下修改hostname" class="headerlink" title="CentOS7下修改hostname"></a>CentOS7下修改hostname</h3><p>1.查看当前主机名：</p>
<p>hostname<br>//或者<br>cat /etc/hostname</p>
<p>查看当前Linux操作系统相关信息（内核版本号、硬件架构、主机名称和操作系统类型等）:</p>
<p>uname -a//查看到的是瞬态的（Tansient hostname）<br>cat /etc/redhat-release//查看操作系统环境</p>
<p>2.修改主机名</p>
<p>//临时有效<br>hostname 主机名 //只能临时修改的主机名，当重启机器后，主机名称又变回来了。<br>hostname gljLinux</p>
<p>//永久生效<br>//永久性的修改主机名称，重启后能保持修改后的。<br>hostnamectl set-hostname gljLinux</p>
<p>ps1:名字大写字母会自动转化为小写.. ps2：虽改了主机名，/etc/hostname 也会自动更新。但是/etc/hosts 不会更新以保存所做的修改，因此每次在修改主机名后一定要手动更新/etc/hosts，之后再重启CentOS 7。否则系统再启动时会很慢。 然后就 reboot -f 查看效果吧~</p>
<hr>
<p><img src="http://199604.com/wp-content/uploads/2020/04/zhifubao.png"> <img src="http://199604.com/wp-content/uploads/2020/04/weixin.png"></p>
]]></content>
      <categories>
        <category>linux总结</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7卸载自带的openJDK，并安装oracle-jdk1.8</title>
    <url>/1410/</url>
    <content><![CDATA[<p>1.删除旧版(自带jdk)：</p>
<p>rpm -qagrep jdk<br>rpm -e java-xxx –nodeps</p>
<p>2.安装jdk：</p>
<p>rpm -ivh jdk-8u112-linux-x64.rpm</p>
<p>3.确保使用的java版本是上面安装的版本。</p>
<p>java -version</p>
<p>有时候可能运到安装JDK后，系统还是使用自带的open jdk。 在这种情况一般需要把/usr/bin/下java相关的软链接重新建立。例子：</p>
<p>rm /usr/bin/java<br>ln -s /usr/java/default/bin/java /usr/bin/java<br>rm /usr/bin/javac<br>ln -s /usr/java/default/bin/javac /usr/bin/javac<br>rm /usr/bin/javadoc<br>ln -s /usr/java/default/bin/javadoc /usr/bin/javadoc<br>rm /usr/bin/javafxpackager<br>ln -s /usr/java/default/bin/javafxpackager /usr/bin/javafxpackager<br>rm /usr/bin/javah<br>ln -s /usr/java/default/bin/javah /usr/bin/javah<br>rm /usr/bin/javap<br>ln -s /usr/java/default/bin/javap /usr/bin/javap<br>rm /usr/bin/javapackager<br>ln -s /usr/java/default/bin/javapackager /usr/bin/javapackager<br>rm /usr/bin/java-rmi.cgi<br>ln -s /usr/java/default/bin/java-rmi.cgi /usr/bin/java-rmi.cgi<br>rm /usr/bin/javaws<br>ln -s /usr/java/default/bin/javaws /usr/bin/javaws</p>
<hr>
<p>下面提供一个一键脚本吧，代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">declare INSTALLVERSION</span><br><span class="line">declare INSTALLFILE</span><br><span class="line"></span><br><span class="line">isNeedInstall()</span><br><span class="line">&#123;</span><br><span class="line">    local versioninfo=`java -version 2&gt;&amp;1`</span><br><span class="line">    if [ $? -eq 0 ]</span><br><span class="line">    then </span><br><span class="line">       local version=`java -version 2&gt;&amp;1 | awk &#x27;&#123;if(NR==1)&#123;gsub(/&quot;/,&quot;&quot;); print $3&#125;&#125;&#x27;`</span><br><span class="line">       if [[ $versioninfo == &quot;openjdk&quot;* || $versioninfo == *&quot;IBM&quot;* ]]</span><br><span class="line">       then </span><br><span class="line">           echo &quot;install openjdk or ibm jdk&quot;</span><br><span class="line">           return 1</span><br><span class="line">        elif [[ &quot;$&#123;INSTALLVERSION&#125;&quot; == &quot;$&#123;version&#125;&quot; ]]</span><br><span class="line">        then</span><br><span class="line">           echo &quot;The oracle jdk($&#123;INSTALLVERSION&#125;) has installed.&quot;</span><br><span class="line">           return 0</span><br><span class="line">        else</span><br><span class="line">           echo &quot;This machine installed oracle jdk, but the version is wrong.&quot;</span><br><span class="line">           return 1</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;This machine doesn&#x27;t install oracle jdk.&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">find_installfile()</span><br><span class="line">&#123;</span><br><span class="line">   local filename=`ls |grep ^jdk.*\.rpm`</span><br><span class="line">   if [[ -f $&#123;filename&#125; ]]</span><br><span class="line">   then</span><br><span class="line">       INSTALLFILE=$&#123;filename&#125;</span><br><span class="line">       return 0</span><br><span class="line">   else</span><br><span class="line">       echo &quot;can&#x27;t find jdk install file.&quot;</span><br><span class="line">       exit 1</span><br><span class="line">   fi   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">create_javalink()</span><br><span class="line">&#123;</span><br><span class="line">    local java_home=$1</span><br><span class="line">    local links=(java javac javadoc javafxpackager javah javap javapackager java-rmi.cgi javaws)</span><br><span class="line">    for linkname in $&#123;links[@]&#125;</span><br><span class="line">    do</span><br><span class="line">       if [[ -f &quot;/usr/bin/$&#123;linkname&#125;&quot; ]]</span><br><span class="line">       then</span><br><span class="line">          rm -f /usr/bin/$&#123;linkname&#125;</span><br><span class="line">       fi</span><br><span class="line">         ln -s $&#123;java_home&#125;/bin/java /usr/bin/$&#123;linkname&#125;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install()</span><br><span class="line">&#123;</span><br><span class="line">    if [ ! -f $&#123;INSTALLFILE&#125; ]</span><br><span class="line">    then</span><br><span class="line">       echo &quot;the file $&#123;INSTALLFILE&#125; doesn&#x27;t exits. &quot;</span><br><span class="line">       return 1</span><br><span class="line">    else</span><br><span class="line">       rpm -ivh $&#123;INSTALLFILE&#125;</span><br><span class="line">       if [[ ! $? -eq 0 ]]</span><br><span class="line">       then</span><br><span class="line">          echo &quot;install $&#123;INSTALLFILE&#125; error.&quot;</span><br><span class="line">          return 1</span><br><span class="line">       else</span><br><span class="line">           local version=`java -version 2&gt;&amp;1 | awk &#x27;&#123;if(NR==1)&#123;gsub(/&quot;/,&quot;&quot;); print $3&#125;&#125;&#x27;`</span><br><span class="line">           if [[ ! &quot;$&#123;version&#125;&quot; == &quot;$&#123;INSTALLVERSION&#125;&quot; ]]</span><br><span class="line">           then</span><br><span class="line">              echo &quot;create sybomic link.&quot;</span><br><span class="line">              if [ -d &quot;/usr/java&quot; ]</span><br><span class="line">              then</span><br><span class="line">                 local java_home=`ls /usr/java | grep $&#123;INSTALLVERSION&#125;`</span><br><span class="line">                 if [[ &quot;$java_home&quot; == &quot;&quot; ]]</span><br><span class="line">                 then</span><br><span class="line">                     echo &quot;can&#x27;t find the java install directory.&quot;</span><br><span class="line">                     return 1</span><br><span class="line">                 else</span><br><span class="line">                     create_javalink &quot;/usr/java/$&#123;java_home&#125;&quot;</span><br><span class="line">                     version=`java -version 2&gt;&amp;1 | awk &#x27;&#123;if(NR==1)&#123;gsub(/&quot;/,&quot;&quot;); print $3&#125;&#125;&#x27;`</span><br><span class="line">                     if [[ &quot;$&#123;version&#125;&quot; == &quot;$&#123;INSTALLVERSION&#125;&quot; ]]</span><br><span class="line">                     then</span><br><span class="line">                        echo &quot;install jdk successfully.&quot;</span><br><span class="line">                        return 0</span><br><span class="line">                     else</span><br><span class="line">                        echo &quot;unkown error. please check in manul.&quot;</span><br><span class="line">                        return 1</span><br><span class="line">                     fi</span><br><span class="line">                 fi</span><br><span class="line">              else</span><br><span class="line">                 echo &quot;/usr/java doesn&#x27;t exist.&quot;</span><br><span class="line">                 return 1</span><br><span class="line">              fi  </span><br><span class="line">           else</span><br><span class="line">               echo &quot;install jdk successfully.&quot;</span><br><span class="line">               return 0</span><br><span class="line">           fi</span><br><span class="line">        fi</span><br><span class="line">    fi    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [ $# -eq 1 ]</span><br><span class="line">then</span><br><span class="line">   INSTALLVERSION=$1</span><br><span class="line">   find_installfile</span><br><span class="line">   isNeedInstall</span><br><span class="line">   if [ $? -eq 1 ]</span><br><span class="line">   then</span><br><span class="line">      install</span><br><span class="line">      if [ $? -eq 0 ]</span><br><span class="line">      then</span><br><span class="line">         exit 0</span><br><span class="line">      else</span><br><span class="line">         exit 1</span><br><span class="line">      fi</span><br><span class="line">   else</span><br><span class="line">      exit 0</span><br><span class="line">   fi </span><br><span class="line">else</span><br><span class="line">   echo &quot;params error.Usage: sh jdk_instanller.sh 1.8.0_181&quot;</span><br><span class="line">   exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p>运行脚本时，需要添加参数，参数名为你安装java版本号，如: bash jdk_instanller.sh 1.8.0_181 1.8.0_181 就是你的jdk版本号</p>
<hr>
<p><img src="http://199604.com/wp-content/uploads/2020/04/weixin.png"> <img src="http://199604.com/wp-content/uploads/2020/04/zhifubao.png"></p>
]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7（64）环境使用rpm命令安装gcc</title>
    <url>/1585/</url>
    <content><![CDATA[<h4 id="CentOS7（64）环境使用rpm命令安装gcc"><a href="#CentOS7（64）环境使用rpm命令安装gcc" class="headerlink" title="CentOS7（64）环境使用rpm命令安装gcc"></a>CentOS7（64）环境使用rpm命令安装gcc</h4><h5 id="第一步：下载gcc相关的安装文件"><a href="#第一步：下载gcc相关的安装文件" class="headerlink" title="第一步：下载gcc相关的安装文件"></a>第一步：下载gcc相关的安装文件</h5><h6 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h6><p><a href="https://mirror.tuna.tsinghua.edu.cn/centos-vault/7.3.1611/os/x86_64/Packages/">https://mirror.tuna.tsinghua.edu.cn/centos-vault/7.3.1611/os/x86_64/Packages/</a></p>
<h6 id="下载以下文件："><a href="#下载以下文件：" class="headerlink" title="下载以下文件："></a>下载以下文件：</h6><ul>
<li>cpp-4.8.5-11.el7.x86_64.rpm</li>
<li>gcc-4.8.5-11.el7.x86_64.rpm</li>
<li>glibc-2.17-157.el7.x86_64.rpm</li>
<li>glibc-common-2.17-157.el7.x86_64.rpm</li>
<li>glibc-devel-2.17-157.el7.x86_64.rpm</li>
<li>glibc-headers-2.17-157.el7.x86_64.rpm</li>
<li>glibc-static-2.17-157.el7.x86_64.rpm</li>
<li>glibc-utils-2.17-157.el7.x86_64.rpm</li>
<li>kernel-headers-3.10.0-514.el7.x86_64.rpm</li>
<li>libgcc-4.8.5-11.el7.x86_64.rpm</li>
<li>libmpc-1.0.1-3.el7.x86_64.rpm</li>
<li>mpfr-3.1.1-4.el7.x86_64.rpm</li>
</ul>
<h5 id="第二步：创建目录gcc-rpm"><a href="#第二步：创建目录gcc-rpm" class="headerlink" title="第二步：创建目录gcc_rpm"></a>第二步：创建目录gcc_rpm</h5><p>mkdir gcc_rpm</p>
<p>把文件上传到此目录….</p>
<h5 id="第三步：执行安装操作"><a href="#第三步：执行安装操作" class="headerlink" title="第三步：执行安装操作"></a>第三步：执行安装操作</h5><p>cd gcc_rpm</p>
<p>rpm -Uvh *.rpm –nodeps –force</p>
<blockquote>
<p>运行此命令会根据依赖按照顺序安装rpm<br>注：<br>–nodeps rpm在安装包时，不检查依赖关系，例如安装B，B依赖C导致无法安装，使用–nodeps就可以安装成功</p>
<p>–force 强制安装</p>
</blockquote>
<h5 id="第四步：验证安装结果"><a href="#第四步：验证安装结果" class="headerlink" title="第四步：验证安装结果"></a>第四步：验证安装结果</h5><p>gcc -V</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>gcc</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS上离线安装mono</title>
    <url>/1595/</url>
    <content><![CDATA[<h1 id="CentOS上离线安装mono"><a href="#CentOS上离线安装mono" class="headerlink" title="CentOS上离线安装mono"></a>CentOS上离线安装mono</h1><h5 id="检查是否安装了依赖库"><a href="#检查是否安装了依赖库" class="headerlink" title="检查是否安装了依赖库"></a>检查是否安装了依赖库</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ bison pkgconfig glib2-devel gettext make libpng-devel libjpeg-devel libtiff-devel libexif-devel giflib-devel libX11-devel freetype-devel fontconfig-devel  cairo-devel</span><br></pre></td></tr></table></figure>

<p>如果是离线机器没这些依赖包，也最需要安装这些依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc、gcc-c++、make、cmake</span><br></pre></td></tr></table></figure>

<h5 id="下载mono安装源"><a href="#下载mono安装源" class="headerlink" title="下载mono安装源"></a>下载mono安装源</h5><p><a href="http://download.mono-project.com/sources/mono/mono-5.16.0.179.tar.bz2">http://download.mono-project.com/sources/mono/mono-5.16.0.179.tar.bz2</a> 上传到你离线的服务器上</p>
<h5 id="mono-配置，编译，安装，设置环境变量"><a href="#mono-配置，编译，安装，设置环境变量" class="headerlink" title="mono 配置，编译，安装，设置环境变量"></a>mono 配置，编译，安装，设置环境变量</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -jxvf mono-5.16.0.179.tar.bz2</span><br><span class="line"></span><br><span class="line">cd mono-5.16.0.179</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/local/mono</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">vi /etc/profile</span><br><span class="line">在最后添加环境变量：</span><br><span class="line">PATH=$PATH:/usr/local/mono/bin</span><br><span class="line">export PATH</span><br><span class="line">:wq保存并退出</span><br><span class="line"></span><br><span class="line"># 设置生效</span><br><span class="line">source /etc/profile</span><br><span class="line"># 输出环境变量PATH的值，验证添加的变量是否生效</span><br><span class="line">echo $PATH</span><br><span class="line"># 查看 mono 版本</span><br><span class="line">mono -V               </span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>说明</strong>: –prefix=/usr/local/mono是设置mono安装的目录，因此PATH添加的就是该安装目录下的bin目录路径。</p>
</blockquote>
<h5 id="测试是否能使用"><a href="#测试是否能使用" class="headerlink" title="测试是否能使用"></a>测试是否能使用</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi hello.cs</span><br><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Text;</span><br><span class="line">namespace Hello</span><br><span class="line">&#123;</span><br><span class="line">        class hello</span><br><span class="line">        &#123;</span><br><span class="line">                static void Main(string[] args)</span><br><span class="line">                &#123;</span><br><span class="line">                        Console.WriteLine(&quot;hello world!&quot;);</span><br><span class="line">                        Console.ReadKey();</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:wq保存并退出</span><br><span class="line"></span><br><span class="line"># 编译生成可执行程序hello.exe</span><br><span class="line">mcs hello.cs</span><br><span class="line"># 执行可执行程序</span><br><span class="line">mono hello.exe</span><br></pre></td></tr></table></figure>

<h5 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h5><h6 id="1-configure-error-“cmake-not-found”"><a href="#1-configure-error-“cmake-not-found”" class="headerlink" title="1.configure: error: “cmake not found”"></a>1.configure: error: “cmake not found”</h6><p>在configure环节就报了configure: error: “cmake not found”，表示没有安装到cmake依赖库。于是需要安装cmake。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、安装gcc等必备程序包（已安装则略过此步）</span><br><span class="line">yum install -y gcc gcc-c++ make automake</span><br><span class="line"></span><br><span class="line">2、安装wget （已安装则略过此步）</span><br><span class="line">yum install -y wget</span><br><span class="line"></span><br><span class="line">3、获取CMake源码包(或者手动自己windows下载)</span><br><span class="line">wget https://cmake.org/files/v3.5/cmake-3.5.2.tar.gz</span><br><span class="line"></span><br><span class="line">4、解压CMake源码包</span><br><span class="line">tar -zxvf cmake-3.5.2.tar.gz</span><br><span class="line"></span><br><span class="line">5、进入cmark的源码目录</span><br><span class="line">cd cmake-3.5.2</span><br><span class="line"></span><br><span class="line">6、运行当前目录下的一个文件</span><br><span class="line">./bootstrap --prefix=/usr</span><br><span class="line"></span><br><span class="line">ps:如果没有指定prefix，后面使用时会报错Could not find CMAKE_ROOT</span><br><span class="line"></span><br><span class="line">7、运行命令（这步时间有点长）</span><br><span class="line">gmake</span><br><span class="line"></span><br><span class="line">8、进行安装</span><br><span class="line">gmake install</span><br><span class="line"></span><br><span class="line">9、检查是否安装完成</span><br><span class="line">cmake --version</span><br><span class="line">or</span><br><span class="line">which cmake</span><br></pre></td></tr></table></figure>

<p>安装完cmake后，把原来的mono解压文件删除，重新解压进行即可。</p>
<h6 id="2-安装完Mono后，其他用户无法使用mono"><a href="#2-安装完Mono后，其他用户无法使用mono" class="headerlink" title="2.安装完Mono后，其他用户无法使用mono"></a>2.安装完Mono后，其他用户无法使用mono</h6><p>1.检查 /etc/profile是否设置了环境变量 2.查看mono目录权限是否为下图所示： <img src="http://qn.199604.com/typoraImg/image-20200609154414318.png" alt="image-20200609154414318"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>mono</tag>
      </tags>
  </entry>
  <entry>
    <title>centos下使用autossh命令</title>
    <url>/1485/</url>
    <content><![CDATA[<p>autossh 是一个用来启动 ssh 并进行监控的程序，可在需要时重启 ssh，如果程序问题或者是网络问题。其灵感和机制来自于 rstunnel (Reliable SSH Tunnel). autossh 1.2 的方法已经改变：autossh 使用 ssh 来构造一个 ssh 重定向循环(本地到远程和远程到本地)，然后发送测试数据并获得返回结果。 内网主机主动连接到外网主机，又被称作反向连接(Reverse Connection)，这样NAT路由/防火墙就会在内网主机和外网主机之间建立映射即可相互通信了。但这种映射是路由网关自动维持的，不会持续下去，如果连接断开或者网络不稳定都会导致通信失败，这时内网主机需要自动重连机制了。 参数：</p>
<p>-M为autossh参数， -CqTfnN -D 为ssh参数<br>-M 5678 : 负责通过5678端口监视连接状态，连接有问题时就会自动重连<br>-C ：启动数据压缩传输<br>-q ：安静模式运行，忽略提示和错误<br>-T ：不占用shell<br>-f ：后台运行<br>-n ：配合 -f 参数使用<br>-N ：不执行远程命令，专为端口转发度身打造<br>-D 192.168.0.2:7070 ：指定一个本地机器 “动态的“ 应用程序端口转发，如果不加IP地址，默认只监听127.0.0.1<br>反向代理 ssh -fCNR<br>正向代理 ssh -fCNL<br>-R 将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口<br>-L 将本地机(客户机)的某个端口转发到远端指定机器的指定端口</p>
<hr>
<p>折腾一晚上的实战： 今晚折腾一晚上autossh的用法~ 首先我准备了三台机器： 一台是192.168.80.128本地虚拟机，一台是129.204.XXX.99 的腾讯云虚拟机，一台是116.62.xxx.182的阿里云虚拟机。 目的是打算能从129.204.XXX.99 虚拟机上通过映射的端口访问116.62.xxx.182虚拟机，然后我本地机器能通过CRT端口转发访问，192.168.80.128本地虚拟机可认为是跳板机。 其实这次最最最最主要的目的是以后可能会要访问很多内网机器，但是我本地机器是无法去访问公司很多内网机器，而只有一台能对外访问，从而我讲这台做一个映射罢了。 首先嘚先安装autossh</p>
<h4 id="1-命令安装："><a href="#1-命令安装：" class="headerlink" title="1.命令安装："></a>1.命令安装：</h4><p>yum install autossh 如果yum安装不了： 可参考：<a href="https://www.linuxidc.com/Linux/2015-05/117665.htm">https://www.linuxidc.com/Linux/2015-05/117665.htm</a></p>
<h4 id="2-运行命令"><a href="#2-运行命令" class="headerlink" title="2.运行命令"></a>2.运行命令</h4><p>autossh -M 20912:22 -NR 29640:116.62.xxx.182:22 -p22 <a href="mailto:&#x72;&#111;&#x6f;&#x74;&#x40;&#x31;&#50;&#57;&#46;&#x32;&#x30;&#52;&#46;&#120;&#120;&#x78;&#x2e;&#x39;&#x39;">&#x72;&#111;&#x6f;&#x74;&#x40;&#x31;&#50;&#57;&#46;&#x32;&#x30;&#52;&#46;&#120;&#120;&#x78;&#x2e;&#x39;&#x39;</a> 通过netstat -anp grep 29640可以看到 转发映射成功： <img src="http://qn.199604.com/typoraImg/20200420005019-1024x125.png"> 但是有一个问题，29640端口映射的ip是127.0.0.1而不是0.0.0.0，那么这就有很大问题了，这样我们就无法通过他的ip去访问到这个29640端口 至于为什么：可点击看：<a href="https://www.cnblogs.com/lemon-flm/p/7396536.html">Linux的netstat查看端口是否开放见解（0.0.0.0与127.0.0.1的区别）</a> 我这边就不多介绍~ 怎么解决呢：</p>
<p>cd /etc/ssh/<br>vi sshd_config<br>修改<br>GatewayPorts yes<br>重启 ssh服务<br>service sshd restart<br>关掉autossh 命令窗口<br>重新打开窗口输入:<br>autossh -M 20912:22 -NR 29640:116.62.xxx.182:22 -p22 <a href="mailto:&#114;&#111;&#111;&#116;&#x40;&#x31;&#x32;&#x39;&#x2e;&#x32;&#48;&#x34;&#x2e;&#120;&#x78;&#120;&#x2e;&#x39;&#57;">&#114;&#111;&#111;&#116;&#x40;&#x31;&#x32;&#x39;&#x2e;&#x32;&#48;&#x34;&#x2e;&#120;&#x78;&#120;&#x2e;&#x39;&#57;</a></p>
<p><img src="http://qn.199604.com/typoraImg/20200420005522.png"> 再次netstat -anp grep 29640 <img src="http://qn.199604.com/typoraImg/20200420005836-1024x131.png"></p>
<h4 id="3-通过CRT连接服务器"><a href="#3-通过CRT连接服务器" class="headerlink" title="3.通过CRT连接服务器"></a>3.通过CRT连接服务器</h4><p>在CRT工具上，对192.168.80.128本地虚拟机进行端口转发配置。 CRT端口转发如何配置–&gt;百度~ 效果图： <img src="http://qn.199604.com/typoraImg/20200420010243-1024x651.png"> 然后就可以把本地端口间接映射了。 完成~ <img src="http://qn.199604.com/typoraImg/20200420010408.png"> 如果看不懂我写的没关系，我自己懂就行，而你们可以看看别人的吧：<a href="https://www.cnblogs.com/kwongtai/p/6903420.html">https://www.cnblogs.com/kwongtai/p/6903420.html</a> 睡觉了<del>明天还要上班呢呜呜呜呜</del></p>
]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>autossh</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos安装zookeeper+kafka集群</title>
    <url>/1599/</url>
    <content><![CDATA[<p>系统：centos 7 软件包： <code>jdk-8u131-linux-x64.rpm</code> <code>zookeeper-3.4.12.tar.gz</code> <code>kafka_2.11-2.2.2.tgz</code></p>
<h5 id="1-演示安装服务器地址-amp-名称："><a href="#1-演示安装服务器地址-amp-名称：" class="headerlink" title="1.演示安装服务器地址&amp;名称："></a>1.演示安装服务器地址&amp;名称：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">172.42.100.7     hadoop4</span><br><span class="line">172.42.100.8     hadoop5</span><br><span class="line">172.42.100.9     hadoop6</span><br></pre></td></tr></table></figure>

<h5 id="2-安装jdk（每台都需安装）"><a href="#2-安装jdk（每台都需安装）" class="headerlink" title="2.安装jdk（每台都需安装）"></a>2.安装jdk（每台都需安装）</h5><h6 id="2-1-上传文件到某一个服务器，通过scp使得每一台服务器都有文件"><a href="#2-1-上传文件到某一个服务器，通过scp使得每一台服务器都有文件" class="headerlink" title="2.1.上传文件到某一个服务器，通过scp使得每一台服务器都有文件"></a>2.1.上传文件到某一个服务器，通过scp使得每一台服务器都有文件</h6><p><code>scp -r jdk-8u131-linux-x64.rpm root@hadoop5:/home/</code></p>
<h6 id="2-2-查找安装过的java包"><a href="#2-2-查找安装过的java包" class="headerlink" title="2.2.查找安装过的java包"></a>2.2.查找安装过的java包</h6><p><code>rpm -qa grep java</code></p>
<blockquote>
<p>如果查出来有 运行 rpm -e –nodeps 查出来的包名（将已安装java全部卸载）</p>
</blockquote>
<h6 id="2-3-安装java-rpm包-每台机器执行"><a href="#2-3-安装java-rpm包-每台机器执行" class="headerlink" title="2.3.安装java rpm包(每台机器执行)"></a>2.3.安装java rpm包(每台机器执行)</h6><p>ps:<strong>如果已经存在jdk1.8的可忽略</strong> <code>rpm -ivh jdk-8u131-linux-x64.rpm</code></p>
<h6 id="2-4-验证是否安装成功"><a href="#2-4-验证是否安装成功" class="headerlink" title="2.4.验证是否安装成功"></a>2.4.验证是否安装成功</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version </span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">which java</span><br></pre></td></tr></table></figure>

<h5 id="3-搭建zookeeper集群"><a href="#3-搭建zookeeper集群" class="headerlink" title="3.搭建zookeeper集群"></a>3.搭建zookeeper集群</h5><h6 id="3-1-下载地址："><a href="#3-1-下载地址：" class="headerlink" title="3.1.下载地址："></a>3.1.下载地址：</h6><p><a href="https://mirrors.huaweicloud.com/apache/zookeeper/zookeeper-3.4.12/">https://mirrors.huaweicloud.com/apache/zookeeper/zookeeper-3.4.12/</a> 教程用的是zookeeper-3.4.12，区别应该不大，清华源最新已经是3.4.12…</p>
<h6 id="3-2-所有节点安装zookeeper"><a href="#3-2-所有节点安装zookeeper" class="headerlink" title="3.2.所有节点安装zookeeper"></a>3.2.所有节点安装zookeeper</h6><p><strong>可预先在一台服务器上配置完文件，再复制到其他集群服务器上</strong> #文件都放到/data/kafka_test/ 如没有kafka_test文件需要创建 <code>mkdir /data/kafka_test</code> #将zookeeper解压到安装目录 <code>tar -zxvf zookeeper-3.4.12.tar.gz</code> #更换文件夹名称 <code>mv zookeeper-3.4.12 zookeeper</code> #新建日志目录 <code>mkdir -p /data/kafka_test/zookeeper/dataLog</code> #新建保存数据的目录 <code>mkdir -p /data/kafka_test/zookeeper/data</code> #配置环境变量并刷新 #vi /etc/profile</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ZK_HOME=/data/kafka_test/zookeeper</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$ZK_HOME/bin</span><br></pre></td></tr></table></figure>

<p>#刷新一下环境变量 source /etc/profile</p>
<h6 id="3-3-所有节点配置zookeeper配置文件"><a href="#3-3-所有节点配置zookeeper配置文件" class="headerlink" title="3.3.所有节点配置zookeeper配置文件"></a>3.3.所有节点配置zookeeper配置文件</h6><p><strong>可预先在一台服务器上配置完文件，再复制到其他集群服务器上</strong> #进入配置文件文件夹 <code>cd /data/kafka_test/zookeeper/conf/</code> #复制文件 <code>cp -f zoo_sample.cfg zoo.cfg</code> #修改文件配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line">tickTime=2000</span><br><span class="line"># The number of ticks that the initial </span><br><span class="line"># synchronization phase can take</span><br><span class="line">initLimit=10</span><br><span class="line"># The number of ticks that can pass between </span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line">syncLimit=5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line"># do not use /tmp for storage, /tmp here is just </span><br><span class="line"># example sakes.</span><br><span class="line">dataDir=/data/kafka_test/zookeeper/data/</span><br><span class="line">dataLogDir=/data/kafka_test/zookeeper/dataLog/</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line">clientPort=2181</span><br><span class="line"># the maximum number of client connections.</span><br><span class="line"># increase this if you need to handle more clients</span><br><span class="line">#maxClientCnxns=60</span><br><span class="line">#</span><br><span class="line"># Be sure to read the maintenance section of the </span><br><span class="line"># administrator guide before turning on autopurge.</span><br><span class="line">#</span><br><span class="line"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class="line">#</span><br><span class="line"># The number of snapshots to retain in dataDir</span><br><span class="line">#autopurge.snapRetainCount=3</span><br><span class="line"># Purge task interval in hours</span><br><span class="line"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="line">#autopurge.purgeInterval=1</span><br><span class="line"></span><br><span class="line">server.0=hadoop4:2888:3888</span><br><span class="line">server.1=hadoop5:2888:3888</span><br><span class="line">server.2=hadoop6:2888:3888</span><br></pre></td></tr></table></figure>

<p>ps: 复制文件后需要就改的地方其实就如下： #追加或修改 dataDir=/data/kafka_test/zookeeper/data/ dataLogDir=/data/kafka_test/zookeeper/dataLog/ #追加服务器集群信息 server.0=hadoop4:2888:3888 server.1=hadoop5:2888:3888 server.2=hadoop6:2888:3888</p>
<blockquote>
<p>第一个端口是master和slave之间的通信端口，默认是2888，第二个端口是leader选举的端口，集群刚启动的时候选举或者leader挂掉之后进行新的选举的端口默认</p>
</blockquote>
<p>#配置myid</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo &quot;0&quot; &gt; /data/kafka_test/zookeeper/data/myid   #server0配置，各节点不同，跟上面配置server.0的号码一样</span><br><span class="line"></span><br><span class="line"># echo &quot;1&quot; &gt; /data/kafka_test/zookeeper/data/myid   #server1配置，各节点不同，跟上面配置server.1的号码一样</span><br><span class="line"></span><br><span class="line"># echo &quot;2&quot; &gt; /data/kafka_test/zookeeper/data/myid   #server2配置，各节点不同，跟上面配置server.2的号码一样</span><br></pre></td></tr></table></figure>

<h6 id="3-4-修改启动脚本–-gt-zkServer-sh"><a href="#3-4-修改启动脚本–-gt-zkServer-sh" class="headerlink" title="3.4.修改启动脚本–&gt;zkServer.sh"></a>3.4.修改启动脚本–&gt;zkServer.sh</h6><p>cd /data/kafka_test/zookeeper/bin/ vi zkServer.sh 查找到if [ ! -w “$ZOO_LOG_DIR” ] ; then前追加一段： export ZOO_LOG_DIR=”/data/kafka_test/zookeeper/dataLog/“ </p>
<p><img src="http://qn.199604.com/typoraImg/image-20200712234239928.png" alt="image-20200712234239928"></p>
<h6 id="3-5-启动停止zookeeper命令"><a href="#3-5-启动停止zookeeper命令" class="headerlink" title="3.5.启动停止zookeeper命令"></a>3.5.启动停止zookeeper命令</h6><p>#启动 zkServer.sh start #shell脚本同时启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">ssh root@hadoop4 zkServer.sh start</span><br><span class="line">ssh root@hadoop5 zkServer.sh start</span><br><span class="line">ssh root@hadoop6 zkServer.sh start</span><br></pre></td></tr></table></figure>

<p>#停止 zkServer.sh stop #shell脚本同时关闭</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">ssh root@hadoop4 zkServer.sh stop</span><br><span class="line">ssh root@hadoop5 zkServer.sh stop</span><br><span class="line">ssh root@hadoop6 zkServer.sh stop</span><br></pre></td></tr></table></figure>

<p>#连接集群 zkCli.sh</p>
<h5 id="4-搭建kafka集群"><a href="#4-搭建kafka集群" class="headerlink" title="4.搭建kafka集群"></a>4.搭建kafka集群</h5><h6 id="4-1-下载地址："><a href="#4-1-下载地址：" class="headerlink" title="4.1.下载地址："></a>4.1.下载地址：</h6><p><a href="https://mirrors.huaweicloud.com/apache/kafka/2.2.2/">https://mirrors.huaweicloud.com/apache/kafka/2.2.2/</a> 教程用的是kafka_2.11-2.2.2.tgz</p>
<h6 id="4-2-所有节点上搭建kafka"><a href="#4-2-所有节点上搭建kafka" class="headerlink" title="4.2.所有节点上搭建kafka"></a>4.2.所有节点上搭建kafka</h6><p><strong>可预先在一台服务器上配置完文件，再复制到其他集群服务器上</strong> #文件都放到/data/kafka_test/ 如没有kafka_test文件需要创建 <code>mkdir /data/kafka_test</code> #新建kafka日志目录 <code>mkdir -p /data/kafka-data</code> #解压kafka <code>tar -zxvf kafka_2.11-2.2.2.tgz</code> #更换文件夹名称 <code>mv kafka_2.11-2.2.2 kafka</code> #配置环境变量并刷新 #vi /etc/profile</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># kafka</span><br><span class="line">export KAFKA_HOME=/data/kafka_test/kafka</span><br><span class="line">export PATH=$PATH:$KAFKA_HOME/bin</span><br></pre></td></tr></table></figure>

<p>#刷新一下环境变量 <code>source /etc/profile</code> #备份并修改kafka配置文件：server.properties</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /data/kafka_test/kafka/config/</span><br><span class="line"></span><br><span class="line">mv server.properties server_bak.properties</span><br></pre></td></tr></table></figure>

<p>#新建server.properties 并追加一下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">####################</span><br><span class="line">#kafka broker config</span><br><span class="line">####################</span><br><span class="line"></span><br><span class="line">#broker config</span><br><span class="line">#每一个broker在集群中的唯一标示，要求是正数</span><br><span class="line">broker.id=0</span><br><span class="line"># 选择启用删除主题功能，默认false</span><br><span class="line">delete.topic.enable=true</span><br><span class="line"># 一个topic ，默认分区的replication个数 ，不得大于集群中broker的个数</span><br><span class="line">default.replication.factor=2 </span><br><span class="line">auto.create.topics.enable=false</span><br><span class="line"># 套接字服务器连接的地址</span><br><span class="line">listeners=PLAINTEXT://:9092 </span><br><span class="line">num.network.threads=10</span><br><span class="line">num.io.threads=36</span><br><span class="line">socket.send.buffer.bytes=1048576</span><br><span class="line">socket.receive.buffer.bytes=1048576</span><br><span class="line">socket.request.max.bytes=104857600</span><br><span class="line">message.max.bytes=10485760</span><br><span class="line"># replicas每次获取数据的最大大小</span><br><span class="line">replica.fetch.max.bytes=12582912 </span><br><span class="line">#kafka数据的存放地址</span><br><span class="line">log.dirs=/data/kafka-data </span><br><span class="line">#segment文件保留的最长时间（小时），超时将被删除</span><br><span class="line">log.retention.hours=12 </span><br><span class="line">log.flush.interval.messages=20000</span><br><span class="line">#消息体的最大大小，单位是字节</span><br><span class="line">log.segment.bytes=1073741824  </span><br><span class="line">#定期检查segment文件有没有达到1G（单位毫秒）</span><br><span class="line">log.retention.check.interval.ms=120000 </span><br><span class="line">num.recovery.threads.per.data.dir=6</span><br><span class="line"></span><br><span class="line">#zookeeper集群的地址，可以是多个</span><br><span class="line">zookeeper.connect=hadoop4:2181,hadoop5:2181,hadoop6:2181</span><br><span class="line">zookeeper.connection.timeout.ms=6000</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ps：broker.id 记得修改且每一台机器不一样~</p>
</blockquote>
<h6 id="4-3-kafka内存启动"><a href="#4-3-kafka内存启动" class="headerlink" title="4.3.kafka内存启动"></a>4.3.kafka内存启动</h6><p>kafka节点默认需要的内存为1G，如果需要修改内存，可以修改kafka-server-start.sh的配置项。 <code>vi /data/kafka_test/kafka/bin/kafka-server-start.sh</code> #找到KAFKA_HEAP_OPTS配置项，例如修改如下：export KAFKA_HEAP_OPTS=”-Xmx2G -Xms2G” 默认如下图： <img src="http://qn.199604.com/typoraImg/image-20200712235921585.png" alt="image-20200712235921585"></p>
<h6 id="4-4启动停止kafka命令"><a href="#4-4启动停止kafka命令" class="headerlink" title="4.4启动停止kafka命令"></a>4.4启动停止kafka命令</h6><p>#启动kafka kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties #shell同时启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">ssh root@hadoop4 kafka-server-start.sh -daemon  $KAFKA_HOME/config/server.properties</span><br><span class="line">ssh root@hadoop5 kafka-server-start.sh -daemon  $KAFKA_HOME/config/server.properties</span><br><span class="line">ssh root@hadoop6 kafka-server-start.sh -daemon  $KAFKA_HOME/config/server.properties</span><br></pre></td></tr></table></figure>

<p>#停止kafka kafka-server-stop.sh #shell同时停止</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">ssh root@hadoop4 kafka-server-stop.sh</span><br><span class="line">ssh root@hadoop5 kafka-server-stop.sh</span><br><span class="line">ssh root@hadoop6 kafka-server-stop.sh</span><br></pre></td></tr></table></figure>

<h5 id="5-创建测试topic"><a href="#5-创建测试topic" class="headerlink" title="5.创建测试topic"></a>5.创建测试topic</h5><p>创建32分区、2备份</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kafka-topics.sh --create --zookeeper hadoop4:2181 --topic TEST_JS --replication-factor 2 --partitions 32</span><br></pre></td></tr></table></figure>

<p>常用命令：</p>
<p>1.展示topic</p>
<p>kafka-topics.sh –list –zookeeper hadoop4:2181</p>
<p>2.创建topic</p>
<p>kafka-topics.sh –create –zookeeper hadoop4:2181,hadoop5:2181,hadoop6:2181 –replication-factor 1 –partitions 1 –topic topic_name</p>
<p>3.查看描述topic</p>
<p>kafka-topics.sh –describe –zookeeper hadoop4:2181,hadoop5:2181,hadoop6:2181 –topic topic_name</p>
<p>4.生产者发送消息</p>
<p>kafka-console-producer.sh –broker-list hadoop5:9092 –topic topic_name</p>
<p>5.消费者消费消息</p>
<p>kafka-console-consumer.sh –bootstrap-server hadoop4:9092,hadoop5:9092,hadoop6:9092 –topic topic_name</p>
<p>6.删除topic</p>
<p>kafka-topics.sh –delete –topic topic_name –zookeeper hadoop4:2181,hadoop5:2181,hadoop6:2181</p>
<p>7.查看每分区consumer_offsets（可以连接到的消费主机）</p>
<p>kafka-topics.sh –describe –zookeeper hadoop4:2181,hadoop5:2181,hadoop6:2181 –topic __consumer_offsets</p>
]]></content>
      <categories>
        <category>kafka集群</category>
        <category>zookeeper</category>
      </categories>
      <tags>
        <tag>kafka</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos迁移MySql目录</title>
    <url>/1702/</url>
    <content><![CDATA[<p>因为测试环境mysql是使用yum安装的，默认目录是在/var/lib/mysql下，而/var归属/盘 只有50G，空间满后mysql就GG了，网上迁移mysql的教程大多是转移目录，修改配置文件，这种方法会因为系统版本、mysql版本差异导致各种启动不了.</p>
<p>下面先避免这些问题，我直接用软链迁移</p>
<h5 id="1-停止mysql（千万不要用kill）"><a href="#1-停止mysql（千万不要用kill）" class="headerlink" title="1.停止mysql（千万不要用kill）"></a>1.停止mysql（千万不要用kill）</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service mysql status #先看mysql运行状态，如果运行进行stop</span><br><span class="line">service mysql stop</span><br><span class="line">ps -efgrep mysqld  #查看进程是否完全停止，一定要等正常停止后再迁移，千万不要kill关闭mysql</span><br></pre></td></tr></table></figure>

<h5 id="2-迁移mysql目录，设置软连接"><a href="#2-迁移mysql目录，设置软连接" class="headerlink" title="2.迁移mysql目录，设置软连接"></a>2.迁移mysql目录，设置软连接</h5><p>记得看一下迁移前的权限和迁移后的目录权限是否正确，如果权限不一致mysql也会启动不了 若不一致执行：chown -R mysql:mysql /data/mysql_data/mysql</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv /var/lib/mysql /data/mysql_data/</span><br><span class="line"></span><br><span class="line">ln -s /data/mysql_data/mysql /var/lib/mysql #设置软连接</span><br></pre></td></tr></table></figure>

<h5 id="3-重新启动mysql"><a href="#3-重新启动mysql" class="headerlink" title="3.重新启动mysql"></a>3.重新启动mysql</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>clickhouse单机安装及配置--Centos7</title>
    <url>/1734/</url>
    <content><![CDATA[<h4 id="一、操作系统要求："><a href="#一、操作系统要求：" class="headerlink" title="一、操作系统要求："></a><strong>一、操作系统要求：</strong></h4><p>只要是Linux，64位都可以</p>
<p>rpm包下载地址：</p>
<p><a href="https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/">https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/</a></p>
<p>具体安装详情看官网：</p>
<p><a href="https://clickhouse.tech/docs/zh/getting-started/install/#from-sources">https://clickhouse.tech/docs/zh/getting-started/install/#from-sources</a></p>
<p><strong>CPU要求：</strong></p>
<p>机器的CPU必须支持SSE 4.2指令集</p>
<p>检测机器的cpu是否支持：</p>
<p><strong>检测命令：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -q sse4_2 /proc/cpuinfo &amp;&amp; echo “SSE 4.2 supported”  echo “SSE 4.2 not supported”</span><br></pre></td></tr></table></figure>

<h4 id="二、离线安装部署单机版"><a href="#二、离线安装部署单机版" class="headerlink" title="二、离线安装部署单机版"></a><strong>二、离线安装部署单机版</strong></h4><h5 id="1-下载对应操作系统版本的ClickHouse对应版本的rpm包"><a href="#1-下载对应操作系统版本的ClickHouse对应版本的rpm包" class="headerlink" title="1. 下载对应操作系统版本的ClickHouse对应版本的rpm包"></a><strong>1. 下载对应操作系统版本的ClickHouse对应版本的rpm包</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clickhouse-client-21.4.5.46-2.noarch.rpm</span><br><span class="line">clickhouse-common-static-21.4.5.46-2.x86_64.rpm</span><br><span class="line">clickhouse-common-static-dbg-21.4.5.46-2.x86_64.rpm</span><br><span class="line">clickhouse-server-21.4.5.46-2.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>ps：我用上述的rpm包在centos也可安装成功,所以具体怎么选自个选–&gt; Clickhouse官方并没有提供centos的rpm包,我们可以使Altinity公司所提供的rpm包 下载地址:<a href="https://packagecloud.io/Altinity/clickhouse">https://packagecloud.io/Altinity/clickhouse</a></p>
<h5 id="2-配置Linux相关环境设置系统参数"><a href="#2-配置Linux相关环境设置系统参数" class="headerlink" title="2. 配置Linux相关环境设置系统参数"></a>2. 配置Linux相关环境设置系统参数</h5><h6 id="2-1-CentOS取消打开文件数限制"><a href="#2-1-CentOS取消打开文件数限制" class="headerlink" title="2.1 CentOS取消打开文件数限制"></a><strong>2.1 CentOS取消打开文件数限制</strong></h6><p>#修改 vi /etc/security/limits.conf 在最后增加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#增加：</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 65536</span><br><span class="line">* soft nproc 131072</span><br><span class="line">* hard nproc 131072</span><br></pre></td></tr></table></figure>

<p>注意： <strong>对于RedHat6.x/CENTOS 6.X系统，还需要将vi /etc/security/limits.d/90-nproc.conf文件中的1024修改为131072。</strong> <em>*对于RedHat7.x/CENTOS 7.X系统，还需要将vi 录vi /etc/security/limits.d/20-nproc.conf文件中的4096修改为131072。</em></p>
<h6 id="2-2-CentOS取消SELINUX"><a href="#2-2-CentOS取消SELINUX" class="headerlink" title="2.2 CentOS取消SELINUX"></a><strong>2.2 CentOS取消SELINUX</strong></h6><p>vi /etc/sysconfig/selinux #找到<strong>SELINUX</strong>修改： SELINUX=disabled</p>
<h6 id="2-3-关闭防火墙"><a href="#2-3-关闭防火墙" class="headerlink" title="2.3 关闭防火墙"></a><strong>2.3 关闭防火墙</strong></h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#contos7:</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line">#contos7以下:</span><br><span class="line">service iptables stop</span><br><span class="line">service iptables status</span><br><span class="line">chkconfig iptables off(永久性生效，重启后不会复原)</span><br><span class="line">#service iptables stop(即时生效，重启后复原)</span><br></pre></td></tr></table></figure>

<h6 id="2-4-安装ClickHouse相关依赖包"><a href="#2-4-安装ClickHouse相关依赖包" class="headerlink" title="2.4 安装ClickHouse相关依赖包"></a><strong>2.4 安装ClickHouse相关依赖包</strong></h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install expect</span><br><span class="line">yum install -y perl perl-devel autoconf libaio libtool libicu</span><br><span class="line">yum install -y *unixODBC*</span><br></pre></td></tr></table></figure>

<h5 id="3-sftp到安装部署的服务器安装部署"><a href="#3-sftp到安装部署的服务器安装部署" class="headerlink" title="3. sftp到安装部署的服务器安装部署"></a><strong>3. sftp到安装部署的服务器安装部署</strong></h5><p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh clickhouse-\*</span><br></pre></td></tr></table></figure>

<h5 id="4-ClickHouse安装后的重要的目录解析"><a href="#4-ClickHouse安装后的重要的目录解析" class="headerlink" title="4. ClickHouse安装后的重要的目录解析"></a>4. <strong>ClickHouse安装后的重要的目录解析</strong></h5><ul>
<li>  /etc/clickhouse-server 服务配置文件目录，主要有config.xml，users.xml服务配置文件</li>
<li>  /etc/clickclient 客户端配置文件目录</li>
<li>  /var/lib/clickhouse 默认数据目录</li>
<li>  /var/log/clickhouse-server 日志目录</li>
<li>  /etc/init.d/clickhouse-server ClickHouse服务shell脚本文件</li>
<li>  /etc/security/limits.d/clickhouse.conf 最大文件打开数</li>
<li>  /etc/cron.d/clickhouse-server 定时服务配置</li>
<li>  /usr/bin 主程序可执行文件目录</li>
</ul>
<p> </p>
<h5 id="5-修改ClickHouse服务相关参数配置"><a href="#5-修改ClickHouse服务相关参数配置" class="headerlink" title="5. 修改ClickHouse服务相关参数配置"></a>5. <strong>修改ClickHouse服务相关参数配置</strong></h5><p>vi /etc/clickhouse-server/config.xml 5.1 <strong>开放远程访问</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#放开下面这项注释</span><br><span class="line"><span class="comment">&lt;!-- Listen specified host. use :: (wildcard IPv6 address), if you want to accept connections both with IPv4 and IPv6 from everywhere. --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">listen_host</span>&gt;</span>::<span class="tag">&lt;/<span class="name">listen_host</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>5.2 <strong>设置日志生成目录</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>trace<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log</span>&gt;</span>/data1/clickhouse/logs/clickhouse-server.log<span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">errorlog</span>&gt;</span>/data1/clickhouse/logsr/clickhouse-server.err.log<span class="tag">&lt;/<span class="name">errorlog</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">size</span>&gt;</span>1000M<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">count</span>&gt;</span>10<span class="tag">&lt;/<span class="name">count</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>5.3 <strong>设置数据的目录</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Path to data directory, with trailing slash. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span>&gt;</span>/data1/clickhouse/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Path to temporary data for processing hard queries. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tmp_path</span>&gt;</span>/data1/clickhouse/tmp/<span class="tag">&lt;/<span class="name">tmp_path</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Policy from the &lt;storage_configuration&gt; for the temporary files.</span></span><br><span class="line"><span class="comment">     If not set &lt;tmp_path&gt; is used, otherwise &lt;tmp_path&gt; is ignored.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     Notes:</span></span><br><span class="line"><span class="comment">     - move_factor              is ignored</span></span><br><span class="line"><span class="comment">     - keep_free_space_bytes    is ignored</span></span><br><span class="line"><span class="comment">     - max_data_part_size_bytes is ignored</span></span><br><span class="line"><span class="comment">     - you must have exactly one volume in that policy</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;tmp_policy&gt;tmp&lt;/tmp_policy&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Directory with user provided files that are accessible by &#x27;file&#x27; table function. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user_files_path</span>&gt;</span>/data1/clickhouse/user_files/<span class="tag">&lt;/<span class="name">user_files_path</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>5.4 <strong>配置时间</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;timezone&gt;Asia/Shanghai&lt;/timezone&gt;</span><br></pre></td></tr></table></figure>

<h5 id="6-启动："><a href="#6-启动：" class="headerlink" title="6. 启动："></a>6. 启动：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup /usr/bin/clickhouse-server -C=/etc/clickhouse-server/config.xml --pid-file=/etc/clickhouse-server/clickhouse-server.pid &amp;</span><br></pre></td></tr></table></figure>

<p>检查线程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -efgrep click</span><br></pre></td></tr></table></figure>

<h5 id="7-验证客户端"><a href="#7-验证客户端" class="headerlink" title="7.验证客户端"></a>7.验证客户端</h5><p>配置完之后，便可使用如下命令访问该数据库。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clickhouse-client --host 127.0.0.1 --port 9000</span><br><span class="line">clickhouse-client</span><br><span class="line">clickhouse-client --host hostname --port 9000</span><br></pre></td></tr></table></figure>

<p>注意：以上命令中的某个可能会出现如下错误。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ClickHouse client version 20.4.1.1.</span><br><span class="line">Connecting to localhost:9000 as user default.</span><br><span class="line">Code: 210. DB::NetException: Connection refused (localhost:9000)</span><br></pre></td></tr></table></figure>

<ol>
<li> 如果检查节点端口未开放，则可能是clickhouse-server启动的错误。</li>
<li> 如果检查节点端口已经开放，则可能是–host后边加的参数的问题，试一下localhose、127.0.0.1等。</li>
</ol>
<p>下面是成功访问：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[zhicheng@wydsj-gpapp04 ~]$ clickhouse-client --host 127.0.0.1 --port 9000</span><br><span class="line">ClickHouse client version 21.4.5.46 (official build).</span><br><span class="line">Connecting to 127.0.0.1:9000 as user default.</span><br><span class="line">Connected to ClickHouse server version 21.4.5 revision 54447.</span><br><span class="line"></span><br><span class="line">wydsj-gpapp04.novalocal :) select now();</span><br><span class="line"></span><br><span class="line">SELECT now()</span><br><span class="line"></span><br><span class="line">Query id: 937aaacc-fc74-42b8-8dce-b9577bce34b3</span><br><span class="line"></span><br><span class="line">┌───────────────now()─┐</span><br><span class="line">│ 2021-05-18 18:51:13 │</span><br><span class="line">└─────────────────────┘</span><br><span class="line"></span><br><span class="line">1 rows in set. Elapsed: 0.010 sec. </span><br><span class="line"></span><br><span class="line">wydsj-gpapp04.novalocal :) </span><br></pre></td></tr></table></figure>

<h5 id="8-设置默认账户密码"><a href="#8-设置默认账户密码" class="headerlink" title="8.设置默认账户密码"></a>8.设置默认账户密码</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#用户相关配置在/etc/clickhouse-server/users.xml文件中设置</span><br><span class="line">vi /etc/clickhouse-server/users.xml</span><br><span class="line"></span><br><span class="line">#找到users &gt;&gt;default标签下面的password项，配置密码为123456</span><br><span class="line">&lt;password&gt;123456&lt;/password&gt;</span><br><span class="line"></span><br><span class="line"># 重启服务</span><br><span class="line"></span><br><span class="line"># 验证 ，替换具体IP</span><br><span class="line">clickhouse-client -h 127.0.0.1 --port 9000  -u default --password &quot;123456&quot;</span><br><span class="line">#出现一下说明配置成功</span><br><span class="line">ClickHouse client version 21.4.5.46 (official build).</span><br><span class="line">Connecting to 127.0.0.1:9000 as user default.</span><br><span class="line">Connected to ClickHouse server version 21.4.5 revision 54447.</span><br></pre></td></tr></table></figure>

<h6 id="新增账户密码"><a href="#新增账户密码" class="headerlink" title="新增账户密码"></a>新增账户密码</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/clickhouse-server/users.xml</span><br><span class="line"></span><br><span class="line">#找到users标签，在下面增加一下内容，用户名为test，配置密码为123456</span><br><span class="line">&lt;test&gt;</span><br><span class="line">    &lt;password&gt;123456&lt;/password&gt;</span><br><span class="line">    &lt;networks incl=&quot;networks&quot; replace=&quot;replace&quot;&gt;</span><br><span class="line">    &lt;ip&gt;::/0&lt;/ip&gt;</span><br><span class="line">    &lt;/networks&gt;</span><br><span class="line">    &lt;profile&gt;default&lt;/profile&gt;</span><br><span class="line">    &lt;quota&gt;default&lt;/quota&gt;</span><br><span class="line">&lt;/test&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>clickhouse</category>
      </categories>
      <tags>
        <tag>centos7</tag>
        <tag>clickhouse</tag>
      </tags>
  </entry>
  <entry>
    <title>Component, Repository, Service,Controller的区别</title>
    <url>/1692/</url>
    <content><![CDATA[<p>相同点:</p>
<p><code>@Component</code>为<code>@Service</code>、<code>@Controller</code>、<code>@Repository</code>的元注解,四个实现功能是一样的</p>
<p>不同点为区分业务层:</p>
<p>1.<code>@Component</code> 业务特殊组件层,如handler类<br>2.<code>@Controller</code> 业务控制层<br>3.<code>@Service</code> 业务逻辑层<br>4.<code>@Repository</code> 业务资源层</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><code>@Component</code>, <code>@Service</code>, <code>@Controller</code>, <code>@Repository</code>是spring注解，注解后可以被spring框架所扫描并注入到spring容器来进行管理<br><code>@Component</code>是通用注解，其他三个注解是这个注解的拓展，并且具有了特定的功能<br><code>@Repository</code>注解在持久层中，具有将数据库操作抛出的原生异常翻译转化为spring的持久层异常的功能。<br><code>@Controller</code>层是spring-mvc的注解，具有将请求进行转发，重定向的功能。<br><code>@Service</code>层是业务逻辑层注解，这个注解只是标注该类处于业务逻辑层。<br>用这些注解对应用进行分层之后，就能将请求处理，义务逻辑处理，数据库操作处理分离出来，为代码解耦，也方便了以后项目的维护和开发。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>css样式</title>
    <url>/461/</url>
    <content><![CDATA[<p>字体属性：(font)</p>
<p>大小 {font-size: x-large;}(特大) xx-small;(极小) 一般中文用不到，只要用数值就可以，单位：PX、PD</p>
<p>样式 {font-style: oblique;}(偏斜体) italic;(斜体) normal;(正常)</p>
<p>行高 {line-height: normal;}(正常) 单位：PX、PD、EM</p>
<p>粗细 {font-weight: bold;}(粗体) lighter;(细体) normal;(正常)</p>
<p>变体 {font-variant: small-caps;}(小型大写字母) normal;(正常)</p>
<p>大小写 {text-transform: capitalize;}(首字母大写) uppercase;(大写) lowercase;(小写) none;(无)</p>
<p>修饰 {text-decoration: underline;}(下划线) overline;(上划线) line-through;(删除线) blink;(闪烁)</p>
<p>常用字体： (font-family)</p>
<p>“Courier New”, Courier, monospace, “Times New Roman”, Times, serif, Arial, Helvetica, sans-serif, Verdana</p>
<p>背景属性： (background)</p>
<p>色彩 {background-color: #FFFFFF;}</p>
<p>图片 {background-image: url();}</p>
<p>重复 {background-repeat: no-repeat;}</p>
<p>滚动 {background-attachment: fixed;}(固定) scroll;(滚动)</p>
<p>位置 {background-position: left;}(水平) top(垂直);</p>
<p>简写方法 {background:#000 url(..) repeat fixed left top;} /*简写?这个在阅读代码中经常出现，要认真的研究*/</p>
<p>区块属性： (Block) /*这个属性第一次认识，要多多研究*/</p>
<p>字间距 {letter-spacing: normal;} 数值 /*这个属性似乎有用，多实践下*/</p>
<p>对齐 {text-align: justify;}(两端对齐) left;(左对齐) right;(右对齐) center;(居中)</p>
<p>缩进 {text-indent: 数值px;}</p>
<p>垂直对齐 {vertical-align: baseline;}(基线) sub;(下标) super;(下标) top; text-top; middle; bottom; text-bottom;</p>
<p>词间距word-spacing: normal; 数值</p>
<p>空格white-space: pre;(保留) nowrap;(不换行)</p>
<p>显示 {display:block;}(块) inline;(内嵌) list-item;(列表项) run-in;(追加部分) compact;(紧凑) marker;(标记) table; inline-table; table-raw-group; table-header-group; table-footer-group; table-raw; table-column-group; table-column; table-cell; table-caption;(表格标题) /*display 属性的了解很模糊*/</p>
<p>方框属性： (Box)</p>
<p>width:; height:; float:; clear:both; margin:; padding:; 顺序：上右下左</p>
<p>边框属性： (Border)</p>
<p>border-style: dotted;(点线) dashed;(虚线) solid; double;(双线) groove;(槽线) ridge;(脊状) inset;(凹陷) outset;</p>
<p>border-width:; 边框宽度</p>
<p>border-color:#;</p>
<p>简写方法border：width style color; /*简写*/</p>
<p>列表属性： (List-style)</p>
<p>类型list-style-type: disc;(圆点) circle;(圆圈) square;(方块) decimal;(数字) lower-roman;(小罗码数字) upper-roman; lower-alpha; upper-alpha;</p>
<p>位置list-style-position: outside;(外) inside;</p>
<p>图像list-style-image: url(..);</p>
<p>定位属性： (Position)</p>
<p>Position: absolute; relative; static;</p>
<p>visibility: inherit; visible; hidden;</p>
<p>overflow: visible; hidden; scroll; auto;</p>
<p>clip: rect(12px,auto,12px,auto) (裁切)</p>
<p>css属性代码大全</p>
<p>一 CSS文字属性：</p>
<p>color : #999999; /*文字颜色*/</p>
<p>font-family : 宋体,sans-serif; /*文字字体*/</p>
<p>font-size : 9pt; /*文字大小*/</p>
<p>font-style:itelic; /*文字斜体*/</p>
<p>font-variant:small-caps; /*小字体*/</p>
<p>letter-spacing : 1pt; /*字间距离*/</p>
<p>line-height : 200%; /*设置行高*/</p>
<p>font-weight:bold; /*文字粗体*/</p>
<p>vertical-align:sub; /*下标字*/</p>
<p>vertical-align:super; /*上标字*/</p>
<p>text-decoration:line-through; /*加删除线*/</p>
<p>text-decoration: overline; /*加顶线*/</p>
<p>text-decoration:underline; /*加下划线*/</p>
<p>text-decoration:none; /*删除链接下划线*/</p>
<p>text-transform : capitalize; /*首字大写*/</p>
<p>text-transform : uppercase; /*英文大写*/</p>
<p>text-transform : lowercase; /*英文小写*/</p>
<p>text-align:right; /*文字右对齐*/</p>
<p>text-align:left; /*文字左对齐*/</p>
<p>text-align:center; /*文字居中对齐*/</p>
<p>text-align:justify; /*文字分散对齐*/</p>
<p>vertical-align属性</p>
<p>vertical-align:top; /*垂直向上对齐*/</p>
<p>vertical-align:bottom; /*垂直向下对齐*/</p>
<p>vertical-align:middle; /*垂直居中对齐*/</p>
<p>vertical-align:text-top; /*文字垂直向上对齐*/</p>
<p>vertical-align:text-bottom; /*文字垂直向下对齐*/</p>
<p>二、CSS边框空白</p>
<p>padding-top:10px; /*上边框留空白*/</p>
<p>padding-right:10px; /*右边框留空白*/</p>
<p>padding-bottom:10px; /*下边框留空白*/</p>
<p>padding-left:10px; /*左边框留空白</p>
<p>三、CSS符号属性：</p>
<p>list-style-type:none; /*不编号*/</p>
<p>list-style-type:decimal; /*阿拉伯数字*/</p>
<p>list-style-type:lower-roman; /*小写罗马数字*/</p>
<p>list-style-type:upper-roman; /*大写罗马数字*/</p>
<p>list-style-type:lower-alpha; /*小写英文字母*/</p>
<p>list-style-type:upper-alpha; /*大写英文字母*/</p>
<p>list-style-type:disc; /*实心圆形符号*/</p>
<p>list-style-type:circle; /*空心圆形符号*/</p>
<p>list-style-type:square; /*实心方形符号*/</p>
<p>list-style-image:url(/dot.gif); /*图片式符号*/</p>
<p>list-style-position: outside; /*凸排*/</p>
<p>list-style-position:inside; /*缩进*/</p>
<p>四、CSS背景样式：</p>
<p>background-color:#F5E2EC; /*背景颜色*/</p>
<p>background:transparent; /*透视背景*/</p>
<p>background-image : url(/image/bg.gif); /*背景图片*/</p>
<p>background-attachment : fixed; /*浮水印固定背景*/</p>
<p>background-repeat : repeat; /*重复排列-网页默认*/</p>
<p>background-repeat : no-repeat; /*不重复排列*/</p>
<p>background-repeat : repeat-x; /*在x轴重复排列*/</p>
<p>background-repeat : repeat-y; /*在y轴重复排列*/</p>
<p>指定背景位置</p>
<p>background-position : 90% 90%; /*背景图片x与y轴的位置*/</p>
<p>background-position : top; /*向上对齐*/</p>
<p>background-position : buttom; /*向下对齐*/</p>
<p>background-position : left; /*向左对齐*/</p>
<p>background-position : right; /*向右对齐*/</p>
<p>background-position : center; /*居中对齐*/</p>
<p>五、CSS连接属性：</p>
<p>a /*所有超链接*/</p>
<p>a:link /*超链接文字格式*/</p>
<p>a:visited /*浏览过的链接文字格式*/</p>
<p>a:active /*按下链接的格式*/</p>
<p>a:hover /*鼠标转到链接*/</p>
<p>鼠标光标样式：</p>
<p>链接手指 CURSOR: hand</p>
<p>十字体 cursor:crosshair</p>
<p>箭头朝下 cursor:s-resize</p>
<p>十字箭头 cursor:move</p>
<p>箭头朝右 cursor:move</p>
<p>加一问号 cursor:help</p>
<p>箭头朝左 cursor:w-resize</p>
<p>箭头朝上 cursor:n-resize</p>
<p>箭头朝右上 cursor:ne-resize</p>
<p>箭头朝左上 cursor:nw-resize</p>
<p>文字I型 cursor:text</p>
<p>箭头斜右下 cursor:se-resize</p>
<p>箭头斜左下 cursor:sw-resize</p>
<p>漏斗 cursor:wait</p>
<p>光标图案(IE6) p {cursor:url(“光标文件名.cur”),text;}</p>
<p>六、CSS框线一览表：</p>
<p>border-top : 1px solid #6699cc; /*上框线*/</p>
<p>border-bottom : 1px solid #6699cc; /*下框线*/</p>
<p>border-left : 1px solid #6699cc; /*左框线*/</p>
<p>border-right : 1px solid #6699cc; /*右框线*/</p>
<p>以上是建议书写方式,但也可以使用常规的方式 如下:</p>
<p>border-top-color : #369 /*设置上框线top颜色*/</p>
<p>border-top-width :1px /*设置上框线top宽度*/</p>
<p>border-top-style : solid/*设置上框线top样式*/</p>
<p>其他框线样式</p>
<p>solid /*实线框*/</p>
<p>dotted /*虚线框*/</p>
<p>double /*双线框*/</p>
<p>groove /*立体内凸框*/</p>
<p>ridge /*立体浮雕框*/</p>
<p>inset /*凹框*/</p>
<p>outset /*凸框*/</p>
<p>七、CSS表单运用：</p>
<p>文字方块</p>
<p>按钮</p>
<p>复选框</p>
<p>选择钮</p>
<p>多行文字方块</p>
<p>下拉式菜单 选项1选项2</p>
<p>八、CSS边界样式：</p>
<p>margin-top:10px; /*上边界*/</p>
<p>margin-right:10px; /*右边界值*/</p>
<p>margin-bottom:10px; /*下边界值*/</p>
<p>margin-left:10px; /*左边界值*/</p>
<p>CSS 属性： 字体样式(Font Style)</p>
<p>序号 中文说明 标记语法</p>
<p>1 字体样式 {font:font-style font-variant font-weight font-size font-family}</p>
<p>2 字体类型 {font-family:”字体1”,”字体2”,”字体3”,…}</p>
<p>3 字体大小 {font-size:数值inherit medium large larger x-large xx-large small smaller x-small xx-small}</p>
<p>4 字体风格 {font-style:inherititalicnormaloblique}</p>
<p>5 字体粗细 {font-weight:100-900boldbolderlighternormal;}</p>
<p>6 字体颜色 {color:数值;}</p>
<p>7 阴影颜色 {text-shadow:16位色值}</p>
<p>8 字体行高 {line-height:数值inheritnormal;}</p>
<p>9 字 间 距 {letter-spacing:数值inheritnormal}</p>
<p>10 单词间距 {word-spacing:数值inheritnormal}</p>
<p>11 字体变形 {font-variant:inheritnormalsmall-cps }</p>
<p>12 英文转换 {text-transform:inheritnonecapitalizeuppercaselowercase}</p>
<p>13 字体变形 {font-size-adjust:inheritnone}</p>
<p>14 字体 {font-stretch:condensedexpandedextra-condensedextra-expandedinheritnarrowernormal semi-condensedsemi-expandedultra-condensedultra-expandedwider}</p>
<p>文本样式(Text Style)</p>
<p>序号 中文说明 标记语法</p>
<p>1 行 间 距 {line-height:数值inheritnormal;}</p>
<p>2 文本修饰 {text-decoration:inheritnoneunderlineoverlineline-throughblink}</p>
<p>3 段首空格 {text-indent:数值inherit}</p>
<p>4 水平对齐 {text-align:leftrightcenterjustify}</p>
<p>5 垂直对齐 {vertical-align:inherittopbottomtext-toptext-bottombaselinemiddlesubsuper}</p>
<p>6 书写方式 {writing-mode:lr-tbtb-rl}</p>
<p>背景样式</p>
<p>序号 中文说明 标记语法</p>
<p>1 背景颜色 {background-color:数值}</p>
<p>2 背景图片 {background-image: url(URL)none}</p>
<p>3 背景重复 {background-repeat:inheritno-repeatrepeatrepeat-xrepeat-y}</p>
<p>4 背景固定 {background-attachment:fixedscroll}</p>
<p>5 背景定位 {background-position:数值topbottomleftrightcenter}</p>
<p>6 背影样式 {background:背景颜色背景图象背景重复背景附件背景位置}</p>
<p>框架样式(Box Style)</p>
<p>序号 中文说明 标记语法</p>
<p>1 边界留白 {margin:margin-top margin-right margin-bottom margin-left}</p>
<p>2 补　　白 {padding:padding-top padding-right padding-bottom padding-left}</p>
<p>3 边框宽度 {border-width:border-top-width border-right-width border-bottom-width border-left-width}</p>
<p>宽度值： thinmediumthick数值</p>
<p>4 边框颜色 {border-color:数值 数值 数值 数值}　　数值：分别代表top、right、bottom、left颜色值</p>
<p>5 边框风格 {border-style:nonehiddeninheritdashedsoliddoubleinsetoutsetridgegroove}</p>
<p>6 边　　框 {border:border-width border-style color}</p>
<p>上 边 框 {border-top:border-top-width border-style color}</p>
<p>右 边 框 {border-right:border-right-width border-style color}</p>
<p>下 边 框 {border-bottom:border-bottom-width border-style color}</p>
<p>左 边 框 {border-left:border-left-width border-style color}</p>
<p>7 宽　　度 {width:长度百分比 auto}</p>
<p>8 高　　度 {height:数值auto}</p>
<p>9 漂　　浮 {float:leftrightnone}</p>
<p>10 清　　除 {clear:noneleftrightboth}</p>
<p><strong>分类列表</strong></p>
<p>序号 中文说明 标记语法</p>
<p>1 控制显示 {display:noneblockinlinelist-item}</p>
<p>2 控制空白 {white-space:normalprenowarp}</p>
<p>3 符号列表 {list-style-type:disccirclesquaredecimallower-romanupper-romanlower-alphaupper-alphanone}</p>
<p>4 图形列表 {list-style-image:URL}</p>
<p>5 位置列表 {list-style-position:insideoutside}</p>
<p>6 目录列表 {list-style:目录样式类型目录样式位置url}</p>
<p>7 鼠标形状 {cursor:handcrosshairtextwaitmovehelpe-resizenw-resizew-resizes-resizese-resizesw-resize}</p>
<p>-———————————————————————————————————–</p>
<p><strong>HTML代码在这：<a href="http://199604.com/?post=80">点击地址</a></strong></p>
]]></content>
      <categories>
        <category>分享资讯</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>css的特殊性/重要性</title>
    <url>/287/</url>
    <content><![CDATA[<p>特殊性</p>
<p>有的时候我们为同一个元素设置了不同的CSS样式代码，那么元素会启用哪一个CSS样式呢?我们来看一下面的代码：</p>
<p>p{color:red;}<br>.first{color:green;}</p>
<p>三年级时，我还是一个胆小如鼠的小女孩。</p>
<p>p和.first都匹配到了p这个标签上，那么会显示哪种颜色呢？green是正确的颜色，那么为什么呢？是因为浏览器是根据权值来判断使用哪种css样式的，权值高的就使用哪种css样式。</p>
<p>下面是权值的规则：</p>
<p><strong>标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。</strong>例如下面的代码：</p>
<p>p{color:red;} <strong>/*权值为1*/</strong> p span{color:green;} <strong>/*权值为1+1=2*/</strong> .warning{color:white;} <strong>/*权值为10*/</strong> p span.warning{color:purple;} <strong>/*权值为1+1+10=12*/</strong> #footer .note p{color:yellow;} <strong>/*权值为100+10+1=111*/</strong></p>
<p><strong>注意：还有一个权值比较特殊–继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低。</strong></p>
<h2 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a><strong>重要性</strong></h2><p>**</p>
<p>我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用**!important**来解决。</p>
<p>如下代码：</p>
<p>p{color:red**!important**;}<br>p{color:green;}</p>
<p>三年级时，我还是一个胆小如鼠的小女孩。</p>
<p>这时 p 段落中的文本会显示的red红色。</p>
<p><strong>注意：!important要写在分号的前面</strong></p>
<p>这里注意当网页制作者不设置css样式时，浏览器会按照自己的一套样式来显示网页。并且用户也可以在浏览器中设置自己习惯的样式，比如有的用户习惯把字号设置为大一些，使其查看网页的文本更加清楚。这时注意样式优先级为：<strong>浏览器默认的样式 &lt; 网页制作者样式 &lt; 用户自己设置的样式</strong>，但记住!important优先级样式是个例外，权值高于用户自己设置的样式。</p>
<p>**</p>
<p>]]&gt;</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>eclipse设置默认编码为Utf-8</title>
    <url>/775/</url>
    <content><![CDATA[<p>需要设置的几处地方为：</p>
<p>Window-&gt;Preferences-&gt;General -&gt;Content Type-&gt;Text-&gt;JSP 最下面设置为UTF-8</p>
<p>Window-&gt;Preferences-&gt;General-&gt;Workspace ? 面板Text file encoding 选择UTF-8</p>
<p>Window-&gt;Preferences-&gt;Web-&gt;JSP Files 面板选择 ISO 10646/Unicode(UTF-8)</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>eclipse中运行maven命令没有反应，console也不出现信息</title>
    <url>/704/</url>
    <content><![CDATA[<p>eclipse的maven项目中，在run as/Debug as 执行maven命令的时候发现毫无反应，console也不打印信息</p>
<p>原因是因为没有传参数，解决办法如下：</p>
<p>1.打开eclipse的window菜单：Preferences –&gt;?Java?–&gt; Installed JREs</p>
<p>2.选择编辑installed JREs</p>
<p><img src="http://qn.199604.com/typoraImg/20171011133415.png" alt="img"></p>
<p>3.在Default VM arguments行加入下面的值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-Dmaven.multiModuleProjectDirectory=$M2_HOME</span><br></pre></td></tr></table></figure>

<p>其中$M2_HOME是在系统配置的maven的环境变量</p>
<hr>
<p>2、常用maven命令</p>
<p>clean：清除目标目录中的生成结果。</p>
<p>generate-sources：开发环境与代码分离，很少使用，执行这个命令可以通过查看.classpath和.project两个文件来查看变化。</p>
<p>install：在本地库中安装jar test：运行项目中的单元测试</p>
<p>package：根据项目生成jar文件</p>
<p>tomcat*:run：启动tomcat，前提是在项目的pom.xml文件中添加了tomcat插件</p>
<p>eclipse:eclipse：生成Eclipse项目文件，即.classpath和.project文件</p>
<p>compile：编译源代码</p>
<p>dependency:sources：下载项目依赖的jar包的源码包</p>
<p>全名解析命令 <a href="http://www.cnblogs.com/wkrbky/p/6352188.html">http://www.cnblogs.com/wkrbky/p/6352188.html</a></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>emlog主机空间转移</title>
    <url>/320/</url>
    <content><![CDATA[<p>方法一:</p>
<p>1、数据备份：备份旧的博客的数据库和全部文件，emlog后台-&gt;数据-&gt;数据备份；下载content目录下所有内容。</p>
<p>2、新空间或者主机：安装和旧空间同样版本emlog，保证数据库前缀和现在的一样。</p>
<p>3、导入数据：把第一步备份的数据库文件通过emlog后台导入到新的emlog里，emlog后台-&gt;数据-&gt;数据导入。</p>
<p>4、导入content目录：把第一步备份的content目录下的内容上传到新空间覆盖。</p>
<p>5、更新缓存：登录到新的博客后台，数据-&gt;更新缓存，空间转移完成。</p>
<p>方法二:</p>
<p>1、数据备份：备份旧的博客的数据库和全部文件，emlog后台-&gt;数据-&gt;数据备份；下载根目录下所有内容。</p>
<p>2、新空间或者主机：把根目录下的所有文件上传。在把数据库上的文件也上传到新主机的数据库上。</p>
<p>3、修改文件:修改config.php的数据库名称，数据库用户账号密码。</p>
<p>4、更新缓存：登录到新的博客后台，数据-&gt;更新缓存，空间转移完成。</p>
<p><strong>本人建议使用第二种吧。因为第二种转移比较好。我也经常用这种办法的。</strong></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>Golang格式化时间yyyy-MM-dd</title>
    <url>/1715/</url>
    <content><![CDATA[<p><code>Golang</code>中并没有按照<code>yyyyMMdd</code>这样的格式，而是按照<code>2006-01-02 15:04:05</code>这个固定来格式化，分隔符可自定义。</p>
<ul>
<li>  <code>20060102</code>：得到的是<code>yyyyMMdd</code>。</li>
<li>  <code>2006/01/02 15:04</code>：得到的是<code>yyyy/MM/dd HH:mm</code></li>
<li>  <code>2006年01月02日 15点04分05秒</code>：得到的是<code>yyyy年MM月dd日 HH点mm分SS秒</code></li>
</ul>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">format :=<span class="string">&quot;2006-01-02 15:04:05&quot;</span></span><br><span class="line">parseTime, err := time.Parse(format,<span class="string">&quot;2021-04-15 16:38:01&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(parseTime)</span><br></pre></td></tr></table></figure>

<h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">now:=time.Now()</span><br><span class="line">fmt.Println(now)</span><br><span class="line">fmt.Printf(<span class="string">&quot;current time:%v\n&quot;</span>, now)</span><br><span class="line"></span><br><span class="line">year := now.Year()     <span class="comment">//年</span></span><br><span class="line">month := <span class="keyword">int</span>(now.Month())<span class="comment">//月</span></span><br><span class="line">day := now.Day()       <span class="comment">//日</span></span><br><span class="line">hour := now.Hour()     <span class="comment">//小时</span></span><br><span class="line">minute := now.Minute() <span class="comment">//分钟</span></span><br><span class="line">second := now.Second() <span class="comment">//秒</span></span><br><span class="line"></span><br><span class="line">timestamp1:=now.Unix()</span><br><span class="line">fmt.Println(year,month,day,hour,minute,second,timestamp1)</span><br><span class="line"></span><br><span class="line">layout := <span class="string">&quot;01&quot;</span></span><br><span class="line"></span><br><span class="line">formatTime := time.Now().Format(layout)</span><br><span class="line">fmt.Println(<span class="string">&quot;string: &quot;</span>, formatTime)</span><br><span class="line"></span><br><span class="line">layout1 := <span class="string">&quot;20060102150405&quot;</span></span><br><span class="line"></span><br><span class="line">formatTime1 := time.Now().Format(layout1)</span><br><span class="line">fmt.Println(<span class="string">&quot;string: &quot;</span>, formatTime1)</span><br></pre></td></tr></table></figure>

<h2 id="由来"><a href="#由来" class="headerlink" title="由来"></a>由来</h2><p><code>2006</code>为<code>Golang</code>诞生时间，<code>15</code>是下午<code>3</code>点。 帮助记忆的方法：<code>1</code>月<code>2</code>日<code>3</code>点<code>4</code>分<code>5</code>秒，<code>2006</code>年，<code>-7</code>时区，正好是<code>1234567</code>。</p>
]]></content>
      <categories>
        <category>Golang</category>
      </categories>
      <tags>
        <tag>go</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>GP&amp;CDH安装部署系列-1.NTP时钟同步</title>
    <url>/1561/</url>
    <content><![CDATA[<p>内网配置ntp实现时间同步 机器:</p>
<p>10.214.138.132(主)<br>10.214.138.133<br>10.214.138.134<br>10.214.138.135<br>10.214.138.136<br>10.214.138.137<br>10.214.138.138<br>10.214.138.139</p>
<h5 id="1-确认是否存在NTP"><a href="#1-确认是否存在NTP" class="headerlink" title="1.确认是否存在NTP"></a>1.确认是否存在NTP</h5><p>每台都需要安装，我这边用SecureCRT通过命令窗口，同时发送控制多个服务器</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm –qa  grep ntp</span><br><span class="line">---&gt;</span><br><span class="line">ntpdate<span class="literal">-4</span>.<span class="number">2.6</span>p5<span class="literal">-29</span>.el7.centos.x86_64</span><br><span class="line">ntp<span class="literal">-4</span>.<span class="number">2.6</span>p5<span class="literal">-29</span>.el7.centos.x86_64</span><br></pre></td></tr></table></figure>

<h5 id="2-删除已安装ntp"><a href="#2-删除已安装ntp" class="headerlink" title="2.删除已安装ntp"></a>2.删除已安装ntp</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps ntpdate-4.2.6p5-29.el7.centos.x86_64</span><br><span class="line">rpm -e --nodeps ntp-4.2.6p5-29.el7.centos.x86_64</span><br><span class="line">//检查是否还存在</span><br><span class="line">rpm -qa  grep ntp</span><br></pre></td></tr></table></figure>

<p>ps:如果是内网，则需要准备ntp rpm包–&gt; <a href="qq://txfile/#">http://rpm.pbone.net/</a> 我为了麻烦，部署的时候就没有删除原来安装的，所以第三步就剩了，因为还要把rpm传到内网服务器</p>
<h5 id="3-重新安装ntp"><a href="#3-重新安装ntp" class="headerlink" title="3.重新安装ntp"></a>3.重新安装ntp</h5><p>因为我是内网实现ntp时间同步，但是内网服务器这边我yum重新安装下载不了rpm，因为需要自己下载上传到服务器.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install ntp</span><br><span class="line">或者</span><br><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure>

<h5 id="4-NTP配置"><a href="#4-NTP配置" class="headerlink" title="4.NTP配置"></a>4.NTP配置</h5><p> </p>
<h6 id="4-1所有服务器配置节点-默认配置可省略"><a href="#4-1所有服务器配置节点-默认配置可省略" class="headerlink" title="4.1所有服务器配置节点(默认配置可省略)"></a>4.1所有服务器配置节点(默认配置可省略)</h6><p>我这边是使用配置文件默认的内容没做修改，默认代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Permit time synchronization with our time source, but do not</span><br><span class="line"># permit the source to query or modify the service on this system.</span><br><span class="line">restrict default nomodify notrap nopeer noquery</span><br><span class="line"></span><br><span class="line"># Permit all access over the loopback interface.  This could</span><br><span class="line"># be tightened as well, but to do so would effect some of</span><br><span class="line"># the administrative functions.</span><br><span class="line">restrict 127.0.0.1 </span><br><span class="line">restrict ::1</span><br><span class="line"></span><br><span class="line"># Hosts on local network are less restricted.</span><br><span class="line">#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap</span><br></pre></td></tr></table></figure>

<h6 id="4-2主服务器-主机-设置"><a href="#4-2主服务器-主机-设置" class="headerlink" title="4.2主服务器(主机)设置"></a>4.2主服务器(主机)设置</h6><p>修改/etc/ntp.conf文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/ntp.conf</span><br></pre></td></tr></table></figure>

<p>在server部分添加一下部分，并注释掉server 0 ~ n,新增内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#注释</span><br><span class="line">#server 0.centos.pool.ntp.org iburst</span><br><span class="line">#server 1.centos.pool.ntp.org iburst</span><br><span class="line">#server 2.centos.pool.ntp.org iburst</span><br><span class="line">#server 3.centos.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line">#新增</span><br><span class="line">server  127.127.1.0</span><br><span class="line">fudge   127.127.1.0 stratum 10</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="4-3从服务器-从机-设置"><a href="#4-3从服务器-从机-设置" class="headerlink" title="4.3从服务器(从机)设置"></a>4.3从服务器(从机)设置</h6><p>在server部分添加一下部分，并注释掉server 0 ~ n,新增内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#注释</span><br><span class="line">#server 0.centos.pool.ntp.org iburst</span><br><span class="line">#server 1.centos.pool.ntp.org iburst</span><br><span class="line">#server 2.centos.pool.ntp.org iburst</span><br><span class="line">#server 3.centos.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line">#新增</span><br><span class="line">server 10.214.138.132</span><br></pre></td></tr></table></figure>

<h6 id="4-4重启ntp服务"><a href="#4-4重启ntp服务" class="headerlink" title="4.4重启ntp服务"></a>4.4重启ntp服务</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart ntpd</span><br><span class="line">或者</span><br><span class="line">systemctl start ntpd</span><br><span class="line"></span><br><span class="line">#查看ntp服务器有无和上层ntp连通</span><br><span class="line">ntpstat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看ntp服务器与上层ntp的状态</span><br><span class="line">ntpq -p</span><br><span class="line">#参数：</span><br><span class="line">remote：本机和上层ntp的ip或主机名，“+”表示优先，“*”表示次优先</span><br><span class="line">refid：参考上一层ntp主机地址</span><br><span class="line">st：stratum阶层</span><br><span class="line">when：多少秒前曾经同步过时间</span><br><span class="line">poll：下次更新在多少秒后</span><br><span class="line">reach：已经向上层ntp服务器要求更新的次数</span><br><span class="line">delay：网络延迟</span><br><span class="line">offset：时间补偿</span><br><span class="line">jitter：系统时间与bios时间差</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CDH</tag>
        <tag>GP</tag>
        <tag>ntp</tag>
      </tags>
  </entry>
  <entry>
    <title>GP&amp;CDH安装部署系列-chrony时钟同步</title>
    <url>/1657/</url>
    <content><![CDATA[<p>内网配置实现时间同步</p>
<h5 id="1-确认是否存在NTP"><a href="#1-确认是否存在NTP" class="headerlink" title="1.确认是否存在NTP"></a>1.确认是否存在NTP</h5><p>每台都需要安装，我这边用SecureCRT通过命令窗口，同时发送控制多个服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa grep chrony </span><br><span class="line">---</span><br><span class="line">chrony-3.4-1.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>不存在则安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install chrony</span><br><span class="line">或者</span><br><span class="line">yum -y install chrony</span><br></pre></td></tr></table></figure>

<h5 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h5><h6 id="2-1主服务器配置"><a href="#2-1主服务器配置" class="headerlink" title="2.1主服务器配置"></a>2.1主服务器配置</h6><p>备份文件，并且修改文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#备份</span><br><span class="line">cp /etc/chrony.conf /etc/chrony.conf_bak</span><br><span class="line">#修改</span><br><span class="line">vi /etc/chrony.conf </span><br></pre></td></tr></table></figure>

<p>在server部分添加一下部分，并注释掉server 0 ~ n,新增内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#新增</span><br><span class="line">server 127.0.0.1  iburst</span><br><span class="line">#允许那些网段</span><br><span class="line">allow all</span><br></pre></td></tr></table></figure>

<h6 id="2-2从服务器配置"><a href="#2-2从服务器配置" class="headerlink" title="2.2从服务器配置"></a>2.2从服务器配置</h6><p>在server部分添加一下部分，并注释掉server 0 ~ n,新增内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#新增</span><br><span class="line">server 10.199.199.7 iburst  #写服务端IP地址</span><br><span class="line"></span><br><span class="line">#新增</span><br><span class="line">server 10.216.105.49 iburst  #写服务端IP地</span><br></pre></td></tr></table></figure>

<h6 id="2-3重启服务"><a href="#2-3重启服务" class="headerlink" title="2.3重启服务"></a>2.3重启服务</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart chronyd</span><br><span class="line">或者</span><br><span class="line">systemctl start chronyd</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这个时候只需要在服务端设置正确的时间，客户端就会同步服务端的时间。</p>
</blockquote>
<h6 id="2-4开机自启"><a href="#2-4开机自启" class="headerlink" title="2.4开机自启"></a>2.4开机自启</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询状态</span><br><span class="line">systemctl status chronyd</span><br><span class="line">#centos 6</span><br><span class="line">service chronyd status</span><br><span class="line">#设置开机启动</span><br><span class="line">systemctl enable chronyd</span><br><span class="line">#查询ntp是否设置开机自启</span><br><span class="line">systemctl is-enabled chronyd</span><br></pre></td></tr></table></figure>

<h5 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3.常用命令"></a>3.常用命令</h5><p>立即手工同步</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chronyc -a makestep</span><br></pre></td></tr></table></figure>

<p>查看时间同步源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chronyc sources -v</span><br></pre></td></tr></table></figure>

<p>查看时间同步源状态：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chronyc sourcestats -v</span><br></pre></td></tr></table></figure>

<blockquote>
<p>PS：由于端口冲突，chrony和ntpd不能同时启用</p>
</blockquote>
]]></content>
      <categories>
        <category>CDH</category>
        <category>gp数据库集群安装</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>chrony</tag>
      </tags>
  </entry>
  <entry>
    <title>GP&amp;CDH安装部署系列-GP安装</title>
    <url>/1570/</url>
    <content><![CDATA[<h4 id="1-由于最小化安装，所有机器执行"><a href="#1-由于最小化安装，所有机器执行" class="headerlink" title="1.由于最小化安装，所有机器执行"></a>1.由于最小化安装，所有机器执行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install ed openssh-clients zip unzip perl bind-utils net-tools -y</span><br></pre></td></tr></table></figure>

<h4 id="2-所有服务器关闭防火墙"><a href="#2-所有服务器关闭防火墙" class="headerlink" title="2.所有服务器关闭防火墙"></a>2.所有服务器关闭防火墙</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#contos7:</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line">#contos7以下:</span><br><span class="line">service iptables stop</span><br><span class="line">service iptables status</span><br><span class="line">chkconfig iptables off(永久性生效，重启后不会复原)</span><br><span class="line">#service iptables stop(即时生效，重启后复原)</span><br></pre></td></tr></table></figure>

<h4 id="3-检查时间是否为北京时间，如已经操作第一步时间同步后，此步可省略"><a href="#3-检查时间是否为北京时间，如已经操作第一步时间同步后，此步可省略" class="headerlink" title="3.检查时间是否为北京时间，如已经操作第一步时间同步后，此步可省略"></a>3.检查时间是否为北京时间，如已经操作第一步时间同步后，此步可省略</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#检查ntp主机时间是否为当前北京时间</span><br><span class="line">date</span><br><span class="line"></span><br><span class="line">#如不是：</span><br><span class="line">date -s &quot;2020-05-15 16:11:00&quot;</span><br><span class="line"></span><br><span class="line">#修改系统时间date后加clock -w 理由--&gt;为了保险，需要使用 clock -w 把当前系统时间写入到CMOS中</span><br><span class="line">clock -w</span><br></pre></td></tr></table></figure>

<h4 id="4-所有机器执行挂载"><a href="#4-所有机器执行挂载" class="headerlink" title="4.所有机器执行挂载"></a>4.所有机器执行挂载</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#正常情况下：</span><br><span class="line">#查看磁盘</span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line">#查看已挂载磁盘对应目录</span><br><span class="line">df -h</span><br><span class="line"></span><br><span class="line">#进入根目录</span><br><span class="line">cd /</span><br><span class="line"></span><br><span class="line">#创建目录</span><br><span class="line">mkdir data</span><br><span class="line"></span><br><span class="line">#格式化磁盘（如果是挂在两个盘，则需要格式两个磁盘：/dev/sdb /dev/sdc）</span><br><span class="line">mkfs.xfs -f /dev/sdb</span><br><span class="line">#mkfs.xfs -f /dev/sdc</span><br><span class="line"></span><br><span class="line">#将信息写入fstab,让系统开启自动挂载</span><br><span class="line">echo &quot;</span><br><span class="line">/dev/sdb /data xfs rw,noatime,inode64,allocsize=16m 1 1</span><br><span class="line">&quot; &gt;&gt;/etc/fstab</span><br><span class="line"></span><br><span class="line">#挂载磁盘</span><br><span class="line">mount -a</span><br><span class="line"></span><br><span class="line">#检查是否挂载成功</span><br><span class="line">df -h</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="步骤4遇到的问题"><a href="#步骤4遇到的问题" class="headerlink" title="步骤4遇到的问题:"></a>步骤4遇到的问题:</h5><p>#当需要的挂载磁盘已经挂载了对应的目录 umount /dev/sdb /data #当遇到提示：设备正忙，卸载即告失败(/data: device is busy) 可使用：lsof /data <img src="http://qn.199604.com/typoraImg/1589649935734.png" alt="1589649935734"> #使用fuser查看目录被谁占用，然后kill掉线程(lsof /data其实也可) 或者使用：fuser /data /data: 2454 rc #kill掉正在使用的进程后，重新 umount /dev/sdb /data kill -9 2454 umount /dev/sdb /data #遇到：mount:can‘t find uuid = xxxx <img src="http://qn.199604.com/typoraImg/1589649310541.png" alt="1589649310541"> 这说明uuid 对应的磁盘之前是有挂载过，然后我们格式化后UUID已经变了，然后之前对应的也是/data 目录，解决办法： 输入 blkid，然后拿到/dev/sdb 新的UUID，然后把/etc/fstab 文件对应的/dev/sdb 换成UUID，把之前有关/data的全部注销掉，再重新挂载： <img src="http://qn.199604.com/typoraImg/1589650075800.png" alt="1589649544626"> <img src="http://qn.199604.com/typoraImg/1589652280536.png" alt="1589650075800">  </p>
<h4 id="5-修改所有机器名称"><a href="#5-修改所有机器名称" class="headerlink" title="5.修改所有机器名称"></a>5.修改所有机器名称</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#centos7:</span><br><span class="line">hostnamectl set-hostname mdw132</span><br><span class="line">hostnamectl  --static</span><br><span class="line">.....</span><br><span class="line">hostnamectl set-hostname sdw137</span><br><span class="line">hostnamectl set-hostname sdw138</span><br><span class="line">hostnamectl set-hostname sdw139</span><br><span class="line"></span><br><span class="line">#centos7以下：</span><br><span class="line">#永久生效</span><br><span class="line">vi /etc/sysconfig/network</span><br><span class="line">HOSTNAME=mdw132</span><br></pre></td></tr></table></figure>

<h4 id="6-修改所有机器hosts"><a href="#6-修改所有机器hosts" class="headerlink" title="6.修改所有机器hosts"></a>6.修改所有机器hosts</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"></span><br><span class="line">10.214.138.132 mdw132</span><br><span class="line">10.214.138.133 sdw133</span><br><span class="line">10.214.138.134 sdw134</span><br><span class="line">10.214.138.135 sdw135</span><br><span class="line">10.214.138.136 sdw136</span><br><span class="line">10.214.138.137 sdw137</span><br><span class="line">10.214.138.138 sdw138</span><br><span class="line">10.214.138.139 sdw139</span><br></pre></td></tr></table></figure>

<h4 id="7-多机信任-免登陆-所有机器都需要执行"><a href="#7-多机信任-免登陆-所有机器都需要执行" class="headerlink" title="7.多机信任(免登陆),所有机器都需要执行"></a>7.多机信任(免登陆),所有机器都需要执行</h4><p>区分：这里master节点和其他datanode节点会略有区别。</p>
<h5 id="1-首先所有节点均执行如下命令，遇到提示一路回车即可："><a href="#1-首先所有节点均执行如下命令，遇到提示一路回车即可：" class="headerlink" title="1.首先所有节点均执行如下命令，遇到提示一路回车即可："></a>1.首先所有节点均执行如下命令，遇到提示一路回车即可：</h5><p>ssh-keygen -t rsa</p>
<h5 id="2-在主节点执行以下命令："><a href="#2-在主节点执行以下命令：" class="headerlink" title="2.在主节点执行以下命令："></a><img src="http://qn.199604.com/typoraImg/1589650647329.png" alt="1589650647329">2.在主节点执行以下命令：</h5><p>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</p>
<h5 id="3-scp文件到所有datenode节点："><a href="#3-scp文件到所有datenode节点：" class="headerlink" title="3.scp文件到所有datenode节点："></a>3.scp文件到所有datenode节点：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.133:~/.ssh/</span><br><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.134:~/.ssh/</span><br><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.135:~/.ssh/</span><br><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.136:~/.ssh/</span><br><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.137:~/.ssh/</span><br><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.138:~/.ssh/</span><br><span class="line">scp ~/.ssh/authorized_keys root@10.214.138.139:~/.ssh/</span><br></pre></td></tr></table></figure>

<h4 id="8-GP数据库安装部署："><a href="#8-GP数据库安装部署：" class="headerlink" title="8.GP数据库安装部署："></a>8.GP数据库安装部署：</h4><h5 id="8-1-修改所有机器的hosts-如果步骤6已做检查一遍"><a href="#8-1-修改所有机器的hosts-如果步骤6已做检查一遍" class="headerlink" title="8.1:修改所有机器的hosts(如果步骤6已做检查一遍)"></a>8.1:修改所有机器的hosts(如果步骤6已做检查一遍)</h5><p>cat /etc/hosts</p>
<h5 id="8-2-安装greenplum–主节点执行（mdw132上执行）"><a href="#8-2-安装greenplum–主节点执行（mdw132上执行）" class="headerlink" title="8.2:安装greenplum–主节点执行（mdw132上执行）"></a>8.2:安装greenplum–主节点执行（mdw132上执行）</h5><p>安装软件上传至mdw132目录：/home/gp_install</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建/home/gp_install</span><br><span class="line">mkdir /home/gp_install</span><br><span class="line">#进入</span><br><span class="line">cd /home/gp_install</span><br><span class="line">#赋值目录</span><br><span class="line">chmod 777 /home/gp_install</span><br><span class="line"></span><br><span class="line">#winscp 上传greenplum-db-4.3.11.3-rhel5-x86_64.bin到 /home/gp_install</span><br><span class="line"></span><br><span class="line">#以下步骤root用户在mdw执行，安装本地GP,并交换密钥：</span><br><span class="line">#（在文件所在目录下执行）</span><br><span class="line">./greenplum-db-4.3.11.3-rhel5-x86_64.bin</span><br><span class="line"># 注意修改默认安装目录为：/usr/local/greenplum-db，其它都默认为yes。</span><br><span class="line"></span><br><span class="line">#读取变量</span><br><span class="line">source /usr/local/greenplum-db/greenplum_path.sh</span><br></pre></td></tr></table></figure>

<h5 id="8-3-配置全部服务器列表（mdw132上执行）"><a href="#8-3-配置全部服务器列表（mdw132上执行）" class="headerlink" title="8.3:配置全部服务器列表（mdw132上执行）"></a>8.3:配置全部服务器列表（mdw132上执行）</h5><p>注意：后续vi新建脚本都默认在mdw132服务器的/home/gp_install目录下，同时执行命令也需在mdw132服务器的该目录下运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/gp_install</span><br><span class="line"></span><br><span class="line">vi hostfile_all</span><br><span class="line">#添加:</span><br><span class="line">sdw133</span><br><span class="line">sdw134</span><br><span class="line">sdw135</span><br><span class="line">sdw136</span><br><span class="line">sdw137</span><br><span class="line">sdw138</span><br><span class="line">sdw139</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="8-4-交换密钥"><a href="#8-4-交换密钥" class="headerlink" title="8.4:交换密钥"></a>8.4:交换密钥</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#将hostfile_all文件赋值给</span><br><span class="line">chown gpadmin:gpadmin /hostfile_all</span><br><span class="line"></span><br><span class="line">#删除原来的文件</span><br><span class="line">cd /root/.ssh/</span><br><span class="line">rm -rf *</span><br><span class="line"></span><br><span class="line">#执行</span><br><span class="line">cd /home/gp_install/</span><br><span class="line">gpssh-exkeys -f hostfile_all</span><br><span class="line"></span><br><span class="line">[INFO] completed successfully--&gt;成功</span><br></pre></td></tr></table></figure>

<p>如果遇到一直输密码啥的： <img src="http://qn.199604.com/typoraImg/1589649544626.png" alt="1589652280536"> 1.有可能我们之前的多机信任有问题。 2.ssh版本密钥不对，需要修改sshd_config(所有机器执行)：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">#添加 </span><br><span class="line">KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1</span><br><span class="line"></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>

<p>最好改完以后,再重新生成一次秘钥,即从新多一个多机信任，先把cd /root/.ssh/ 下的文件都 rm -rf 了</p>
<h5 id="8-5：服务器系统参数配置（mdw132上执行）"><a href="#8-5：服务器系统参数配置（mdw132上执行）" class="headerlink" title="8.5：服务器系统参数配置（mdw132上执行）"></a>8.5：服务器系统参数配置（mdw132上执行）</h5><h6 id="配置1"><a href="#配置1" class="headerlink" title="#配置1"></a>#配置1</h6><p>#修改 vi /etc/sysctl.conf 注释原来所有内容，添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#system</span><br><span class="line"># Controls source route verification</span><br><span class="line">net.ipv4.conf.default.rp_filter = 1</span><br><span class="line"></span><br><span class="line"># Disable netfilter on bridges.</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 0</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 0</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 0</span><br><span class="line"></span><br><span class="line">#gp,64G内存—shmmax ：68719476736，128G内存-- shmmax ：137438953472，物理内存*0.9*1024*1024*1024</span><br><span class="line">#xfs_mount_options = rw,noatime,inode64,allocsize=16m</span><br><span class="line">kernel.shmmax = 57438953472</span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.shmall = 40000000000</span><br><span class="line">kernel.sem = 120 5120000 100 20480</span><br><span class="line">kernel.sysrq = 1</span><br><span class="line">kernel.core_uses_pid = 1</span><br><span class="line">kernel.msgmnb = 65536</span><br><span class="line">kernel.msgmax = 65536</span><br><span class="line">kernel.msgmni = 2048</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.ip_forward = 0</span><br><span class="line">net.ipv4.conf.default.accept_source_route = 0</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 4096</span><br><span class="line">net.ipv4.conf.all.arp_filter = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1025 65535</span><br><span class="line">net.core.netdev_max_backlog = 10000</span><br><span class="line">vm.overcommit_memory = 2</span><br><span class="line"></span><br><span class="line">#net.core.rmem_max = 2097152</span><br><span class="line">#net.core.wmem_max = 2097152</span><br><span class="line"></span><br><span class="line">net.core.rmem_default = 256960</span><br><span class="line">net.core.rmem_max = 2097152</span><br><span class="line">net.core.wmem_default = 256960</span><br><span class="line">net.core.wmem_max = 2097152</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">net.ipv4.tcp_sack = 0</span><br><span class="line">net.ipv4.tcp_window_scaling = 1</span><br></pre></td></tr></table></figure>

<p>注意： #gp–&gt;kernel.shmmax的值:64G内存—shmmax ：68719476736，128G内存– shmmax ：137438953472，即物理内存*0.9*1024*1024*1024,如我的机器全是256G的:256*1024*1024*1024*0.9 , 其实只要超过128G 都可以默认得了…</p>
<h6 id="配置2"><a href="#配置2" class="headerlink" title="#配置2"></a>#配置2</h6><p>#修改 vi /etc/security/limits.conf 在最后增加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#增加：</span><br><span class="line">#gp</span><br><span class="line">gpadmin soft nofile 65536</span><br><span class="line">gpadmin hard nofile 65536</span><br><span class="line">gpadmin soft nproc 131072</span><br><span class="line">gpadmin hard nproc 131072</span><br></pre></td></tr></table></figure>

<p>注意： <strong>对于RedHat6.x/CENTOS 6.X系统，还需要将vi /etc/security/limits.d/90-nproc.conf文件中的1024修改为131072。</strong> <strong>对于RedHat7.x/CENTOS 7.X系统，还需要将vi 录vi /etc/security/limits.d/20-nproc.conf文件中的4096修改为131072。</strong></p>
<h6 id="配置3"><a href="#配置3" class="headerlink" title="#配置3"></a>#配置3</h6><p>#修改 vi /etc/rc.d/rc.local 在最后增加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#添加：</span><br><span class="line">#gp</span><br><span class="line">/sbin/blockdev --setra 16384 /dev/sd*</span><br></pre></td></tr></table></figure>

<p>保存修改后执行命令： #单独执行命令： echo 1 &gt; /proc/sys/vm/overcommit_memory</p>
<h6 id="配置4（Centos6-5没有该文件，略过）"><a href="#配置4（Centos6-5没有该文件，略过）" class="headerlink" title="#配置4（Centos6.5没有该文件，略过）"></a>#配置4（Centos6.5没有该文件，略过）</h6><p>vi /boot/grub/menu.lst</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#添加后的结果：</span><br><span class="line">kernel /boot/vmlinuz-2.2.18-164.el5 ro root=LABEL=/ ro elevator=deadline rhgb quiet</span><br><span class="line">（注：根据系统不同内容会不同，只管添加elevator=deadline即可）。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="配置5"><a href="#配置5" class="headerlink" title="#配置5"></a>#配置5</h6><p>vi /etc/inittab #在最后增加： id:3:initdefault:</p>
<h6 id="配置6"><a href="#配置6" class="headerlink" title="#配置6"></a>#配置6</h6><p>vi /etc/ssh/sshd_config [找到MaxStartups去掉#并修改为如下参数] MaxStartups=1000:30:5000</p>
<h6 id="配置-7"><a href="#配置-7" class="headerlink" title="#配置 7"></a>#配置 7</h6><p>vi /etc/sysconfig/selinux #找到<strong>SELINUX</strong>修改： SELINUX=disabled</p>
<h5 id="8-6-将mdw132-主服务器-配置覆盖其它节点服务器脚本："><a href="#8-6-将mdw132-主服务器-配置覆盖其它节点服务器脚本：" class="headerlink" title="8.6.将mdw132(主服务器)配置覆盖其它节点服务器脚本："></a>8.6.将mdw132(主服务器)配置覆盖其它节点服务器脚本：</h5><p>#新建cp.sh文件 vi cp.sh #添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gpscp -f hostfile_all /etc/hosts =:/etc</span><br><span class="line">gpscp -f hostfile_all /etc/sysctl.conf =:/etc</span><br><span class="line">gpscp -f hostfile_all /etc/security/limits.conf =:/etc/security</span><br><span class="line">gpscp -f hostfile_all /etc/rc.d/rc.local =:/etc/rc.d</span><br><span class="line">gpscp -f hostfile_all /proc/sys/vm/overcommit_memory =:/proc/sys/vm</span><br><span class="line">gpscp -f hostfile_all /etc/sysconfig/selinux =:/etc/sysconfig</span><br><span class="line">gpscp -f hostfile_all /etc/inittab =:/etc</span><br><span class="line">gpscp -f hostfile_all /etc/ssh/sshd_config =:/etc/ssh/sshd_config</span><br><span class="line">gpscp -f hostfile_all /etc/yum.repos.d/http.repo =:/etc/yum.repos.d/</span><br></pre></td></tr></table></figure>

<p>#执行： chmod +x cp.sh ./cp.sh</p>
<h5 id="8-7-检查配置结果"><a href="#8-7-检查配置结果" class="headerlink" title="8.7.检查配置结果"></a>8.7.检查配置结果</h5><p>#新建check文件 vi check #添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/sbin/sysctl -p</span><br><span class="line">/sbin/blockdev --setra 16384 /dev/sd*</span><br><span class="line">blockdev --getra /dev/sd*</span><br><span class="line">df -h</span><br><span class="line">/etc/init.d/iptables stop</span><br><span class="line">/etc/init.d/iptables status</span><br><span class="line">chkconfig iptables off</span><br><span class="line">chkconfig --list iptables</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/hosts</span><br><span class="line">grep MaxStartups /etc/ssh/sshd_config</span><br><span class="line">grep MaxSessions /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>

<p>#执行 gpssh -f hostfile_all -v &lt; check</p>
<h5 id="8-8-安装GP数据库-mdw132上执行"><a href="#8-8-安装GP数据库-mdw132上执行" class="headerlink" title="8.8.安装GP数据库(mdw132上执行)"></a>8.8.安装GP数据库(mdw132上执行)</h5><h6 id="1-创建数据存储区，以下步骤root用户在mdw132执行，在所有节点上安装GP："><a href="#1-创建数据存储区，以下步骤root用户在mdw132执行，在所有节点上安装GP：" class="headerlink" title="#1.创建数据存储区，以下步骤root用户在mdw132执行，在所有节点上安装GP："></a>#1.<strong>创建数据存储区，以下步骤root用户在mdw132执行，在所有节点上安装GP：</strong></h6><p>gpseginstall -f hostfile_all -u gpadmin -p gpadmin</p>
<h6 id="2-master存储创建："><a href="#2-master存储创建：" class="headerlink" title="#2.master存储创建："></a>#2.master存储创建：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/master</span><br><span class="line">mkdir -p /data/master/space_fastdisk</span><br><span class="line"></span><br><span class="line">chown gpadmin /data/master</span><br><span class="line">chown -R gpadmin:gpadmin /data</span><br><span class="line">chown -R gpadmin:gpadmin /data/master</span><br></pre></td></tr></table></figure>

<h6 id="3-second-master存储（本次没备用管理smdw服务器-请忽略此步骤）"><a href="#3-second-master存储（本次没备用管理smdw服务器-请忽略此步骤）" class="headerlink" title="#3.second master存储（本次没备用管理smdw服务器,请忽略此步骤）"></a>#3.second master存储（本次没备用管理smdw服务器,请忽略此步骤）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//gpssh -h smdw -e &#x27;mkdir -p /home/data/master&#x27;</span><br><span class="line">//gpssh -h smdw -e &#x27;chown gpadmin /home/data/master&#x27;</span><br></pre></td></tr></table></figure>

<h6 id="4-segment存储"><a href="#4-segment存储" class="headerlink" title="#4.segment存储"></a>#4.segment存储</h6><p>#创建mkdir文件 vi mkdir #添加： <strong>注意:正常情况都是data1到data4,因为此次服务器内存小，磁盘也不大，还是虚拟机，读写性能估计也一般，所以只做data1和data2，而机器，把盘做了raid，做n组raid就有n个盘挂载，我们就可以每个挂载盘创建一个data</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/data1/gp/p</span><br><span class="line">mkdir -p /data/data1/gp/m</span><br><span class="line">mkdir -p /data/data2/gp/p</span><br><span class="line">mkdir -p /data/data2/gp/m</span><br><span class="line"></span><br><span class="line">mkdir -p /data/data1/gp/p/space_fastdisk</span><br><span class="line">mkdir -p /data/data1/gp/m/space_fastdisk</span><br><span class="line">mkdir -p /data/data2/gp/p/space_fastdisk</span><br><span class="line">mkdir -p /data/data2/gp/m/space_fastdisk</span><br><span class="line"></span><br><span class="line">chown -R gpadmin:gpadmin /data/data1</span><br><span class="line">chown -R gpadmin:gpadmin /data/data2</span><br><span class="line">chown -R gpadmin:gpadmin /data/data1/gp</span><br><span class="line">chown -R gpadmin:gpadmin /data/data2/gp</span><br></pre></td></tr></table></figure>

<p>#执行 gpssh -f hostfile_all -v &lt; mkdir</p>
<h5 id="8-9-配置环境变量"><a href="#8-9-配置环境变量" class="headerlink" title="8.9.配置环境变量"></a>8.9.配置环境变量</h5><h6 id="以下步骤gpadmin用户在mdw132执行"><a href="#以下步骤gpadmin用户在mdw132执行" class="headerlink" title="#以下步骤gpadmin用户在mdw132执行."></a>#以下步骤gpadmin用户在mdw132执行.</h6><p>切换用户：su - gpadmin</p>
<h6 id="配置gpadmin变量"><a href="#配置gpadmin变量" class="headerlink" title="#配置gpadmin变量"></a>#配置gpadmin变量</h6><p>#修改： vi /home/gpadmin/.bashrc #添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export GPHOME=/usr/local/greenplum-db</span><br><span class="line">source $GPHOME/greenplum_path.sh</span><br><span class="line">export MASTER_DATA_DIRECTORY=/data/master/gpseg-1</span><br><span class="line">export PGPORT=5432</span><br><span class="line">export PGUSER=gpadmin</span><br><span class="line">export PGDATABASE=postgres</span><br></pre></td></tr></table></figure>

<p>#读取变量 source /home/gpadmin/.bashrc</p>
<h5 id="8-10-初始化GP数据库（mdw132上执行）"><a href="#8-10-初始化GP数据库（mdw132上执行）" class="headerlink" title="8.10.初始化GP数据库（mdw132上执行）"></a>8.10.初始化GP数据库（mdw132上执行）</h5><p>#以下操作gpadmin用户在mdw132上执行:</p>
<h6 id="创建目录"><a href="#创建目录" class="headerlink" title="#创建目录"></a>#创建目录</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su - gpadmin</span><br><span class="line">mkdir /home/gpadmin/gpconfigs</span><br><span class="line">cd /home/gpadmin/gpconfigs</span><br></pre></td></tr></table></figure>

<h6 id="配置实例对应的网卡"><a href="#配置实例对应的网卡" class="headerlink" title="#配置实例对应的网卡"></a>#配置实例对应的网卡</h6><p>#创建文件: vi hostfile_gpinitsystem #添加节点服务器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mdw132</span><br><span class="line">sdw133</span><br><span class="line">sdw134</span><br><span class="line">sdw135</span><br><span class="line">sdw136</span><br><span class="line">sdw137</span><br><span class="line">sdw138</span><br><span class="line">sdw139</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>一定要加上主服务器，不然到时候数据存不到主服务器</p>
<h6 id="配置实例对应的磁盘等"><a href="#配置实例对应的磁盘等" class="headerlink" title="#配置实例对应的磁盘等"></a>#配置实例对应的磁盘等</h6><p>1.实例数不用太多,参考2物理cpu则8个实例即可； 2.DATA_DIRECTORY 一个目录代表一个实例,本次GP部署每台使用2块盘 vi gpinitsystem_config #添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ARRAY_NAME=&quot;EMC Greenplum DW&quot;</span><br><span class="line">SEG_PREFIX=gpseg</span><br><span class="line">PORT_BASE=40000</span><br><span class="line">declare -a DATA_DIRECTORY=(/data/data1/gp/p /data/data2/gp/p)</span><br><span class="line">MASTER_HOSTNAME=mdw11</span><br><span class="line">MASTER_DIRECTORY=/data/master</span><br><span class="line">MASTER_PORT=5432</span><br><span class="line">TRUSTED_SHELL=ssh</span><br><span class="line">CHECK_POINT_SEGMENTS=16</span><br><span class="line">ENCODING=UTF8</span><br><span class="line">MIRROR_PORT_BASE=50000</span><br><span class="line">REPLICATION_PORT_BASE=41000</span><br><span class="line">MIRROR_REPLICATION_PORT_BASE=51000</span><br><span class="line">declare -a MIRROR_DATA_DIRECTORY=(/data/data1/gp/m /data/data2/gp/m)</span><br><span class="line">DATABASE_NAME=lte_mr</span><br></pre></td></tr></table></figure>

<h6 id="执行初始化"><a href="#执行初始化" class="headerlink" title="#执行初始化"></a>#执行初始化</h6><p>[无备管理服务器smdw执行] gpinitsystem -c gpinitsystem_config -h hostfile_gpinitsystem [有备管理smdw服务器] //gpinitsystem -c gpinitsystem_config -h hostfile_gpinitsystem -s smdw   运行结果中如出现如下信息则创建成功！ …… Greenplum Database instance successfully created …… <img src="http://qn.199604.com/typoraImg/image-20200517181844088.png" alt="image-20200517181844088"></p>
<h5 id="8-11-远程访问设置（mdw132上执行）"><a href="#8-11-远程访问设置（mdw132上执行）" class="headerlink" title="8.11.远程访问设置（mdw132上执行）"></a>8.11.远程访问设置（mdw132上执行）</h5><p>#以下操作gpadmin用户在mdw132上执行 cd $MASTER_DATA_DIRECTORY vi pg_hba.conf #添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">host all gpadmin 0.0.0.0/0 md5</span><br><span class="line"></span><br><span class="line">host all dpi 0.0.0.0/0 md5</span><br></pre></td></tr></table></figure>

<h5 id="8-12-配置GP数据库登录密码（mdw132上执行）"><a href="#8-12-配置GP数据库登录密码（mdw132上执行）" class="headerlink" title="8.12.配置GP数据库登录密码（mdw132上执行）"></a>8.12.配置GP数据库登录密码（mdw132上执行）</h5><p>#以下步骤gpadmin用户在mdw193执行。 切换用户：su - gpadmin 登录数据库:psql -d lte_mr &gt;alter role gpadmin with password ‘gpadmin_GP$’; 输入：\q退出数据库 <img src="http://qn.199604.com/typoraImg/image-20200517181808343.png" alt="image-20200517181808343"></p>
<h5 id="8-13-GP数据库参数配置（mdw132上执行）"><a href="#8-13-GP数据库参数配置（mdw132上执行）" class="headerlink" title="8.13.GP数据库参数配置（mdw132上执行）"></a>8.13.GP数据库参数配置（mdw132上执行）</h5><p>[gp_vmem_protect_limit=内存总量/实例数_1024=(256_4)/8*1024 MB, 以128G内存,8实例为例，基本使用默认不修改] #以下操作gpadmin用户在mdw上执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gpconfig -c gp_vmem_protect_limit -v 60000MB</span><br><span class="line">gpconfig -c max_statement_mem -v 21333MB</span><br><span class="line">gpconfig -c statement_mem -v 2048MB</span><br><span class="line">gpconfig -c filerep_socket_timeout -v 350 </span><br><span class="line">gpconfig -c gp_fts_probe_timeout -v 60</span><br><span class="line">gpconfig -c max_connections -v 1000 -m 200</span><br><span class="line">gpconfig -c max_appendonly_tables -v 50000 -m 50000</span><br><span class="line"> </span><br><span class="line">gpconfig -c gp_fts_probe_threadcount -v 90 -m 90 </span><br><span class="line">gpconfig -c gp_fts_probe_interval -v 120 -m 120</span><br><span class="line">gpconfig -c gp_fts_probe_retries -v 10 -m 10</span><br><span class="line">gpconfig -c gp_fts_probe_timeout -v 120 -m 120</span><br><span class="line">gpconfig -c gp_segment_connect_timeout -v 600</span><br><span class="line"></span><br><span class="line">gpconfig -c vacuum_freeze_min_age -v 999999999 -m 999999999</span><br><span class="line">gpconfig -c autovacuum_freeze_max_age -v 2000000000 -m 2000000000</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/image-20200517181939966.png" alt="image-20200517181939966"></p>
<h5 id="8-14-重启GP数据库（mdw132上执行）"><a href="#8-14-重启GP数据库（mdw132上执行）" class="headerlink" title="8.14.重启GP数据库（mdw132上执行）"></a>8.14.重启GP数据库（mdw132上执行）</h5><p>#以下步骤gpadmin用户在mdw执行，切换用户：su - gpadmin 停数据库：gpstop -M fast 启数据库：gpstart -a 查看各节点状态：gpstate –m</p>
<h5 id="8-15-性能验证（数据库安装成功后测试，mdw132上执行）"><a href="#8-15-性能验证（数据库安装成功后测试，mdw132上执行）" class="headerlink" title="8.15.性能验证（数据库安装成功后测试，mdw132上执行）"></a>8.15.性能验证（数据库安装成功后测试，mdw132上执行）</h5><h6 id="网卡性能验证，网卡-管理口"><a href="#网卡性能验证，网卡-管理口" class="headerlink" title="#网卡性能验证，网卡-管理口"></a>#网卡性能验证，网卡-管理口</h6><p>vi hostfile_gpchecknet_eth0 #添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mdw132</span><br><span class="line">sdw133</span><br><span class="line">sdw134</span><br><span class="line">sdw135</span><br><span class="line">sdw136</span><br><span class="line">sdw137</span><br><span class="line">sdw138</span><br><span class="line">sdw139</span><br></pre></td></tr></table></figure>

<p>#测试： gpcheckperf -f hostfile_gpchecknet_eth0 -r N -d /tmp &gt; eth0.out #查看： cat eth0.out</p>
<h6 id="磁盘性能验证"><a href="#磁盘性能验证" class="headerlink" title="#磁盘性能验证"></a>#磁盘性能验证</h6><p>[-S 256GB] 为内存的2倍 #测试 gpcheckperf -f hostfile_gpchecknet_eth0 -r ds -D -v -S 512GB -d /data1/gp/p &gt;disk.out #查看： cat disk.out</p>
]]></content>
      <categories>
        <category>gp数据库集群安装</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CDH</tag>
        <tag>GP</tag>
      </tags>
  </entry>
  <entry>
    <title>gp集群数据库-创建只读用户并赋查询权限</title>
    <url>/1628/</url>
    <content><![CDATA[<p>CREATE ROLE select_user login password ‘Js_gp123!@#’;<br>或者下面都可以：<br>CREATE USER select_user WITH PASSWORD ‘Js_gp123!@#’;</p>
<p>把USAGE权限给到select_user<br>grant usage on schema smartinsight to select_user;</p>
<p>#单独赋查询的权限<br>GRANT SELECT ON TABLE zz_pm_nr_nsa_nrcellcu_minute20200923 TO select_user;</p>
<p>GP集群虽然和pgsql差不多 但是也有本质区别因此不能使用：<br>grant select on all tables in schema smartinsight to select_user;这个语句 无效的<br>详情：<a href="https://blog.csdn.net/weixin_42658788/article/details/88040209">https://blog.csdn.net/weixin_42658788/article/details/88040209</a></p>
<p>解决办法-创建一个函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create or replace function grant_on_all_tables(schema text, usr text) </span><br><span class="line">returns setof text as $$ </span><br><span class="line">declare </span><br><span class="line">   r record ; </span><br><span class="line">   grantstmt text; </span><br><span class="line">begin </span><br><span class="line">   for r in select * from pg_class c, pg_namespace nsp </span><br><span class="line">       where c.relnamespace = nsp.oid AND c.relkind=&#x27;r&#x27; AND nspname = schema and (relname like &#x27;%JS_MR_SERVICE_CELL_MINUTE_%&#x27; or relname like &#x27;%JS_PM_LTE_EUTRANCELL_MINUTE_%&#x27;)</span><br><span class="line">   loop </span><br><span class="line">     grantstmt = &#x27;GRANT SELECT ON &quot;&#x27;|| quote_ident(schema) || &#x27;&quot;.&quot;&#x27; || </span><br><span class="line">quote_ident(r.relname) || &#x27;&quot; to &quot;&#x27; || quote_ident(usr) || &#x27;&quot;&#x27;; </span><br><span class="line"></span><br><span class="line">     EXECUTE grantstmt; </span><br><span class="line">     return next grantstmt; </span><br><span class="line">   end loop; </span><br><span class="line">end; </span><br><span class="line"></span><br><span class="line">$$ language plpgsql;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>gp数据库集群安装</category>
      </categories>
      <tags>
        <tag>gp集群，pgsql</tag>
      </tags>
  </entry>
  <entry>
    <title>Greenplum(gp) 维护使用笔记</title>
    <url>/1642/</url>
    <content><![CDATA[<h3 id="Greenplum-gp-维护使用笔记"><a href="#Greenplum-gp-维护使用笔记" class="headerlink" title="Greenplum(gp) 维护使用笔记"></a>Greenplum(gp) 维护使用笔记</h3><h5 id="1-数据库启动：gpstart"><a href="#1-数据库启动：gpstart" class="headerlink" title="1. 数据库启动：gpstart"></a>1. 数据库启动：gpstart</h5><p>常用可选参数： -a : 直接启动，不提示终端用户输入确认 -m:只启动master 实例，主要在故障处理时使用 我的常用：gpstart -a</p>
<h5 id="2-数据库停止：gpstop"><a href="#2-数据库停止：gpstop" class="headerlink" title="2.数据库停止：gpstop"></a>2.数据库停止：gpstop</h5><p>常用可选参数： -a：直接停止，不提示终端用户输入确认 -m：只停止master 实例，与gpstart –m 对应使用 -M fast：停止数据库，中断所有数据库连接，回滚正在运行的事务 -u：不停止数据库，只加载pg_hba.conf 和postgresql.conf中运行时参数，当改动参数配置时候使用。 -f：强制停止数据库 -r： 重启数据库 我的常用：gpstop -M fast</p>
<h5 id="3-查看实例配置和状态"><a href="#3-查看实例配置和状态" class="headerlink" title="3.查看实例配置和状态"></a>3.查看实例配置和状态</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from gp_segment_configuration order by 1</span><br></pre></td></tr></table></figure>

<h5 id="4-gpstate"><a href="#4-gpstate" class="headerlink" title="4.gpstate"></a>4.gpstate</h5><p>常用可选参数： -m：只列出mirror 实例的状态和配置信息–&gt;常用gpstate -m 检查数据库是否正常 -f：显示standby master 的详细信息 -s：查看详细状态，如在同步，可显示数据同步完成百分比 -e: 查看同步进程 -p: … -c: … 我的常用：gpstate -m</p>
<h5 id="5-查看用户会话和提交的查询等信息"><a href="#5-查看用户会话和提交的查询等信息" class="headerlink" title="5.查看用户会话和提交的查询等信息"></a>5.查看用户会话和提交的查询等信息</h5><p>select * from pg_stat_activity : 该表能查看到当前数据库连接的IP 地址，用户名，提交的查询等。 另外也可以在master 主机上查看进程，对每个客户端连接，master 都会创建一个进程。 ps -ef grep -i postgresgrep -i con</p>
<h5 id="6-查看数据库、表占用空间"><a href="#6-查看数据库、表占用空间" class="headerlink" title="6.查看数据库、表占用空间"></a>6.查看数据库、表占用空间</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT tablename,pg_relation_size(tablename) FROM pg_tables WHERE schemaname = &#x27;smartinsight&#x27;  limit 10;</span><br></pre></td></tr></table></figure>

<p>ps:必须在数据库所对应的存储系统里，至少保留30%的自由空间，日常巡检，要检查存储空间的剩余容量。 <a href="https://www.mobibrw.com/2018/16112">https://www.mobibrw.com/2018/16112</a></p>
<h5 id="7-查看数据分布情况"><a href="#7-查看数据分布情况" class="headerlink" title="7.查看数据分布情况"></a>7.查看数据分布情况</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select gp_segment_id,count(*) from  &#x27;tablename&#x27;  group by 1 </span><br></pre></td></tr></table></figure>

<h5 id="8-实例恢复-gprecoverseg"><a href="#8-实例恢复-gprecoverseg" class="headerlink" title="8.实例恢复:gprecoverseg"></a>8.实例恢复:gprecoverseg</h5><p>通过 gpstate -m 或查询g p_segement_configuration 系统表发现有实例down 掉以后，使用该命令进行恢复。 首先产生一个恢复的配置文件 ： gprecoverseg -o ./recov 查询文件是否为恢复节点：cat recov 进行恢复：gprecoverseg -i ./recov ps:gprecoverseg -F 强制恢复 –&gt;不到迫不得已 请勿执行，会停库</p>
<h5 id="9-导出表结构"><a href="#9-导出表结构" class="headerlink" title="9.导出表结构"></a>9.导出表结构</h5><p>pg_dump命令可以导出数据库中的表结构 -s 选项用来只导出表结构，而不会导出表中的数据 -t 选项用来指定要导出的数据库表 pg_dump -s -t tablename dbname &gt; /home/gpadmin/temp.sql dbname 是数据库，tablename 是dbname 中的表，/home/gpadmin/temp.sql是定向到的文件. 如果数据库是远程的，需要指定主机，端口，用户等 pg_dump -h host -p port -U username -s -t tablename dbname &gt; /home/gpadmin/temp.sql</p>
<h5 id="10-数据库僵尸进程处理"><a href="#10-数据库僵尸进程处理" class="headerlink" title="10.数据库僵尸进程处理"></a>10.数据库僵尸进程处理</h5><p>首先使用kill -15 去停止进程，kill -15 不响应，再用kill -11; 一般情况下，不要用kill -9，否则可能导致数据库宕机且状态不一致，严重的导致数据库不能重新启动，可能需要用pg_resetxlog去重置日志，有可能导致数据丢失；</p>
<h5 id="11-copy导出、导入数据文件"><a href="#11-copy导出、导入数据文件" class="headerlink" title="11.copy导出、导入数据文件"></a>11.copy导出、导入数据文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">导出：</span><br><span class="line">copy (select的结果集) to &#x27;导出文件存放路径&#x27; with 文件类型 header;</span><br><span class="line">copy (select * from ditie) to &#x27;/home/gpadmin/ditie.csv&#x27; with csv header;</span><br><span class="line"></span><br><span class="line">导入:</span><br><span class="line">copy 表名 from &#x27;数据源路径&#x27; with 数据源文件类型 header;</span><br><span class="line">copy ditie from &#x27;/home/gpadmin/ditie.csv&#x27; with csv header;</span><br><span class="line"></span><br><span class="line">//将文件ditie.csv导入到数据表ditie,DELIMITER选项将不同的字符指定为值分隔符* </span><br><span class="line">copy ditie to &#x27;/home/gpadmin/ditie.csv&#x27; WITH DELIMITER AS &#x27;,&#x27;;</span><br></pre></td></tr></table></figure>

<h5 id="12-建立分区-删除分区"><a href="#12-建立分区-删除分区" class="headerlink" title="12.建立分区/删除分区"></a>12.建立分区/删除分区</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">删除分区：</span><br><span class="line">ALTER TABLE 表名 DROP PARTITION p_200601;</span><br><span class="line">ALTER TABLE 表名 DROP PARTITION p_20060102;</span><br><span class="line">ALTER TABLE 表名 DROP PARTITION p_20060102_15;</span><br><span class="line">alter table sts_misc5m_s6a_lu_1h drop partition p_20180122_00;</span><br><span class="line"></span><br><span class="line">新增/建立分区：</span><br><span class="line">ALTER TABLE yj_v2_raw_cgi_quality ADD PARTITION p_201902 START (text &#x27;20190201&#x27;) INCLUSIVE END (text &#x27;20190301&#x27;) EXCLUSIVE;</span><br></pre></td></tr></table></figure>

<h5 id="13-创建用户"><a href="#13-创建用户" class="headerlink" title="13.创建用户"></a>13.创建用户</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE ROLE select_user login password &#x27;Js_gp123!@#&#x27;;</span><br><span class="line">或者下面都可以：</span><br><span class="line">CREATE USER select_user WITH PASSWORD &#x27;Js_gp123!@#&#x27;;</span><br><span class="line"></span><br><span class="line">把USAGE权限给到select_user</span><br><span class="line">grant usage on schema smartinsight to select_user;</span><br><span class="line"></span><br><span class="line">#单独赋查询的权限</span><br><span class="line">GRANT SELECT ON TABLE zz_pm_nr_nsa_nrcellcu_minute20200923 TO select_user;</span><br><span class="line"></span><br><span class="line">GP集群虽然和pgsql差不多 但是也有本质区别因此不能使用：</span><br><span class="line">grant select on all tables in schema smartinsight to select_user;</span><br><span class="line">这个语句无效的详情：https://blog.csdn.net/weixin_42658788/article/details/88040209</span><br><span class="line"></span><br><span class="line">解决办法-创建一个函数：</span><br><span class="line">create or replace function grant_on_all_tables(schema text, usr text) </span><br><span class="line">returns setof text as $$ </span><br><span class="line">declare </span><br><span class="line">   r record ; </span><br><span class="line">   grantstmt text; </span><br><span class="line">begin </span><br><span class="line">   for r in select * from pg_class c, pg_namespace nsp </span><br><span class="line">       where c.relnamespace = nsp.oid AND c.relkind=&#x27;r&#x27; AND nspname = schema and (relname like &#x27;%JS_MR_SERVICE_CELL_MINUTE_%&#x27; or relname like &#x27;%JS_PM_LTE_EUTRANCELL_MINUTE_%&#x27;)</span><br><span class="line">   loop </span><br><span class="line">     grantstmt = &#x27;GRANT SELECT ON &quot;&#x27; quote_ident(schema)  &#x27;&quot;.&quot;&#x27;  </span><br><span class="line">quote_ident(r.relname)  &#x27;&quot; to &quot;&#x27;  quote_ident(usr)  &#x27;&quot;&#x27;; </span><br><span class="line"></span><br><span class="line">     EXECUTE grantstmt; </span><br><span class="line">     return next grantstmt; </span><br><span class="line">   end loop; </span><br><span class="line">end; </span><br><span class="line"></span><br><span class="line">$$ language plpgsql;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>gp数据库集群安装</category>
      </categories>
      <tags>
        <tag>Greenplum</tag>
      </tags>
  </entry>
  <entry>
    <title>GreenPlum维护年龄的处理</title>
    <url>/1718/</url>
    <content><![CDATA[<p>最常见的方法是通过此消息，警告您正在进行事务处理： WARNING: database “lte_mr” must be vacuumed within 113330803 transactions，如下图疯狂出现： <img src="http://qn.199604.com/typoraImg/image-20210422225724569.png" alt="image-20210422225724569"> 或者更糟糕的是，以下消息表明您已经完成了 <strong>transaction wraparound</strong></p>
<h5 id="处理方法："><a href="#处理方法：" class="headerlink" title="处理方法："></a>处理方法：</h5><p>在适当的数据库上执行建议的VACUUM; 这里我们使用默认数据库<code>lte_mr</code>，因此用适当的数据库名称替换该名称。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">psql <span class="operator">-</span>d lte_mr <span class="operator">-</span>c &quot;vacuum freeze&quot;</span><br></pre></td></tr></table></figure>

<p>当表的年龄大于autovacuum_freeze_max_age时（默认是2亿），autovacuum进程会自动对表进行freeze。</p>
<h5 id="–查询库xid"><a href="#–查询库xid" class="headerlink" title="–查询库xid"></a>–查询库xid</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> datname, age(datfrozenxid) <span class="keyword">FROM</span> pg_database;</span><br></pre></td></tr></table></figure>

<h5 id="查询每个表的xid使用程度："><a href="#查询每个表的xid使用程度：" class="headerlink" title="查询每个表的xid使用程度："></a>查询每个表的xid使用程度：</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> relname, age(relfrozenxid) <span class="keyword">as</span> xid_age, pg_size_pretty(pg_relation_size(oid)) <span class="keyword">as</span> table_size </span><br><span class="line"><span class="keyword">FROM</span> pg_class <span class="keyword">WHERE</span> relkind <span class="operator">=</span> <span class="string">&#x27;r&#x27;</span> <span class="keyword">and</span> pg_relation_size(oid) <span class="operator">&gt;</span> <span class="number">1073741824</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age(relfrozenxid) <span class="keyword">DESC</span> LIMIT <span class="number">20</span>;</span><br></pre></td></tr></table></figure>

<p>建议使用vacuum freeze [ table_name ] 来对指定的表进行xid 冻结清理,因为整个库的话基本上时间无法确认</p>
<h5 id="批量操作："><a href="#批量操作：" class="headerlink" title="批量操作："></a>批量操作：</h5><h6 id="每个表进行操作："><a href="#每个表进行操作：" class="headerlink" title="每个表进行操作："></a>每个表进行操作：</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;psql -d lte_mr&#x27;</span>  <span class="string">&#x27; &#x27;</span>  <span class="string">&#x27;&quot;VACUUM FREEZE &#x27;</span> schemaname  <span class="string">&#x27;.&#x27;</span> tablename  <span class="string">&#x27;&quot;;&#x27;</span> </span><br><span class="line"><span class="keyword">from</span> pg_tables</span><br></pre></td></tr></table></figure>

<p>先执行这个sql 把这个sql 的执行结果重定向到一个sql文件中，然后执行这个文件即可。</p>
<h6 id="直接数据库级别进行操作："><a href="#直接数据库级别进行操作：" class="headerlink" title="直接数据库级别进行操作："></a>直接数据库级别进行操作：</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">source /home/gpadmin/.bash_profile</span><br><span class="line">psql -d postgres -c &quot;vacuum freeze&quot;</span><br><span class="line">psql -d lte_mr -c &quot;vacuum freeze&quot;</span><br><span class="line">psql -d pe2e_lte -c &quot;vacuum freeze&quot;</span><br></pre></td></tr></table></figure>

<p>在直接执行<code>nohup sh vacuum.sh &gt; vacuum.log 2&gt;&amp;1 &amp;</code>命令 参考：<a href="https://blog.csdn.net/MyySophia/article/details/78925011">https://blog.csdn.net/MyySophia/article/details/78925011</a></p>
]]></content>
      <categories>
        <category>GreenPlum</category>
        <category>postgresql</category>
      </categories>
      <tags>
        <tag>Greenplum</tag>
      </tags>
  </entry>
  <entry>
    <title>hadoop+hive+tez+kerberos安装配置</title>
    <url>/1216/</url>
    <content><![CDATA[<p>这篇文章在：<a href="https://199604.com/1164">Tez-On-Hive环境搭建手札</a>的基础上新增了安全和权证认证。 具体想看的话，下载一下吧，因为贼长就放到word文档里面吧 下载地址1:<a href="http://qn.199604.com/hadoop+hive+tez+kerberos%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.docx">hadoop+hive+tez+kerberos安装配置(七牛云下载)</a> 下载地址2：<a href="http://199604.com/wp-content/uploads/2019/07/199604.com_2019-07-15_06-15-17.docx">本地下载</a></p>
<hr>
<p><img src="http://qn.199604.com/wp-content/uploads/2017/07/zhifubao.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/weixin.png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>hadoop</tag>
        <tag>Kerberos</tag>
        <tag>tez</tag>
      </tags>
  </entry>
  <entry>
    <title>hadoop--HDFS(fs)常用命令</title>
    <url>/924/</url>
    <content><![CDATA[<h2 id="fs最常用命令"><a href="#fs最常用命令" class="headerlink" title="fs最常用命令"></a>fs最常用命令</h2><p>bin/hadoop fs -ls hdfs_path    //查看HDFS目录下的文件和子目录<br>bin/hadoop fs -mkdir hdfs_path    //在HDFS上创建文件夹<br>bin/hadoop fs -rm hdfs_path    //删除HDFS上的文件<br>bin/hadoop fs -rmr hdfs_path    //删除HDFS上的文件夹<br>bin/hadoop fs -put local_file hdfs_path    //将本地文件copy到HDFS上<br>bin/hadoop fs -get hdfs_file local_path    //复制HDFS文件到本地<br>bin/hadoop fs -cat hdfs_file    //查看HDFS上某文件的内容</p>
<h2 id="查看目录下文件（夹）大小"><a href="#查看目录下文件（夹）大小" class="headerlink" title="查看目录下文件（夹）大小"></a>查看目录下文件（夹）大小</h2><p>//单位Byte：<br>bin/hadoop fs -du /  sort -n<br>//单位MB：<br>bin/hadoop fs -du /  awk -F ‘ ‘  ‘{printf “%.2fMB\t\t%s\n”, $1/1024/1024,$2}’  sort -n<br>//单位GB，大于1G：<br>bin/hadoop fs -du /  awk -F ‘ ‘  ‘{num=$1/1024/1024/1024; if(num&gt;1){printf “%.2fGB\t\t%s\n”, num, $2} }’  sort -n</p>
<h2 id="fs命令大全"><a href="#fs命令大全" class="headerlink" title="fs命令大全"></a>fs命令大全</h2><p>hadoop fs [genericOpitions]<br>[-ls <path>]  //显示目标路径当前目录下的所有文件<br>[-lsr <path>]  //递归显示目标路径下的所有目录及文件（深度优先）<br>[-du <path>]  //以字节为单位显示目录中所有文件的大小，或该文件的大小（如果path为文件）<br>[-dus <paht>]  //以字节为单位显示目标文件大小（用于查看文件夹大小）<br>[-count [-q] <path>]  //将目录的大小、包含文件（包括文件）个数的信息输出到屏幕（标准stdout）<br>[-mv <src> <dst>]  //把文件或目录移动到目标路径，这个命令允许同时移动多个文件，但是只允许移动到一个目标路径中，参数中的最有一个文件夹即为目标路径<br>[-cp <src> <dst>]  //复制文件或目录到目标路径，这个命令允许同时复制多个文件，如果复制多个文件，目标路径必须是文件夹<br>[-rm [-skipTrash] <path>]  //删除文件，这个命令不能删除文件夹<br>[-rmr [-skipTrash] <path>]  //删除文件夹及其下的所有文件<br>[-expunge]<br>[-put <localsrc> … <dst>]  //从本地文件系统上传文件到HDFS中<br>[-copyFromLocal <localsrc> … <dst>]  //与put相同<br>[-moveFromLocal <localsrc> … <dst>]  //与put相同，但是文件上传之后会从本地文件系统中移除<br>[-get [-ignoreCrc] [-crc] <src> <localdst>]  //复制文件到本地文件系统。这个命令可以选择是否忽视校验和，忽视校验和和下载主要用于挽救那些已经发生错误的文件<br>[-getmerge <src> <localdst> [addnl]]  //将源目录中的所有文件进行排序并写入目标文件中，文件之间以换行符分隔<br>[-cat <src>]  //在终端显示（标准输出stdout）文件中的内容，类似Linux系统中的cat<br>[-text <src>]<br>[-copyToLocal [-ignoreCrc] [-crc] <src> <localdst>] //与get相同<br>[-moveToLocal [-crc] <src> <localdst>]<br>[-mkidr <path>]  //创建文件夹<br>[-setrep [-R] [-w] <rep> &lt;path/file&gt;]  //改变一个文件的副本个数。参数-R可以递归地对该目录下的所有文件做统一操作<br>[-touchz <path>]  //类似Linux中的touch，创建一个空文件<br>[-test -[ezd] <path>]  //将源文件输出为文本格式显示到终端上，通过这个命令可以查看TextRecordInputStream（SequenceFile等）或zip文件<br>[-stat [format] <path>]  //以指定格式返回路径的信息<br>[-tail [-f] <file>]  //在终端上显示（标准输出stdout）文件的最后1kb内容。-f选项的行为与LInux中一致，会持续监测先添加到文件中的内容，这在查看日志文件时会显得非常方便。<br>[-chmod [-R] &lt;MODE[,MODE]… OCTALMODE&gt; PATH…]  //改变文件的权限，只有文件的所有者或者是超级用户才能使用这个命令。-R可以递归地改变文件夹内的所有文件的权限<br>[-chown [-R] [OWNER] [:[GROUP] PATH…]]  //改变文件的拥有者，-R可以递归地改变文件夹内所有文件的拥有者。同样，这个命令只有超级用户才能使用<br>[-chgrp [-R] GROUP PATH…]  //改变文件所属的组，-R可以递归地改变文件夹内所有文件所属的组。这个命令必须是超级用户才能使用<br>[-help [cmd]]  //这是命令的帮助信息</p>
<p>自己常用的fs命令</p>
<p> hadoop fs -mkdir /user/jfa5d/glj_test/GZ23G/IOT/MAMS_IOT_GZ23G_S1U/20180628/  创建文件夹<br> hadoop fs -ls /user/jfa5d/glj_test/GZ23G/IOT/MAMS_IOT_GZ23G_S1U/20180628/ 显示目录文件<br> hadoop fs -mv /user/hadoop/file1 /user/hadoop/file2<br> hadoop fs -mv /user/jfa5d/glj_test/20180704/MAMS_IOT_GZ23G_S1U_20180703_20180704/* /user/jfa5d/glj_test/GZ23G/IOT/MAMS_IOT_GZ23G_S1U/20180703/ 把XX文件夹下的文件移动到XX文件夹下<br> hadoop fs -rmr /user/hadoop/file1    //删除HDFS上的文件夹</p>
<hr>
<p><img src="http://qn.199604.com/wp-content/uploads/2017/07/zhifubao.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/weixin.png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>HBase写入性能调优</title>
    <url>/1731/</url>
    <content><![CDATA[<p>优化指定客户机群的单台HBase节点的稳定写入速度至不少于9.4MB/s。 （1）关掉HLog</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">put.setWriteToWAL(false);</span><br></pre></td></tr></table></figure>

<p>（2）加大JVM内存&gt;=90GB （3）使用mapreduce批量写入（4）调大写缓存，调小读缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase.regionserver.global.memestore.upperlimit = 0.5</span><br><span class="line">hfile.block.cache.size = 0.3</span><br></pre></td></tr></table></figure>

<p>（5）使用批量写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">table.put(puts)</span><br></pre></td></tr></table></figure>

<p>（6）autoflush设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">table.setAutoFlush(false)</span><br><span class="line"> ...</span><br><span class="line"> table.flushCommits();</span><br><span class="line"> 或者设置 </span><br><span class="line"> hbase.client.write.buffer</span><br></pre></td></tr></table></figure>

<p>（7）延迟日志flush</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase.regionserver.optionallogflushinterval</span><br><span class="line"> 默认1s，增大改值</span><br></pre></td></tr></table></figure>

<p>（8）增大regionserver handler数量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase.regionserver.handler.count=300</span><br></pre></td></tr></table></figure>

<h2 id="HBase服务端调优"><a href="#HBase服务端调优" class="headerlink" title="HBase服务端调优"></a><strong>HBase服务端调优</strong></h2><h2 id="GC-OPTS"><a href="#GC-OPTS" class="headerlink" title="GC_OPTS"></a><strong>GC_OPTS</strong></h2><p>HBase是利用内存完成读写操作。提高HBase内存可以有效提高HBase性能。GC_OPTS主要需要调整HeapSize和NewSize的大小。调整HeapSize大小的时候，建议将Xms和Xmx设置成相同的值，这样可以避免JVM动态调整HeapSize大小的时候影响性能。调整NewSize大小的时候，建议把其设置为HeapSize大小的1/9。 当HBase集群规模越大，Region数量越多时，可以适当调大HMaster的GC_OPTS参数 RegionServer需要比HMaster更大的内存，在内存充足的情况下，HeapSize可以相对设置大一些。 HMaster的HeapSize为4G的时候，HBase集群可以支持100000个Region的规模。根据经验值，单个RegionServer的HeapSize不建议超过20GB。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HMaster、RegionServer GC_OPTS配置如下：</span><br><span class="line">HMaster: -Xms2G -Xmx2G -XX:NewSize=256M -XX:MaxNewSize=256M </span><br><span class="line">RegionServer: -Xms4G -Xmx4G -XX:NewSize=512M -XX:MaxNewSize=512M</span><br></pre></td></tr></table></figure>

<h2 id="RegionServer并发请求处理数量"><a href="#RegionServer并发请求处理数量" class="headerlink" title="RegionServer并发请求处理数量"></a><strong>RegionServer并发请求处理数量</strong></h2><p><code>hbase.regionserver.handler.count</code>表示RegionServer在同一时刻能够并发处理多少请求。如果设置过高会导致激烈的线程竞争，如果设置过小，请求将会在RegionServer长时间等待，降低处理能力。应该根据资源情况，适当增加处理线程数。</p>
<blockquote>
<p>建议根据CPU的使用情况，可以设置为100至300之间的值。</p>
</blockquote>
<h2 id="控制MemStore的大小"><a href="#控制MemStore的大小" class="headerlink" title="控制MemStore的大小"></a><strong>控制MemStore的大小</strong></h2><p><code>hbase.hregion.memstore.flush.size</code>默认值128M，单位字节，一旦有MemStore超过该值将被flush，如果regionserver的jvm内存比较充足(16G以上)，可以调整为256M。在内存足够put负载大情况下可以调整增大。</p>
<h2 id="BlockCache优化"><a href="#BlockCache优化" class="headerlink" title="BlockCache优化"></a><strong>BlockCache优化</strong></h2><p>BlockCache作为读缓存，合理设置对于提高读性能非常重要。默认情况下，BlockCache和MemStore的配置各占40%，可以根据集群业务进行修正，比如读多写少业务可以将BlockCache占比调大。另外BlockCache的策略也很重要，不同策略对读性能来说影响并不大，但是对GC的影响 却很显著。 HBase缓存区大小，主要影响查询性能。根据查询模式以及查询记录分布情况来决定缓存区的大小。如果采用随机查询使得缓存区的命中率较低，可以适当降低缓存大小。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hfile.block.cache.size，默认0.4，用来提高读性能</span><br><span class="line">hbase.regionserver.global.memstore.size，默认0.4，用来提高写性能</span><br></pre></td></tr></table></figure>

<h2 id="控制HFile个数"><a href="#控制HFile个数" class="headerlink" title="控制HFile个数"></a><strong>控制HFile个数</strong></h2><p>MemStore在flush之前，会进行StoreFile的文件数量校验（通过<code>hbase.hstore.blockingStoreFiles</code>参数配置），如果大于设定值，系统将会强制执行Compaction操作进行文件合并，在合并的过程中会阻塞MemStore的数据写入，等待其他线程将StoreFile进行合并。通常情况下发生在数据写入很快的情况下。 <code>hbase.hstore.compactionThreshold</code>表示启动Compaction的最低阈值，该值不能太大，否则会积累太多文件，一般建议设置为5～8左右。 <code>hbase.hstore.blockingStoreFiles</code>默认设置为7，可以适当调大一些。</p>
<h2 id="Split优化"><a href="#Split优化" class="headerlink" title="Split优化"></a><strong>Split优化</strong></h2><p><code>hbase.hregion.max.filesize</code>表示HBase中Region的文件总大小的最大值。当Region中的文件大于该参数时，将会导致Region分裂。</p>
<ul>
<li>  如果该参数设置过小时，可能会导致Split操作频繁</li>
<li>  如果该参数设置过大时，会导致Compaction操作需要处理的文件个数增大，影响Compaction执行效率</li>
</ul>
<h2 id="Compaction优化"><a href="#Compaction优化" class="headerlink" title="Compaction优化"></a><strong>Compaction优化</strong></h2><p><code>hbase.hstore.compaction.min</code>当一个Store中文件超过该值时，会进行Compaction，适当增大该值，可以减少文件被重复执行Compaction。但是如果过大，会导致Store中文件数过多而影响读取的性能。 <code>hbase.hstore.compaction.max</code>控制一次Compaction操作时的文件数据量的最大值。 <code>hbase.hstore.compaction.max.size</code>如果一个HFile文件的大小大于该值，那么在Minor Compaction操作中不会选择这个文件进行Compaction操作，除非进行Major Compaction操作。这个值可以防止较大的HFile参与Compaction操作。在禁止Major Compaction后，一个Store中可能存在几个HFile，而不会合并成为一个HFile，这样不会对数据读取造成太大的性能影响。</p>
<blockquote>
<p>原则是：尽量要减小Compaction的次数和Compaction的执行时间</p>
</blockquote>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/70365703">https://zhuanlan.zhihu.com/p/70365703</a></p>
]]></content>
      <categories>
        <category>hbase</category>
      </categories>
      <tags>
        <tag>hbase</tag>
      </tags>
  </entry>
  <entry>
    <title>hbase导出数据方法一(避免乱码)</title>
    <url>/1614/</url>
    <content><![CDATA[<p>使用环境CDH5.16.1</p>
<h5 id="1-建立一个Hive管理Hbase表的外部表"><a href="#1-建立一个Hive管理Hbase表的外部表" class="headerlink" title="1.建立一个Hive管理Hbase表的外部表"></a>1.建立一个Hive管理Hbase表的外部表</h5><p>下面是demo:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//切换到hive用户</span><br><span class="line">sudo hive</span><br><span class="line"></span><br><span class="line">create EXTERNAL table v2_mdt_grid_date_gh_cgi</span><br><span class="line">(</span><br><span class="line">key String,</span><br><span class="line">cgi String,</span><br><span class="line">gh String,</span><br><span class="line">cnt_cm String,</span><br><span class="line">cnt_ct String,</span><br><span class="line">cnt_cu String,</span><br><span class="line">cnt_nc String,</span><br><span class="line">cnt_over_lap String,</span><br><span class="line">cnt_rsrp_110 String,</span><br><span class="line">cnt_rsrp_110_sinr_3 String,</span><br><span class="line">cnt_rsrq String,</span><br><span class="line">cnt_rsrq_15 String,</span><br><span class="line">cnt_sc String,</span><br><span class="line">cnt_sinr String,</span><br><span class="line">cnt_sinr_0 String,</span><br><span class="line">cnt_sinr_3 String,</span><br><span class="line">over_lap_rate String,</span><br><span class="line">sum_cmrsrp String,</span><br><span class="line">sum_ctrsrp String,</span><br><span class="line">sum_cursrp String,</span><br><span class="line">sum_nc_rsrp String,</span><br><span class="line">sum_rsrq String,</span><br><span class="line">sum_sc_rsrp String,</span><br><span class="line">sum_sinr String</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#x27;&#x27;</span><br><span class="line">STORED BY &#x27;org.apache.hadoop.hive.hbase.HBaseStorageHandler&#x27;</span><br><span class="line">WITH SERDEPROPERTIES(&quot;hbase.columns.mapping&quot; = </span><br><span class="line">&quot;</span><br><span class="line">:key,</span><br><span class="line">attr:cgi,</span><br><span class="line">attr:gh,</span><br><span class="line">imm:cnt_cm,</span><br><span class="line">imm:cnt_ct,</span><br><span class="line">imm:cnt_cu,</span><br><span class="line">imm:cnt_nc,</span><br><span class="line">imm:cnt_over_lap,</span><br><span class="line">imm:cnt_rsrp_110,</span><br><span class="line">imm:cnt_rsrp_110_sinr_3,</span><br><span class="line">imm:cnt_rsrq,</span><br><span class="line">imm:cnt_rsrq_15,</span><br><span class="line">imm:cnt_sc,</span><br><span class="line">imm:cnt_sinr,</span><br><span class="line">imm:cnt_sinr_0,</span><br><span class="line">imm:cnt_sinr_3,</span><br><span class="line">imm:over_lap_rate,</span><br><span class="line">imm:sum_cmrsrp,</span><br><span class="line">imm:sum_ctrsrp,</span><br><span class="line">imm:sum_cursrp,</span><br><span class="line">imm:sum_nc_rsrp,</span><br><span class="line">imm:sum_rsrq,</span><br><span class="line">imm:sum_sc_rsrp,</span><br><span class="line">imm:sum_sinr&quot;)</span><br><span class="line">TBLPROPERTIES(&quot;hbase.table.name&quot; = &quot;v2.mdt.grid.date_gh_cgi&quot;);</span><br></pre></td></tr></table></figure>

<p>其中hive表名不能含义”.”,hive字段与hbase字段一一对应。 ps:</p>
<h6 id="快速获取hbase表字段方法："><a href="#快速获取hbase表字段方法：" class="headerlink" title="快速获取hbase表字段方法："></a>快速获取hbase表字段方法：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase shell</span><br><span class="line">//获取所有hbase表</span><br><span class="line">list</span><br><span class="line">//查询某个表key</span><br><span class="line">scan &#x27;v2.mdt.grid.date_gh_cgi&#x27;,&#123;LIMIT=&gt;1&#125;</span><br><span class="line">//根据key拿到对应的字段</span><br><span class="line">get &#x27;v2.mdt.grid.date_gh_cgi&#x27;,&#x27;190701_s00001nks_101179-135&#x27;</span><br><span class="line"></span><br><span class="line">//如果遇到字段太多可退出执行：</span><br><span class="line">echo &quot;get &#x27;v2.mdt.grid.date_gh_cgi&#x27;,&#x27;190701_s00001nks_101179-135&#x27;&quot;  hbase shell &gt; /home/xxx.txt</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/image-20200825143634062.png" alt="image-20200825143634062"> 通过编辑器正则去除 <img src="http://qn.199604.com/typoraImg/image-20200825143917781.png" alt="image-20200825143917781"> <img src="http://qn.199604.com/typoraImg/image-20200825143933763.png" alt="image-20200825143933763"></p>
<h5 id="2-检查是否创建表成功并且有了hbase表的数据："><a href="#2-检查是否创建表成功并且有了hbase表的数据：" class="headerlink" title="2.检查是否创建表成功并且有了hbase表的数据："></a>2.检查是否创建表成功并且有了hbase表的数据：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hive;</span><br><span class="line">//连接hive</span><br><span class="line">hive</span><br><span class="line"></span><br><span class="line">#记得加分页不然后果很严重！！！！！！！！！</span><br><span class="line">select * from v2_mdt_grid_date_gh_cgi limit 10;</span><br></pre></td></tr></table></figure>

<p>在hive查询sql时记得加分页不然后果很严重！！！！！！！！！</p>
<h5 id="3-导出数据到hdfs"><a href="#3-导出数据到hdfs" class="headerlink" title="3.导出数据到hdfs:"></a>3.导出数据到hdfs:</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hive;</span><br><span class="line">//连接hive</span><br><span class="line">hive</span><br><span class="line"></span><br><span class="line">insert overwrite directory &#x27;/data1/output_glj&#x27;//导到hdfs那个位置。</span><br><span class="line">row format delimited fields terminated by &#x27;,&#x27;//分隔符 --&gt;hvie默认列分隔符为：‘/001’</span><br><span class="line">select * from v2_mdt_grid_date_gh_cgi limit 100;//（sql语句可以加自己的条件）</span><br></pre></td></tr></table></figure>

<h5 id="4-从HDFS导出数据到本地服务器："><a href="#4-从HDFS导出数据到本地服务器：" class="headerlink" title="4.从HDFS导出数据到本地服务器："></a>4.从HDFS导出数据到本地服务器：</h5><p>getmerge命令是合并多个hdfs文件成一个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -getmerge /data1/output_glj/ /data1/output/glj_test.txt</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://www.jianshu.com/p/86ff9d7459b7">https://www.jianshu.com/p/86ff9d7459b7</a></p>
]]></content>
      <categories>
        <category>CDH</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>hadoop</tag>
        <tag>hbase</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/1748/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<span id="more"></span>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate配置属性hibernate.hbm2ddl.auto</title>
    <url>/985/</url>
    <content><![CDATA[<p>最近团队同事在配置文件上用到了hibernate.hbm2ddl.auto,把配置文件下关联的bean对应的数据表给清空了,问题不算很严重影响也只是开发测试环境的数据，可是也需要自己记录下吧。虽然现在很多公司越来越少用到Hibernate.而转到Mybatis,但是自己现在维护开发的两个系统项目都用到hibernate,避免犯错误，因为恢复这几个表都弄了快一天..心累的底层开发仔…</p>
<hr>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们在本地作开发时或者项目刚开始时，经常会定义好实体，继而在相应的数据库中建表。而这样建表继烦琐，浪费时间，又容易出错。而这时候Hibernate的hibernate.hbm2ddl.auto配置项会帮助我们根据定义好的实体，自动创建，更新，验证数据库表…</p>
<p>hibernate.cfg.xml 中hibernate.hbm2ddl.auto配置节点如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;properties&gt;   </span><br><span class="line">  &lt;!-- 没有必要的话,最好注销此函数 --&gt;</span><br><span class="line">  &lt;property name=&quot;hibernate.hbm2ddl.auto&quot; value=&quot;create&quot; /&gt;</span><br><span class="line">&lt;/properties&gt;</span><br></pre></td></tr></table></figure>

<p>hibernate.hbm2ddl.auto有好几个属性项：</p>
<p>1.none(默认)</p>
<p>在Hiberante启动时，不会执行任何操作</p>
<p>2.create-only</p>
<p>在Hibernate启动时，对实体仅会执行建表语句，即使实体对应的表已经存在了，也会重复执行建表语句</p>
<p>3.drop</p>
<p>在Hiberante启动时，对实体对应的表执行删除语句，即使实体不存在对应的表，都会执行表删除语句</p>
<p>4.create</p>
<p>在Hiberante启动时，对实体对应的表执行删除语句，然后再执行建表语句</p>
<p>5.create-drop</p>
<p>在Hibernate启动时，对实体对应的表执行删除语句，然后执行建表语句。在Hibernate关闭时，实体对应的表执行删除语句</p>
<p>6.validate</p>
<p>对实体和对应的表进行校验</p>
<p>7.update</p>
<p>实体对应的表如果不存在则会创建。如果实体中新增加了字段，会在相应的表中增加一列</p>
<p>怎么多参数,以前学习Hibernate时候,自己用到就以下几个:</p>
<p>validate:每次加载hibernate时，验证创建数据库表结构</p>
<p>create:每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因</p>
<p>create-drop:每次加载hibernate时创建，退出则是删除表结构</p>
<p>update:每次加载hibernate时更新表，不存在则创建，省去了手动更新数据库表的麻烦(此时事故原因)</p>
<p>ps:hibernate.hbm2ddl.auto配置项会对这个配置文件下所有的映射表都起作用!!!!!(慎用)</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.请慎重使用hibernate.hbm2ddl.auto，没必要就不要随便用</p>
<p>2.如果发现数据库表丢失，请检查配置了hibernate.hbm2ddl.auto</p>
<p>3.一般情况下都是使用validate或者update。 如果希望基于代码来构建数据库表结构,就可以使用update.其余的选项使用较少,尤其会删除掉数据库中的数据</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>JAVA</tag>
        <tag>hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive/ORACLE计算天数差</title>
    <url>/1061/</url>
    <content><![CDATA[<p>Hive计算天数时间差，有官方封装好的datediff函数.</p>
<p>在Hive上输入:desc function extended datediff;即可查看此函数介绍。</p>
<p><img src="http://qn.199604.com/typoraImg/t20190223132315-1-1024x228.png" alt="img"></p>
<p>OK<br>datediff(date1, date2) - Returns the number of days between date1 and date2<br>date1 and date2 are strings in the format ‘yyyy-MM-dd HH:mm:ss’ or ‘yyyy-MM-dd’. The time parts are ignored.If date1 is earlier than date2, the result is negative.<br>Example:<br>&gt;&gt; SELECT datediff(‘2009-07-30’, ‘2009-07-31’) FROM src LIMIT 1; &gt;&gt;结果：1</p>
<p>从上面的官方描述可以看出datediff用法很简单，就是datediff(‘日期1’,’日期2’)，其中日期是有格式的，目前支持以下两种格式：yyyy-MM-dd HH:mm:ss、yyyy-MM-dd</p>
<p>举例：获取两个时间之间差（day）</p>
<p>select datediff(‘2019-01-31’,’2019-01-20’) from test limit 1;<br>//String转date类型yyyy-mm-dd<br>select datediff(from_unixtime(unix_timestamp(‘20190131’,’yyyymmdd’),’yyyy-mm-dd’),from_unixtime(unix_timestamp(‘20190101’,’yyyymmdd’),’yyyy-mm-dd’)) AS DCOUNT<br>from test limit 1;<br>//如何格式是yyyy/mm/dd需要用hive的regexp_replace函数转换<br>SELECT datediff(regexp_replace(‘2019/01/31’, “/“, “-“),regexp_replace(‘2019/01/20’, “/“, “-“)) FROM test LIMIT 1;</p>
<p>如果不记得函数的介绍的话，可以多show functions,学习了解回顾各种hive function</p>
<hr>
<p>Oracle计算时间差</p>
<p>获</p>
<p>获取两时间的相差豪秒数<br>select ceil((To_date(‘2019-01-30 00:00:00’ , ‘yyyy-mm-dd hh24-mi-ss’) - To_date(‘2019-01-01 23:59:59’ , ‘yyyy-mm-dd hh24-mi-ss’)) * 24 * 60 * 60 * 1000) 相差豪秒数 FROM DUAL;</p>
<p>获取两时间的相差秒数<br>select ceil((To_date(‘2019-01-30 00:00:00’ , ‘yyyy-mm-dd hh24-mi-ss’) - To_date(‘2019-01-01 23:59:59’ , ‘yyyy-mm-dd hh24-mi-ss’)) * 24 * 60 * 60) 相差秒数 FROM DUAL;</p>
<p>获取两时间的相差分钟数<br>select ceil(((To_date(‘2019-01-30 00:00:00’ , ‘yyyy-mm-dd hh24-mi-ss’) - To_date(‘2019-01-01 23:59:59’ , ‘yyyy-mm-dd hh24-mi-ss’))) * 24 * 60) 相差分钟数 FROM DUAL;</p>
<p>获取两时间的相差小时数<br>select ceil((To_date(‘2019-01-30 00:00:00’ , ‘yyyy-mm-dd hh24-mi-ss’) - To_date(‘2019-01-01 23:59:59’ , ‘yyyy-mm-dd hh24-mi-ss’)) * 24) 相差小时数 FROM DUAL;</p>
<p>获取两时间的相差天数<br>select ceil((To_date(‘2019-01-30 00:00:00’ , ‘yyyy-mm-dd hh24-mi-ss’) - To_date(‘2019-01-01 23:59:59’ , ‘yyyy-mm-dd hh24-mi-ss’))) 相差天数 FROM DUAL;</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-Hive空值、NULL判断</title>
    <url>/961/</url>
    <content><![CDATA[<p>最近经常在Hive上跑oralce 语句，虽然Hive执行语句大致相同，可是也有一些大坑..比如就是空值和null判断</p>
<p>在oralce 判断是否为空直接可以 xxx is null / xxx is not null;</p>
<p>而在Hive上是这种方式是不对的。得到的结果一定是错的。</p>
<p>hive中空值判断基本分两种</p>
<p>1.NULL 与 \N(当字段为NULL时，hdfs文件用\N表示)</p>
<p>Hive在底层数据中如何保存和标识NULL，是由 alter table xxx(数据表名) set serdeproperties(‘serialization.null.format’ = ‘\N’); 参数控制的</p>
<p>比如：当字段=’’时，存储为null，可利用命令</p>
<p>alter table xxx(数据表名) set serdeproperties(‘serialization.null.format’ = ‘’);</p>
<p>实现遇到’’用null替换</p>
<p>2.’’ 与 length（xx）=0</p>
<p>‘’表示的是字段内容不为null且为空字符串，此时用 xxx is null 是无法查询这种值的，必须通过 xxx=’’ 或者 length(a)=0 查询 ,所以这里就是坑了，当内容为空是，用 xxx is null 是没有用哒</p>
<hr>
<p>然后解决了这个问题之后呢，也会出现hive上面是显示null,而把数据导出后变成\N</p>
<p>我自己的做法是把他做nvl操作，显示为’’这样oracle的话也是为null/空….(前提是字段比较少，如果字段比较多的话，还是修改底层数据的保存标识吧)</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-ctrl+c不能 kill job</title>
    <url>/975/</url>
    <content><![CDATA[<p>好了，终于说到这个。</p>
<p>是不是都觉得ctrl+c后退出hive窗口后就不会执行了?too young!!!!!!</p>
<p>在hive运行的过程中，采用 ctrl + c 的方法只是退出客户端，hive的job仍是在集群后台运行的!!!因为我就出现过一次,年轻阿程序在后台执行了一天还在跑，因为那数据有连表之后有100E左右。使用的资源也占了鸡巴多..</p>
<p><img src="http://qn.199604.com/typoraImg/qqqq20181127171116-1024x165.png" alt="img"></p>
<p>想要真正kill掉job，需要执行指令 hadoop job -kill job_id 指令!!!</p>
<p>别再以为ctrl+c无敌了,不然你会后悔一辈子的..</p>
<p>比如当你在执行一个job</p>
<p><img src="http://qn.199604.com/typoraImg/qqq20181127170752.png" alt="img"></p>
<p>job = job_1536239054008_141574</p>
<p>所以 要kill掉这个job –&gt;hadoop job -kill job_1536239054008_141574</p>
<hr>
<p>4.作业命令</p>
<p>mapred job -list –查看所有正在运行的job</p>
<p>mapred job -kill job_id 停止指定iobid作业</p>
<p>5.资源命令</p>
<p>yarn application -list 查看所有YARN正在运行的任务</p>
<p>yarn application -kill application_id 停止指定application_id任务!</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-hive having count 不能去重</title>
    <url>/973/</url>
    <content><![CDATA[<p>hive在group by xx having count()是不支持去重计数的。</p>
<p>不信的话，你们可以试下类似的代码?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT IMEI,IP,FT,LT,CASE WHEN FT = LT THEN 1 ELSE 0 END IS_O_DAY</span><br><span class="line">FROM temp_gz23g_IP_1878910_2 b</span><br><span class="line">WHERE b.IP IN ( </span><br><span class="line">SELECT a.IP FROM temp_gz23g_IP_1878910_2 a WHERE a.IP !=&#x27;&#x27;</span><br><span class="line">GROUP BY a.IP HAVING COUNT(DISTINCT a.IMEI) = 1)</span><br></pre></td></tr></table></figure>

<p>然后在hive执行的话，会报错：Error: Error while compiling statement: FAILED: SemanticException Line 6:36 Invalid column reference ‘IMEI’ in definition of SubQuery sq_1</p>
<p>如果想执行的话，那就在里面套一层：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT IMEI,ip,FT,LT,CASE WHEN FT = LT THEN 1 ELSE 0 END IS_O_DAY</span><br><span class="line">FROM temp_gz23g_IP_1878910_2</span><br><span class="line">WHERE ip IN( </span><br><span class="line">SELECT ip FROM(</span><br><span class="line">SELECT ip,COUNT(DISTINCT IMEI) d_imei_num FROM temp_gz23g_IP_1878910_2</span><br><span class="line">WHERE ip !=&#x27;&#x27; GROUP BY ip)a where d_imei_num=1)</span><br></pre></td></tr></table></figure>

<p>好了.记录完毕</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-HIVE处理非等值连接（JOIN XX ON XX LIKE XX）</title>
    <url>/970/</url>
    <content><![CDATA[<p>SELECT * FROM TABLE1 A LEFT OUTER JOIN TABLE2 B ON A.XX LIKE CONCAT(‘%’ , B.YY , ‘%’)</p>
<p>这个语句在oralce 或者mysql 都可以执行</p>
<p>可是用以上代码放到HIVE中执行，发现报错，原因是HIVE不支持非等值连接。</p>
<p>所以还是用最老套的办法</p>
<p>SELECT * FROM TABLE1 A ,TABLE2 B WHERE A.XX LIKE CONCAT(‘%’ , B.YY , ‘%’)</p>
<p>达到相同的办法吧，虽然这个真的把性能和速度降低了N倍，但是hive真的只能这样吧（自己想到的办法）</p>
<p>然后也可以使用 LOCATE(substr , str) 函数，如果包含，则返回 &gt;0 的数，否则返回0</p>
<p>select b.rule_id,a.imei from table1 a left outer join table1 b ON(TRUE)/1=1 WHERE LOCATE(upper(b.iot_rule),upper(a.ua))&gt;0 limit 20;</p>
<p>至于为什么HIVE不支持非等值连接，这可能是因为Hive很难把不等条件翻译成mapreduce job</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-hive多个分隔符的问题</title>
    <url>/1140/</url>
    <content><![CDATA[<p>天就说说hive多个分隔符的问题。</p>
<p>多分隔符(列)这个问题，也是之前同事给我一份文件我才发现的…</p>
<p>这份文件上列分隔符是@#|</p>
<p>hive建表时,ROW FORMAT DELIMITED FIELDS TERMINATED BY ‘@#|’ 直接用@#|，发现输出的字段和文件不一致。</p>
<p>CREATE EXTERNAL TABLE IF NOT EXISTS hjx_temp_ua_190605<br>(<br>id String,ua_cut String,user_num String,ua String<br>)<br>ROW FORMAT DELIMITED FIELDS TERMINATED BY ‘@#|’<br>LINES TERMINATED BY ‘\n’<br>location ‘/user/jfa5d/hjx_temp/ua_temp/‘;</p>
<p>查了资料，hive创建表指定分隔符时，不支持多个字符作为分隔符(只支持单个)。</p>
<p><strong>Hive多分隔符支持</strong></p>
<p>Hive在0.14及以后版本支持字段的多分隔符，参考<a href="https://link.jianshu.com/?t=https://cwiki.apache.org/confluence/display/Hive/MultiDelimitSerDe">https://cwiki.apache.org/confluence/display/Hive/MultiDelimitSerDe</a></p>
<p>CREATE EXTERNAL TABLE IF NOT EXISTS hjx_temp_ua_1906052<br>(<br>id String,ua_cut String,user_num String,ua String<br>)<br>ROW FORMAT SERDE ‘org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe’ WITH SERDEPROPERTIES (“field.delim”=”@#|”)<br>stored as textfile location ‘/user/jfa5d/hjx_temp/ua_temp2/‘;</p>
<p>关键语句为：</p>
<p>ROW FORMAT SERDE ‘org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe’ WITH SERDEPROPERTIES (“field.delim”=”@#|”)<br>stored as textfile location ‘/user/jfa5d/hjx_temp/ua_temp2/‘;</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>hadoop</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-Hive导出指定分隔符</title>
    <url>/1143/</url>
    <content><![CDATA[<p>应该都指定hvie默认列分隔符为：‘/001’，有时候导出ua数据，会出现乱码或者包含了默认分隔符；再或者我们需要导出数据时，想用自己指定的分隔符…. 应该可以用这个了…</p>
<p>把文件导出到hdfs随便的目录？</p>
<p>insert overwrite directory ‘/user/jfa5d/glj_test/pushFile’</p>
<p>row format delimited fields terminated by ‘,’</p>
<p>select * from tableName（sql语句可以加自己的条件）;</p>
<p>然后自己想把他变成.csv或者.txt后缀的文件就可以用类似下面的命令，其他你自己改咯</p>
<p>hadoop fs -getmerge /user/jfa5d/glj_test/pushFile/* /home/a5duser/glj/x.csv</p>
<p>或者自己也可以直接用sqoop入库或者其他方式吧….</p>
<p><img src="http://qn.199604.com/typoraImg/739567083325876030.jpg"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-Hive的insert与with as 语句搭配</title>
    <url>/967/</url>
    <content><![CDATA[<p>人生就是不断的挖坑;而我也不例外。</p>
<hr>
<p>写惯了ORACLE语句的童鞋，坑爹对with as语句不陌生吧。简单的说with as 语句也可以说是子查询语句。 首先，我们先来一个栗子(例子)吧。</p>
<p>CREATE TABLE TABLE_A AS<br>WITH TEMP_A AS (<br>SELECT TIME,IOT_ID,NAME FROM IOT_XX_A<br>),TEMP_B AS (<br>SELECT TIME,IOT_ID,NAME,COUNT(DISTINCT IOT_ID) AS TIMES FROM TEMP_A<br>GROUP BY TIME,IOT_ID,NAME<br>)<br>SELECT TIME,IOT_ID,NAME,TIMES FROM TEMP_B;</p>
<p>按照上面的SQL语句，在ORACLE会执行，而在hive呢，不然也会执行..前提最后压缩一下sql格式。 因为把查询结果创建成表，二者都是支持的。 但是如果是INSERT (插入)表呢? 再举个栗子(例子)</p>
<p>INSERT INTO TABLE_B<br>WITH TEMP_A AS (<br>SELECT TIME,IOT_ID,NAME FROM IOT_XX_A<br>),TEMP_B AS (<br>SELECT TIME,IOT_ID,NAME,COUNT(DISTINCT IOT_ID) AS TIMES FROM TEMP_A<br>GROUP BY TIME,IOT_ID,NAME<br>)<br>SELECT TIME,IOT_ID,NAME,TIMES FROM TEMP_B;</p>
<p>按照上面的SQL语句，在ORACLE会执行，而在hive呢?他就会报错，具体的错是：Error: Error while compiling statement: FAILED: ParseException line 2:0 cannot recognize input near ‘WITH’ ‘TABLE_B’ ‘AS’ in statement 错误的原因就是INSERT INTO 位置放得不合适。不也还是hive语句与sql语句规则不一样导致的?把INSERT INTO语句换一下位置就可以执行了</p>
<p>WITH TEMP_A AS (<br>SELECT TIME,IOT_ID,NAME FROM IOT_XX_A<br>),TEMP_B AS (<br>SELECT TIME,IOT_ID,NAME,COUNT(DISTINCT IOT_ID) AS TIMES FROM TEMP_A<br>GROUP BY TIME,IOT_ID,NAME<br>)<br>INSERT INTO TABLE_B<br>SELECT TIME,IOT_ID,NAME,TIMES FROM TEMP_B;</p>
<p>区分： insert into 是直接追加到table insert overwrite 是覆盖table数据。 好了，坑埋上了。以后的自己记得看哈.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>坑</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive踩过的坑-避免使用tab键</title>
    <url>/1130/</url>
    <content><![CDATA[<p>hive环境下复制整段语句时，出现 非常多Display all xxx(多少行数字) possibilities? (y or n)错误的时候.</p>
<p>是因为SQL语句中存在tab键导致，tab键在linux系统中是有特殊含义的。所以hive环境才会N多提示…</p>
<p>结论：hive环境中SQL执行语句中应避免使用tab键。SQL语句也建议先处理好格式再去复制执行吧</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>hadoop</tag>
        <tag>tab</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML代码大全</title>
    <url>/80/</url>
    <content><![CDATA[<p>1.结构性定义 <br>文件类型 <HTML></HTML> （放在档案的开头与结尾） <br>文件主题 <TITLE></TITLE> （必须放在「文头」区块内） <br>文头 <HEAD></HEAD> （描述性资料，像是「主题」） <br>文体 <BODY></BODY> （文件本体） <br>（由浏览器控制的显示风格） <br>标题 &lt;H?&gt;&lt;/H?&gt; （从1到6，有六层选择） <br>标题的对齐 &lt;H? ALIGN=LEFTCENTERRIGHT&gt;&lt;/H?&gt; <br>区分 <DIV></DIV> <br>区分的对齐 <DIV ALIGN=LEFTRIGHTCENTERJUSTIFY></DIV> <br>引文区块 <BLOCKQUOTE></BLOCKQUOTE> （通常会内缩） <br>强调 <EM></EM> （通常会以斜体显示） <br>特别强调 <STRONG></STRONG> （通常会以加粗显示） <br>引文 <CITE></CITE> （通常会以斜体显示） <br>码 <CODE></CODE> （显示原始码之用） <br>样本 <SAMP></SAMP> <br>键盘输入 <KBD></KBD> <br>变数 <VAR></VAR> <br>定义 <DFN></DFN> （有些浏览器不提供） <br>地址 <ADDRESS></ADDRESS> <br>大字 <BIG></BIG> <br>小字 <SMALL></SMALL> <br>与外观相关的标签（作者自订的表现方式） <br>加粗 <B></B> <br>斜体 <I></I> <br>底线 <U></U> （尚有些浏览器不提供） <br>删除线 <S></S> （尚有些浏览器不提供） <br>下标 <SUB></SUB> <br>上标 <SUP></SUP> <br>打字机体 <TT></TT> （用单空格字型显示） <br>预定格式 <PRE></PRE> （保留文件中空格的大小） <br>预定格式的宽度 <PRE WIDTH=?></PRE>（以字元计算） <br>向中看齐 <CENTER></CENTER> （文字与图片都可以） <br>闪耀 <BLINK></BLINK> （有史以来最被嘲弄的标签） <br>字体大小 <FONT SIZE=?></FONT>（从1到7） <br>改变字体大小 <FONT SIZE=+-?></FONT> <br>基本字体大小 <BASEFONT SIZE=?> （从1到7; 内定为3） <br>字体颜色 <FONT COLOR="#$$$$$$"></FONT> <br>2.连结与图形 <br>连结 <A HREF="URL"></A> <br>连结到锚点 <A HREF="URL#\*\*\*"></A>（如果锚点在另一个档案） <br><A HREF="#\*\*\*"></A> （如果锚点目前的档案） <br>连结到目的视框 &lt;A HREF=”URL” 黑吧=”***“&gt;</A> <br>设定锚点 <A NAME="\*\*\*"></A> <br>图形 <IMG SRC="URL"> <br>图形看齐方式 <IMG SRC="URL" ALIGN=TOPBOTTOMMIDDLE> <br>图形看齐方式 <IMG SRC="URL"   
ALIGN=LEFTRIGHTTEXTTOPABSMIDDLEBASELINEABSBOTTOM> <br>取代文字 <IMG SRC="URL" ALT="\*\*\*"> （如果没有办法显示图形则显示此文字） <br>点选图 <IMG SRC="URL" ISMAP> （需要CGI程式） <br>N2.0 点选图 <IMG SRC="URL" USEMAP="URL"> <br>N2.0 地图 <MAP NAME="\*\*\*"></MAP>（描述地图） <br>N2.0 段落 &lt;AREA SHAPE=”RECT” COORDS=”,,,” HREF=”URL”NOHREF&gt; <br>3.0 大小 <IMG SRC="URL" WIDTH="?" HEIGHT="?">（以pixels为单位） N1.0 图形边缘 <IMG SRC="URL" BORDER=?> （以pixels为单位） <br>N1.0 图形边缘空间 <IMG SRC="URL" HSPACE=? VSPACE=?> （以pixels为单位） <br>N1.0 低解析度图形 <IMG SRC="URL" LOWSRC="URL"> <br>N1.1 用户端拉 <META HTTP-EQUIV="Refresh" CONTENT="?; URL=URL">（使用端自动更新 ） <br>N2.0 内嵌物件 <EMBED SRC="URL"> （将物件插入页面） <br>N2.0 内嵌物件大小 <EMBED SRC="URL" WIDTH="?" HEIGHT="?"> <br>3.分隔 <br>段落 <P> （通常是两个return） <br>3.0 段落 <P></P> （新定义成容器型标签） <br>3.0 文字看齐方式 <P ALIGN=LEFTCENTERRIGHT></P> <br>换行 <BR> （一个return） <br>N1.0 文字部份看齐方式<BR CLEAR=LEFTRIGHTALL>（与图形合用时） <br>横线 <HR> <br>N1.0 横线对齐 <HR ALIGN=LEFTRIGHTCENTER> <br>N1.0 横线厚度 <HR SIZE=?> （以pixels为单位） <br>N1.0 横线宽度 <HR WIDTH=?> （以pixels为单位） <br>N1.0 横线比率宽度 <HR WIDTH=%> （以页宽为100%） <br>N1.0 实线 <HR NOSHADE> （没有立体效果） <br>N1.0 不可换行 <NOBR>&lt;<img src="file:///C:DOCUME~1ADMINI~1LOCALS~1TempOOY5$4OW5H`8`9%(9$)T67M.gif">BR&gt; （不换行） <br>N1.0 可换行处 <WBR> （如果需要，可在此断行） <br>列举 （可以巢状列举） <br>无次序式列举 <UL><LI></UL> （<LI> 放在每一项前） <br>N1.0 公布式列举 <UL TYPE=DISCCIRCLESQUARE>（定义全部的列举项） <br><LI TYPE=DISCCIRCLESQUARE>（定义这个及其後的列举项） <br>有次序式列举 <OL><LI></OL> （<LI> 放在每一项前） <br>N1.0 数标型态 <OL TYPE=AaIi1> （定义全部的列举项） <br><LI TYPE=AaIi1> （定义这个及其後的列举项） <br>N1.0 起始数字 <OL value=?> （定义全部的列举项） <br><LI value=?> （定义这个及其後的列举项） <br>定义式列举 <DL><DT><DD></DL>（<DT>项目, <DD>定义） <br>表单式列举 <MENU><LI></MENU>（<LI> 放在每一项前） <br>目录式列举 <DIR><LI></DIR> （<LI> 放在每一项前） <br>背景与颜色 <br>3.0 重复排列的背景 <BODY BACKGROUND="URL"> <br>N1.1+ 背景颜色 <BODY BGCOLOR="#$$$$$$"> （依序为红、绿、蓝） <br>N1.1+ 文字颜色 <BODY TEXT="#$$$$$$"> <br>N1.1+ 连结颜色 <BODY LINK="#$$$$$$"> <br>N1.1+ 看过的连结 <BODY VLINK="#$$$$$$"> <br>N1.1 使用中的连结 <BODY ALINK="#$$$$$$"> <br>4.特殊字元（以下标签需用小写） <br>特别符号 &amp;#?; （其中 ? 代表 ISO 8859-1 的编码） <br>&lt; &lt; &gt; &gt; &amp; &amp; “ “ <br>注册商标TM ? <br>N1.0+ 注册商标TM ? <br>著作权符号 ? <br>N1.0+ 著作权符号 ? <br>5.表单 （通常需要与CGI程式配合） <br>定义表单 <FORM ACTION="URL" METHOD=GETPOST></FORM> <br>N2.0 上传档案 &lt;FORM ENCTYPE=”multipart/form-data&gt;</FORM> <br>输入栏位 <INPUT TYPE="TEXTPASSWORDCHECKBOXRADIOIMAGEHIDDENSUBMITRESET"> <br>栏位名称 <INPUT NAME="\*\*\*"> <br>栏位内定值 <INPUT value="\*\*\*"> <br>已选定 <INPUT CHECKED> （适用於checkboxes与 radio boxes） <br>栏位宽度 <INPUT SIZE=?> （以字元数为单位） <br>最长字数 <INPUT MAXLENGTH=?> （以字元数为单位） <br>下拉式选单 <SELECT></SELECT> <br>下拉式选单名称 <SELECT NAME="\*\*\*"></SELECT> <br>选单项目数量 <SELECT SIZE=?></SELECT> <br>多选式选单 <SELECT MULTIPLE> （多选） <br>选项 <OPTION> <br>内定选项 <OPTION SELECTED> <br>文字输入区 <TEXTAREA ROWS=? COLS=?></TEXTAREA> <br>输入区名称 <TEXTAREA NAME="\*\*\*"></TEXTAREA> <br>N2.0 输入区换行方式 <TEXTAREA WRAP=OFFVIRTUALPHYSICAL></TEXTAREA> <br>6.表格 <br>3.0 定义表格 <TABLE></TABLE> <br>3.0 表格框线 <TABLE BORDER></TABLE> （有或没有） <br>N1.1 表格框线 <TABLE BORDER=?></TABLE>（可以设定数值） <br>N1.1 储存格左右留白 <TABLE CELLSPACING=?> <br>N1.1 储存格上下留白 <TABLE CELLPADDING=?> <br>N1.1 表格宽度 <TABLE WIDTH=?> （以pixels为单位） <br>N1.1 宽度比率 <TABLE WIDTH=%> （页宽为100%） <br>3.0 表格列 <TR></TR> <br>3.0 表格列内容看齐 <TR ALIGN=LEFTRIGHTCENTER VALIGN=TOPMIDDLEBOTTOM> <br>3.0 储存格 <TD></TD> （须与列并用） <br>3.0 储存格内容看齐 <TD ALIGN=LEFTRIGHTCENTER VALIGN=TOPMIDDLEBOTTOM> <br>3.0 不换行 <TD NOWRAP> <br>N3.0 储存格背景颜色 <TD BGCOLOR=#$$$$$$> <br>3.0 储存格横向连接 <TD COLSPAN=?> <br>3.0 储存格纵向连接 <TD ROWSPAN=?> <br>N1.1 储存格宽度 <TD WIDTH=?> （以pixels为单位） <br>N1.1 储存格宽度比率 <TD WIDTH=%> （页宽为100%） <br>3.0 表格标题 <TH></TH> （跟<TD>一样，不过会对中并加粗） <br>3.0 表格标题对齐 <TH ALIGN=LEFTRIGHTCENTER VALIGN=TOPMIDDLEBOTTOM> <br>3.0 表格标题不换行 <TH NOWRAP> <br>3.0 表格标题占几栏 <TH COLSPAN=?> <br>3.0 表格标题占几列 <TH ROWSPAN=?> <br>N1.1 表格标题宽度 <TH WIDTH=?> （以pixels为单位） <br>N1.1 表格标题比率宽度<TH WIDTH=%> （页宽为100%） <br>3.0 表格抬头 <CAPTION></CAPTION> <br>3.0 表格抬头看齐 <CAPTION ALIGN=TOPBOTTOM>（在表格之上/之下） <br>视框 （定义与控制萤幕上的特定区域） <br>N2.0 视框格式总定义 <FRAMESET></FRAMESET> （取代<BODY>） <br>N2.0 视框行长度分配 <FRAMESET ROWS=,,,></FRAMESET>（pixels 或 %） <br>N2.0 视框行长度分配 <FRAMESET ROWS=\*></FRAMESET> （* = 相对大小） <br>N2.0 视框栏宽度分配 <FRAMESET COLS=,,,></FRAMESET>（pixels 或 %） <br>N2.0 视框栏宽度分配 <FRAMESET COLS=\*></FRAMESET> （* =相对大小） <br>N2.0 定义个别视框 <FRAME> （定义个别视框） <br>N2.0 个别视框内容 <FRAME SRC="URL"> <br>N2.0 个别视框名称 &lt;FRAME NAME=”***“_blank_self_parent_top&gt; <br>N2.0 边缘宽度 <FRAME MARGINWIDTH=?> （「左」与「右」边界） <br>N2.0 边缘高度 <FRAME MARGINHEIGHT=?> （「天顶」与「地底」边界） <br>N2.0 卷动条 <FRAME SCROLLING="YESNOAUTO"> <br>N2.0 不可改变大小 <FRAME NORESIZE> <br>N2.0 无视框时的内容 <NOFRAMES>&lt;<img src="file:///C:DOCUME~1ADMINI~1LOCALS~1TempOOY5$4OW5H`8`9%(9$)T67M.gif">FRAMES&gt;（如果浏览器不提供视框功能的话） <br>7.杂项 <br>说明 <!-- \*\*\* --> （浏览器不会显示）  </p>
<p>-——————————————————————————-  </p>
<p>　  </p>
<!--修改滚动条-->  
<style type="text/css">  
body {  
scrollbar-face-color: #330033;  
scrollbar-shadow-color: #FFFFFF;  
scrollbar-highlight-color: #FFFFFF;  
scrollbar-3dlight-color: #FFFFFF;  
scrollbar-darkshadow-color: #FFFFFF;   
scrollbar-track-color: #330033;  
scrollbar-arrow-color: #FFFFFF;  
}  
</style>  
<!--修改滚动条结束-->  
<p>将上面的代码放在叶子代码的<head></head>之间,颜色可根据自己的需要修改。  </p>
<p>滚动条的代码意思如下：   </p>
<p>Scrollbar-Face-Color为滚动条表面颜色设定；<br>Scrollbar-Track-Color为滚动条底板颜色设定；<br>Scrollbar-Darkshadow为滚动条下边和右边边沿颜色设定；<br>Scrollbar-Highlight-Color为滚动条上斜面和左斜面颜色设定；<br>Scrollbar-Shadow-Color为滚动条下斜面和右斜面颜色设定；<br>Scrollbar-3Dlight-Color为滚动条上边和左边的边沿颜色设定；<br>Scrollbar-Arrow-Color为滚动条两端箭头颜色设定。  </p>
<p>-——————————————————————————-  </p>
<p>&lt;!&gt; 跑?? <br><marquee>…</marquee>普通?? <br><marquee behavior=slide>…</marquee>滑? <br><marquee behavior=scroll>…</marquee>???? <br><marquee behavior=alternate>…</marquee>?回?? <br><marquee direction=down>…</marquee>向下?? <br><marquee direction=up>…</marquee>向上?? <br><marquee direction=right></marquee>向右?? <br><marquee direction=’left’></marquee>向左?? <br><marquee loop=2>…</marquee>??次? <br><marquee width=180>…</marquee>?定?度 <br><marquee height=30>…</marquee>?定高度 <br><marquee bgcolor=FF0000>…</marquee>?定背景?色 <br><marquee scrollamount=30>…</marquee>?定??距? <br><marquee scrolldelay=300>…</marquee>?定????</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>instanceof运算符-面试2</title>
    <url>/1374/</url>
    <content><![CDATA[<p>此运算符仅用于对象引用变量。 运算符检查对象是否属于特定类型(类类型或接口类型)。</p>
<p>如果操作符左侧的变量引用的对象是右侧的类/接口类型，则结果为真。 以下是一个例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String name = &quot;glj&quot;;</span><br><span class="line">        // 当 name 的类型是 String 时，则返回为：true</span><br><span class="line">        boolean result = name instanceof String;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果要比较的对象与右侧类型兼容，则此运算符仍将返回true。 以下是一个例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Super &#123;&#125;</span><br><span class="line"></span><br><span class="line">public class Sub extends Super &#123;</span><br><span class="line"></span><br><span class="line">   public static void main(String args[]) &#123;</span><br><span class="line"></span><br><span class="line">      Super super = new Sub();</span><br><span class="line">      boolean result =  super instanceof Sub;</span><br><span class="line">      System.out.println(result);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA文件全部红色的解决办法</title>
    <url>/1472/</url>
    <content><![CDATA[<p>今天同事copy了一份代码给我测试但文件全部红色很奇怪</p>
<hr>
<p>主要原因是当前项目用了版本控制器，因此下面新建的所有的项目默认都是加入到版本控制里面，所以项目名称和文件都是红色的。 解决这个问题： File–&gt;Settings–&gt;version control <img src="http://qn.199604.com/typoraImg/1_20200413234852-1024x590.png"> 弹出的文件夹选择不需要加入版本控制的文件，然后点击OK，如图： <img src="http://qn.199604.com/typoraImg/2_20200413234924.png"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>ip地址后边加个/8(16,24,32)含义</title>
    <url>/1722/</url>
    <content><![CDATA[<p># ip地址后边加个/8(16,24,32)含义</p>
<p>是掩码的位数，<br>A类IP地址的默认子网掩码为255.0.0.0（由于255相当于二进制的8位1，所以也缩写成“/8”，表示网络号占了8位）;</p>
<p>B类的为255.255.0.0（/16）;</p>
<p>C类的为255.255.255.0(/24)。</p>
<p>/30就是255.255.255.252。</p>
<p>/32就是255.255.255.255.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ip地址</tag>
      </tags>
  </entry>
  <entry>
    <title>Java--通用换行代码</title>
    <url>/1154/</url>
    <content><![CDATA[<p>一段代码很久没写就忘记…</p>
<p>之前有写过文件写入程序，会用到换行，不能老是是\n\r之类的，可移植就差很多，但是就是不记得代码了。</p>
<p>emmmm猪脑袋，记录记录吧….</p>
<p>lunix 下换行符只有:\n<br>Mac 下换行符有：\r<br>windows 下换行方式：\r\n代码可移植，换行统一写成System.getProperty(“line.separator”)或者System.lineSeparator()</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-Servlet编程</title>
    <url>/235/</url>
    <content><![CDATA[<p>前言：上学期学得JAVAWeb到了复习的时候了。 现在我上学期学得加上寒假偷偷去学得SHH框架全部在博客记录下来吧。 好在以后自己不记得了也能快速的记起来~ 后语：基友们过年别撸了!和爸妈聊聊天</p>
<hr>
<p>好，这次是自己回忆Servlet中的相关 1、Serlvet就是运行在Web服务器端（我常用apache）的Java程序。它是可以接受和回应浏览器的请求，通过使用HTTP协议进行啪啪啪！</p>
<p>package servlet;<br>import java.io.IOException;<br>import java.io.PrintWriter;<br>public class LoginServlet extends HttpServlet {</p>
<p>public LoginServlet() {<br>super();<br>}</p>
<p>public void destroy() {<br>super.destroy(); </p>
<p>}</p>
<p>public void doGet(HttpServletRequest request, HttpServletResponse response)<br>throws ServletException, IOException {</p>
<p>this.doPost(request, response);<br>}</p>
<p>public void doPost(HttpServletRequest request, HttpServletResponse response)<br>throws ServletException, IOException {</p>
<p>}</p>
<p>}<br>public void init() throws ServletException {<br>}</p>
<p>}</p>
<p>1、init()方法,用于初始化测试. 2、destroyed()方法，是被销毁的时候调用 3、getServletConfig()方法，可以获取当前Servlet设置信息和初始化Servlet是通过web.xml配置文件传入参数。 4、getServletInfo()方法，返回相关Servlet的信息 其他详情百度！ the end! <img src="http://qn.199604.com/filehelper_1485416889705_87.png"> 从清远这里的招聘，我是越来越脱离了IT这个行业了！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
        <tag>Servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript面试78题</title>
    <url>/1330/</url>
    <content><![CDATA[<p><strong>第1题，什么是JavaScript？</strong></p>
<p>JavaScript是一门编程语言，既可以在客户端用，又可以在服务器端使用。它是一门基于对象的编程语言。</p>
<p><strong>第2题，列举一下Java和JavaScript的不同。</strong></p>
<p>Java是面向对象的编程语言，定义各方面都非常的严格和完整。</p>
<p>JavaScript是基于对象的编程语言。在使用的过程中，它的风格相对比较开放，自由度很高。</p>
<p><strong>第3题，在JavaScript中的数据类型有哪些?</strong></p>
<p>Number, String, Bollean, Object, Undefined.</p>
<p><strong>第4题，isNaN函数的作用是什么?</strong></p>
<p>如果输入值不是一个数字的话，这个函数会返回真，否则的话返回false。</p>
<p><strong>第5题，JavaScript和ASP script，哪一个更快一些？</strong></p>
<p>JavaScript更快一些。因为JavaScript直接可以在客户端运行不需要依赖于网络服务器端。ASP script需要借助服务器端才能够运行,所以要比JavaScript要慢一些。</p>
<p>当然，现在JavaScript也可以用于开发服务器端的代码了。</p>
<p><strong>第6题，什么是negative infinity？</strong></p>
<p>Negative infinity是用一个负数除以0得出的数字。</p>
<p><strong>第7题，有没有可能把JavaScript的一行代码分成几行?</strong></p>
<p>可以， 虽然不建议这么做，但是可以。</p>
<p><strong>第8题，JavaScript是哪家公司开发的?</strong></p>
<p>Netscape.</p>
<p><strong>第9题，什么是undeclared和undefined变量?</strong></p>
<p>undeclared变量是指在程序中不存在，没有被声明过的，如果程序试图访问这样的变量，应该会返回run time error.</p>
<p>Undefined变量是那些没有赋值的变量。把程序读取这些变量的值的时候，读到的值就是undefined。</p>
<p><strong>第10题, 如何动态的添加html的元素?</strong></p>
<p>一些方法可以使用，比如create element, create text node, append child等等。</p>
<p><strong>第11题，什么是全局变量？这些变量是如何定义的，程序应该如何用他们?</strong></p>
<p>全局变量是在程序运行整个过程中可以被访问量的变量，他们没有scope, var关键字是用来define一个局部或者全局变量或者对象的。</p>
<p>全局变量的最大问题就是它会跟局部变量的名字发生冲突，代码中如果依赖于大量的全局变量非常不容易debug。</p>
<p><strong>第12题，什么是prompt box?</strong></p>
<p>Prompt box就是一个对话框，用户可以提供自己的输入。</p>
<p><strong>第13题，this关键字是什么？</strong></p>
<p>这一次关键字表示的是一个对象, 这个对象对应着被调用的地方。</p>
<p><strong>第14题，解释一下timers. 用timers有什么坏处吗？</strong></p>
<p>JavaScript中有如下timer函数: setTimeOut, setInterval, clearInterval.</p>
<p>Set time out会在一个时间延迟以后调用一个函数。</p>
<p>setInterval会在一个时间延迟以后重复的调用一个函数。Clear interval是用来终止这个过程。</p>
<p>这些timers也是运行在一个单线程中，因此事件可能会排队等待被处理。</p>
<p><strong>第15题, 哪些符号可以在JavaScript中用来做注释?</strong></p>
<p>//</p>
<p>/* */</p>
<p><strong>第16题，view state和session state的区别是什么？</strong></p>
<p>view state 指的是在session中的一个页面。</p>
<p>Session state，指的是用户特定的数据， 这些数据可以用于访问所有的页面。</p>
<p><strong>第17题，什么是三个等号操作符？</strong></p>
<p>三个等号操作符只有当两边的值相等并且类型相等才会返回真。</p>
<p><strong>第18题，解释一下你如何用JavaScript提交一个form？</strong></p>
<p>submit方法。</p>
<p><strong>第19题，JavaScript支持自动类型转换吗？</strong></p>
<p>是的，JavaScript支持自动类型转换。</p>
<p><strong>第20题, 如何用JavaScript来改变一个元素的style/class?</strong></p>
<p>.style.fontSize=”20px”</p>
<p>.className=”any class name”</p>
<p><strong>第21题, 解释一下如何读写一个文件。</strong></p>
<p>两种方法，一个是用JavaScript扩展, 一个是使用一个网页和activeX 对象。</p>
<p><strong>第22题， 如何在JavaScript中使用循环?</strong></p>
<p>For</p>
<p>While</p>
<p>do while</p>
<p><strong>第23题, 什么是called variable typing?</strong></p>
<p>在JavaScript中，一个变量可以赋值为数字，同时这个变量还可以赋值为一个字符串，这就叫called variable typing。</p>
<p><strong>第24题, 如何把字符串转换成不同进制的整数?</strong></p>
<p>使用parseInt函数。</p>
<p>parseInt(“4f”, 16)</p>
<p><strong>第25题, 两个等号和三个等号的区别是什么?</strong></p>
<p>两个等号只检查值是否相等。三个等号即既检查值是否相等，也检查类型是否相等。</p>
<p><strong>第26题，1+2+”5”的结果是什么?</strong></p>
<p>35</p>
<p>两个数字先相加得三， 数字跟后面的字符串相加都变成字符串，所以得出有35。</p>
<p><strong>第27题， 如何在客户端检查操作系统?</strong></p>
<p>navigator.platform</p>
<p><strong>第28题, null 是什么?</strong></p>
<p>Null是一个对象，它标识的是没有值的空对象。</p>
<p><strong>第29题，Delete操作符的作用是什么?</strong></p>
<p>Delete用来删除属性及其值。</p>
<p>delete student.age</p>
<p><strong>第30题, undefined指的是什么值?</strong></p>
<p>这个变量不存在。</p>
<p>这个变量未赋值。</p>
<p>这个属性不存在。</p>
<p><strong>第31题，在JavaScript中有几种类型的弹出框?</strong></p>
<p>alert</p>
<p>confirm</p>
<p>prompt</p>
<p><strong>第32题, void(0)的作用是什么?</strong></p>
<p>void(0)是为了防止页面刷新，0是调用以后的传送值。</p>
<p>是用来调用另一个方法，而不需要刷新页面。</p>
<p><strong>第33题，在javascript中如何在一个页面中加载另一个页面?</strong></p>
<script language="Javascript" type="text/javascript">

<!-- location.href="[http://newhost/newpath/newfile.html](https://link.zhihu.com/?target=http%3A//newhost/newpath/newfile.html)"; // --></script>

<p><strong>第34题, JavaScript中变量的数据类型是什么?</strong></p>
<p>所有的变量都是对象数据类型。</p>
<p><strong>第35题, Alert跟confirmation的区别是什么?</strong></p>
<p>Alert只有一个按钮，就是OK。</p>
<p>Confirmation有两个按钮，一个是OK，一个是cancel。</p>
<p><strong>第36题，什么是escape字符？</strong></p>
<p>在显示单引号, 双引号, 撇号,地址号时需要escape:\。</p>
<p><strong>第37题，什么是JavaScript的cookies？</strong></p>
<p>Cookies是用来在电脑上存储用户少量的信息的。比如购物信息，用户名的信息。</p>
<p><strong>第38题，解释一下pop方法。</strong></p>
<p>这个是数组中的一个方法。pop跟shift很相似，但是shift方法会从数组的开头取值，而pop是从数组的尾部取值。</p>
<p>Pop从数组取值以后会把尾部的值删掉，因此数组会被改变。</p>
<p>array.pop()</p>
<p><strong>第39题, JavaScript是否有concept level scope?</strong></p>
<p>没有。JavaScript没有concept level of scope，在函数中定义的变量，有函数内的scope。</p>
<p><strong>第40题, 在JavaScript中使用inner html的缺点有哪些?</strong></p>
<p>缺点有:</p>
<p>内容随时随处会被改变。</p>
<p>我们不能使用像append to inner html的方法。</p>
<p>即使我们使用plus equal, innerHtml+=, 原先的内容也会被替换掉。</p>
<p>整个inner html的内容会被重新解析，然后再添加到元素当中，因此非常慢。</p>
<p>Inner html的添加过程没有验证，因此我们有可能添加一些无效的内容，从而导致整个文档崩溃。</p>
<p><strong>第41题, 什么是break 和 continue?</strong></p>
<p>Break是为了中断当前的循环，continue会中断当前的操作但会继续当前的循环。</p>
<p><strong>第42题，在JavaScript中有哪两类基本的数据类型?</strong></p>
<p>一种是原始数据类型，一种是引用数据类型。</p>
<p>数据类型包含像数字，布尔类型。引用数据类型比较复杂一些，像字符串，日期。</p>
<p><strong>第43题，通用对象是如何创建的?</strong></p>
<p>var obj=new object();</p>
<p><strong>第44题, Type of操作符是干什么用的?</strong></p>
<p>Typeof操作符是返回一个变量的类型, 是用字符串来表述的。</p>
<p><strong>第45题, 哪些关键字用来处理异常?</strong></p>
<p>Try catch finally.</p>
<p><strong>第46题，哪个关键字用来在屏幕上打印文字？</strong></p>
<p>document.write()</p>
<p><strong>第47题，blur函数的作用是什么?</strong></p>
<p>blur函数是用来去除某个指定对象的焦点。</p>
<p><strong>第48题, 什么是variable typing?</strong></p>
<p>这个问题上面提到过一次了，就是把一个数字赋给一个变量，然后又把字符串赋给相同的这个变量。</p>
<p><strong>第49题, 如何在客户端找到操作系统的名字?</strong></p>
<p>Navigator.appversion.</p>
<p><strong>第50题, 在JavaScript中有多少种错误类型?</strong></p>
<p>Load time errors.</p>
<p>Run time errors,</p>
<p>logical errors.</p>
<p><strong>第51题，push method的用处是什么？</strong></p>
<p>这个方法是用来向一个数组尾部添加一个和多个元素的。</p>
<p><strong>第52题, unshift method是干什么的?</strong></p>
<p>umshift跟push method类似，只不过它是在数组的前面添加元素。</p>
<p><strong>第53题, JavaScript和JScript的区别是什么?</strong></p>
<p>他们非常接近，只是JavaScript是netscape开发的，JScript是Microsoft开发的。</p>
<p><strong>第54题， 对象的属性是如何分配的?</strong></p>
<p>obj.prop=12</p>
<p>或者</p>
<p>obj[“prop”]=12</p>
<p><strong>第55题，什么是strict mode？怎么激活它？</strong></p>
<p>Strict mode可以使JavaScript代码更整洁更安全，它会实时的显示代码中的错误。</p>
<p>启动strict mode，调用下面的语句</p>
<p>“use strict”;</p>
<p>。</p>
<p><strong>第56题, 如何获取checkbox的状态?</strong></p>
<p>document.getElementById(“id”).checked</p>
<p><strong>第57题，解释一下window.onload和ondocumentready.</strong></p>
<p>onload在所有的配置信息加载完成以后才会调用。</p>
<p>Ondocumentready, 会在dom加载完成以后启动。</p>
<p>它比onload要早一些被调用。</p>
<p><strong>第58题, 解释一下JavaScript中的closures, 它们应该何时被使用?</strong></p>
<p>Closure是一个局部的声明变量，跟一个函数相关， 在函数返回时，会存在内存里面。</p>
<p><strong>第59题, 给出一种方法，在数组的尾部添加元素。</strong></p>
<p>arr[arr.length]=value</p>
<p><strong>第60题, 解释一下for-in循环。</strong></p>
<p>这个循环是用来遍历一个对象的所有属性。</p>
<p><strong>第61题, 解释一下匿名函数。</strong></p>
<p>匿名函数是被定义的时候没有指定名字的函数。</p>
<p><strong>第62题, Call和apply的区别是什么?</strong></p>
<p>Call和apply非常相近，只有一点不同。当函数的调用参数可知的时候, Call可以被使用。当函数的调用参数不可知时，apply应该被用到。</p>
<p><strong>第63题， 什么是event bubbling?</strong></p>
<p>JavaScript允许dom元素嵌套使用。在这种情况下，如果一个子元素被点击了，那么它的父元素也会同样的被点击。</p>
<p><strong>第64题，JavaScript大小写敏感吗？</strong></p>
<p>是的。是大小写敏感的。</p>
<p><strong>第65题，有哪些boolean操作符？</strong></p>
<p>and, or, not</p>
<p><strong>第66题, 在超级链接的时候，能不能指定一个特定的frame?</strong></p>
<p>可以通过target属性设定这个frame的名字。</p>
<p><strong>第67题， Web garden和web farm的区别是什么?</strong></p>
<p>Web garden和web farm都是网络hosting系统。它们的区别是Web garden在一台服务器上。I verb form, 是更大的配置，常常用在多于一台服务器的时候。</p>
<p><strong>第68题， JavaScript中如何操作dom?</strong></p>
<p>通过dom API.</p>
<p><strong>第69题，Event handler如何使用?</strong></p>
<p>event handler用于设定一个函数属性来对应一个事件的发生。</p>
<p><strong>第70题， 解释一下deferred脚本的作用是什么。</strong></p>
<p>Deferred脚本会推迟运行从而加快页面加载的时间。</p>
<p><strong>第71题， 有哪些不同的functional组件?</strong></p>
<p>First class functions. 这些函数可以作为参数传入另一个函数当中。可以作为函数的返回值返回，也可以存放在数据结构当中。</p>
<p>Nested functions. 这种函数是嵌套的另一个函数里面，每次它们被调用，它们的主函数也会比较有。</p>
<p><strong>第72题， 什么是屏幕对象?</strong></p>
<p>屏幕对象是读取客户端屏幕信息的对象。</p>
<p>这些信息包含availHeight, availWidth, ColorDepth, Height, Width。</p>
<p><strong>第73题, 解释一下unescape和escape函数。</strong></p>
<p>escape函数是用来对一些字符串进行编码，以便于从一个计算机传到另一台计算机上。</p>
<p>unescape函数是为了把上述的编码后的字符串，转化成可以阅读的字符串。</p>
<p><strong>第74题, 什么是decodeURI和encodeURI?</strong></p>
<p>encodeURI是把url转化成hex编码。</p>
<p>decodeURI是把hex编码转回成url。</p>
<p><strong>第75题， 下面这个语句是干什么用的?</strong></p>
<p>var arr=[[[]]]</p>
<p>它定义了一个三维数组。</p>
<p><strong>第76题, JavaScript跟ecma script有什么关联?</strong></p>
<p>ecma script是标准, 是JavaScript开发的依据。</p>
<p>JavaScript是面向网络开发的脚本语言。</p>
<p><strong>第77题， 什么是JavaScript的命名空间，如何使用?</strong></p>
<p>命名空间是用来分组管理函数变量等等，有一个独有的名字。在这个名字下面啊，附属着一系列的函数，对象，属性等等。这些大大改善了代码的模块化，增强了代码的重用性。</p>
<p><strong>第78题， 当不支持JavaScript的时候，在老的浏览器中如何隐藏JavaScript?</strong></p>
<p>在script 标记之后添加”&lt;!–”。</p>
<p>在script标记之前添加”//–&gt;”。</p>
<p>这样在老的浏览器中，会把这部分代码当做很长的html的注释。</p>
<p>在现代浏览器中会把&lt;!–和//→当成一行注释。</p>
<p>转载：<a href="https://zhuanlan.zhihu.com/p/81902166">https://zhuanlan.zhihu.com/p/81902166</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaSE基础:JDK8日期操作</title>
    <url>/1437/</url>
    <content><![CDATA[<p>转载:<a href="https://juejin.im/post/5a795bad6fb9a0634f407ae5">https://juejin.im/post/5a795bad6fb9a0634f407ae5</a></p>
<p>Java处理日期、日历和时间的方式一直为社区所诟病，将 java.util.Date设定为可变类型，以及SimpleDateFormat的非线程安全使其应用非常受限。<br>新API基于ISO标准日历系统，java.time包下的所有类都是不可变类型而且线程安全。</p>
<table>
<thead>
<tr>
<th>编号</th>
<th>类的名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Instant</td>
<td>时间戳</td>
</tr>
<tr>
<td>2</td>
<td>Duration</td>
<td>持续时间，时间差</td>
</tr>
<tr>
<td>3</td>
<td>LocalDate</td>
<td>只包含日期，比如：2018-02-05</td>
</tr>
<tr>
<td>4</td>
<td>LocalTime</td>
<td>只包含时间，比如：23:12:10</td>
</tr>
<tr>
<td>5</td>
<td>LocalDateTime</td>
<td>包含日期和时间，比如：2018-02-05 23:14:21</td>
</tr>
<tr>
<td>6</td>
<td>Period</td>
<td>时间段</td>
</tr>
<tr>
<td>7</td>
<td>ZoneOffset</td>
<td>时区偏移量，比如：+8:00</td>
</tr>
<tr>
<td>8</td>
<td>ZonedDateTime</td>
<td>带时区的时间</td>
</tr>
<tr>
<td>9</td>
<td>Clock</td>
<td>时钟，比如获取目前美国纽约的时间</td>
</tr>
<tr>
<td>10</td>
<td>java.time.format.DateTimeFormatter</td>
<td>时间格式化</td>
</tr>
</tbody></table>
<hr>
<h4 id="Java-8中获取今天的日期"><a href="#Java-8中获取今天的日期" class="headerlink" title="Java 8中获取今天的日期"></a>Java 8中获取今天的日期</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 9:02</span><br><span class="line"> */</span><br><span class="line">public class Demo1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8中获取今天的日期</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line">        //today:2020-04-07</span><br><span class="line">        System.out.println(&quot;today:&quot;+today);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8中获取年、月、日信息"><a href="#Java-8中获取年、月、日信息" class="headerlink" title="Java 8中获取年、月、日信息"></a>Java 8中获取年、月、日信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 9:19</span><br><span class="line"> */</span><br><span class="line">public class Demo2 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8中获取年、月、日信息</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line">        int year = today.getYear();</span><br><span class="line">        int month = today.getMonthValue();</span><br><span class="line">        int day = today.getDayOfMonth();</span><br><span class="line">        System.out.println(&quot;year:&quot;+year);</span><br><span class="line">        System.out.println(&quot;month:&quot;+month);</span><br><span class="line">        System.out.println(&quot;day:&quot;+day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8中处理特定日期"><a href="#Java-8中处理特定日期" class="headerlink" title="Java 8中处理特定日期"></a>Java 8中处理特定日期</h4><p>调用LocalDate.of()方法创建任意日期，该方法需要传入int类型的年、月、日做参数，返回对应的LocalDate实例。这个方法的好处是没再犯老API的设计错误，比如年度起始于1900，月份是从0开 始等等。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 9:40</span><br><span class="line"> */</span><br><span class="line">public class Demo3 &#123;</span><br><span class="line">    //示例:Java 8中处理特定日期</span><br><span class="line">    //调用LocalDate.of()方法创建任意日期，</span><br><span class="line">    // 该方法需要传入int类型的年、月、日做参数，</span><br><span class="line">    // 返回对应的LocalDate实例。</span><br><span class="line">    // 这个方法的好处是没再犯老API的设计错误，比如年度起始于1900，月份是从0开 始等等。</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        LocalDate date  = LocalDate.of(2020,2,12);</span><br><span class="line">        System.out.println(&quot;date:&quot;+date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8中判断两个日期是否相等"><a href="#Java-8中判断两个日期是否相等" class="headerlink" title="Java 8中判断两个日期是否相等"></a>Java 8中判断两个日期是否相等</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 10:00</span><br><span class="line"> */</span><br><span class="line">public class Demo4 &#123;</span><br><span class="line">    // Java 8中判断两个日期是否相等</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line">        LocalDate date = LocalDate.of(2020,02,02);</span><br><span class="line">        if(today.equals(date))&#123;</span><br><span class="line">            System.out.println(&quot;相等&quot;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            System.out.println(&quot;不相等&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8中获取当前时间"><a href="#Java-8中获取当前时间" class="headerlink" title="Java 8中获取当前时间"></a>Java 8中获取当前时间</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalTime;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 10:10</span><br><span class="line"> */</span><br><span class="line">public class Demo5 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        LocalTime time = LocalTime.now();</span><br><span class="line">        System.out.println(&quot;获取当前的时间,不含有日期:&quot;+time);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8中获取当前时间-1"><a href="#Java-8中获取当前时间-1" class="headerlink" title="Java 8中获取当前时间"></a>Java 8中获取当前时间</h4><p>通过增加小时、分、秒来计算将来的时间很常见。Java 8除了不变类型和线程安全的好处之外，还提供了更好的plusHours()方法替换add()，并且是兼容的。注意，这些方法返回一个全新的LocalTime实例，由于其不可变性，返回后一定要用变量赋值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalTime;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 10:10</span><br><span class="line"> */</span><br><span class="line">public class Demo6 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8中获取当前时间</span><br><span class="line">        //通过增加小时、分、秒来计算将来的时间很常见。Java 8除了不变类型和线程安全的好处之外，还提供了更好的plusHours()方法替换add()，并且是兼容的。注意，这些方法返回一个全新的LocalTime实例，由于其不可变性，返回后一定要用变量赋值。</span><br><span class="line">        LocalTime time = LocalTime.now();</span><br><span class="line">        LocalTime newTime = time.plusHours(3);</span><br><span class="line">        System.out.println(&quot;三个小时后的时间为:&quot;+newTime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8如何计算一周后的日期"><a href="#Java-8如何计算一周后的日期" class="headerlink" title="Java 8如何计算一周后的日期"></a>Java 8如何计算一周后的日期</h4><p>LocalDate日期不包含时间信息，它的plus()方法用来增加天、周、月，ChronoUnit类声明了这些时间单位。由于LocalDate也是不变类型，返回后一定要用变量赋值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.temporal.ChronoUnit;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:09</span><br><span class="line"> */</span><br><span class="line">public class Demo7 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8如何计算一周后的日期</span><br><span class="line">        //LocalDate日期不包含时间信息，它的plus()方法用来增加天、周、月，ChronoUnit类声明了这些时间单位。由于LocalDate也是不变类型，返回后一定要用变量赋值。</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line">        System.out.println(&quot;今天的日期为:&quot;+today);</span><br><span class="line">        LocalDate nextWeek = today.plus(1, ChronoUnit.WEEKS);</span><br><span class="line">        System.out.println(&quot;一周后的日期为:&quot;+nextWeek);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8计算一年前或一年后的日期"><a href="#Java-8计算一年前或一年后的日期" class="headerlink" title="Java 8计算一年前或一年后的日期"></a>Java 8计算一年前或一年后的日期</h4><p>利用minus()方法计算一年前的日期.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.temporal.ChronoUnit;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:10</span><br><span class="line"> */</span><br><span class="line">public class Demo8 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8计算一年前或一年后的日期</span><br><span class="line">        //利用minus()方法计算一年前的日期</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line"></span><br><span class="line">        LocalDate previousYear = today.minus(1, ChronoUnit.YEARS);</span><br><span class="line">        System.out.println(&quot;一年前的日期 : &quot; + previousYear);</span><br><span class="line"></span><br><span class="line">        LocalDate nextYear = today.plus(1, ChronoUnit.YEARS);</span><br><span class="line">        System.out.println(&quot;一年后的日期:&quot;+nextYear);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Java-8的Clock时钟类"><a href="#Java-8的Clock时钟类" class="headerlink" title="Java 8的Clock时钟类"></a>Java 8的Clock时钟类</h4><p>Java 8增加了一个Clock时钟类用于获取当时的时间戳，或当前时区下的日期时间信息。以前用到System.currentTimeInMillis()和TimeZone.getDefault()的地方都可用Clock替换。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.Clock;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:12</span><br><span class="line"> */</span><br><span class="line">public class Demo9 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8的Clock时钟类</span><br><span class="line">        //Java 8增加了一个Clock时钟类用于获取当时的时间戳，或当前时区下的日期时间信息。以前用到System.currentTimeInMillis()和TimeZone.getDefault()的地方都可用Clock替换。</span><br><span class="line">        Clock clock = Clock.systemUTC();</span><br><span class="line">        System.out.println(&quot;Clock : &quot; + clock.millis());</span><br><span class="line"></span><br><span class="line">        Clock defaultClock = Clock.systemDefaultZone();</span><br><span class="line">        System.out.println(&quot;Clock : &quot; + defaultClock.millis());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="用Java判断日期是早于还是晚于另一个日期"><a href="#用Java判断日期是早于还是晚于另一个日期" class="headerlink" title="用Java判断日期是早于还是晚于另一个日期"></a>用Java判断日期是早于还是晚于另一个日期</h4><p>在Java 8中，LocalDate类有两类方法isBefore()和isAfter()用于比较日期。调用isBefore()方法时，如果给定日期小于当前日期则返回true。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.temporal.ChronoUnit;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:13</span><br><span class="line"> */</span><br><span class="line">public class Demo10 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //如何用Java判断日期是早于还是晚于另一个日期</span><br><span class="line">        //在Java 8中，LocalDate类有两类方法isBefore()和isAfter()用于比较日期。调用isBefore()方法时，如果给定日期小于当前日期则返回true。</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line"></span><br><span class="line">        LocalDate tomorrow = LocalDate.of(2018, 2, 6);</span><br><span class="line">        if (tomorrow.isAfter(today)) &#123;</span><br><span class="line">            System.out.println(&quot;之后的日期:&quot; + tomorrow);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LocalDate yesterday = today.minus(1, ChronoUnit.DAYS);</span><br><span class="line">        if (yesterday.isBefore(today)) &#123;</span><br><span class="line">            System.out.println(&quot;之前的日期:&quot; + yesterday);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="在Java-8中检查闰年-–-gt-isLeapYear"><a href="#在Java-8中检查闰年-–-gt-isLeapYear" class="headerlink" title="在Java 8中检查闰年 –&gt;isLeapYear()"></a>在Java 8中检查闰年 –&gt;isLeapYear()</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:15</span><br><span class="line"> */</span><br><span class="line">public class Demo11 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //如何在Java 8中检查闰年 --&gt;isLeapYear()</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line">        if(today.isLeapYear())&#123;</span><br><span class="line">            System.out.println(&quot;This year is Leap year&quot;);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            System.out.println(&quot;2018 is not a Leap year&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="计算两个日期之间的天数和月数"><a href="#计算两个日期之间的天数和月数" class="headerlink" title="计算两个日期之间的天数和月数"></a>计算两个日期之间的天数和月数</h4><p>有一个常见日期操作是计算两个日期之间的天数、周数或月数。在Java 8中可以用java.time.Period类来做计算。下面这个例子中，我们计算了当天和将来某一天之间的月数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.Period;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:16</span><br><span class="line"> */</span><br><span class="line">public class Demo12 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //计算两个日期之间的天数和月数</span><br><span class="line">        //有一个常见日期操作是计算两个日期之间的天数、周数或月数。在Java 8中可以用java.time.Period类来做计算。下面这个例子中，我们计算了当天和将来某一天之间的月数。</span><br><span class="line">        LocalDate today = LocalDate.now();</span><br><span class="line">        LocalDate java8Release = LocalDate.of(2018, 12, 14);</span><br><span class="line">        Period periodToNextJavaRelease = Period.between(today,java8Release);</span><br><span class="line">        System.out.println(&quot;Months left between today and Java 8 release : &quot;</span><br><span class="line">                + periodToNextJavaRelease.getMonths() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;s</span><br></pre></td></tr></table></figure>

<h4 id="在Java-8中获取当前的时间戳"><a href="#在Java-8中获取当前的时间戳" class="headerlink" title="在Java 8中获取当前的时间戳"></a>在Java 8中获取当前的时间戳</h4><p>Instant类有一个静态工厂方法now()会返回当前的时间戳.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.Instant;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:18</span><br><span class="line"> */</span><br><span class="line">public class Demo13 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //在Java 8中获取当前的时间戳</span><br><span class="line">        //Instant类有一个静态工厂方法now()会返回当前的时间戳.</span><br><span class="line">        Instant timestamp = Instant.now();</span><br><span class="line">        System.out.println(&quot;timestamp:&quot;+timestamp.toEpochMilli());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//时间戳信息里同时包含了日期和时间，这和java.util.Date很像。实际上Instant类确实等同于 Java 8之前的Date类，你可以使用Date类和Instant类各自的转换方法互相转换，例如：Date.from(Instant) 将Instant转换成java.util.Date，Date.toInstant()则是将Date类转换成Instant类。</span><br></pre></td></tr></table></figure>



<h4 id="Java-8中如何使用预定义的格式化工具去解析或格式化日期"><a href="#Java-8中如何使用预定义的格式化工具去解析或格式化日期" class="headerlink" title="Java 8中如何使用预定义的格式化工具去解析或格式化日期"></a>Java 8中如何使用预定义的格式化工具去解析或格式化日期</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:20</span><br><span class="line"> */</span><br><span class="line">public class Demo14 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //Java 8中如何使用预定义的格式化工具去解析或格式化日期</span><br><span class="line">        String dayAfterTommorrow = &quot;20180205&quot;;</span><br><span class="line">        LocalDate formatted = LocalDate.parse(dayAfterTommorrow,</span><br><span class="line">                DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">        System.out.println(&quot;formatted:&quot;+formatted);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="字符串互转日期类型"><a href="#字符串互转日期类型" class="headerlink" title="字符串互转日期类型"></a>字符串互转日期类型</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.LocalDateTime;</span><br><span class="line">import java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2020/4/7</span><br><span class="line"> * Time: 11:21</span><br><span class="line"> */</span><br><span class="line">public class Demo15 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        LocalDateTime date = LocalDateTime.now();</span><br><span class="line">        DateTimeFormatter format1 = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);</span><br><span class="line">        //日期转字符串</span><br><span class="line">        String str = date.format(format1);</span><br><span class="line">        System.out.println(&quot;日期转换为字符串:&quot;+str);</span><br><span class="line"></span><br><span class="line">        DateTimeFormatter format2 = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);</span><br><span class="line">        LocalDate date2 = LocalDate.parse(str,format2);</span><br><span class="line">        System.out.println(&quot;日期类型:&quot;+date2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Javaweb项目在Tomcat 部署方式的N种方式.</title>
    <url>/905/</url>
    <content><![CDATA[<p>最近部署项目用到了很多的方式…记录一下吧</p>
<hr>
<h2 id="1、直接将web项目文件件拷贝到webapps-目录中"><a href="#1、直接将web项目文件件拷贝到webapps-目录中" class="headerlink" title="1、直接将web项目文件件拷贝到webapps 目录中"></a>1、直接将web项目文件件拷贝到webapps 目录中</h2><p>Tomcat的Webapps目录是Tomcat默认的应用目录，当服务器启动时，会加载所有这个目录下的应用。</p>
<p>所以很多时候我们可以用War包也好，其实原理就是启动Tomcat服务时，服务器会自动解开这个war包，并在这个目录下生成一个同名的文件夹。也可以直接把编译好的文件放到Webapps下。</p>
<h2 id="2、在server-xml中指定web项目目录"><a href="#2、在server-xml中指定web项目目录" class="headerlink" title="2、在server.xml中指定web项目目录"></a>2、在server.xml中指定web项目目录</h2><p>这种是我最近用的最多的一个.在tomcat中的conf目录下的server.xml中<host/>节点中添加：</p>
<Context path="mams" docBase="I:\devRepository\javaCoreRepository\mams_a5d" debug="0" privileged="true" />

<p>path未访问这个项目的名字,如:127.0.0.1:8080/mams</p>
<p>docBase 是应用程序的物理路径</p>
<p>debug 则是设定debug level, 0表示提供最少的信息，9表示提供最多的信息</p>
<p>privileged设置为true的时候，才允许Tomcat的Web应用使用容器内的Servlet</p>
<p>reloadable 如果为true，则tomcat会自动检测应用程序的/WEB-INF/lib 和/WEB-INF/classes目录的变化，自动装载新的应用程序，可以在不重起tomcat的情况下改变应用程序，实现热部署</p>
<h2 id="3、创建一个Context文件-，不重启服务器就可以使用"><a href="#3、创建一个Context文件-，不重启服务器就可以使用" class="headerlink" title="3、创建一个Context文件 ，不重启服务器就可以使用"></a>3、创建一个Context文件 ，不重启服务器就可以使用</h2><p>这种方式是公司用的最多的一种，在服务器上的普遍这样部署</p>
<p>其实这种方式类似于第二种的方式</p>
<p>在conf目录中，新建 Catalina＼localhost目录，在该目录中新建一个xml文件，名字可以随意取，</p>
<p>如：mams.xml，然后内容为：</p>
<?xml version='1.0' encoding='utf-8'?>
<Context docBase="I:\devRepository\javaCoreRepository\mams_a5d" debug="0" privileged="true" />

<p>然后然后也是127.0.0.1:8080/mams，这种访问路径其实就是这xml文件名字。这样可以隐藏应用的真实名字。</p>
<p>其实我试过，加上path也是不影响，但是没有试过xml名字和path名字不同会怎么样</p>
<Context path="mams" docBase="I:\devRepository\javaCoreRepository\mams_a5d" debug="0" privileged="true" />

<p>推荐使用第三种方式，因为不需要修改tomcat默认配置，对tomcat的侵入性也是最小，并且如果想取消部署，直接删除xml配置文件即可。</p>
<h2 id="4-Tomcat-Manager动态部署"><a href="#4-Tomcat-Manager动态部署" class="headerlink" title="4.Tomcat Manager动态部署"></a>4.Tomcat Manager动态部署</h2><p>这种方式我之前已经写过,这次就一起把它记录起来吧。</p>
<p>详情到：<a href="http://199604.com/785">http://199604.com/785</a> 这个页面看我之前写的记录</p>
<p><img src="http://qn.199604.com/typoraImg/20171201002958-1024x768.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中final、finally、finalize的区别</title>
    <url>/727/</url>
    <content><![CDATA[<p>下面记录一下final、finally、finalize的区别吧…</p>
<ul>
<li>  简单区别:</li>
</ul>
<blockquote>
<ol>
<li> final用于声明属性，方法和类，分别表示属性不可交变，方法不可覆盖，类不可继承。</li>
<li> finally是异常处理语句结构的一部分，表示总是执行。</li>
<li> finalize是Object类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，供垃圾收集时的其他资源回收，例如关闭文件等。</li>
</ol>
</blockquote>
<ul>
<li>  进阶区别:</li>
</ul>
<p><strong>final</strong>：java中的关键字，修饰符。</p>
<blockquote>
<ol>
<li> 如果一个类被声明为final，就意味着它不能再派生出新的子类，不能作为父类被继承。因此，一个类不能同时被声明为absrtact抽象类的和final的类。</li>
<li> 如果将变量或者方法声明为final，可以保证它们在使用中不被改变.</li>
<li> 注意被声明为final的变量必须在声明时给定初值，之后只能读而不能修改</li>
<li> 被声明为final的变量只能被使用，不能重载。</li>
</ol>
</blockquote>
<p><strong>?finally</strong>：java的一种异常处理机制。</p>
<blockquote>
<ol>
<li> finally是对Java?异常处理模型的最佳补充。</li>
<li> finally?结构使代码总会执行，而不管有无异常发生。</li>
<li> 在关闭数据库中，我们可以把close()放到finally中，这样可以降低出错</li>
</ol>
</blockquote>
<p><strong>finalize</strong>：Java中的一个方法名。</p>
<blockquote>
<ol>
<li> 垃圾回收器准备释放内存的时候，会先调用finalize()。</li>
</ol>
</blockquote>
<hr>
<p><img src="http://qn.199604.com/typoraImg/a97ab550ly1fknz04fhjcj20qo0qo429.jpg"></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中的强引用、软引用、弱引用和虚引用的区别</title>
    <url>/474/</url>
    <content><![CDATA[<p>从JDK1.2版本开始，把对象的引用分为四种级别，从而使程序能更加灵活的控制对象的生命周期。这四种级别由高到低依次为：强引用、软引用、弱引用和虚引用。</p>
<p>1．强引用<br>本章前文介绍的引用实际上都是强引用，这是使用最普遍的引用。如果一个对象具有强引用，那就类似于必不可少的生活用品，垃圾回收器绝不会回收它。当内存空 间不足，Java虚拟机宁愿抛出OutOfMemoryError错误，使程序异常终止，也不会靠随意回收具有强引用的对象来解决内存不足问题。</p>
<p>2．软引用（SoftReference）</p>
<p>如果一个对象只具有软引用，那就类似于可有可物的生活用品。如果内存空间足够，垃圾回收器就不会回收它，如果内存空间不足了，就会回收这些对象的内存。只要垃圾回收器没有回收它，该对象就可以被程序使用。软引用可用来实现内存敏感的高速缓存。<br>软引用可以和一个引用队列（ReferenceQueue）联合使用，如果软引用所引用的对象被垃圾回收，Java虚拟机就会把这个软引用加入到与之关联的引用队列中。</p>
<p>3．弱引用（WeakReference）<br>如果一个对象只具有弱引用，那就类似于可有可物的生活用品。弱引用与软引用的区别在于：只具有弱引用的对象拥有更短暂的生命周期。在垃圾回收器线程扫描它 所管辖的内存区域的过程中，一旦发现了只具有弱引用的对象，不管当前内存空间足够与否，都会回收它的内存。不过，由于垃圾回收器是一个优先级很低的线程， 因此不一定会很快发现那些只具有弱引用的对象。<br>弱引用可以和一个引用队列（ReferenceQueue）联合使用，如果弱引用所引用的对象被垃圾回收，Java虚拟机就会把这个弱引用加入到与之关联的引用队列中。</p>
<p>4．虚引用（PhantomReference）<br>“虚引用”顾名思义，就是形同虚设，与其他几种引用都不同，虚引用并不会决定对象的生命周期。如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收。<br>虚引用主要用来跟踪对象被垃圾回收的活动。虚引用与软引用和弱引用的一个区别在于：虚引用必须和引用队列（ReferenceQueue）联合使用。当垃 圾回收器准备回收一个对象时，如果发现它还有虚引用，就会在回收对象的内存之前，把这个虚引用加入到与之关联的引用队列中。程序可以通过判断引用队列中是 否已经加入了虚引用，来了解</p>
<p>被引用的对象是否将要被垃圾回收。程序如果发现某个虚引用已经被加入到引用队列，那么就可以在所引用的对象的内存被回收之前采取必要的行动。</p>
<p>在本书中，”引用”既可以作为动词，也可以作为名词，读者应该根据上下文来区分”引用”的含义。</p>
<p>在java.lang.ref包中提供了三个类：SoftReference类、WeakReference类和PhantomReference类，它 们分别代表软引用、弱引用和虚引用。ReferenceQueue类表示引用队列，它可以和这三种引用类联合使用，以便跟踪Java虚拟机回收所引用的对 象的活动。以下程序创建了一个String对象、ReferenceQueue对象和WeakReference对象：</p>
<p>//创建一个强引用<br>String str = new String(“hello”);</p>
<p>//创建引用队列, <String>为范型标记，表明队列中存放String对象的引用<br>ReferenceQueue<String> rq = new ReferenceQueue<String>();</p>
<p>//创建一个弱引用，它引用”hello”对象，并且与rq引用队列关联<br>//<String>为范型标记，表明WeakReference会弱引用String对象<br>WeakReference<String> wf = new WeakReference<String>(str, rq);</p>
<p>以上程序代码执行完毕，内存中引用与对象的关系如图11-10所示。</p>
<p>图11-10 “hello”对象同时具有强引用和弱引用</p>
<p>在图11-10中，带实线的箭头表示强引用，带虚线的箭头表示弱引用。从图中可以看出，此时”hello”对象被str强引用，并且被一个WeakReference对象弱引用，因此”hello”对象不会被垃圾回收。<br>在以下程序代码中，把引用”hello”对象的str变量置为null，然后再通过WeakReference弱引用的get()方法获得”hello”对象的引用：</p>
<p>String str = new String(“hello”); //①<br>ReferenceQueue<String> rq = new ReferenceQueue<String>(); //②<br>WeakReference<String> wf = new WeakReference<String>(str, rq); //③</p>
<p>str=null; //④取消”hello”对象的强引用<br>String str1=wf.get(); //⑤假如”hello”对象没有被回收，str1引用”hello”对象</p>
<p>//假如”hello”对象没有被回收，rq.poll()返回null<br>Reference&lt;? extends String&gt; ref=rq.poll(); //⑥</p>
<p>执行完以上第④行后，内存中引用与对象的关系如图11-11所示，此 时”hello”对象仅仅具有弱引用，因此它有可能被垃圾回收。假如它还没有被垃圾回收，那么接下来在第⑤行执行wf.get()方法会返 回”hello”对象的引用，并且使得这个对象被str1强引用。再接下来在第⑥行执行rq.poll()方法会返回null，因为此时引用队列中没有任 何引用。ReferenceQueue的poll()方法用于返回队列中的引用，如果没有则返回null。</p>
<p>图11-11 “hello”对象只具有弱引用</p>
<p>在以下程序代码中，执行完第④行后，”hello”对象仅仅具有弱引用。接下来两次调用System.gc()方法，催促垃圾回收器工作，从而提 高”hello”对象被回收的可能性。假如”hello”对象被回收，那么WeakReference对象的引用被加入到ReferenceQueue 中，接下来wf.get()方法返回null，并且rq.poll()方法返回WeakReference对象的引用。图11-12显示了执行完第⑧行后 内存中引用与对象的关系。</p>
<p>String str = new String(“hello”); //①<br>ReferenceQueue<String> rq = new ReferenceQueue<String>(); //②<br>WeakReference<String> wf = new WeakReference<String>(str, rq); //③<br>str=null; //④</p>
<p>//两次催促垃圾回收器工作，提高”hello”对象被回收的可能性<br>System.gc(); //⑤<br>System.gc(); //⑥<br>String str1=wf.get(); //⑦ 假如”hello”对象被回收，str1为null<br>Reference&lt;? extends String&gt; ref=rq.poll(); //⑧</p>
<p>图11-12 “hello”对象被垃圾回收，弱引用被加入到引用队列</p>
<p>The important part about strong references ? the part that makes them “strong” ? is how they interact with the garbage collector. Specifically, if an object is reachable via a chain of strong references (strongly reachable), it is not eligible for garbage collection. As you don’t want the garbage collector destroying objects you’re working on, this is normally exactly what you want.</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Java为什么不支持多继承？</title>
    <url>/734/</url>
    <content><![CDATA[<ul>
<li><p>Java为什么不支持多继承？这个问题其实真的挺简单。</p>
<p>我们可以先举一个多重继承错误的例子，我们定义一个动物（类）既是狗（父类1）也是猫（父类2），两个父类都有“叫”这个方法。那么当我们调用“叫”这个方法时，它就不知道是狗叫还是猫叫了，这就是多重继承的冲突。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo1;</span><br><span class="line"></span><br><span class="line">public class Cat &#123;</span><br><span class="line">	public void say()&#123;</span><br><span class="line">		System.out.println(&quot;this is Cat say!&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">------------------------------</span><br><span class="line">package com.glj.demo1;</span><br><span class="line"></span><br><span class="line">public class Dog &#123;</span><br><span class="line">	public void say()&#123;</span><br><span class="line">		System.out.println(&quot;this is dog say!&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">----------------------------------------------------</span><br><span class="line">package com.glj.demo1;</span><br><span class="line"></span><br><span class="line">public class CatAndDog extends Dog,Cat&#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		this.say();//这里是猫叫呢还是狗叫呢？</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，如果你需要弄一个既要有猫叫又要有狗叫的什么鬼动物来的话，那么只需要创造一个描述这类行为的接口，然后在自己的类里面实现这个行为的接口，最终就能实现所谓的行为来了….</p>
<p>因此，Java支持接口的多继承，不支持类的多继承，Java不支持类的多继承的一个原因是避免实现方法的版本冲突</p>
<p>所以需要实现多继承，那么就是下面的</p>
<blockquote>
<p><strong>多接口+组合=多继承</strong></p>
</blockquote>
<p>下面我们实现一个多继承的例子，即一个接口people类，里面有一个say方法和一个work的行为方法，再有一个Chinese接口类和American接口类去继承了people的接口，然后二者结婚生下了一个中美的混血儿..ChandAm类…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">public interface People &#123;</span><br><span class="line">	public abstract void say();</span><br><span class="line">    public abstract void work();</span><br><span class="line">&#125;</span><br><span class="line">---------------------------------------</span><br><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">public interface American extends People&#123;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void say();</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void work();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">---------------------------------------</span><br><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">public interface Chinese extends People&#123;</span><br><span class="line">	@Override</span><br><span class="line">	public void say();</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void work();</span><br><span class="line">&#125;</span><br><span class="line">---------------------------------------</span><br><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">public class ChandAm implements Chinese,American&#123;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void say() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		System.out.println(&quot;我是中美的混血儿&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void work() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		System.out.println(&quot;我会打太极&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------------</span><br><span class="line">package com.glj.demo;</span><br><span class="line"></span><br><span class="line">public class Test &#123;</span><br><span class="line">	</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		ChandAm cna = new ChandAm();</span><br><span class="line">		cna.say();//我是中美的混血儿</span><br><span class="line">		cna.work();//我会打太极</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，从上面的例子不难发现，Java其实是支持多继承的，具体为:</p>
<ul>
<li>Java中的接口支持多继承（接口与接口之间为继承关系），因为接口不提供具体实现方式，只是一种规范，所以支持。</li>
<li>Java的类是支持多接口的实现。</li>
<li>Java的类是不支持多继承的，原因是Java是强类型语言，多继承会导致调用的不确定性，所以Java的类不支持。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>JAVA代码</title>
    <url>/471/</url>
    <content><![CDATA[<p>某机构2006年培养学员8万人，每年增长25%，请问按此增长速度，到哪一年培训学员人数将达到20万人？</p>
<p>public class ComputerNumber {<br>    public static void main(String[] args){<br>        int year = 2006;<br>        int student = 80000;<br>        while(student&lt;200000){<br>            student = (int)(student*(1+0.25));<br>            year++;<br>        }<br>        System.out.println(year+”年，培训人数达到20万人”);<br>    }<br>}</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>java利用poi读取excel中数据并导入数据库</title>
    <url>/866/</url>
    <content><![CDATA[<p>因为现在的工作需要把超级多的excel或者cvs文件导入数据库..</p>
<p>之前又没有学过,哎又没有人带，但是为了生活，实习…..</p>
<p>解决办法,利用poi读取excel，在使用sql语句写入数据库…(JDBCUtil可以自己写，我这里测试用mysql,公司用oracle)</p>
<p>不多说代码带上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package comglj.utils;</span><br><span class="line"></span><br><span class="line">import java.io.File;  </span><br><span class="line">import java.io.FileInputStream;  </span><br><span class="line">import java.io.FileNotFoundException;  </span><br><span class="line">import java.io.IOException;  </span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.text.DecimalFormat;  </span><br><span class="line">import java.text.SimpleDateFormat;  </span><br><span class="line">import java.util.LinkedList;  </span><br><span class="line">import java.util.List;  </span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFCell;  </span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFDateUtil;  </span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFRow;  </span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFSheet;  </span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFWorkbook;  </span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFCell;  </span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFRow;  </span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFSheet;  </span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFWorkbook;  </span><br><span class="line">/** </span><br><span class="line"> * 读取excel文件 </span><br><span class="line"> * @author GLJ</span><br><span class="line"> *Poi解析2003时使用的是HSSFCell，而2007的则是  </span><br><span class="line">    XSSFCell，是完全不同的两套API </span><br><span class="line">    必须先要判断excel的类型，不过 HSSFWorkbook 和 XSSFWorkbook 实现的接口都是一样的Workbook</span><br><span class="line">    直接在实例化接口的时候有点区别其他时候没有任何差异。 </span><br><span class="line"> */  </span><br><span class="line">public class ReadExcelUtil &#123;  </span><br><span class="line">    public static List&lt;List&lt;Object&gt;&gt; readExcel(File file) throws IOException &#123;  </span><br><span class="line">        String fileName = file.getName();  </span><br><span class="line">        String extension = fileName.lastIndexOf(&quot;.&quot;) == -1 ? &quot;&quot; : fileName  </span><br><span class="line">                .substring(fileName.lastIndexOf(&quot;.&quot;) + 1);  </span><br><span class="line">        if (&quot;xls&quot;.equals(extension)) &#123;  </span><br><span class="line">            return read2003Excel(file);  </span><br><span class="line">        &#125; else if (&quot;xlsx&quot;.equals(extension)) &#123;  </span><br><span class="line">            return read2007Excel(file);  </span><br><span class="line">        &#125; else &#123;  </span><br><span class="line">            throw new IOException(&quot;不支持的文件类型&quot;);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    /** </span><br><span class="line">     * 读取 office 2003 excel </span><br><span class="line">     * @throws IOException </span><br><span class="line">     * @throws FileNotFoundException </span><br><span class="line">     */  </span><br><span class="line">    private static List&lt;List&lt;Object&gt;&gt; read2003Excel(File file)  </span><br><span class="line">            throws IOException &#123;  </span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; list = new LinkedList&lt;List&lt;Object&gt;&gt;();  </span><br><span class="line">        HSSFWorkbook hwb = new HSSFWorkbook(new FileInputStream(file));  </span><br><span class="line">        HSSFSheet sheet = hwb.getSheetAt(0);  </span><br><span class="line">        Object value = null;  </span><br><span class="line">        HSSFRow row = null;  </span><br><span class="line">        HSSFCell cell = null;  </span><br><span class="line">        int counter = 0;  </span><br><span class="line">      //循环所有的行</span><br><span class="line">        for (int i = sheet.getFirstRowNum(); counter &lt; sheet  </span><br><span class="line">                .getPhysicalNumberOfRows(); i++) &#123;  </span><br><span class="line">//          if(i==0)&#123;  </span><br><span class="line">//              //跳过第一行  </span><br><span class="line">//              continue;  </span><br><span class="line">//          &#125;  </span><br><span class="line">            row = sheet.getRow(i);  </span><br><span class="line">            List&lt;Object&gt; linked = new LinkedList&lt;Object&gt;();  </span><br><span class="line">            for (int j = row.getFirstCellNum(); j &lt;= row.getLastCellNum(); j++) &#123;  </span><br><span class="line">                cell = row.getCell(j);  </span><br><span class="line">                if (cell == null) &#123;  </span><br><span class="line">                    value=&quot;无&quot;;//导入不能为空  </span><br><span class="line">                    linked.add(value);  </span><br><span class="line">                    //System.out.println(value);  </span><br><span class="line">                    continue;  </span><br><span class="line">                &#125;  </span><br><span class="line">                DecimalFormat df = new DecimalFormat(&quot;0&quot;);// 格式化 number String  </span><br><span class="line">                                                            // 字符  </span><br><span class="line">                SimpleDateFormat sdf = new SimpleDateFormat(  </span><br><span class="line">                        &quot;yyyy-MM-dd&quot;);// 格式化日期字符串  </span><br><span class="line">                DecimalFormat nf = new DecimalFormat(&quot;0&quot;);// 格式化数字  </span><br><span class="line">                switch (cell.getCellType()) &#123;  </span><br><span class="line">                case XSSFCell.CELL_TYPE_STRING:  </span><br><span class="line">                    value = cell.getStringCellValue();  </span><br><span class="line">                    break;  </span><br><span class="line">                case XSSFCell.CELL_TYPE_NUMERIC:  </span><br><span class="line">                    if (&quot;@&quot;.equals(cell.getCellStyle().getDataFormatString())) &#123;  </span><br><span class="line">                        value = df.format(cell.getNumericCellValue());  </span><br><span class="line">                    &#125; else if (&quot;General&quot;.equals(cell.getCellStyle()  </span><br><span class="line">                            .getDataFormatString())) &#123;  </span><br><span class="line">                        value = nf.format(cell.getNumericCellValue());  </span><br><span class="line">                    &#125; else &#123;  </span><br><span class="line">                        value = sdf.format(HSSFDateUtil.getJavaDate(cell  </span><br><span class="line">                                .getNumericCellValue()));  </span><br><span class="line">                    &#125;  </span><br><span class="line">                    break;  </span><br><span class="line">                case XSSFCell.CELL_TYPE_BOOLEAN:  </span><br><span class="line">                    value = cell.getBooleanCellValue();  </span><br><span class="line">                    break;  </span><br><span class="line">                case XSSFCell.CELL_TYPE_BLANK:  </span><br><span class="line">                    value = &quot;&quot;;  </span><br><span class="line">                    break;  </span><br><span class="line">                default:  </span><br><span class="line">                    value = cell.toString();  </span><br><span class="line">                &#125;  </span><br><span class="line">                if (value == null || &quot;&quot;.equals(value)) &#123;  </span><br><span class="line">                    value=&quot;null&quot;;//导入不能为空  </span><br><span class="line">                &#125;  </span><br><span class="line">                linked.add(value);  </span><br><span class="line">            &#125;  </span><br><span class="line">            list.add(linked);  </span><br><span class="line">        &#125;  </span><br><span class="line">        return list;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    /** </span><br><span class="line">     * 读取Office 2007 excel </span><br><span class="line">     * */  </span><br><span class="line">    private static List&lt;List&lt;Object&gt;&gt; read2007Excel(File file)  </span><br><span class="line">            throws IOException &#123;  </span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; list = new LinkedList&lt;List&lt;Object&gt;&gt;();  </span><br><span class="line">        // 构造 XSSFWorkbook 对象，strPath 传入文件路径  </span><br><span class="line">        XSSFWorkbook xwb = new XSSFWorkbook(new FileInputStream(file));  </span><br><span class="line">        // 读取第一章表格内容  </span><br><span class="line">        XSSFSheet sheet = xwb.getSheetAt(0);  </span><br><span class="line">        Object value = null;  </span><br><span class="line">        XSSFRow row = null;  </span><br><span class="line">        XSSFCell cell = null;  </span><br><span class="line">        int counter = 0;  </span><br><span class="line">      //循环所有的行</span><br><span class="line">        for (int i = sheet.getFirstRowNum(); counter &lt; sheet  </span><br><span class="line">                .getPhysicalNumberOfRows(); i++) &#123;  </span><br><span class="line">            if(i==0)&#123;  </span><br><span class="line">                //跳过第一行  </span><br><span class="line">                continue;  </span><br><span class="line">            &#125;  </span><br><span class="line">            row = sheet.getRow(i);  </span><br><span class="line">            if (row == null) &#123;  </span><br><span class="line">                 break;  </span><br><span class="line">            &#125;  </span><br><span class="line">            List&lt;Object&gt; linked = new LinkedList&lt;Object&gt;();  </span><br><span class="line">            for (int j = row.getFirstCellNum(); j &lt;row.getLastCellNum(); j++) &#123;  </span><br><span class="line">                cell = row.getCell(j);  </span><br><span class="line">                if (cell == null) &#123;  </span><br><span class="line">                    value=&quot;&quot;;//导入不能为空  </span><br><span class="line">                    linked.add(value);  </span><br><span class="line">                    continue;  </span><br><span class="line">                &#125;  </span><br><span class="line">                DecimalFormat df = new DecimalFormat(&quot;0&quot;);// 格式化 number String  </span><br><span class="line">                                                            // 字符  </span><br><span class="line">                SimpleDateFormat sdf = new SimpleDateFormat(  </span><br><span class="line">                        &quot;yyyy-MM-dd&quot;);// 格式化日期字符串  </span><br><span class="line">                DecimalFormat nf = new DecimalFormat(&quot;0&quot;);// 格式化数字  </span><br><span class="line">                switch (cell.getCellType()) &#123;  </span><br><span class="line">                        case XSSFCell.CELL_TYPE_STRING:  </span><br><span class="line">                            value = cell.getStringCellValue();  </span><br><span class="line">                            break;  </span><br><span class="line">                        case XSSFCell.CELL_TYPE_NUMERIC:  </span><br><span class="line"></span><br><span class="line">                            if (&quot;@&quot;.equals(cell.getCellStyle().getDataFormatString())) &#123;  </span><br><span class="line">                                value = df.format(cell.getNumericCellValue());  </span><br><span class="line">                            &#125; else if (&quot;General&quot;.equals(cell.getCellStyle()  </span><br><span class="line">                                    .getDataFormatString())) &#123;  </span><br><span class="line">                                value = nf.format(cell.getNumericCellValue());  </span><br><span class="line">                            &#125; else &#123;  </span><br><span class="line">                                value = sdf.format(HSSFDateUtil.getJavaDate(cell  </span><br><span class="line">                                        .getNumericCellValue()));  </span><br><span class="line">                            &#125;  </span><br><span class="line">                            break;  </span><br><span class="line">                        case XSSFCell.CELL_TYPE_BOOLEAN:  </span><br><span class="line">                            value = cell.getBooleanCellValue();  </span><br><span class="line">                            break;  </span><br><span class="line">                        case XSSFCell.CELL_TYPE_BLANK://空格，空白  </span><br><span class="line">                            value = &quot;&quot;;  </span><br><span class="line">                            break;  </span><br><span class="line">                        default:  </span><br><span class="line">                            value = cell.toString();  </span><br><span class="line">                &#125;  </span><br><span class="line">                if (value == null || &quot;&quot;.equals(value)) &#123;  </span><br><span class="line">                    value=&quot;&quot;;//导入不能为空  </span><br><span class="line">                &#125;  </span><br><span class="line">                linked.add(value);  </span><br><span class="line">            &#125;  </span><br><span class="line">            list.add(linked);  </span><br><span class="line">        &#125;  </span><br><span class="line">        return list;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    public static void main(String[] args) &#123;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            int count=0;  </span><br><span class="line">            //long time1=System.currentTimeMillis();  </span><br><span class="line">            List&lt;List&lt;Object&gt;&gt; list=readExcel(new File(&quot;F:\\k1.xlsx&quot;));  </span><br><span class="line">           // System.out.println(&quot;读取花费时间：&quot;+(System.currentTimeMillis()-time1)/1000.0);  </span><br><span class="line">              </span><br><span class="line">            for(List&lt;Object&gt; list2 :list)&#123;  </span><br><span class="line">                count++;  </span><br><span class="line">//                for(int i=0;i&lt;list2.size();i++)&#123;  </span><br><span class="line">//                	System.out.print(list2.get(i)+&quot;\n&quot;);  </span><br><span class="line">//                &#125;  </span><br><span class="line">                if(list2.size()&gt;4)&#123;</span><br><span class="line">                    String id = list2.get(0).toString();</span><br><span class="line">                	String tac = list2.get(1).toString();</span><br><span class="line">                	String host = list2.get(2).toString();</span><br><span class="line">                	String is_reg = list2.get(3).toString();</span><br><span class="line">                	String host_id = list2.get(4).toString();</span><br><span class="line">                	//System.out.println(id+&quot;--&quot;+tac+&quot;--&quot;+host+&quot;--&quot;+is_reg+&quot;--&quot;+host_id);</span><br><span class="line">                	String sql = &quot;insert into wdig_iot_tac_rule(ID,TAC,HOST,IS_REG,HOST_ID) values(?,?,?,?,?)&quot;;</span><br><span class="line">                	try &#123;</span><br><span class="line">            			Connection conn = JDBCUtil.getConnection();</span><br><span class="line">            			PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">            			ps.setString(1, id);</span><br><span class="line">            			ps.setString(2, tac);</span><br><span class="line">            			ps.setString(3, host);</span><br><span class="line">            			ps.setString(4, is_reg);</span><br><span class="line">            			ps.setString(5, host_id);</span><br><span class="line">            			ps.execute();</span><br><span class="line">            		&#125; catch (SQLException e) &#123;</span><br><span class="line">            			// TODO Auto-generated catch block</span><br><span class="line">            			e.printStackTrace();</span><br><span class="line">            		&#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(list2.size()==4)&#123;</span><br><span class="line">                	String id = list2.get(0).toString();</span><br><span class="line">                	String tac = list2.get(1).toString();</span><br><span class="line">                	String host = list2.get(2).toString();</span><br><span class="line">                	String is_reg = list2.get(3).toString();</span><br><span class="line">                	String host_id = null;</span><br><span class="line">                	String sql = &quot;insert into wdig_iot_tac_rule(ID,TAC,HOST,IS_REG,HOST_ID) values(?,?,?,?,?)&quot;;</span><br><span class="line">                	try &#123;</span><br><span class="line">            			Connection conn = JDBCUtil.getConnection();</span><br><span class="line">            			PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">            			ps.setString(1, id);</span><br><span class="line">            			ps.setString(2, tac);</span><br><span class="line">            			ps.setString(3, host);</span><br><span class="line">            			ps.setString(4, is_reg);</span><br><span class="line">            			ps.setString(5, host_id);</span><br><span class="line">            			ps.execute();</span><br><span class="line">            		&#125; catch (SQLException e) &#123;</span><br><span class="line">            			// TODO Auto-generated catch block</span><br><span class="line">            			e.printStackTrace();</span><br><span class="line">            		&#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;  </span><br><span class="line">            //System.out.println(&quot;ok!&quot;);  </span><br><span class="line">        &#125; catch (IOException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<p><img src="http://199604.com/wp-content/uploads/2018/01/TIM20180127182410.jpg"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现md5加密算法</title>
    <url>/569/</url>
    <content><![CDATA[<p>因为md类加密算法不可逆，经常用于信息完整性的校验，以及用户敏感信息的存储。</p>
<p>其实上面的那句话是屁话…你妈的最近怎么那么多撞库,各种泄露…所以世上没有不可逆的加密…</p>
<p>虽然我只是帮师兄把重修的作业给做了…</p>
<p>但是呢…我觉得这重修考试的题目就那么的简单吗？</p>
<p><img src="http://199604.com/wp-content/uploads/2017/05/0509_074603-576x1024.jpg" alt="img"></p>
<p>哦跑题了…下面是代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.md;</span><br><span class="line"></span><br><span class="line">import java.security.MessageDigest;</span><br><span class="line"></span><br><span class="line">public class md5JdkUtil &#123;</span><br><span class="line">	</span><br><span class="line">	public static String convertByteToHexString(byte[] bytes)&#123;</span><br><span class="line">		String result = &quot;&quot;;</span><br><span class="line">		for(int i=0;i&lt;bytes.length;i++)&#123;</span><br><span class="line">			int temp = bytes[i]&amp;0xff;</span><br><span class="line">			String tempHex = Integer.toHexString(temp);</span><br><span class="line">			if(tempHex.length()&lt;2)&#123;</span><br><span class="line">				result +=&quot;0&quot;+tempHex;</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				result +=tempHex;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static String md2Jdk(String message)&#123;</span><br><span class="line">		String temp =&quot;&quot;;</span><br><span class="line">		try&#123;</span><br><span class="line">			MessageDigest md2Digest = MessageDigest.getInstance(&quot;MD2&quot;);</span><br><span class="line">			byte[] encodeMd2Digest = md2Digest.digest(message.getBytes());</span><br><span class="line">			temp = convertByteToHexString(encodeMd2Digest);</span><br><span class="line">		&#125;catch (Exception e) &#123;</span><br><span class="line">			// TODO: handle exception</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		return temp;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static String md5Jdk(String message)&#123;</span><br><span class="line">		String temp = &quot;&quot;;</span><br><span class="line">		try&#123;</span><br><span class="line">			MessageDigest md5Digest = MessageDigest.getInstance(&quot;MD5&quot;);</span><br><span class="line">			byte[] encodeMd5Digest = md5Digest.digest(message.getBytes());</span><br><span class="line">			temp = convertByteToHexString(encodeMd5Digest);</span><br><span class="line">		&#125;catch (Exception e) &#123;</span><br><span class="line">			// TODO: handle exception</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		return temp;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * @param args</span><br><span class="line">	 */</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">//		String md2Encode = md2Jdk(&quot;admin&quot;);</span><br><span class="line">//		System.out.println(&quot;md2加密&quot;+md2Encode);</span><br><span class="line">//		System.out.println(md2Encode.length());</span><br><span class="line">		</span><br><span class="line">		String md5Encode1 = md5Jdk(&quot;admin&quot;);</span><br><span class="line">		String md5Encode2 = md5Jdk(&quot;admin&quot;);</span><br><span class="line">		System.out.println(md5Encode1.equals(md5Encode2));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果没有陪你走这条路..那么你哭着也需要给它走完…</p>
<p>也需要给它走完…</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>md2</tag>
        <tag>md5</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数组插入指定位置</title>
    <url>/1132/</url>
    <content><![CDATA[<p>最近遇到一个这样的需求，在不考虑性能的前提下，感觉还行吧…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static String[] insert(String[] arr,int i,String l)&#123;</span><br><span class="line">	//新建数组,对原数组扩容</span><br><span class="line">	String[] arr1 = new String[arr.length+1];</span><br><span class="line">	//将原数组数据赋值给新数组</span><br><span class="line">	for(int j = 0;j&lt;arr.length;j++)&#123;</span><br><span class="line">		arr1[j] = arr[j];</span><br><span class="line">	&#125;</span><br><span class="line">	//将大于i的数据向后移动一位</span><br><span class="line">	for(int j = arr1.length-2;j&gt;i;j--)&#123;</span><br><span class="line">		arr1[j+1] = arr1[j];</span><br><span class="line">	&#125;</span><br><span class="line">	//赋值到i位置</span><br><span class="line">	arr1[i+1] = l;</span><br><span class="line">	return arr1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
  </entry>
  <entry>
    <title>java根据邮箱获取Gravatar头像</title>
    <url>/832/</url>
    <content><![CDATA[<p>在网上找了很多根据邮箱获取Gravatar头像的教程都是php的…</p>
<p>好吧我也记录下来….</p>
<hr>
<p>首先嘛，是需要到<a href="https://en.gravatar.com/">https://en.gravatar.com/</a> 注册或者登录吧..</p>
<p>然后可以根据php的语言转换…</p>
<p>php获取Gravatar头像是这样仔转换的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$email = &quot;admin@199604.com&quot;;</span><br><span class="line">$gravatarImg = &#x27;https://s.gravatar.com/avatar/&#x27; . md5($email) . &#x27;?s=32&#x27;;</span><br></pre></td></tr></table></figure>

<p>因为我的邮箱转化为md5后是162d8d081d380691c5279df2bbef4152</p>
<p>所以这时候$gravatarImg 是<a href="https://s.gravatar.com/avatar/162d8d081d380691c5279df2bbef4152?s=32">https://s.gravatar.com/avatar/162d8d081d380691c5279df2bbef4152?s=32</a></p>
<p>其实?s=xx是图片大小</p>
<p>最后<a href="http://www.gravatar.com/avatar/162d8d081d380691c5279df2bbef4152?s=32">http://www.gravatar.com/avatar/162d8d081d380691c5279df2bbef4152?s=32</a> 也是可以获取图片…</p>
<hr>
<p>现在我们来对比一下官网的吧…</p>
<p><img src="http://qn.199604.com/typoraImg/20171212202652.jpg" alt="img"></p>
<p>看到这个图片是不是和我上面解释相差无几吧..但是最重要的一点是…你的邮箱在Gravatar上存在上传的图片..</p>
<p>下面记录一下java实现吧..</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.blog.util;</span><br><span class="line"></span><br><span class="line">import java.security.MessageDigest;</span><br><span class="line"></span><br><span class="line">public class Functions &#123;</span><br><span class="line">	</span><br><span class="line">	public static String emailToMd5(String message)&#123;</span><br><span class="line">		String temp = &quot;&quot;;</span><br><span class="line">		try&#123;</span><br><span class="line">			MessageDigest md5Digest = MessageDigest.getInstance(&quot;MD5&quot;);</span><br><span class="line">			byte[] encodeMd5Digest = md5Digest.digest(message.getBytes());</span><br><span class="line">			temp = convertByteToHexString(encodeMd5Digest);</span><br><span class="line">		&#125;catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		return temp;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static String convertByteToHexString(byte[] bytes)&#123;</span><br><span class="line">		String result = &quot;&quot;;</span><br><span class="line">		for(int i=0;i&lt;bytes.length;i++)&#123;</span><br><span class="line">			int temp = bytes[i]&amp;0xff;</span><br><span class="line">			String tempHex = Integer.toHexString(temp);</span><br><span class="line">			if(tempHex.length()&lt;2)&#123;</span><br><span class="line">				result +=&quot;0&quot;+tempHex;</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				result +=tempHex;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	//根据email获取gravatar头像</span><br><span class="line">    public static String getGravatar(String email) &#123;</span><br><span class="line">        String emailMd5 = emailToMd5(email);</span><br><span class="line">        //设置图片大小32px</span><br><span class="line">        String avatar = &quot;https://s.gravatar.com/avatar/&quot;+emailMd5+&quot;?s=32&quot;;</span><br><span class="line">        return avatar;</span><br><span class="line">    &#125;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">//		String emailMd5 = emailToMd5(&quot;admin@199604.com&quot;);</span><br><span class="line">//		System.out.println(emailMd5);//162d8d081d380691c5279df2bbef4152</span><br><span class="line">//		System.out.println(emailMd5.equals(&quot;162d8d081d380691c5279df2bbef4152&quot;));//true</span><br><span class="line">		String gravatarImg = getGravatar(&quot;admin@199604.com&quot;);</span><br><span class="line">		System.out.println(gravatarImg);</span><br><span class="line">		//输出https://s.gravatar.com/avatar/162d8d081d380691c5279df2bbef4152?s=32</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>原理其实很简单，就是把邮箱转化成md5,然后拼接到Gravatar图片地址上面..</p>
<p>如果你觉得不信的话，可以去实现….</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>gravatar</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的访问控制权限(public,private,protected,default)面试笔记</title>
    <url>/1369/</url>
    <content><![CDATA[<p>类中的数据成员和成员函数据具有的访问权限包括：public、private、protect、default(friendly)</p>
<p>public<br>公开；可以被所有其他类所访问。</p>
<p>private<br>私有；只能被自己访问和修改。</p>
<p>protected<br>保护；自身、子类及同一个包中类可以访问。</p>
<p>default<br>默认：同一包中的类可以访问，声明时没有加修饰符。</p>
<p>public&gt;protected&gt;default&gt;private</p>
<p><img src="http://qn.199604.com/typoraImg/3011064-5744957eac59eba8.webp_-1024x318.jpg"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA简单代码</title>
    <url>/472/</url>
    <content><![CDATA[<p>第二单元任务五实训：通过程序设计几何图形接口（Shape），实现类矩形（Rectangle）、圆形（Circle）、正方形（Square）几种类型，能够利用接口和多态性计算几何图形的面积和周长并显示。</p>
<p>//接口</p>
<p>public interface Shape {<br>public double perimeter();//周长<br>public double area();//面积<br>}<br>//矩形<br>class Rectangle implements Shape{<br>double a ; //长<br>double b ; //宽<br>public Rectangle(double a,double b){<br>this.a=a;<br>this.b=b;<br>}<br>public double perimeter(){<br>return 2*(a+b);<br>}<br>public double area(){<br>return a*b;<br>}<br>}<br>//圆形<br>class Circle implements Shape {<br>public static final double PI=3.14;<br>double r; //半径<br>public Circle(double r){<br>this.r=r;<br>}<br>public double perimeter(){<br>return 2*PI*r;<br>}<br>public double area(){<br>return PI*r*r;<br>}</p>
<p>}<br>//正方形<br>class Square implements Shape {<br>double a ;//边长<br>public Square(double a){<br>this.a=a;<br>}<br>public double perimeter(){<br>return 4*a;<br>}<br>public double area(){<br>return a*a;<br>}</p>
<p>}</p>
<p>//测试</p>
<p>import java.util.*;<br>public class ShapeTest {</p>
<p>/**<br> * @param args<br> */<br>/*<br> * 获得类型的信息</p>
<p>在获得类型类之后，你就可以调用其中的一些方法获得类型的信息了，主要的方法有：</p>
<p>getName():String：获得该类型的全称名称。</p>
<p>getSuperClass():Class：获得该类型的直接父类，如果该类型没有直接父类，那么返回null。</p>
<p>getInterfaces():Class[]：获得该类型实现的所有接口。</p>
<p>isArray():boolean：判断该类型是否是数组。</p>
<p>isEnum():boolean：判断该类型是否是枚举类型。</p>
<p>isInterface():boolean：判断该类型是否是接口。</p>
<p>isPrimitive():boolean：判断该类型是否是基本类型，即是否是int，boolean，double等等。</p>
<p>isAssignableFrom(Class cls):boolean：判断这个类型是否是类型cls的父（祖先）类或父（祖先）接口。</p>
<p>getComponentType():Class：如果该类型是一个数组，那么返回该数组的组件类型。</p>
<p>*/<br>  public static void print(Shape shape){//在书本p86那里有说到。<br>          System.out.println(shape.getClass()+”面积：”+shape.area());//利用getClass()的方法能<br>          System.out.println(shape.getClass()+”周长：”+shape.perimeter());<br>   }<br>public static void main(String[] args) {<br>Scanner input = new Scanner(System.in);<br>System.out.println(“***********查水表**************“);<br>System.out.println(“请输入你需要计算有哪些集合图形面积。”);<br>System.out.println(“回复1为矩形，2为圆形，3为正方形”);<br>int a=input.nextInt();<br>if(a==1){<br>System.out.println(“请输入矩形的长：”);<br>int chang=input.nextInt();//输入长<br>System.out.println(“请输入矩形的宽：”);<br>int kuan=input.nextInt();//输入宽<br>Shape shape=new Rectangle(chang,kuan);//已经在接口中定义了a为长，a==chang，b==kuan<br>print(shape);//输出表达<br>}else if(a==2){<br>System.out.println(“请输入圆形的半径：”);<br>int r=input.nextInt();//输入圆的半径<br>Shape shape=new Circle(r);//同上，已经在接口中定义了<br>        print(shape);<br>}else if(a==3){<br>System.out.println(“请输入正方形的边长：”);<br>int chang1=input.nextInt();//输入正方形边长<br>Shape shape=new Square(chang1);//同上，已经在接口中定义了<br>        print(shape);<br>}else{<br>System.out.println(“您输入错误！请返回重新输入”);<br>}<br> System.out.println(“查水表结束”);<br>        System.out.println(“***********查水表**************“);<br>}</p>
<p>}</p>
<p>下面是三角形和长方形的周长和面积的计算代码。</p>
<p>public interface Shape {<br>  public double area();//面积<br>  public double longer();//周长<br>}<br>//三角形<br>public class Triangle implements Shape {<br>  double s1;<br>  double s2;<br>  double s3;<br>  // 初始化一个三角形对象，并赋予该三角形三边长<br>  public Triangle(double s1, double s2, double s3) {<br>    if (isTri(s1, s2, s3)) {<br>      this.s1 = s1;<br>      this.s2 = s2;<br>      this.s3 = s3;<br>    } else {<br>      System.out.println(“输入的三边长” + s1 + “、” + s2 + “、” + s3<br>      + “不能组成一个三角形，请重新输入三边长！”);<br>    }<br>  }<br>  // 判断是否是个三角形<br>  public boolean isTri(double s1, double s2, double s3) {<br>    if (s1 + s2 &lt; s3) {<br>      return false;<br>    }<br>    if (s1 + s3 &lt; s2) {<br>      return false;<br>    }<br>    if (s2 + s3 &lt; s1) {<br>      return false;<br>    }<br>    return true;<br>  }<br> //面积<br>  public double area() {<br>    double p = (s1 + s2 + s3) / 2;<br>    return Math.sqrt(p * (p - s1) * (p - s2) * (p - s3));<br>  }<br>//周长<br>  public double longer() {<br>    return s1 + s2 + s3;<br>  }<br>}<br>//长方形<br>public class Director implements Shape {<br>  double s1;<br>  double s2;<br>  // 初始化一个长方形，并赋予该长方形两边长<br>  public Director(double s1, double s2) {<br>    this.s1 = s1;<br>    this.s2 = s2;<br>  }<br>//面积<br>  public double area() {<br>    return s1 * s2;<br>  }<br>//周长<br>  public double longer() {<br>    // TODO Auto-generated method stub<br>    return 2 * (s1 + s2);<br>  }<br>}<br>//测试类<br>public class Test {<br>  /**<br>   * @param args<br>   */<br>  public static void main(String[] args) {<br>    Shape triangle = new Triangle(3, 4, 8);<br>    // 新建一个三边长为3，4，5的三角形<br>    Shape tri = new Triangle(3, 4, 5);<br>    Shape director = new Director(10, 20);<br>    // 新建一个两边长为10,20的长方形<br>    System.out.println(“三角形triangle的周长为：” + triangle.longer());<br>    System.out.println(“三角形triangle的面积为：” + triangle.area());<br>    System.out.println(“三角形tri的周长为：” + tri.longer());<br>    System.out.println(“三角形tri的面积为：” + tri.area());<br>    System.out.println(“该长方形的周长为：” + director.longer());<br>    System.out.println(“该长方形的面积为：” + director.area());<br>  }<br>}</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA继承</title>
    <url>/473/</url>
    <content><![CDATA[<p>多重继承：</p>
<p>练习2<br>   已知(1)有Father、Son、Garndson类，(2)Father有变量money,weight ,(3)Son有变量 hand并继承了Father(4)Grandson 本身有变量 foot并继承了Son</p>
<p>class Father {//父亲<br>private  double money;<br>private int weight;<br>public double getMoney(){<br>return money;<br>}<br>public void setMoney(double newMoney){<br>money=newMoney;<br>}<br>public int getWeight(){<br>return weight;<br>}<br>public void setWeight(int newWeight){<br> weight=newWeight;<br>}<br>}<br>class Son extends Father{//儿子<br>private String hand;</p>
<p>public String getHand(){<br>return hand;<br>}<br>public void setHand(String newHand){<br>hand=newHand;<br>}<br>}<br>class Grandson extends Son{//孙子<br>private String foot;<br>public String getFoot(){<br>return foot;<br>}<br>public void setFoot(String newFoot){<br>foot=newFoot;<br>}<br>}<br>public class Test {//测试<br>public static void main(String[] args) {<br>Son son=new Son();<br>        Grandson grandson=new Grandson();<br>        son.setWeight(60);<br>        son.setHand(“一双大手”);<br>        grandson.setWeight(30);<br>        grandson.setHand(“一双小手”);<br>        grandson.setFoot(“一双小脚”);<br>        System.out.println(“儿子重量:”+son.getWeight());<br>        System.out.println(“孙子重量:”+grandson.getWeight());<br>        System.out.println(“儿子的手:”+son.getHand());<br>        System.out.println(“孙子的手:”+grandson.getHand());<br>        System.out.println(“孙子的脚:”+grandson.getFoot());<br>}<br>}</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Java自我进阶知识整理1：使用try-with-resources优雅关闭资源</title>
    <url>/1241/</url>
    <content><![CDATA[<p>已裸辞一个星期了，至今还未找到合适工作(技术垃圾)，于是就利用这时间自己补下短吧~</p>
<hr>
<p>在JDK7以前(我记得好像是)关闭资源，我们通常都是写到finally代码块中，但是呢，我们又要考虑关闭资源时是否可能会抛出异常?于是就有了下面这代码了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    FileInputStream inputStream = null;</span><br><span class="line">    try &#123;</span><br><span class="line">        inputStream = new FileInputStream(new File(&quot;file.txt&quot;));</span><br><span class="line">        System.out.println(inputStream.read());</span><br><span class="line">    &#125; catch (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        if (inputStream != null) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                inputStream.close();</span><br><span class="line">            &#125; catch (IOException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>没办法，在JDK7以前，Java没有自动关闭外部资源的语法特性。</p>
<p>但是JDK7及以后关闭资源可以使用try-with-resources。</p>
<p>所谓try-with-resources语句就是在try后面加上resources，跟平常见到的try-catch语句有差别。看下面代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    try (FileInputStream inputStream = new FileInputStream(new File(&quot;file.txt&quot;))) &#123;</span><br><span class="line">        System.out.println(inputStream.read());</span><br><span class="line">    &#125; catch (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码是不是瞬间简洁许多?用法也就是将需要关闭的外部资源对象放到了try关键字后面的括号中创建。</p>
<p>最后，我说的都是骗人的，千万别信~</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA获得类型的信息</title>
    <url>/475/</url>
    <content><![CDATA[<p> 在获得类型类之后，你就可以调用其中的一些方法获得类型的信息了，主要的方法有：</p>
<p> getName():String：获得该类型的全称名称。<br>  getSimpleName():获取类名。</p>
<p> getSuperClass():Class：获得该类型的直接父类，如果该类型没有直接父类，那么返回null。</p>
<p> getInterfaces():Class[]：获得该类型实现的所有接口。</p>
<p> isArray():boolean：判断该类型是否是数组。</p>
<p> isEnum():boolean：判断该类型是否是枚举类型。</p>
<p> isInterface():boolean：判断该类型是否是接口。</p>
<p> isPrimitive():boolean：判断该类型是否是基本类型，即是否是int，boolean，double等等。</p>
<p> isAssignableFrom(Class cls):boolean：判断这个类型是否是类型cls的父（祖先）类或父（祖先）接口。</p>
<p> getComponentType():Class：如果该类型是一个数组，那么返回该数组的组件类型。</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>java配置文件的格式--xml和properties</title>
    <url>/1034/</url>
    <content><![CDATA[<p>最近在开发中用的比较多的是xml和properties这两种配置的格式文件，而yml暂时我还真的很少用，就学习spring Boot的时候用过，在现在公司开发小的工具程序都基本上用xml和properties。</p>
<p>但是现在感觉自己更倾向于用properties,但最近也还是在用xml写小程序，可能是习惯来得快?</p>
<p>接下来就写一下xml和properties的区别?也算是2018年最后一篇文章日志了,感谢现在努力的自己</p>
<h3 id="格式写法"><a href="#格式写法" class="headerlink" title="格式写法?"></a>格式写法?</h3><p>xxx.xml文件格式</p>
<p><img src="http://qn.199604.com/typoraImg/20181231223330.png" alt="img"></p>
<p>xxx.properties文件格式</p>
<p><img src="http://qn.199604.com/typoraImg/20181231223541.png" alt="img"></p>
<p>从这两种图，可以看出xml的结构比properties清晰(yml也是)，而properties文件要比.xml文件结构要简单一些。</p>
<p>可能是xml采用树形结构，而properties采用的是键值对的形式?</p>
<hr>
<p>下面写下读取这配置文件内容的代码吧(代码比较乱勿喷)</p>
<ul>
<li>读取properties文件的代码实现</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.util;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line">public class ConfigUtil &#123;</span><br><span class="line">	private static final Logger log = Logger.getLogger(ConfigUtil.class);</span><br><span class="line">	private static Properties prop = null;</span><br><span class="line">	</span><br><span class="line">	public ConfigUtil(InputStream is) &#123;</span><br><span class="line">		prop = new Properties();</span><br><span class="line">        try&#123;</span><br><span class="line">        	BufferedInputStream bis = new BufferedInputStream(is);</span><br><span class="line">        	InputStream in = bis;</span><br><span class="line">        	prop.load(in);</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">        	log.error(&quot;读取&quot;+prop+&quot;配置文件错误！&quot;,e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	public static void init(String cfgPath) &#123;</span><br><span class="line">		String realPath = &quot;&quot;;</span><br><span class="line">		if(StringUtils.isNotBlank(cfgPath) &amp;&amp; new File(cfgPath).exists()) &#123;</span><br><span class="line">			realPath = cfgPath;</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			String defExistsPath = ClassLoader.getSystemResource(&quot;&quot;).getPath()+&quot;cfg.properties&quot;;</span><br><span class="line">			realPath = new File(defExistsPath).exists()? defExistsPath: &quot;&quot;;;</span><br><span class="line">		&#125;</span><br><span class="line">		try&#123;</span><br><span class="line">			InputStream is = StringUtils.isNotBlank(realPath)? new FileInputStream(realPath): </span><br><span class="line">				ConfigUtil.class.getClassLoader().getResourceAsStream(&quot;cfg.properties&quot;);</span><br><span class="line">			log.info(&quot;读取配置文件：&quot;+realPath);</span><br><span class="line">			new ConfigUtil(is);</span><br><span class="line">		&#125; catch (IOException e1) &#123;</span><br><span class="line">			log.error(&quot;读取配置文件出错&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static String getProperty(String propertyName) &#123;</span><br><span class="line">		if(prop == null) &#123;</span><br><span class="line">			ConfigUtil.init(&quot;&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">		if(&quot;&quot;.equals(propertyName) || null==propertyName) &#123;</span><br><span class="line">			return &quot;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">		return prop.getProperty(propertyName);</span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">//		String path = ClassLoader.getSystemResource(&quot;&quot;).getPath()+&quot;log4j.properties&quot;;</span><br><span class="line">//		ConfigUtil.init(path);</span><br><span class="line">//		System.out.println(ConfigUtil.getProperty(&quot;log4j.rootLogger&quot;));</span><br><span class="line">		System.out.println(ConfigUtil.getProperty(&quot;mysql.className&quot;));</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>读取xml文件的代码实现（基于DOM4J实现方法）</li>
</ul>
<p>更多的方法可以到这个链接学习:<a href="https://www.cnblogs.com/lingyao/p/5708929.html">https://www.cnblogs.com/lingyao/p/5708929.html</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.util;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line">import org.dom4j.Document;</span><br><span class="line">/**</span><br><span class="line"> * Xml文件操作接口</span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public interface XmlSupport &#123;</span><br><span class="line">	/**</span><br><span class="line">	 * 创建xml文件</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public Document createDocument();</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 读xml文件</span><br><span class="line">	 * @param file</span><br><span class="line">	 * @return</span><br><span class="line">	 * @throws Exception</span><br><span class="line">	 */</span><br><span class="line">	public Map readDocument(String file)throws Exception;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 写xml文件</span><br><span class="line">	 * @throws Exception</span><br><span class="line">	 */</span><br><span class="line">	public void writerDocument() throws Exception;</span><br><span class="line">	/**</span><br><span class="line">	 * 更新xml文件</span><br><span class="line">	 */</span><br><span class="line">	public void updateDocument() ;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">package com.glj.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileWriter;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.dom4j.Document;</span><br><span class="line">import org.dom4j.DocumentHelper;</span><br><span class="line">import org.dom4j.Element;</span><br><span class="line">import org.dom4j.io.OutputFormat;</span><br><span class="line">import org.dom4j.io.SAXReader;</span><br><span class="line">import org.dom4j.io.XMLWriter;</span><br><span class="line"></span><br><span class="line">public class XmlSupportImpl implements XmlSupport &#123;</span><br><span class="line"></span><br><span class="line">	public Document createDocument() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Document document = DocumentHelper.createDocument();</span><br><span class="line">		Element rootElement = document.addElement(&quot;root&quot;);</span><br><span class="line"></span><br><span class="line">		Element uploadFileElement = rootElement.addElement(&quot;uploadFile&quot;);</span><br><span class="line"></span><br><span class="line">		Element path = uploadFileElement.addElement(&quot;path&quot;);</span><br><span class="line">		path.setText(&quot;/Upload/&quot;);</span><br><span class="line">		Element size = uploadFileElement.addElement(&quot;size&quot;);</span><br><span class="line">		size.setText(&quot;10240&quot;);</span><br><span class="line">		Element type = uploadFileElement.addElement(&quot;type&quot;);</span><br><span class="line">		type.setText(&quot;zip,rar,png,jpg,gif&quot;);</span><br><span class="line"></span><br><span class="line">		return document;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void writerDocument() throws Exception &#123;</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public Map  readDocument(String file) throws Exception&#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Map map = new HashMap();</span><br><span class="line">		SAXReader saxReader =  new SAXReader();</span><br><span class="line">		</span><br><span class="line">		/**</span><br><span class="line">		 *  先读入整份XML文档</span><br><span class="line">		 */</span><br><span class="line">		Document document = saxReader.read(new FileInputStream(new File(file)));</span><br><span class="line">		Element root = document.getRootElement();</span><br><span class="line">		List list = root.elements();</span><br><span class="line">		for(int i=0;i&lt;list.size();i++)&#123;</span><br><span class="line">			Element ele = (Element) list.get(i);</span><br><span class="line">			map.put(ele.getName(), ele.getText());</span><br><span class="line">		&#125;</span><br><span class="line">		return map;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void updateDocument() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 系统配置类</span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class ConfigureUtil &#123;</span><br><span class="line">		private static Logger logger = Logger.getLogger(ConfigureUtil.class);</span><br><span class="line">	    public static ConfigureUtil instance = null;</span><br><span class="line">	    </span><br><span class="line">	    @SuppressWarnings(&quot;rawtypes&quot;)</span><br><span class="line">		private Map configureMap = null;</span><br><span class="line"></span><br><span class="line">	    public ConfigureUtil() &#123;</span><br><span class="line">	    	</span><br><span class="line">	    	String file = ClassLoader.getSystemResource(&quot;&quot;).getPath()+&quot;cfg.xml&quot;;</span><br><span class="line">	    	System.out.println(file);</span><br><span class="line">	    	logger.info(&quot;获取了cfg.xml路径：&quot;+file);</span><br><span class="line">	    	try &#123;</span><br><span class="line">	    		configureMap = new XmlSupportImpl().readDocument(file);</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    public ConfigureUtil(String isHiber) &#123;</span><br><span class="line">	    	 String file = this.getClass().getResource(&quot;/&quot;).getPath()+&quot;cfghiber.xml&quot;;</span><br><span class="line">	    	try &#123;</span><br><span class="line">	    		configureMap = new XmlSupportImpl().readDocument(file);</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	    public String getValue(String key) &#123;</span><br><span class="line">	    	return (String) configureMap.get(key);</span><br><span class="line">	    &#125;</span><br><span class="line">	    </span><br><span class="line">		public static ConfigureUtil  getInstance()&#123;</span><br><span class="line">			if(null== instance )&#123;</span><br><span class="line">				synchronized(ConfigureUtil.class)&#123;</span><br><span class="line">					if(null== instance)&#123;</span><br><span class="line">						instance = new ConfigureUtil ();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			return instance;</span><br><span class="line">		&#125;</span><br><span class="line">	    public static void main(String[] args) &#123;</span><br><span class="line">//	    	System.out.println(new ConfigureUtil().getValue(&quot;driverURL&quot;));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>properties</tag>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>java面试题1</title>
    <url>/1387/</url>
    <content><![CDATA[<h4 id="1-什么是重载和重写？"><a href="#1-什么是重载和重写？" class="headerlink" title="1.什么是重载和重写？"></a>1.什么是重载和重写？</h4><p>Java 里方法的重写(Overriding)和重载(Overloading)就是指的 java 里多态。</p>
<p>重写就是父类与子类之间的多态，重载是在一个类中多态对的体现 ：</p>
<p>(1)方法重载是一个类中定义了多个方法名相同,而他们的参数的数量不同或数量相同而类型和次序不同,则称为方法的重载(Overloading)。</p>
<p>(2)方法重写是在子类存在方法与父类的方法的名字相同,而且参数的个数与类型一样,返回值也一样的方法,就称为重写(Overriding)。</p>
<h4 id="2-String-中的-和-equals-的区别"><a href="#2-String-中的-和-equals-的区别" class="headerlink" title="2.String 中的==和 equals 的区别?"></a>2.String 中的==和 equals 的区别?</h4><p>== 比 较 的 是 内 存 地 址 , equals 比 较 的 是 内 容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String a=&quot;abc&quot;</span><br><span class="line"></span><br><span class="line">String b=&quot;abc&quot;</span><br><span class="line"></span><br><span class="line">System.out.println(a==b)</span><br><span class="line"></span><br><span class="line">输出的是 false.</span><br></pre></td></tr></table></figure>



<h4 id="3-Final-关键字"><a href="#3-Final-关键字" class="headerlink" title="3.Final 关键字"></a>3.Final 关键字</h4><p>其实 final是一个安全修饰符,就是用 final 修饰的类不能被继承,用 final 声明的方法不能被重写,使用 final 声明的变量就相当于常量,不能被修改。</p>
<h4 id="4-final-和-finally-的区别"><a href="#4-final-和-finally-的区别" class="headerlink" title="4.final 和 finally 的区别?"></a>4.final 和 finally 的区别?</h4><p>finally是在异常里经常用到的, 就是 try 和 cach 里的代码执行完以后,必须要执行的方法,我们经常在 finally 里写一些关闭资源的方法,比如说关闭数据库连接,或者关闭 IO 流什么的.–&gt;<a href="https://199604.com/1241">Java自我进阶知识整理1：使用try-with-resources优雅关闭资源</a></p>
<h4 id="5-HashMap-和-Hashtable-的区别"><a href="#5-HashMap-和-Hashtable-的区别" class="headerlink" title="5.HashMap 和 Hashtable 的区别"></a>5.HashMap 和 Hashtable 的区别</h4><p>这两个都是是 Map 接口下的实现类，我们开发的时候经常用的是 HashMap 虽然 HashMap不是线程安全的但是他的存储效率比较高,Hashtable 是线程安全我们看过他底层的 put 方法前面加的 synchronized关键字,但是他的效率太低,我们开发很少用.为什么说 hashTable是线程安全的? 因为看源码的时候里面的 put 方法前面加了 synchronized 关键字,什么情况下用 hashMap? 我们有时候在自定义返回 json 字符串的时候,封装到 List 中进行返回.</p>
<h4 id="6-int-和-Integer-的区别？"><a href="#6-int-和-Integer-的区别？" class="headerlink" title="6.int 和 Integer 的区别？"></a>6.int 和 Integer 的区别？</h4><p>Int 是基本数据类型呀 Integer 是 java 为 int 提供的封装类，是引用数据类型；<br>Int 的默认值为 0，而 integer 的默认值为 null</p>
<h4 id="7-Java-的三大特性"><a href="#7-Java-的三大特性" class="headerlink" title="7.Java 的三大特性"></a>7.Java 的三大特性</h4><p>这个 java 的三大特性无非就是封装，继承，多态嘛 封装体现到我们把方法和变量都封装到一个类里,直接用对象调用就可以了<br>继承的体现是我们可以复用父类里的代码,我们在项目中可以把公有的方法写到 base 的一个类中,让其他类继承就可以了. 多态就是 Java 里的继承，重写，重载,都是多态,如果两边是数字的化,那就是一 个运算符,如果两边是字符串的话,那他就是个连接符.</p>
<h4 id="8-ArrayList-与-LinkedList-区别"><a href="#8-ArrayList-与-LinkedList-区别" class="headerlink" title="8.ArrayList 与 LinkedList 区别"></a>8.ArrayList 与 LinkedList 区别</h4><p>ArrayList 使用数组方式存储数据，所以根据索引查询数据速度快，而新增或者删除元素时需要设计到位移操作，所以比较慢。<br>LinkedList 使用双向链接方式存储数据，每个元素都记录前后元素的指针，所以插入、删除数据时只是更改前后元素的指针指向即可，速度非常快，然后通过下标查询元素时需要从头开始索引，所以比较慢，但是如果查询前几个元素或后几个元素速度比较快。开发中什么时候到 ArrayList?,我们在做查询的时候把查询出来的数据经常存到 arraylist 里.</p>
<h4 id="9-在-Java-中要想实现多线程代码有三种手段"><a href="#9-在-Java-中要想实现多线程代码有三种手段" class="headerlink" title="9.在 Java 中要想实现多线程代码有三种手段?"></a>9.在 Java 中要想实现多线程代码有三种手段?</h4><p>一种是继承 Thread 类<br>另一种就是实现 Runnable 接口<br>最后一种就是实现 Callable 接口(第四种也是实现 callable 接口，只不过有返回值而已)</p>
<h4 id="10-线程的状态"><a href="#10-线程的状态" class="headerlink" title="10.线程的状态"></a>10.线程的状态</h4><p>其实线程一般具有五种状态，即创建、就绪、运行、阻塞、终止。（这个可以去找一下图，有助于理解）<img src="http://199604.com/wp-content/uploads/2020/04/weixin.png"></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>JQuery中$(this)与this的区别</title>
    <url>/106/</url>
    <content><![CDATA[<p>因为今晚做了一道JQuery的题目，我记得this是DOM对象，而$(this)是JQ对象</p>
<p>但是我自己不确定于是就度娘了一下，毕竟很多刚接触JQuery的人，都会对$(this)和this的区别模糊不清，我也一样嘛。（新手我路过！）</p>
<p>那么this和$(this)两者有什么区别呢？</p>
<p>首先 ?$() ?这个符号，实际上这个符号在JQuery中相当于JQuery（）,即$(this)=jquery();也就是说，这样可以返回一个jquery对象。那么，当你在网页中alert($(‘#id’));时，会弹出一个[object Object ]，这个object对象，也就是jquery对象了。</p>
<p>如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $(&#x27;#switcher-default&#x27;).click(function()&#123;</span><br><span class="line">       alert($(this))</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>//弹出的是[Object Object]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $(&#x27;#switcher-default&#x27;).click(function()&#123;</span><br><span class="line">       alert(this)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>//弹出的是[object HTMLImageElement]</p>
<hr>
<p>所以说，this是返回HTML对象，那么，HTML对象中怎么会有val()方法了，因此我们在使用中，不能直接用this来直接调用jquery的方法或者属性。（因为他们不是兄弟吧）</p>
<p>这是自己的一些JQuery的笔记。希望也对新手们有用。么么哒</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>jsch jar包连接不上SFTP报Algorithm negotiation fail 错误</title>
    <url>/1003/</url>
    <content><![CDATA[<p>最近半年内老是遇到这个坑，每次遇到都不记得之前是怎么解决的..这次就总结一下吧?</p>
<p>以下总结都是扯淡，所有都是假的，请勿相信..</p>
<hr>
<p>如果是遇到报错:Algorithm negotiation fail(什么鬼算法不对导致的错误)</p>
<p>我这边的服务器基本上都是sshOpne 7.5导致的</p>
<p>然后按照大神(百度的方法1)先升级JAR包,我这个方法是没有解决。</p>
<p>但是也是一种快捷的验证方式，如果升级高版本的JAR包还是没有解决，那么就是目标主机算法真的不对</p>
<p>需要到目标主机切换ROOT账号，然后在/etc/ssh/sshd_config文件中追加下面代码算法(我也不知道是什么鬼，就是加上了可以连接了)：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ciphers aes128-cbc,aes192-cbc,aes256-cbc,aes128-ctr,aes192-ctr,aes256-ctr,3des-cbc,arcfour128,arcfour256,arcfour,blowfish-cbc,cast128-cbc</span><br><span class="line"></span><br><span class="line">MACs hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha1-96,hmac-md5-96</span><br><span class="line"></span><br><span class="line">KexAlgorithms diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group1-sha1,curve25519-sha256@libssh.org</span><br></pre></td></tr></table></figure>

<p>然后呢,重启下服务ssh： service sshd restart</p>
<p>问题解决了。</p>
<p>emmmm下面照旧各种二维码</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>jsch</tag>
        <tag>SFTP</tag>
      </tags>
  </entry>
  <entry>
    <title>JSoup小例子</title>
    <url>/1157/</url>
    <content><![CDATA[<p>emmmm…好像没有什么要备注的就是自己练手怕信息吧?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.main;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileWriter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import org.jsoup.Jsoup;</span><br><span class="line">import org.jsoup.helper.StringUtil;</span><br><span class="line">import org.jsoup.nodes.Document;</span><br><span class="line">import org.jsoup.nodes.Element;</span><br><span class="line">import org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line">public class HelloWordJSoup &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		for(int i=1;i&lt;=100;i++)&#123;</span><br><span class="line">		try &#123;</span><br><span class="line">			String url = &quot;http://www.ybzhan.cn/Company/a_t0/list_p&quot;+i+&quot;.html&quot;;</span><br><span class="line">			System.out.println(url);</span><br><span class="line">			Document doc = Jsoup.connect(url).get();</span><br><span class="line">			Elements companyLists =  doc.select(&quot;.companyList&quot;);</span><br><span class="line">			StringBuffer stringBuffer=new StringBuffer();</span><br><span class="line">			for (Element companyList : companyLists) &#123;</span><br><span class="line">				//公司名</span><br><span class="line">				Element companyNameDiv =  companyList.select(&quot;div.companyName&quot;).first();</span><br><span class="line">				Element link  = companyNameDiv.select(&quot;a&quot;).first();</span><br><span class="line">				</span><br><span class="line">				String shopUrl =  &quot;http://www.ybzhan.cn&quot;+link.attr(&quot;href&quot;);</span><br><span class="line">				String companyName = link.text();</span><br><span class="line">				//主营产品</span><br><span class="line">				Element ps =  companyList.select(&quot;dt &gt; p&quot;).first();</span><br><span class="line">				String mainProducts = ps.text().replace(&quot;主营产品&quot;, &quot;&quot;);</span><br><span class="line">				//介绍页面</span><br><span class="line">				String personalityUrl = &quot;&quot;;</span><br><span class="line">				String shopUrl2 = &quot;&quot;;</span><br><span class="line">				String companyUrl = &quot;&quot;;</span><br><span class="line">				System.out.println(shopUrl);</span><br><span class="line">				if(!StringUtil.isBlank(shopUrl)&amp;&amp;!shopUrl.contains(&quot;Company/Detail&quot;))&#123;</span><br><span class="line">					Document contactusDoc= Jsoup.connect( shopUrl+&quot;/contactus.html&quot;).get();</span><br><span class="line">					Elements ss = contactusDoc.getElementsByTag(&quot;p&quot;);</span><br><span class="line">					for (Element element : ss) &#123;</span><br><span class="line">						if(element.text().contains(&quot;个 性 化&quot;))&#123;</span><br><span class="line">							personalityUrl = element.text();</span><br><span class="line">						&#125;else if(element.text().contains(&quot;商铺网址&quot;))&#123;</span><br><span class="line">							shopUrl2 = element.text();</span><br><span class="line">						&#125;else if(element.text().contains(&quot;公司网站&quot;))&#123;</span><br><span class="line">							companyUrl = element.text();</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					if(StringUtil.isBlank(personalityUrl)||StringUtil.isBlank(shopUrl2)||StringUtil.isBlank(companyUrl))&#123;</span><br><span class="line">						Elements dl = contactusDoc.getElementsByTag(&quot;dl&quot;);</span><br><span class="line">						for (Element element : dl) &#123;</span><br><span class="line">							if(element.text().contains(&quot;个 性 化&quot;))&#123;</span><br><span class="line">								if(StringUtil.isBlank(personalityUrl))&#123;</span><br><span class="line">									personalityUrl = element.text();</span><br><span class="line">								&#125;</span><br><span class="line">							&#125;else if(element.text().contains(&quot;商铺网址&quot;))&#123;</span><br><span class="line">								if(StringUtil.isBlank(shopUrl2))&#123;</span><br><span class="line">									shopUrl2 = element.text();</span><br><span class="line">								&#125;</span><br><span class="line">							&#125;else if(element.text().contains(&quot;公司网站&quot;))&#123;</span><br><span class="line">								if(StringUtil.isBlank(companyUrl))&#123;</span><br><span class="line">									companyUrl = element.text();</span><br><span class="line">								&#125;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				//写入</span><br><span class="line">				stringBuffer.append(companyName+&quot;;&quot;);</span><br><span class="line">				stringBuffer.append(mainProducts+&quot;;&quot;);</span><br><span class="line">				if(StringUtil.isBlank(shopUrl2.trim()))&#123;</span><br><span class="line">					stringBuffer.append(shopUrl+&quot;;&quot;);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					stringBuffer.append(shopUrl2.replace(&quot;商铺网址：&quot;, &quot;&quot;).trim()+&quot;;&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">				if(StringUtil.isBlank(companyUrl.trim()))&#123;</span><br><span class="line">					stringBuffer.append(shopUrl+&quot;;&quot;);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					stringBuffer.append(companyUrl.replace(&quot;公司网站：&quot;, &quot;&quot;).trim()+&quot;;&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">				if(StringUtil.isBlank(personalityUrl.trim()))&#123;</span><br><span class="line">					stringBuffer.append(shopUrl);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					stringBuffer.append(personalityUrl.replace(&quot;个 性 化：&quot;, &quot;&quot;).trim());</span><br><span class="line">				&#125;</span><br><span class="line">				stringBuffer.append(System.lineSeparator());//换行</span><br><span class="line">			&#125;</span><br><span class="line">			new HelloWordJSoup().writerData(stringBuffer);</span><br><span class="line">			stringBuffer.setLength(0);</span><br><span class="line">		&#125; catch (IOException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public void writerData(StringBuffer stringBuffer)&#123;</span><br><span class="line">		FileWriter out = null;</span><br><span class="line">		String fileName = &quot;G:&quot;+File.separator+&quot;pushFile_test&quot;+File.separator+&quot;data.csv&quot;;</span><br><span class="line">		File writeFile  = new File(fileName); //文件路径名</span><br><span class="line">		if(!writeFile.exists()&amp;&amp;!writeFile.isFile())&#123;// 如果文件不存在,创建文件</span><br><span class="line">			try &#123;</span><br><span class="line">				writeFile.createNewFile();</span><br><span class="line">			&#125; catch (IOException e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		try &#123;</span><br><span class="line">			out = new FileWriter(writeFile,true);</span><br><span class="line">			if(stringBuffer.length()&gt;0)&#123;</span><br><span class="line">				out.write(stringBuffer.toString());</span><br><span class="line">			&#125;</span><br><span class="line">			out.flush();</span><br><span class="line">			out.close();</span><br><span class="line">		&#125; catch (IOException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		stringBuffer.setLength(0);</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/wp-content/uploads/2018/08/20180801232922.jpg"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>jsoup</tag>
      </tags>
  </entry>
  <entry>
    <title>Jsp页面跳转的几种方法</title>
    <url>/113/</url>
    <content><![CDATA[<h3 id="1、response-sendRedirect"><a href="#1、response-sendRedirect" class="headerlink" title="1、response.sendRedirect()"></a><strong>1、response.sendRedirect()</strong></h3><p>重定向后在浏览器地址上会出现重定向页面的URL</p>
<h3 id="2、-lt-jsp-forward-page-”test-jsp”-gt"><a href="#2、-lt-jsp-forward-page-”test-jsp”-gt" class="headerlink" title="2、&lt;jsp:forward page=”test.jsp” /&gt;"></a><strong>2、&lt;jsp:forward page=”test.jsp” /&gt;</strong></h3><p>forward的动作是不能改变浏览器地址，刷新也只会导致重复提交，进而出现URL地址后面加上#</p>
<h3 id="3、-lt-meta-http-equiv-”refresh”-content-”300”-url-”test-jsp”-gt"><a href="#3、-lt-meta-http-equiv-”refresh”-content-”300”-url-”test-jsp”-gt" class="headerlink" title="3、&lt;meta http-equiv=”refresh” content=”300”; url=”test.jsp”&gt;"></a><strong>3、&lt;meta http-equiv=”refresh” content=”300”; url=”test.jsp”&gt;</strong></h3><p>它的含义：在5分钟之后正在浏览的页面将会自动变为test.jsp这一页。代码中300为刷新的延迟时间，以秒为单位。test.jsp为你想转向的目标页,若为本页(#)则为自动刷新本页。</p>
<hr>
<p>其实我个人感觉，&lt;%@include%&gt;和<a href="jsp:include">jsp:include</a>和可以算到一个嵌入的跳转吧。</p>
<p>毕竟&lt;%@include%&gt;页面请求之前预编译，所有代码包含进来之后，再一起进行处理，然后编译生成一个servlet。（先组合，再处理）</p>
<p>而<a href="jsp:include">jsp:include</a>是把所以的页面都分开来处理，然后当页面被请求的时候才编译，编译生成多个servlet，页面语法相对独立，处理完成之后再将代码的显示结果组合进来。（先处理，再组合）</p>
<p>因此，也可以看出我还是一名小学生！</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>jsp</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP验证码随机产生</title>
    <url>/244/</url>
    <content><![CDATA[<p>寒假快结束了吧</p>
<p>假期撸多了吧</p>
<p>红包还有吧</p>
<p>-好了吧</p>
<p>入正题</p>
<hr>
<p>前几天，进了一个清远的政府网站，我无法接受的不是页面好不好看，而是验证码一直卡住</p>
<p>还是 用JSP的-嗯慢慢的想了下我会不会写呢…..嗯我水平真菜</p>
<p>好了上代码</p>
<p>1.先把生成验证码的图片封装为一个JavaBean,这个JavaBean的源代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.bean;</span><br><span class="line"></span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.Font;</span><br><span class="line">import java.awt.GradientPaint;</span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line"></span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Administrator</span><br><span class="line"> * 生成验证码</span><br><span class="line"> */</span><br><span class="line">public class MakeCertPic &#123;</span><br><span class="line">	//根据以下字母数字生成,已经把一些容易混淆的删除如：i,l,1,0,o</span><br><span class="line">	private char mapTable[]=&#123;</span><br><span class="line">		&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;e&#x27;,&#x27;f&#x27;,</span><br><span class="line">		&#x27;g&#x27;,&#x27;h&#x27;,&#x27;j&#x27;,&#x27;k&#x27;,</span><br><span class="line">		&#x27;m&#x27;,&#x27;n&#x27;,&#x27;q&#x27;,&#x27;p&#x27;,&#x27;r&#x27;,</span><br><span class="line">		&#x27;s&#x27;,&#x27;t&#x27;,&#x27;u&#x27;,&#x27;v&#x27;,&#x27;w&#x27;,&#x27;x&#x27;,</span><br><span class="line">		&#x27;y&#x27;,&#x27;z&#x27;,&#x27;2&#x27;,&#x27;3&#x27;,&#x27;4&#x27;,&#x27;5&#x27;,</span><br><span class="line">		&#x27;6&#x27;,&#x27;7&#x27;,&#x27;8&#x27;,&#x27;9&#x27;&#125;;</span><br><span class="line">/*</span><br><span class="line"> * 功能：生成彩色验证图片</span><br><span class="line"> * 参数width为生成图片的宽度,height为图片高度,os为页面输出流</span><br><span class="line"> */</span><br><span class="line">	public String getCertpic(int width,int height,OutputStream os)&#123;</span><br><span class="line">		if(width&lt;=0)&#123;</span><br><span class="line">			width=60;</span><br><span class="line">		&#125;</span><br><span class="line">		if(height&lt;=0)&#123;</span><br><span class="line">			height=20;</span><br><span class="line">		&#125;</span><br><span class="line">		BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_BGR);</span><br><span class="line">		//获取图像上下文</span><br><span class="line">		Graphics g =image.getGraphics();</span><br><span class="line">		//设置背景颜色</span><br><span class="line">		g.setColor(new Color(0xDCDCDC));</span><br><span class="line">		g.fillRect(0, 0, width, height);</span><br><span class="line">		//边框</span><br><span class="line">		g.setColor(Color.black);</span><br><span class="line">		g.drawRect(0, 0, width-1, height-1);</span><br><span class="line">		//取随机验证码</span><br><span class="line">		String strEnsure = &quot;&quot;;</span><br><span class="line">		</span><br><span class="line">		//4代表4为验证码，如需要可做修改</span><br><span class="line">		for(int i =0;i&lt;4;++i)&#123;</span><br><span class="line">			strEnsure +=mapTable[(int)(mapTable.length*Math.random())];</span><br><span class="line">		&#125;</span><br><span class="line">		g.setColor(Color.black);</span><br><span class="line">		g.setFont(new Font(&quot;Atlantic Inline&quot;,Font.PLAIN,18));</span><br><span class="line">		String str =strEnsure.substring(0,1);</span><br><span class="line">		g.drawString(str,8,17);</span><br><span class="line">		str = strEnsure.substring(1, 2);</span><br><span class="line"></span><br><span class="line">		g.drawString(str,20,15);</span><br><span class="line">		str = strEnsure.substring(2, 3);</span><br><span class="line">		</span><br><span class="line">		g.drawString(str,35,18);</span><br><span class="line">		str = strEnsure.substring(3, 4);</span><br><span class="line">		</span><br><span class="line">		g.drawString(str,45,15);</span><br><span class="line">		//产生10个干扰点</span><br><span class="line">		Random rand = new Random();</span><br><span class="line">		for(int i=0;i&lt;10;i++)&#123;</span><br><span class="line">			int x =rand.nextInt(width);</span><br><span class="line">			int y =rand.nextInt(height);</span><br><span class="line">			g.drawOval(x, y, 1, 1);</span><br><span class="line">		&#125;</span><br><span class="line">		//释放图形上下文</span><br><span class="line">		g.dispose();</span><br><span class="line">		try&#123;</span><br><span class="line">			ImageIO.write(image, &quot;JPEG&quot;, os);</span><br><span class="line">		&#125;catch (IOException e) &#123;</span><br><span class="line">			// TODO: handle exception</span><br><span class="line">			return &quot;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">		return strEnsure;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为了造成一些干扰，我随机花了10个干扰点，如果想多点，可以在for循环那个自己加大。</p>
<p>2.在编写一个servlet输出生成的验证码，代码如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.bean;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">public class ShowCertPic extends HttpServlet &#123;</span><br><span class="line">	</span><br><span class="line">	public void service(HttpServletRequest request,HttpServletResponse response)throws ServletException,IOException&#123;</span><br><span class="line">		MakeCertPic image =new MakeCertPic();</span><br><span class="line">		String str = image.getCertpic(0, 0, response.getOutputStream());</span><br><span class="line">		request.getSession().setAttribute(&quot;certCode2&quot;, str);</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * Destruction of the servlet. &lt;br&gt;</span><br><span class="line">	 */</span><br><span class="line">	public void destroy() &#123;</span><br><span class="line">		super.destroy(); // Just puts &quot;destroy&quot; string in log</span><br><span class="line">		// Put your code here</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/**</span><br><span class="line">	 * Initialization of the servlet. &lt;br&gt;</span><br><span class="line">	 *</span><br><span class="line">	 * @throws ServletException if an error occurs</span><br><span class="line">	 */</span><br><span class="line">	public void init() throws ServletException &#123;</span><br><span class="line">		// Put your code here</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.在web.xml部署应该会了吧，但是我为了方便是直接把url-pattern为/ShowCertPic</p>
<p>最后就是登录的JSP代码，这个你们随便测试就好了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; contentType=&quot;text/html; charset=utf-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line"> &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt; </span><br><span class="line"> &lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line"> &lt;!--</span><br><span class="line"> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line"> --&gt;</span><br><span class="line"> &lt;script type=&quot;text/JavaScript&quot; language=&quot;javascript&quot;&gt;</span><br><span class="line"> function change()&#123;</span><br><span class="line"> var o = document.getElementById(&quot;random&quot;);</span><br><span class="line"> var timenow = new Date().getTime();</span><br><span class="line"> o.src = &quot;&lt;%=path%&gt;/ShowCertPic?d=&quot; + timenow;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;body&gt;</span><br><span class="line"> &lt;form action=&quot;index.jsp&quot; method=&quot;post&quot;&gt;</span><br><span class="line"> &lt;h1&gt;系统登录测试&lt;/h1&gt;</span><br><span class="line"> &lt;p&gt;</span><br><span class="line"> 用户名：</span><br><span class="line"> &lt;input type=&quot;text&quot; name=&quot;username&quot; /&gt;</span><br><span class="line"> &lt;/p&gt; </span><br><span class="line"> &lt;p&gt;</span><br><span class="line"> 密码：</span><br><span class="line"> &lt;input type=&quot;password&quot; name=&quot;password&quot; /&gt;</span><br><span class="line"> &lt;/p&gt; </span><br><span class="line"> &lt;p&gt;</span><br><span class="line"> 验证码：</span><br><span class="line"> &lt;input type=&quot;password&quot; name=&quot;certCode&quot; /&gt;</span><br><span class="line"> &lt;img alt=&quot;code&quot; id=&quot;random&quot; src=&quot;ShowCertPic&quot;&gt;</span><br><span class="line"> &lt;input type=&quot;button&quot; value=&quot;换一张图片&quot; id=&quot;label&quot; onclick=&quot;change()&quot;&gt;&lt;/input&gt;</span><br><span class="line"> &lt;/p&gt; </span><br><span class="line"> &lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;</span><br><span class="line"> &lt;/form&gt;</span><br><span class="line"> &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>随机生成的代码为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img alt=&quot;code&quot; src=&quot;ShowCertPic&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>点击更新验证码代码为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/JavaScript&quot; language=&quot;javascript&quot;&gt;</span><br><span class="line"> function change()&#123;</span><br><span class="line"> var o = document.getElementById(&quot;random&quot;);</span><br><span class="line"> var timenow = new Date().getTime();</span><br><span class="line"> o.src = &quot;&lt;%=path%&gt;/ShowCertPic?d=&quot; + timenow;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>运行结果图：<br><img src="http://qn.199604.com/wxid_8o13ixta5nbm21_1486658698800_34.png" alt="img"></p>
<p>我知道你会说，随便打上去也可以吧</p>
<p>那么你可以去做一个验证是否正确，代码我自己瞧这个的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? &lt;%</span><br><span class="line"> String certCode = request.getParameter(&quot;certCode&quot;);</span><br><span class="line"> String certCode2 = (String)session.getAttribute(&quot;certCode2&quot;);</span><br><span class="line"> if(certCode != null &amp;&amp; certCode2 != null)&#123; </span><br><span class="line"> if(certCode.equals(certCode2))&#123; </span><br><span class="line"> out.println(&quot;验证码输入正确！&quot;); </span><br><span class="line"> &#125;else&#123; </span><br><span class="line"> out.println(&quot;验证码输入不正确，请重新输入！&quot;); </span><br><span class="line"> &#125; </span><br><span class="line"> &#125;</span><br><span class="line"> %&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jsp</tag>
      </tags>
  </entry>
  <entry>
    <title>js如何准确获取当前页面url网址信息</title>
    <url>/885/</url>
    <content><![CDATA[<p>这篇文章主要为大家介绍了js准确获取当前页面url网址信息的多种方法，包括正则法、split拆分法等，需要的朋友可以参考下</p>
<p>在WEB开发中，时常会用到javascript来获取当前页面的url网址信息，在这里是我的一些获取url信息的小总结。</p>
<p>下面我们举例一个URL，然后获得它的各个组成部分：<a href="http://i.cnblogs.com/EditPosts.aspx?opt=1">http://i.cnblogs.com/EditPosts.aspx?opt=1</a></p>
<p><strong>1、window.location.href(设置或获取整个 URL 为字符串)</strong></p>
<p>var test = window.location.href;<br>alert(test);<br>返回：<a href="http://i.cnblogs.com/EditPosts.aspx?opt=1">http://i.cnblogs.com/EditPosts.aspx?opt=1</a></p>
<p><strong>2、window.location.protocol(设置或获取 URL 的协议部分)</strong></p>
<p>var test = window.location.protocol;<br>alert(test);<br>返回：http:</p>
<p><strong>3、window.location.host(设置或获取 URL 的主机部分)</strong></p>
<p>var test = window.location.host;<br>alert(test);<br>返回：i.cnblogs.com</p>
<p><strong>4、window.location.port(设置或获取与 URL 关联的端口号码)</strong></p>
<p>var test = window.location.port;<br>alert(test);<br>返回：空字符(如果采用默认的80端口(update:即使添加了:80)，那么返回值并不是默认的80而是空字符)</p>
<p><strong>5、window.location.pathname(设置或获取与 URL 的路径部分（就是文件地址）)</strong><br>var test = window.location.pathname;<br>alert(test);<br>返回：/EditPosts.aspx</p>
<p><strong>6、window.location.search(设置或获取 href 属性中跟在问号后面的部分)</strong></p>
<p>var test = window.location.search;<br>alert(test);<br>返回：?opt=1</p>
<p>PS：获得查询（参数）部分，除了给动态语言赋值以外，我们同样可以给静态页面，并使用javascript来获得相信应的参数值。</p>
<p><strong>7、window.location.hash(设置或获取 href 属性中在井号“#”后面的分段)</strong></p>
<p>var test = window.location.hash;<br>alert(test);<br>返回：空字符(因为url中没有)</p>
<p><strong>8、js获取url中的参数值</strong></p>
<p><strong>一、正则法</strong></p>
<p>function getQueryString(name) { var reg = new RegExp(‘(^|&amp;)’ + name + ‘=([^&amp;]*)(&amp;|$)’, ‘i’); var r = window.location.search.substr(1).match(reg); if (r != null) { return unescape(r[2]); } return null; } // 这样调用： alert(GetQueryString(“参数名1”)); alert(GetQueryString(“参数名2”)); alert(GetQueryString(“参数名3”));</p>
<p><strong>二、split拆分法</strong></p>
<p>function GetRequest() { var url = location.search; //获取url中”?”符后的字串 var theRequest = new Object(); if (url.indexOf(“?”) != -1) { var str = url.substr(1); strs = str.split(“&amp;”); for(var i = 0; i &lt; strs.length; i ++) { theRequest[strs[i].split(“=”)[0]] = unescape(strs[i].split(“=”)[1]); } } return theRequest; } var Request = new Object(); Request = GetRequest();<br>// var id=Request[“id”]; // var 参数1,参数2,参数3,参数N; // 参数1 = Request[‘参数1’]; // 参数2 = Request[‘参数2’]; // 参数3 = Request[‘参数3’]; // 参数N = Request[‘参数N’];</p>
<p><strong>三、指定取</strong></p>
<p>比如说一个url：<a href="http://i.cnblogs.com/?j=js,%E6%88%91%E4%BB%AC%E6%83%B3%E5%BE%97%E5%88%B0%E5%8F%82%E6%95%B0j%E7%9A%84%E5%80%BC%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E4%BB%A5%E4%B8%8B%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E3%80%82">http://i.cnblogs.com/?j=js,我们想得到参数j的值，可以通过以下函数调用。</a></p>
<p>function GetQueryString(name) { var reg = new RegExp(“(^|&amp;)” + name + “=([^&amp;]*)(&amp;|$)”, “i”); var r = window.location.search.substr(1).match(reg); //获取url中”?”符后的字符串并正则匹配 var context = “”; if (r != null) context = r[2]; reg = null; r = null; return context == null || context == “” || context == “undefined” ? “” : context; } alert(GetQueryString(“j”));</p>
<p><strong>四、单个参数的获取方法</strong></p>
<p>function GetRequest() { var url = location.search; //获取url中”?”符后的字串 if (url.indexOf(“?”) != -1) { //判断是否有参数 var str = url.substr(1); //从第一个字符开始 因为第0个是?号 获取所有除问号的所有符串 strs = str.split(“=”); //用等号进行分隔 （因为知道只有一个参数 所以直接用等号进分隔 如果有多个参数 要用&amp;号分隔 再用等号进行分隔） alert(strs[1]); //直接弹出第一个参数 （如果有多个参数 还要进行循环的） } }</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>JS文件中获取contextPath的方法</title>
    <url>/943/</url>
    <content><![CDATA[<p>S文件中获取contextPath的方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//JS文件中获取contextPath的方法</span><br><span class="line">function getContextPath() &#123; </span><br><span class="line">	var contextPath = document.location.pathname; </span><br><span class="line">	var index =contextPath.substr(1).indexOf(&quot;/&quot;); </span><br><span class="line">	contextPath = contextPath.substr(0,index+1); </span><br><span class="line">	delete index; </span><br><span class="line">	return contextPath; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>linux jps 报process information unavailable解决办法</title>
    <url>/994/</url>
    <content><![CDATA[<p>在linux中运行了一下 jps 命令</p>
<p>然后都是 process information unavailable,这咋整呢?</p>
<p>于是，百度了一下，答案基本都是下面这样的</p>
<p>切换root用户</p>
<p>进入tmp目录</p>
<p>cd /tmp/ 删除该目录下名称为hsperfdata_{ username}的文件夹然后jps,清净了。</p>
<p>记录完…</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux screen命令</title>
    <url>/1478/</url>
    <content><![CDATA[<h4 id="screen是什么"><a href="#screen是什么" class="headerlink" title="screen是什么?"></a>screen是什么?</h4><p>Screen是一个全屏窗口管理器，它可以在多个进程之间多路复用一个物理终端。Screen中有会话的概念，用户可以在一个会话中创建多个screen窗口，在每一个screen窗口中就像操作一个真实的telent/SSH连接窗口那样。</p>
<p>通俗的讲，screen命令用于新建一个或多个“命令行窗口”，在新建的这些“窗口”中，可以执行命令，并且这些“窗口”都是独立并行的。</p>
<p>那么怎么使用这逼呢?</p>
<h4 id="linux安装screen"><a href="#linux安装screen" class="headerlink" title="linux安装screen"></a>linux安装screen</h4><p>1.yum install -y screen</p>
<p>2.源码安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ftp.gnu.org/gnu/screen/下载gz包到本地，解压至/usr/local下</span><br><span class="line">cd /usr/local/screen</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">如果提示安装 etc/etcscreenrc ，需要在安装</span><br><span class="line">install -m 644 etc/etcscreenrc /etc/screenrc</span><br><span class="line">然后查看是否安装成功</span><br><span class="line">which screen 会显示安装成功</span><br><span class="line">/bin/screen</span><br></pre></td></tr></table></figure>

<p>3.rpm -ivh screen-4.0.3-19.el6.x86_64.rpm</p>
<h4 id="一、创建会话"><a href="#一、创建会话" class="headerlink" title="一、创建会话"></a>一、创建会话</h4><p>最简单的就是直接输入screen然后回车，一个新的会话就创建完成了。</p>
<p>但如果有多个会话就无法很快地根据窗口名称进行切换，很尴尬的，所以建议用:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -S name   创建screen</span><br><span class="line"></span><br><span class="line">-----demo------</span><br><span class="line">screen -S myScreen</span><br></pre></td></tr></table></figure>

<p>上面命令就是新创建一个名称为myScreen的会话，创建完成后就可以在该会话窗口输入其他命令。</p>
<h4 id="二、离开会话"><a href="#二、离开会话" class="headerlink" title="二、离开会话"></a>二、离开会话</h4><p>ctrl+a+d:按住键盘上的ctrl，然后依次按a和d,这时候就又回到主会话了（即离开当前的screen会话）</p>
<h4 id="三、恢复创建的会话"><a href="#三、恢复创建的会话" class="headerlink" title="三、恢复创建的会话"></a>三、恢复创建的会话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -r “id”</span><br><span class="line"></span><br><span class="line">-----demo-------</span><br><span class="line">screen -r myScreen</span><br></pre></td></tr></table></figure>

<p>这个命令的意思就是恢复名称为myScreen的会话,但如果你只有一个会话，直接输入screen -r 即可</p>
<h4 id="四、查看已创建的会话"><a href="#四、查看已创建的会话" class="headerlink" title="四、查看已创建的会话"></a>四、查看已创建的会话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -list</span><br><span class="line">或者</span><br><span class="line">screen -ls</span><br></pre></td></tr></table></figure>

<p>上面的命令意思就是可以查看本机已经创建的会话，可以看到会话的名称和会话ID，恢复的时候可以使用ID代替名称。</p>
<p>当恢复会话是出现：There is no screen to be resumed matching ****，我们可强制进入，命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -d id</span><br><span class="line">----demo-----</span><br><span class="line">screen -D -RR 13366</span><br></pre></td></tr></table></figure>



<h4 id="五、退出screen"><a href="#五、退出screen" class="headerlink" title="五、退出screen"></a>五、退出screen</h4><p>使用screen会耗费一定的系统资源，所以当screen中的命令执行完毕之后，直接输入命令：exit</p>
<h4 id="六、其他命令"><a href="#六、其他命令" class="headerlink" title="六、其他命令"></a>六、其他命令</h4><p>杀掉一个screen(退出detach)：screen -X -S 24322 quit</p>
<p>执行之后 再次 screen -ls 已经不存在 24322的 screen窗口</p>
<h4 id="七、screen参数"><a href="#七、screen参数" class="headerlink" title="七、screen参数"></a>七、screen参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen参数</span><br><span class="line">　-A 将所有的视窗都调整为目前终端机的大小。</span><br><span class="line">　　-d&lt;作业名称&gt; 将指定的screen作业离线。</span><br><span class="line">　　-h&lt;行数&gt; 指定视窗的缓冲区行数。</span><br><span class="line">　　-m 即使目前已在作业中的screen作业，仍强制建立新的screen作业。</span><br><span class="line">　　-r&lt;作业名称&gt; 恢复离线的screen作业。</span><br><span class="line">　　-R 先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。</span><br><span class="line">　　-s 指定建立新视窗时，所要执行的shell。</span><br><span class="line">　　-S&lt;作业名称&gt; 指定screen作业的名称。</span><br><span class="line">　　-v 显示版本信息。</span><br><span class="line">　　-x 恢复之前离线的screen作业。</span><br><span class="line">　　-ls或--list 显示目前所有的screen作业。</span><br><span class="line">　　-wipe 检查目前所有的screen作业，并删除已经无法使用的screen作业。</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>screen</tag>
      </tags>
  </entry>
  <entry>
    <title>linux-split命令</title>
    <url>/1742/</url>
    <content><![CDATA[<p>功能说明：切割文件。</p>
<p>语　　法：split [–help][–version][-&lt;行数&gt;][-b &lt;字节&gt;][-C &lt;字节&gt;][-l &lt;行数&gt;][要切割的文件][输出文件名]</p>
<p>补充说明：split可将文件切成较小的文件，预设每1000行会切成一个小文件。</p>
<p>参　　数：</p>
<p>-&lt;行数&gt;或-l&lt;行数&gt; 　指定每多少行就要切成一个小文件。</p>
<p>-b&lt;字节&gt; 　指定每多少字就要切成一个小文件。支持单位:m,k</p>
<p>-C&lt;字节&gt; 　与-b参数类似，但切割时尽量维持每行的完整性。</p>
<p>–help 　显示帮助。</p>
<p>–version 　显示版本信息。</p>
<p>[输出文件名] 　设置切割后文件的前置文件名，split会自动在前置文件名后再加上编号。</p>
<p>使用例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">split -b 100m 1111.log (按照字节分隔)</span><br><span class="line">split -l 1000000 1111.log(按照行数分隔)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
        <category>split</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>split</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux VPS下SSH常用命令</title>
    <url>/418/</url>
    <content><![CDATA[<p>  目录操作：<br>rm -rf mydir /<em>删除mydir目录，不需要确认，直接删除</em>/<br>mkdir dirname /<em>创建名为dirname的目录</em>/<br>cd mydir /<em>进入mydir目录</em>/<br>cd - /<em>返回进入此目录之前所在的目录</em>/<br>cd .. /<em>返回上一级目录，中间有空格</em>/<br>cd ~ /<em>回当前用户家目录</em>/<br>mv tools tool /*把tools目录改名为tool */<br>ln -s tool bac /<em>给tool目录创建名为bac的符号链接,最熟悉的应该就是FTP中www链接到public_html目录了</em>/<br>cp -a tool /homepser/www /*把tool目录，复制到www目录下 <em>/<br>ls /</em> 列出当前目录下的内容 <em>/<br>文件操作：<br>rm go.tar    /</em> 删除go.tar文件 <em>/<br>find mt.cgi  /</em> 查找文件名为mt.cgi的文件 <em>/<br>df -h       /</em> 查看磁盘剩余空间 <em>/<br>解压缩：<br>tar xvf wordpress.tar    /</em> 解压tar格式的文件 <em>/<br>tar tvf myfile.tar   /</em> 查看tar文件中包含的文件 <em>/<br>tar cf toole.tar tool /</em> 把tool目录打包为toole.tar文件 <em>/<br>tar zcf vpser.tar.gz tool /</em> 把tool目录打包且压缩为vpser.tar.gz文件，因为.tar文件几乎是没有压缩过的，MT的.tar.gz文件解压成.tar文件后差不多是10MB <em>/<br>tar jcvf  ar/bak/<a href="http://www.tar.bz2/">www.tar.bz2</a> ar/www/  /<em>创建.tar.bz2文件，压缩率高</em>/<br>tar xjf <a href="http://www.tar.bz2/">www.tar.bz2</a> /<em>解压tar.bz2格式</em>/<br>gzip -d ge.tar.gz    /</em> 解压.tar.gz文件为.tar文件 <em>/<br>unzip phpbb.zip   /</em> 解压zip文件，windows下要压缩出一个.tar.gz格式的文件还是有点麻烦的 */<br>下载：<br>wget <a href="http://soft.vpser.net/web/nginx/nginx-0.8.0.tar.gz">http://soft.vpser.net/web/nginx/nginx-0.8.0.tar.gz</a><br>/*下载远程服务器上的文件到自己的服务器，连上传都省了，服务器不是100M就是1000M的带宽，下载一个2-3兆的MT还不是几十秒的事 */<br>wget -c <a href="http://soft.vpser.net/web/nginx/nginx-0.8.0.tar.gz">http://soft.vpser.net/web/nginx/nginx-0.8.0.tar.gz</a></p>
<p>/* 继续下载上次未下载完的文件 */ </p>
<p><strong>进程管理：</strong><br>ps -aux  /<em>ps 进程状态查询命令</em>/</p>
<p>ps命令输出字段的含义：<br>[list]<br>[<em>]USER，进程所有者的用户名。<br>[</em>]PID，进程号，可以唯一标识该进程。<br>[<em>]%CPU，进程自最近一次刷新以来所占用的CPU时间和总时间的百分比。<br>[</em>]%MEM，进程使用内存的百分比。<br>[<em>]VSZ，进程使用的虚拟内存大小，以K为单位。<br>[</em>]RSS，进程占用的物理内存的总数量，以K为单位。<br>[<em>]TTY，进程相关的终端名。<br>[</em>]STAT，进程状态，用(R–运行或准备运行；S–睡眠状态；I–空闲；Z–冻结；D–不间断睡眠；W-进程没有驻留页；T停止或跟踪。)这些字母来表示。<br>[<em>]START，进程开始运行时间。<br>[</em>]TIME，进程使用的总CPU时间。<br>[*]COMMAND，被执行的命令行。<br>[/list]</p>
<p>ps -aux | grep nginx /<em>在所有进程中，查找nginx的进程</em>/<br>kill 1234  /<em>1234为进程ID，即ps -aux 中的PID</em>/<br>killall nginx /<em>killall 通过程序的名字，直接杀死所有进程，nginx为进程名</em>/</p>
<p><strong>资源占用查询：</strong><br>df -sh /home/wwwroot/* /* 查看/home/wwwroot/下各个目录的占用大小 <em>/<br>free -m /</em> 查看内存核swap使用情况 <em>/<br>top /</em> 查看程序的cpu、内存使用情况 <em>/<br>netstat -ntl /</em> 查看端口占用情况 */</p>
<p>移动类的：<br>h/j/k/l: 左/下/上/右　移一格<br>w : 向后词移动　（前面加数字移动多少个词）<br>b : 向前词移动　（前面加数字移动多少个词）<br>e : 向后移到词末<br>ge : 向前移到词末<br>$ <End> : 行末<br>0 <Home> : 行首<br>tx : 向右查找本行的x并移到那儿（大写时向左）<br>33G : 移到文件的第33行<br>gg : 文件首行<br>G : 文件尾行<br>33% : 文件的33%处<br>H/M/L : 屏幕的首/中/尾行<br>zt/zz/zb : 当前行移到屏幕的首/中/底部</p>
<p>跳转：<br>“  : 回到跳转来的地方<br>CTRL-O : 跳到一个 “较老” 的地方<br>CTRL-I <Tab> : 则跳到一个 “较新” 的地方</p>
<p>查找：<br>/ : 向下查找（后加关键字）<br>? : 向上查找（后加关键字）<br>n : 下一条符合的记录</p>
<p>编辑：<br>i : 转换到插入模式<br>x : 删除当前字符<br>. : 重复最后一次的修改操作(同PS里ctrl+f执行滤镜)<br>u : 撤销操作<br>CTRL-R : 重做<br>p : 将删除的字符插入到当前位置(put)</p>
<p>退出保存：<br>:q : 退出<br>:q! : 不保存退出<br>ZZ : 保存后退出<br>:e! : 放弃修改重新编辑</p>
<p>掌握这些基本命令，Linux下的基本使用已经掌握，只要多加练习，多遇到问题，解决问题，能力就会不断的提升。</p>
]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>shh</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>linux上安装postgresql-9.6数据库</title>
    <url>/1328/</url>
    <content><![CDATA[<p>之前使用pgsql基本上就是用docker搭建容器然后直接使用，但是我们公司面向客户我也不知道能不能用docker构建所以就有了这个手札了吧…</p>
<p>具体怎么用docker，请移步百度，或者我自己不记得某些基础命令–&gt;移步：<a href="https://199604.com/1303#article">https://199604.com/1303#article</a></p>
<hr>
<p>剩下的基本上就是一下几个步骤…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.添加用户和组</span><br><span class="line">groupadd postgres </span><br><span class="line">useradd postgres -g postgres</span><br><span class="line"></span><br><span class="line">2.添加RPM</span><br><span class="line">yum install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm</span><br><span class="line"></span><br><span class="line">3.安装PostgreSQL 9.6</span><br><span class="line">yum install postgresql96-server postgresql96-contrib postgresql96-devel</span><br><span class="line"></span><br><span class="line">4.初始化数据库</span><br><span class="line">/usr/pgsql-9.6/bin/postgresql96-setup initdb</span><br><span class="line">默认Postgresql数据库安装路径是 /usr/pgsql-9.6/</span><br><span class="line">默认Postgresql数据库系统配置路径是 /var/lib/pgsql/9.6/data</span><br><span class="line"></span><br><span class="line">5.开启服务 service postgresql-9.6 start</span><br><span class="line"></span><br><span class="line">6.修改密码</span><br><span class="line">ALTER USER postgres WITH PASSWORD &#x27;密码&#x27;;   </span><br><span class="line">--sql语句必须以分号结束;修改密码必须在psql中操作</span><br><span class="line"></span><br><span class="line">7.开启远程访问</span><br><span class="line">vi /var/lib/pgsql/9.6/data/postgresql.conf  </span><br><span class="line">修改#listen_addresses = &#x27;localhost&#x27;  为  listen_addresses=&#x27;*&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">8.信任远程连接</span><br><span class="line">vi /var/lib/pgsql/9.6/data/pg_hba.conf  </span><br><span class="line">修改如下内容，信任指定服务器连接</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host    all            all      127.0.0.1/32      md5</span><br><span class="line">host    all            all      （需要连接的服务器IP）  md5</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>



<hr>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下几种文件传输命令sftp scp sz rz</title>
    <url>/1394/</url>
    <content><![CDATA[<h5 id="1-sftp"><a href="#1-sftp" class="headerlink" title="1. sftp"></a>1. sftp</h5><p>Secure Ftp 是一个基于SSH安全协议的文件传输管理工具。由于它是基于SSH的，会在传输过程中对用户的密码、数据等敏感信息进行加密，因此可以有效的防止用户信息在传输的过程中被窃取，比FTP有更高的安全性。在功能方面与FTP很类似，不仅可以传输文件数据，而且可以进行远程的文件管理（如建立，删除，查看文件列表等操作）。Sftp与ftp虽然只有一字之差，但基于的传输协议却是不同的。因此不能用sftp client去连接ftp server 也不能用 ftp client 去连接 sftp server。 </p>
<p>简单的命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">建立连接：sftp user@host</span><br><span class="line">从本地上传文件：put localpath</span><br><span class="line">下载文件：get remotepath</span><br><span class="line"></span><br><span class="line">切换远程目录：cd</span><br><span class="line">显示远程工作目录：pwd</span><br><span class="line">建立远程目录：mkdir</span><br><span class="line">ps:</span><br><span class="line">与远程相对应的本地操作，只需要在命令前加上”l” 即可，方便好记。</span><br><span class="line">如：lcd lpwd lmkdir</span><br><span class="line"></span><br><span class="line">详情命令:</span><br><span class="line">sftp-- help </span><br><span class="line">可用命令： </span><br><span class="line">cd 路径                        更改远程目录到“路径” </span><br><span class="line">lcd 路径                       更改本地目录到“路径” </span><br><span class="line">chgrp group path               将文件“path”的组更改为“group” </span><br><span class="line">chmod mode path                将文件“path”的权限更改为“mode” </span><br><span class="line">chown owner path               将文件“path”的属主更改为“owner” </span><br><span class="line">exit                           退出 sftp </span><br><span class="line">help                           显示这个帮助文本 </span><br><span class="line">get 远程路径                   下载文件 </span><br><span class="line">ln existingpath linkpath       符号链接远程文件 </span><br><span class="line">ls [选项] [路径]               显示远程目录列表 </span><br><span class="line">lls [选项] [路径]              显示本地目录列表 </span><br><span class="line">mkdir 路径                     创建远程目录 </span><br><span class="line">lmkdir 路径                    创建本地目录 </span><br><span class="line">mv oldpath newpath             移动远程文件 </span><br><span class="line">open [用户@]主机[:端口]        连接到远程主机 </span><br><span class="line">put 本地路径                   上传文件 </span><br><span class="line">pwd                            显示远程工作目录 </span><br><span class="line">lpwd                           打印本地工作目录 </span><br><span class="line">quit                           退出 sftp </span><br><span class="line">rmdir 路径                     移除远程目录 </span><br><span class="line">lrmdir 路径                    移除本地目录 </span><br><span class="line">rm 路径                        删除远程文件 </span><br><span class="line">lrm 路径                       删除本地文件 </span><br><span class="line">symlink existingpath linkpath  符号链接远程文件 </span><br><span class="line">version                        显示协议版本</span><br></pre></td></tr></table></figure>

<h5 id="2-scp"><a href="#2-scp" class="headerlink" title="2. scp"></a>2. scp</h5><p>SCP ：secure copy (remote file copy program) 也是一个基于SSH安全协议的文件传输命令。与sftp不同的是，它只提供主机间的文件传输功能，没有文件管理的功能。</p>
<p>简单的命令如下:</p>
<p>2.1:复制local_file 到远程目录remote_folder下(复制文件):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp local_file_path remote_user@host:remote_folder_path</span><br><span class="line"></span><br><span class="line">scp /home/text.txt root@ip:/home/</span><br></pre></td></tr></table></figure>
<p>2.2:复制local_folder 到远程remote_folder（需要加参数 -r 递归）–&gt;复制目录:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp –r local_folder remote_user@host:remote_folder</span><br><span class="line"></span><br><span class="line">scp -r -P12022 /home/ root@ip:/home/</span><br></pre></td></tr></table></figure>

<p>相反，从远程服务器复制文件到本地目录:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp root@ip:/home/text.txt /homee/test/</span><br></pre></td></tr></table></figure>

<p>从远程服务器复制到本地:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r root@ip:/opt/soft/mysql /opt/soft/</span><br></pre></td></tr></table></figure>

<h5 id="命令参数："><a href="#命令参数：" class="headerlink" title="命令参数："></a>命令参数：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1  强制scp命令使用协议ssh1 </span><br><span class="line"></span><br><span class="line">-2  强制scp命令使用协议ssh2 </span><br><span class="line"></span><br><span class="line">-4  强制scp命令只使用IPv4寻址 </span><br><span class="line"></span><br><span class="line">-6  强制scp命令只使用IPv6寻址 </span><br><span class="line"></span><br><span class="line">-B  使用批处理模式（传输过程中不询问传输口令或短语） </span><br><span class="line"></span><br><span class="line">-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能） </span><br><span class="line"></span><br><span class="line">-p 保留原文件的修改时间，访问时间和访问权限。 </span><br><span class="line"></span><br><span class="line">-q  不显示传输进度条。 </span><br><span class="line"></span><br><span class="line">-r  递归复制整个目录。 </span><br><span class="line"></span><br><span class="line">-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。  </span><br><span class="line"></span><br><span class="line">-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。  </span><br><span class="line"></span><br><span class="line">-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。 </span><br><span class="line"></span><br><span class="line">-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。   </span><br><span class="line"></span><br><span class="line">-l limit  限定用户所能使用的带宽，以Kbit/s为单位。    </span><br><span class="line"></span><br><span class="line">-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，  </span><br><span class="line"></span><br><span class="line">-P port  注意是大写的P, port是指定数据传输用到的端口号  </span><br><span class="line"></span><br><span class="line">-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>scp sftp区别</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SCP比较简单，是轻量级的，SFTP的功能则比较多</span><br><span class="line"></span><br><span class="line">SFTP在文件传输过程中中断的话，连接后还可以继续传输，但SCP不行</span><br></pre></td></tr></table></figure>

<h5 id="sz-rz"><a href="#sz-rz" class="headerlink" title="sz rz"></a>sz rz</h5><p>sz/rz 是基于ZModem传输协议的命令。对传输的数据会进行核查，并且有很好的传输性能。使用起来更是非常方便，但前提是window端需要有能够支持ZModem的telnet或者SSH客户端，例如xshell/secureCRT。</p>
<p>基本命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sz filename：从服务器下载文件至本地</span><br><span class="line">rz：从本地上传文件至服务器</span><br><span class="line">ps:</span><br><span class="line">sz   **** 命令，保存文件****到windows</span><br><span class="line">rz  命令，会弹出窗口，选择要上传的文件</span><br><span class="line"></span><br><span class="line">下载数据到本地下载目录：sz filename_path1 filename_path2</span><br><span class="line"></span><br><span class="line">上传数据到远程：执行rz –be 命令，客户端会弹出上传窗口，用户自行选择(可多选)要上传的文件即可。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>检查是否存在lrzsz包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linux_glj_test testuser]# rpm -qa | grep lrzsz</span><br><span class="line">lrzsz-0.12.20-36.el7.x86_64</span><br></pre></td></tr></table></figure>
<p>如不存在则使用yum安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install lrzsz</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux升级Tomcat版本，tomcat8.5.34升级到tomcat9.0.43</title>
    <url>/1664/</url>
    <content><![CDATA[<h4 id="Linux升级Tomcat版本，tomcat8-5-34升级到tomcat9-0-43"><a href="#Linux升级Tomcat版本，tomcat8-5-34升级到tomcat9-0-43" class="headerlink" title="Linux升级Tomcat版本，tomcat8.5.34升级到tomcat9.0.43"></a>Linux升级Tomcat版本，tomcat8.5.34升级到tomcat9.0.43</h4><h5 id="1-下载你要升级的Tomcat版本："><a href="#1-下载你要升级的Tomcat版本：" class="headerlink" title="1.下载你要升级的Tomcat版本："></a>1.下载你要升级的Tomcat版本：</h5><p><a href="https://tomcat.apache.org/download-90.cgi">https://tomcat.apache.org/download-90.cgi</a></p>
<h5 id="2-停止tomcat"><a href="#2-停止tomcat" class="headerlink" title="2.停止tomcat"></a>2.停止tomcat</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef  grep tomcat </span><br><span class="line"></span><br><span class="line">kill -9 pid</span><br></pre></td></tr></table></figure>

<h5 id="3-备份旧的tomcat"><a href="#3-备份旧的tomcat" class="headerlink" title="3.备份旧的tomcat"></a>3.备份旧的tomcat</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -rf tomcat8.5.34 tomcat8.5.34_bak</span><br></pre></td></tr></table></figure>

<h5 id="4-解压新的tomcat"><a href="#4-解压新的tomcat" class="headerlink" title="4.解压新的tomcat"></a>4.解压新的tomcat</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-9.0.43.tar.gz</span><br></pre></td></tr></table></figure>

<h6 id="删除原来的tomcat8-5-1"><a href="#删除原来的tomcat8-5-1" class="headerlink" title="删除原来的tomcat8.5.1"></a>删除原来的tomcat8.5.1</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf tomcat8.5.34</span><br></pre></td></tr></table></figure>

<h6 id="重命名为："><a href="#重命名为：" class="headerlink" title="重命名为："></a>重命名为：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv apache-tomcat-9.0.43 tomcat8.5.34</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：此时tomcat8.5.34就是新的了</p>
</blockquote>
<h5 id="5-把旧的server-xml移动到新的server-xml"><a href="#5-把旧的server-xml移动到新的server-xml" class="headerlink" title="5.把旧的server.xml移动到新的server.xml"></a>5.把旧的server.xml移动到新的server.xml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp tomcat8.5.34_bak/conf/server.xml tomcat8.5.34/conf/</span><br></pre></td></tr></table></figure>

<h5 id="6-把旧的webapps移动到新的webapps下"><a href="#6-把旧的webapps移动到新的webapps下" class="headerlink" title="6.把旧的webapps移动到新的webapps下"></a>6.把旧的webapps移动到新的webapps下</h5><p>先删除新的webapps文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd tomcat8.5.34/webapps</span><br><span class="line">rm -rf *</span><br></pre></td></tr></table></figure>

<p>移动:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -rp tomcat8.5.34_bak/webapps/* tomcat8.5.34/webapps/</span><br></pre></td></tr></table></figure>

<p>修改了旧tomcat的某个文件，一定要复制或移动到新tomcat下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp tomcat8.5.34_bak/conf/catalina.sh tomcat8.5.34/conf/</span><br></pre></td></tr></table></figure>

<h5 id="7-遇到问题："><a href="#7-遇到问题：" class="headerlink" title="7.遇到问题："></a>7.遇到问题：</h5><h6 id="1-java-lang-IllegalArgumentException-The-AJP-Connector-is-configured-with-secretRequired-”true”-but-the-secret-attribute-is-either-null-or-“”"><a href="#1-java-lang-IllegalArgumentException-The-AJP-Connector-is-configured-with-secretRequired-”true”-but-the-secret-attribute-is-either-null-or-“”" class="headerlink" title="1.java.lang.IllegalArgumentException: The AJP Connector is configured with secretRequired=”true” but the secret attribute is either null or “”."></a>1.java.lang.IllegalArgumentException: The AJP Connector is configured with secretRequired=”true” but the secret attribute is either null or “”.</h6><p>启动发现 Tomcat 长时间没办法启动，观察日志，发现如下错误信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">08-Feb-2021 22:09:23.792 SEVERE [main] org.apache.catalina.util.LifecycleBase.handleSubClassException Failed to start component [Connector[AJP/1.3-8009]]</span><br><span class="line">        org.apache.catalina.LifecycleException: Protocol handler start failed</span><br><span class="line">                at org.apache.catalina.connector.Connector.startInternal(Connector.java:1038)</span><br><span class="line">                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)</span><br><span class="line">                at org.apache.catalina.core.StandardService.startInternal(StandardService.java:438)</span><br><span class="line">                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)</span><br><span class="line">                at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)</span><br><span class="line">                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)</span><br><span class="line">                at org.apache.catalina.startup.Catalina.start(Catalina.java:633)</span><br><span class="line">                at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">                at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">                at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">                at java.base/java.lang.reflect.Method.invoke(Method.java:566)</span><br><span class="line">                at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:343)</span><br><span class="line">                at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)</span><br><span class="line">        Caused by: java.lang.IllegalArgumentException: The AJP Connector is configured with secretRequired=&quot;true&quot; but the secret attribute is either null or &quot;&quot;. This combination is not valid.</span><br><span class="line">                at org.apache.coyote.ajp.AbstractAjpProtocol.start(AbstractAjpProtocol.java:264)</span><br><span class="line">                at org.apache.catalina.connector.Connector.startInternal(Connector.java:1035)</span><br><span class="line">                ... 12 more</span><br></pre></td></tr></table></figure>

<p>这个是由于在升级系统的时候，选择保留老版本的配置文件，这样就导致，如果 <strong>Tomcat</strong> 配置了通过 <strong>AJP</strong> 方式与<strong>Apache</strong>通信的情况下，会报告上面的错误信息。 新增 <strong>secretRequired</strong> 的目的是为了解决 <strong>AJP</strong> 端口暴露在公网的情况下，存在 <a href="https://access.redhat.com/solutions/4851251">AJP File Read/Inclusion in Apache Tomcat (CVE-2020-1938) and Undertow (CVE-2020-1745)</a> 漏洞，由于 <strong>Tomcat AJP</strong> 协议设计上存在缺陷，攻击者通过 <strong>Tomcat AJP Connector</strong> 可以读取或包含 <strong>Tomcat</strong> 上所有 <strong>webapp</strong> 目录下的任意文件，例如可以读取 <strong>webapp</strong> 配置文件或源代码。此外在目标应用有文件上传功能的情况下，配合文件包含的利用还可以达到远程代码执行的危害。 连接方必须在连接的时候，传入正确的 <strong>secretRequired</strong> 才能与 <strong>Tomcat</strong> 通信，相当于通信需要的密码了。 解决办法： 修改 server.xml:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; address=&quot;127.0.0.1&quot; redirectPort=&quot;8443&quot; secretRequired=&quot;&quot;/&gt;</span><br></pre></td></tr></table></figure>

<p>参考连接： <a href="https://www.nuomiphp.com/eplan/82819.html">https://www.nuomiphp.com/eplan/82819.html</a></p>
<h6 id="2-启动tomcat对比版本不对"><a href="#2-启动tomcat对比版本不对" class="headerlink" title="2.启动tomcat对比版本不对"></a>2.启动tomcat对比版本不对</h6><p>解决： 到bin下的setclasspath.sh，在文件的开始处添加如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_112</span><br><span class="line">export JRE_HOME=/usr/java/jdk1.8.0_112/jre</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装ORACLE-&gt;sqlplus/sqlldr 步骤</title>
    <url>/1219/</url>
    <content><![CDATA[<p>1.添加账号</p>
<p>useradd oracle</p>
<p>passwd oracle –stdin</p>
<p>2.放oracle 客户端文件</p>
<p>创建文件目录：mkdir oracle_soft</p>
<p>上传这几个文件包：</p>
<p><img src="http://qn.199604.com/typoraImg/1.png" alt="img"></p>
<p>安装：rpm -ivh *.rpm</p>
<p><img src="http://qn.199604.com/typoraImg/2.png" alt="img">3.测试sqlplus命令是否存在，不存在需要修改环境变量</p>
<p><img src="http://qn.199604.com/typoraImg/3.png" alt="img"></p>
<p>(用oracle用户操作)</p>
<p>先cat .bashrc</p>
<p><img src="http://qn.199604.com/typoraImg/5.png" alt="img"></p>
<p>然后修改 vi .bashrc</p>
<p>内容：</p>
<p>export ORACLE_HOME=/usr/lib/oracle/11.2/client64</p>
<p>export TNS_ADMIN=$ORACLE_HOME/network/admin</p>
<p>#export NLS_LANG=”SimplifiedChinese_china”.AL32UTF8</p>
<p>#export NLS_LANG=’simplifiedchinese_china’.ZHS16GBK</p>
<p>export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib/oracle/11.2/client64/lib</p>
<p>PATH=$JAVA_HOME/bin:$PATH:$ORACLE_HOME/bin</p>
<p>export PATH</p>
<p><img src="http://qn.199604.com/typoraImg/6.jpg" alt="img"></p>
<p>4.source .bashrc 刷新一下配置文件，然后再看看sqlplus命令是否存在</p>
<p>5.配置tnsnames.ora</p>
<p>cd $ORACLE_HOME(/usr/lib/oracle/11.2/client64/)应该刚第三部设置了home路径</p>
<p>然后 oracle (/usr/lib/oracle)文件夹 设置成 oracle 权限(此步需要root权限)：</p>
<p>chgrp 用户名 文件名 -R(chgrp oracle oracle/ -R)</p>
<p>chown 用户名 文件名 -R(chown oracle oracle/ -R)</p>
<p><img src="http://qn.199604.com/typoraImg/7.png" alt="img"></p>
<p>tnsnames.ora内容详情：</p>
<p>MMDS =<br>(DESCRIPTION =<br>(ENABLE = BROKEN)<br>(FAILOVER = YES)<br>(LOAD_BALANCE = OFF)<br>(ADDRESS = (PROTOCOL = TCP)(HOST = ip地址)(PORT = 端口))<br>(ADDRESS = (PROTOCOL = TCP)(HOST = ip地址)(PORT = 端口))<br>(CONNECT_DATA =<br>(SERVER = DEDICATED)<br>(SERVICE_NAME = mmds)<br>(FAILOVER_MODE =<br>(TYPE = session)<br>(METHOD = BASIC)<br>(RETRIES = 30)<br>(DELAY = 10)<br>)))</p>
<p><img src="http://qn.199604.com/typoraImg/8.png" alt="img"></p>
<p>然后把tnsnames.ora放到/usr/lib/oracle/11.2/client64/network/admin/ 文件夹下</p>
<p><img src="http://qn.199604.com/typoraImg/9.png" alt="img"></p>
<p>6.测试</p>
<p>sqlplus 数据库账号/密码@mmds</p>
<p>show user;</p>
<p>如果显示是：USER is “MMDS” 那么sqlplus连接数据库就行了</p>
<p>下一步就是按照sqlldr:</p>
<p>因为Oracle的instanct_client没有自带sqlldr工具所以，我自己的方法是到已经安装sqlldr的机器上直接复制的：</p>
<p>/usr/lib/oracle/11.2/client64/lib/libclntsh.so.11.1</p>
<p>/usr/lib/oracle/11.2/client64/bin/sqlldr</p>
<p>/usr/lib/oracle/11.2/client64/rdbms</p>
<p>scp -rp /usr/lib/oracle/11.2/client64/bin/sqlldr <a href="mailto:oracle@新机器ip:/usr/lib/oracle/11.2/client64/bin/sqlldr">oracle@新机器ip:/usr/lib/oracle/11.2/client64/bin/sqlldr</a></p>
<p>或者自己去官方下载：rdbms、sqlldr</p>
<p><img src="http://qn.199604.com/typoraImg/11.png" alt="img"></p>
<p>我的包就不共享了，自己记录一下呗嘻嘻~~~</p>
<p>然后就ojbk，可以用sqlldr:</p>
<p><img src="http://qn.199604.com/typoraImg/10.png" alt="img"></p>
<hr>
<p>文档下载：<a href="http://qn.199604.com/oracle%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4.doc">七牛云下载地址</a></p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>oracle</tag>
        <tag>sqlldr</tag>
      </tags>
  </entry>
  <entry>
    <title>linux本机对外ip无法使用22端口的问题</title>
    <url>/1501/</url>
    <content><![CDATA[<p>昨晚一个大佬同事又找我了，有一台linux机器:10.243.66.84，其他机器能lelnet 22端口，而本机10.243.66.84 letnet 22端口不行。</p>
<p>刚开始我也给带偏了，以为是ssh服务问题~</p>
<p>但是我用letnet 127.0.0.1 22 有可以通~</p>
<p>于是乎我再一台机器ssh到10.243.66.84机器，结果是这样子的。<img src="http://199604.com/wp-content/uploads/2020/04/11120200425212113.png"> ssh成功后，这台linux机器的真实ip不是10.243.66.84，而是172.16.140.20.说白了10.243.66.84是个映射IP。 <img src="http://199604.com/wp-content/uploads/2020/04/222220200425212901.jpg"></p>
]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux解压.gz文件后是.tmp文件的问题</title>
    <url>/1493/</url>
    <content><![CDATA[<p>前因：</p>
<p>今晚公司一位大佬问了我一个问题，如何在Linux下解压这种.gz文件？</p>
<p><img src="http://199604.com/wp-content/uploads/2020/04/20200422223240-1024x562.png" alt="img"></p>
<p>我的第一反应还是用gzip命令解压~但出乎意料的是，用gzip解压之后居然是一个文件夹？和用windows解压工具呈现的不一样!!!</p>
<p>于是乎我看了下windows第一步解压后是一个xxx.tmp文件???我的第一印象认为这不是临时文件或者丢失文件后缀吗???</p>
<p>但仔细看windows解压工具提示类型，.tmp的文件类型是tar文件??</p>
<p><img src="http://199604.com/wp-content/uploads/2020/04/20200422223808-1024x438.png" alt="img"></p>
<p>通过上述图片知道这个压缩文件其实是.tar.gz文件，所以解决办法是使用tar -zxvf xxx.gz 即可解决这个问题了~</p>
<p>但是很奇怪的是既然是.tar.gz文件为啥把.tar省略了呢<del>噗可能坑就在这里等着(捂脸大哭)</del></p>
<p>感谢这位大佬，又让我知道学习到了新知识点(捂脸大哭)~</p>
]]></content>
      <categories>
        <category>linux总结</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Lombok的基本使用</title>
    <url>/1694/</url>
    <content><![CDATA[<h2 id="1-Lombok的使用非常简单："><a href="#1-Lombok的使用非常简单：" class="headerlink" title="1.Lombok的使用非常简单："></a>1.Lombok的使用非常简单：</h2><h3 id="Lombok-plugin-插件"><a href="#Lombok-plugin-插件" class="headerlink" title="Lombok plugin 插件"></a>Lombok plugin 插件</h3><p>Intellij idea 使用Lombok需要安装插件：Lombok plugin: Preferences —&gt; Plugins —&gt; 搜索 Lombok plugin — &gt; Install</p>
<h3 id="引入相应的maven包"><a href="#引入相应的maven包" class="headerlink" title="引入相应的maven包"></a>引入相应的maven包</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Lombok注解的使用"><a href="#Lombok注解的使用" class="headerlink" title="Lombok注解的使用"></a>Lombok注解的使用</h3><h4 id="POJO类常用注解"><a href="#POJO类常用注解" class="headerlink" title="POJO类常用注解:"></a>POJO类常用注解:</h4><p><strong>@Getter/@Setter: 作用类上，生成所有成员变量的getter/setter方法；作用于成员变量上，生成该成员变量的getter/setter方法。可以设定访问权限及是否懒加载等。</strong></p>
<p><strong>@ToString：作用于类，覆盖默认的toString()方法，可以通过of属性限定显示某些字段，通过exclude属性排除某些字段。</strong></p>
<p><strong>@EqualsAndHashCode：作用于类，覆盖默认的equals和hashCode</strong></p>
<p><strong>@NonNull：主要作用于成员变量和参数中，标识不能为空，否则抛出空指针异常。</strong></p>
<p>@NoArgsConstructor, @RequiredArgsConstructor, @AllArgsConstructor：作用于类上，用于生成构造函数。有staticName、access等属性:</p>
<p><strong>@NoArgsConstructor：生成无参构造器；</strong></p>
<p><strong>@RequiredArgsConstructor：生成包含final和@NonNull注解的成员变量的构造器；</strong></p>
<p><strong>@AllArgsConstructor：生成全参构造器</strong></p>
<p><strong>@Builder：作用于类上，将类转变为建造者模式</strong></p>
<p><strong>@Log：作用于类上，生成日志变量。针对不同的日志实现产品，有不同的注解：</strong></p>
<p><strong>@Data：作用于类上，是以下注解的集合：@ToString @EqualsAndHashCode @Getter @Setter</strong></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>lombok</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown文件快速导入wordpress</title>
    <url>/1566/</url>
    <content><![CDATA[<p>最近迷上了用Typora写笔记，因为是markdown文件，写完发到wordpress，直接复制又有一些乱码样式啥的问题，处理这里问题还要一番周折，这几把麻烦。</p>
<p>然后想了下，能不能把markdown转成html，再复制html–&gt;body的内容到文本里。最后实践了一下，可行。</p>
<p>步骤：</p>
<p>1.markdown文件用Typora转为html。</p>
<blockquote>
<p>这里要转的格式为HTML（without styles），一定要选择这个选项，不要选择HTML。</p>
</blockquote>
<p>2.html内容导入wordpress</p>
<p>在wordpress新建一个空的文章页面，并将编辑模式由“可视化”切换为“文本”。</p>
<p>在文本状态下，将html中body的内容全部粘贴进来，然后再切换回“可视化”模式，即可！</p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>Typora</tag>
        <tag>WordPress</tag>
        <tag>wp</tag>
      </tags>
  </entry>
  <entry>
    <title>maven操作笔记</title>
    <url>/730/</url>
    <content><![CDATA[<p>maven操作笔记接下来应该会有基于maven的ssm搭建步骤的笔记吧~趁热打铁… <img src="http://qn.199604.com/typoraImg/maven-biji.png"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>maven配置jdk</title>
    <url>/827/</url>
    <content><![CDATA[<p>最近脑子都不好使…都是做下记录的,万一我那天失忆了.应该能找得到</p>
<hr>
<p>maven配置jdk的两种方法..</p>
<ul>
<li>设置全局的jdk</li>
<li>设置局部的jdk</li>
</ul>
<p>设置全局的jdk，在setting.xml文件中的profiles元素下添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;profile&gt;  </span><br><span class="line">    &lt;id&gt;jdk17&lt;/id&gt;  </span><br><span class="line">    &lt;activation&gt;  </span><br><span class="line">        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;  </span><br><span class="line">        &lt;jdk&gt;1.7&lt;/jdk&gt;  </span><br><span class="line">    &lt;/activation&gt;  </span><br><span class="line">    &lt;properties&gt;  </span><br><span class="line">        &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;  </span><br><span class="line">        &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;  </span><br><span class="line">        &lt;maven.compiler.compilerVersion&gt;1.7&lt;/maven.compiler.compilerVersion&gt;  </span><br><span class="line">    &lt;/properties&gt;   </span><br><span class="line">&lt;/profile&gt;</span><br></pre></td></tr></table></figure>

<p>设置局部的jdk，在项目的pom,xml文件中添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">	&lt;plugins&gt;  </span><br><span class="line">      &lt;plugin&gt;  </span><br><span class="line">          &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </span><br><span class="line">          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;  </span><br><span class="line">          &lt;configuration&gt;  </span><br><span class="line">              &lt;source&gt;1.7&lt;/source&gt;  </span><br><span class="line">              &lt;target&gt;1.7&lt;/target&gt;  </span><br><span class="line">          &lt;/configuration&gt;  </span><br><span class="line">      &lt;/plugin&gt;  </span><br><span class="line">  &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/20171207215931-1024x768.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Model, HttpServletRequest, ModelMap区别的使用笔记</title>
    <url>/851/</url>
    <content><![CDATA[<p>emmm…最近投了一些简历..好像没啥反应…哎</p>
<hr>
<p>今天就写下Model model, HttpServletRequest request/session, ModelMap modelMap之间的区别吧..</p>
<p>很多人如果使用了spring mvc 以后都有一个疑问.</p>
<p>httpServeltRequest和Model在传值给Jsp时的区别?</p>
<p>因为我们之前使用servlet给Jsp页面传值,基本都是request.setAttribute(“name”, “glj”);//把值放到request里面或者是session..</p>
<p>但是spring mvc的controller中给jsp传值时使用model.addAttribute(“name”, “glj”);</p>
<p>其实,如果你看了spring mvc的底层,你会发现，model数据最终还是写到HttpServletRequest属性中，只是model的写法更体现了MVC思想减少各层间耦合(个人总结思想，如果错误请留言我纠正…)</p>
<p>好了,下面我就写下他们之前的区别吧…</p>
<ul>
<li>1.request.setAttribute(“name”,”glj”);//把值存到request</li>
<li>2.modelMap.addAttribute(“name”,”glj”);//把值存到modelMap</li>
<li>3.model.addAttribute(“name”,”glj”);//把值存到model</li>
<li>4.request.getSession.setAttribute(“name”,”glj”);//把值存到Session,这个是先获取了session,然后在存值到session</li>
</ul>
<p>下面是在Jsp中获取值</p>
<ul>
<li>1.request.getAttribute(“name”)/el表达式${requestScope.name}/${name}</li>
<li>2.${name}</li>
<li>3.${name}</li>
<li>4.request.getSession().getAttribute/el表达式${sessionScope.name}/${name}</li>
</ul>
<p>最后..其实${name}对以上几种取值都适用的,只是优先级的区别罢了.</p>
<p>而Model和ModelMap都是一样的吧…只是二者谁最后赋值,谁的优先级就越高..然后才到request最后session…</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>HttpServletRequest</tag>
        <tag>Model</tag>
        <tag>ModelMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis-Generator配置文档记录.</title>
    <url>/755/</url>
    <content><![CDATA[<p>Mybatis-Generator的配置文件生成…下次自己复制修改..</p>
<p>emmm</p>
<p>generatorConfig.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">  PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">  &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!--数据库驱动--&gt;</span><br><span class="line">	&lt;!-- 如果IDE(eclipse或者idea) 项目里导入了jar包，那么就不需要配置了jar包的绝对路径了 </span><br><span class="line">	&lt;classPathEntry location=&quot;e:/project/mybatis/lib/mysql-connector-java-5.0.8-bin.jar&quot;/&gt; --&gt;</span><br><span class="line">    &lt;context id=&quot;mysqlContent&quot; targetRuntime=&quot;MyBatis3&quot; defaultModelType=&quot;flat&quot;&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">        	&lt;!-- 该属性用于指定MBG是否将在生成的注释中包含生成时间戳。默认为false --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- 该属性用于指定MBG是否将在生成的代码中包含任何注释。默认为false即提供 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line">        &lt;!--数据库链接地址账号密码--&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; </span><br><span class="line">        				connectionURL=&quot;jdbc:mysql://localhost/mybatis&quot; </span><br><span class="line">        				userId=&quot;root&quot; </span><br><span class="line">        				password=&quot;root&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line">        &lt;!-- JDBC类型和JAVA类型如何转换 --&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line">        &lt;!--生成Model类存放位置--&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.glj.pojo&quot; targetProject=&quot;src&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line">        &lt;!--生成映射文件存放位置--&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;com.glj.mapper&quot; targetProject=&quot;src&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line">        &lt;!--生成Dao类存放位置--&gt;</span><br><span class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot;</span><br><span class="line">	targetPackage=&quot;com.glj.mapper&quot; targetProject=&quot;src&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line">        &lt;!--生成对应表及类名--&gt;</span><br><span class="line">        &lt;table tableName=&quot;tb_user&quot; domainObjectName=&quot;User&quot;</span><br><span class="line">	enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">	enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;true&quot;</span><br><span class="line">	selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">           &lt;!--  &lt;property name=&quot;my.isgen.usekeys&quot; value=&quot;true&quot;/&gt; --&gt;</span><br><span class="line">            &lt;generatedKey column=&quot;id&quot; sqlStatement=&quot;MySql&quot; /&gt; </span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">  PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">  &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line"></span><br><span class="line">	&lt;context id=&quot;mysqlTable&quot; targetRuntime=&quot;MyBatis3&quot; defaultModelType=&quot;flat&quot;&gt;</span><br><span class="line">		&lt;commentGenerator&gt;</span><br><span class="line">			&lt;!-- 关闭自动生成注解 --&gt;</span><br><span class="line">			&lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">		&lt;/commentGenerator&gt;</span><br><span class="line">		&lt;!-- 配置数据库连接 --&gt;</span><br><span class="line">		&lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">			connectionURL=&quot;jdbc:mysql://localhost:3306/ssm_shiro&quot; userId=&quot;root&quot;</span><br><span class="line">			password=&quot;root&quot;&gt;</span><br><span class="line">		&lt;/jdbcConnection&gt;</span><br><span class="line">		&lt;!-- JDBC类型和JAVA类型如何转换 --&gt;</span><br><span class="line">		&lt;javaTypeResolver&gt;</span><br><span class="line">			&lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">		&lt;/javaTypeResolver&gt;</span><br><span class="line">		&lt;!-- 指定entity生成的位置 --&gt;</span><br><span class="line">		&lt;javaModelGenerator targetPackage=&quot;com.glj.entity&quot;</span><br><span class="line">			targetProject=&quot;.\src\main\java&quot;&gt;</span><br><span class="line">			&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">			&lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">		&lt;/javaModelGenerator&gt;</span><br><span class="line">		&lt;!--指定sql映射文件生成的位置 --&gt;</span><br><span class="line">		&lt;sqlMapGenerator targetPackage=&quot;mapper&quot; targetProject=&quot;.\src\main\resources&quot;&gt;</span><br><span class="line">			&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">		&lt;/sqlMapGenerator&gt;</span><br><span class="line">		&lt;!-- 指定dao接口生成的位置，mapper接口 --&gt;</span><br><span class="line">		&lt;javaClientGenerator type=&quot;XMLMAPPER&quot;</span><br><span class="line">			targetPackage=&quot;com.glj.dao&quot; targetProject=&quot;.\src\main\java&quot;&gt;</span><br><span class="line">			&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">		&lt;/javaClientGenerator&gt;</span><br><span class="line">		&lt;!-- table指定每个表的生成策略 --&gt;</span><br><span class="line">		&lt;table tableName=&quot;t_human&quot; domainObjectName=&quot;Human&quot;&gt;&lt;/table&gt;</span><br><span class="line">		&lt;table tableName=&quot;t_permission&quot; domainObjectName=&quot;Permission&quot;&gt;&lt;/table&gt;</span><br><span class="line">		&lt;table tableName=&quot;t_role&quot; domainObjectName=&quot;Role&quot;&gt;&lt;/table&gt;</span><br><span class="line">		&lt;table tableName=&quot;t_user&quot; domainObjectName=&quot;User&quot;&gt;&lt;/table&gt;</span><br><span class="line">	&lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure>

<p>TestMybatisGenerator.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.test;</span><br><span class="line"> </span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"> </span><br><span class="line">import org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line">import org.mybatis.generator.config.Configuration;</span><br><span class="line">import org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line">import org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"> </span><br><span class="line">public class TestMybatisGenerator &#123;</span><br><span class="line"> </span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">    	</span><br><span class="line">    	  //mbg执行过程中的警告信息</span><br><span class="line">    		List&lt;String&gt; warnings = new ArrayList&lt;String&gt;();</span><br><span class="line">    	  //当生成的代码重复时，覆盖源代码</span><br><span class="line">    	   boolean overwrite = true;</span><br><span class="line">    	  //读取mbg配置文件</span><br><span class="line">    	   File configFile = new File(&quot;generator-config.xml&quot;);</span><br><span class="line">    	   ConfigurationParser cp = new ConfigurationParser(warnings);</span><br><span class="line">    	   Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">    	   DefaultShellCallback callback = new DefaultShellCallback(overwrite);</span><br><span class="line">          //创建mbg</span><br><span class="line">    	   MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);</span><br><span class="line">          //执行生成代码</span><br><span class="line">    	   myBatisGenerator.generate(null);</span><br><span class="line">    	   System.out.println(&quot;生成代码成功，刷新项目，查看文件,然后执行TestMybatis.java&quot;);</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus使用技巧</title>
    <url>/1707/</url>
    <content><![CDATA[<p><strong>最近在用 Mybatis-Plus，嗯，是真他妈香！！！今天就来说说 Mybatis-Plus 的那些使用技巧</strong></p>
<h4 id="创建user表"><a href="#创建user表" class="headerlink" title="创建user表"></a>创建user表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, email) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;glj1&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@199604.com&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;glj1&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@199604.com&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;glj1&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@199604.com&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;glj1&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@199604.com&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;glj1&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@199604.com&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>注意：– 真实开发中往往都会有这四个字段，version（乐观锁）、deleted（逻辑删除）、gmt_create（创建时间）、gmt_modified（修改时间）</p>
<h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a><strong>导入依赖</strong></h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 数据库驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-plus --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-plus 是自己开发，并非官方的！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="创建application-yml"><a href="#创建application-yml" class="headerlink" title="创建application.yml"></a><strong>创建application.yml</strong></h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/txds?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line"><span class="comment">#    driver-class-name: com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure>

<h4 id="业务代码"><a href="#业务代码" class="headerlink" title="业务代码"></a><strong>业务代码</strong></h4><h5 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.glj.securitydemo.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: GuoLiangJun</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/3/26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Time</span>: 17:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="mapper接口"><a href="#mapper接口" class="headerlink" title="mapper接口"></a>mapper接口</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.glj.securitydemo.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.glj.securitydemo.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> jiomer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意点，我们需要在主启动类上去扫描我们的mapper包下的所有接口 @MapperScan(value = “com.glj.securitydemo.mapper”)</p>
</blockquote>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecuritydemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>

<h4 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a><strong>配置日志</strong></h4><p>application.yml文件添加日志配置:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>

<h4 id="Mybatis-plus的CRUD"><a href="#Mybatis-plus的CRUD" class="headerlink" title="Mybatis-plus的CRUD"></a>Mybatis-plus的CRUD</h4><h5 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a><strong>插入操作</strong></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">&quot;glj1&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">24</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;admin@199604.com&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> result = userMapper.insert(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;result:&quot;</span>+result);</span><br><span class="line">        System.out.println(<span class="string">&quot;user:&quot;</span>+user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>看到id会自动填充。数据库插入的id的默认值为：全局的唯一id</p>
<h6 id="主键生成策略"><a href="#主键生成策略" class="headerlink" title="主键生成策略"></a><strong>主键生成策略</strong></h6><p>1）主键自增 1、实体类字段上 @TableId(type = IdType.AUTO) <strong>@Tableid</strong></p>
<ul>
<li>  描述：主键注解</li>
</ul>
<p>属性</p>
<p>类型</p>
<p>必须指定</p>
<p>默认值</p>
<p>描述</p>
<p>value</p>
<p>String</p>
<p>否</p>
<p>“”</p>
<p>主键字段名</p>
<p>type</p>
<p>Enum</p>
<p>否</p>
<p>IdType.NONE</p>
<p>主键类型</p>
<p>IdType</p>
<p>值</p>
<p>描述</p>
<p>AUTO</p>
<p>数据库ID自增</p>
<p>NONE</p>
<p>无状态,该类型为未设置主键类型(注解里等于跟随全局,全局里约等于 INPUT)</p>
<p>INPUT</p>
<p>insert前自行set主键值</p>
<p>ASSIGN_ID</p>
<p>分配ID(主键类型为Number(Long和Integer)或String)(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextId</code>(默认实现类为<code>DefaultIdentifierGenerator</code>雪花算法)</p>
<p>ASSIGN_UUID</p>
<p>分配UUID,主键类型为String(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextUUID</code>(默认default方法)</p>
<p>ID_WORKER</p>
<p>分布式全局唯一ID 长整型类型(please use <code>ASSIGN_ID</code>)</p>
<p>UUID</p>
<p>32位UUID字符串(please use <code>ASSIGN_UUID</code>)</p>
<p>ID_WORKER_STR</p>
<p>分布式全局唯一ID 字符串类型(please use <code>ASSIGN_ID</code>)</p>
<p>具体注解到：<a href="https://mp.baomidou.com/guide/annotation.html#tablename">https://mp.baomidou.com/guide/annotation.html#tablename</a> 2、数据库id字段设置为自增！ 3、再次测试（可以看到id值比上次插入的大1）id的生成策略源码解释</p>
<h5 id="更新操作"><a href="#更新操作" class="headerlink" title="更新操作"></a>更新操作</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(<span class="string">&quot;111mybatis&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">24</span>);</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i  = userMapper.updateById(user);</span><br><span class="line">    System.out.println(<span class="string">&quot;i:&quot;</span>+i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a><strong>自动填充</strong></h6><p>创建时间、修改时间！这两个字段操作都是自动化完成的，我们不希望手动更新！阿里巴巴开发手册：所有的数据库表都要配置上gmt_create、gmt_modified！而且需要自动化！ 1、在表中新增字段 gmt_create, gmt_modified 2、实体类字段属性上需要增加注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 字段添加填充内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime gmtCreate;</span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime gmtModified;</span><br></pre></td></tr></table></figure>

<p>3.编写处理器来处理这个注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// MP3.3.0版本之前的配置类</span></span><br><span class="line">        <span class="comment">//  this.setFieldValByName(&quot;gmtCreate&quot;,new Date(),metaObject);</span></span><br><span class="line">        <span class="comment">// this.setFieldValByName(&quot;gmtModified&quot;,new Date(),metaObject);</span></span><br><span class="line">        <span class="comment">// MP3.3之后的配置类</span></span><br><span class="line">        <span class="keyword">this</span>.strictInsertFill(metaObject, <span class="string">&quot;gmtCreate&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">        <span class="keyword">this</span>.strictInsertFill(metaObject, <span class="string">&quot;gmtModified&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// MP3.3.0版本之前的配置类</span></span><br><span class="line">        <span class="comment">// this.setFieldValByName(&quot;gmtModified&quot;, new Date(),metaObject);</span></span><br><span class="line">        <span class="comment">// MP3.3之后的配置类</span></span><br><span class="line">        <span class="keyword">this</span>.strictUpdateFill(metaObject, <span class="string">&quot;gmtModified&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h5><p>乐观锁 : 顾名思义，十分乐观，它总是认为不会出现问题，无论干什么不去上锁！如果出现了问题， 再次更新值测试 悲观锁：顾名思义，十分悲观，它总是认为总是出现问题，无论干什么都会上锁！再去操作！ 乐观锁实现方式： 取出记录时，获取当前version 更新时，带上这个version 执行更新时， set version = newVersion where version = oldVersion 如果version不对，就更新失败 乐观锁测试: 1.给数据库中增加version字段 2.实体类加对应的字段</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Version</span></span><br><span class="line"><span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure>

<p>3.配置类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MapperScan(&quot;com.glj.securitydemo.mapper&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册乐观锁插件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testOptimisticLocker</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 1、查询用户信息</span></span><br><span class="line">    User user = userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    <span class="comment">// 2、修改用户信息</span></span><br><span class="line">    user.setName(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;123456@qq.com&quot;</span>);</span><br><span class="line">    <span class="comment">// 3、执行更新操作</span></span><br><span class="line">    userMapper.updateById(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a><strong>查询操作</strong></h5><h6 id="普通查询"><a href="#普通查询" class="headerlink" title="普通查询"></a>普通查询</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectById</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = userMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;user:&quot;</span>+user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试批量查询！</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectByBatchId</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按条件查询之一使用map操作</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectByBatchIds</span><span class="params">()</span></span>&#123;</span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;glj&quot;</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectByMap(map);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="条件查询（QueryWrapper）"><a href="#条件查询（QueryWrapper）" class="headerlink" title="条件查询（QueryWrapper）"></a>条件查询（QueryWrapper）</h6><p>如果说，我们需要查询的 SQL 语句如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> age <span class="operator">=</span> <span class="number">24</span>;</span><br></pre></td></tr></table></figure>

<p>那么对应的代码可以为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;age&quot;</span>,<span class="number">24</span>);</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectList(queryWrapper);</span><br><span class="line">    userList.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="条件查询（QueryWrapper-lambda）"><a href="#条件查询（QueryWrapper-lambda）" class="headerlink" title="条件查询（QueryWrapper lambda）"></a>条件查询（QueryWrapper lambda）</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper();</span><br><span class="line">    queryWrapper.lambda().eq(User::getAge,<span class="number">24</span>);</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectList(queryWrapper);</span><br><span class="line">    userList.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="普通分页查询"><a href="#普通分页查询" class="headerlink" title="普通分页查询"></a><em>普通分页查询</em></h6><p>1、配置拦截器组件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 分页插件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、直接使用Page对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectByPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 分页对象</span></span><br><span class="line">    Page&lt;User&gt; queryPage = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    IPage&lt;User&gt; iPage = userMapper.selectPage(queryPage , <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 数据总数</span></span><br><span class="line">    <span class="keyword">long</span> total = iPage.getTotal();</span><br><span class="line">    <span class="comment">// 集合数据</span></span><br><span class="line">    List&lt;User&gt; list = iPage.getRecords();</span><br><span class="line">    System.out.println(<span class="string">&quot;total:&quot;</span>+total);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="分页查询（联表）"><a href="#分页查询（联表）" class="headerlink" title="分页查询（联表）"></a>分页查询（联表）</h6><p>当我们需要关联表格分页查询时，普通分页查询已经满足不了我们的需求了，那么我们需要进行联表分页查询 假设我们需要的 SQL 语句如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span>,b.name <span class="keyword">as</span> sex_text <span class="keyword">from</span> <span class="keyword">user</span> a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> user_sex b</span><br><span class="line"><span class="keyword">on</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"><span class="keyword">where</span> a.age <span class="operator">&gt;</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<p>那么我们需要进行如下操作 1、新建 UserVO.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserVO</span> <span class="keyword">extends</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String sexText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.UserMapper.java 中新增：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">IPage&lt;UserVO&gt; <span class="title">list</span><span class="params">(Page&lt;UserVO&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;UserVO&gt; queryWrapper)</span></span>;</span><br></pre></td></tr></table></figure>

<p>3.编写代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;UserVO&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;age&quot;</span>,<span class="number">24</span>);</span><br><span class="line">    <span class="comment">// 分页对象</span></span><br><span class="line">    Page&lt;UserVO&gt; queryPage = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    IPage&lt;UserVO&gt; iPage = userMapper.list(queryPage , queryWrapper);</span><br><span class="line">    <span class="comment">// 数据总数</span></span><br><span class="line">    Long total = iPage.getTotal();</span><br><span class="line">    <span class="comment">// 集合数据</span></span><br><span class="line">    List&lt;UserVO&gt; list = iPage.getRecords();</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上就是分页查询（联表）时的操作，这个应该是用的比较多的</p>
<h6 id="AND-和-OR深入"><a href="#AND-和-OR深入" class="headerlink" title="AND 和 OR深入"></a>AND 和 OR深入</h6><p>queryWrapper 默认是按照 and 来连接的，但是在我们业务需求中，肯定会用到 or 来写 SQL 1.刚使用 假设我们需要的 SQL 语句如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">a.<span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"><span class="keyword">user</span> a </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="number">1</span> <span class="operator">=</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> a.id <span class="operator">&lt;&gt;</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> ( a.name <span class="operator">=</span> <span class="string">&#x27;glj_test&#x27;</span> <span class="keyword">OR</span> a.email <span class="operator">=</span> <span class="string">&#x27;admin@199604.com&#x27;</span> )</span><br></pre></td></tr></table></figure>

<p>那么我们可以这样写</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper4</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">    <span class="comment">// AND a.id &lt;&gt; 1 </span></span><br><span class="line">    queryWrapper.ne(User::getId,<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// AND ( a.`name` = &#x27;glj_test&#x27; OR a.email = &#x27;admin@199604.com&#x27; )</span></span><br><span class="line">    queryWrapper.and(i -&gt; i.eq(User::getName,<span class="string">&quot;glj_test&quot;</span>).or().eq(User::getEmail,<span class="string">&quot;admin@199604.com&quot;</span>));</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上就完成了初级的 and 和 or 联用的情况 2.咱们开始进阶了~ 假设我们需要的 SQL 语句如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">a.<span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"><span class="keyword">user</span> a </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="number">1</span> <span class="operator">=</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> a.id <span class="operator">&lt;&gt;</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> ( (a.name <span class="operator">=</span> <span class="string">&#x27;glj&#x27;</span> <span class="keyword">AND</span> a.age <span class="operator">=</span> <span class="number">24</span>) <span class="keyword">OR</span> (a.email <span class="operator">=</span> <span class="string">&#x27;admin@199604.com&#x27;</span> <span class="keyword">or</span>  a.age <span class="operator">=</span> <span class="number">24</span>))</span><br></pre></td></tr></table></figure>

<p>那么我们可以这样写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper5</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">    <span class="comment">// AND a.id &lt;&gt; 1</span></span><br><span class="line">    queryWrapper.ne(User::getId,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    queryWrapper.and(i -&gt; (i.and(j -&gt; j.eq(User::getName,<span class="string">&quot;glj&quot;</span>).eq(User::getAge,<span class="number">24</span>)))</span><br><span class="line">            .or(j -&gt; j.eq(User::getEmail,<span class="string">&quot;admin@199604.com&quot;</span>).or().eq(User::getAge,<span class="number">24</span>)));</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上就完成了复杂的 and 和 or 联用的情况 那么以后遇见更复杂的，可以按此规则继续进行拼接 SQL 具体查看官网API：<a href="https://mp.baomidou.com/guide/wrapper.html#abstractwrapper">https://mp.baomidou.com/guide/wrapper.html#abstractwrapper</a>  </p>
<h6 id="指定查询字段（select）"><a href="#指定查询字段（select）" class="headerlink" title="指定查询字段（select）"></a>指定查询字段（select）</h6><p>当我们只需要查询表格中的某几个字段，如果表格数据很大的话，我们不应该查询表格的所有字段，假如，我们需要的 SQL 如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">id,</span><br><span class="line">`name`,</span><br><span class="line">age </span><br><span class="line">FROM</span><br><span class="line">user </span><br><span class="line">WHERE</span><br><span class="line">1 = 1 </span><br><span class="line">AND age = 24</span><br></pre></td></tr></table></figure>

<p>我们只需要查询年龄等于24的用户的 id、name、age，所以，可以这样写:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper6</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">    <span class="comment">// 只查询 id，name，age</span></span><br><span class="line">    queryWrapper.select(User::getId, User::getName, User::getAge);</span><br><span class="line">    <span class="comment">// 查询条件为：age = 24</span></span><br><span class="line">    queryWrapper.eq(User::getAge, <span class="number">24</span>);</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> </p>
<h5 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a><strong>删除操作</strong></h5><h6 id="物理删除"><a href="#物理删除" class="headerlink" title="物理删除"></a><strong>物理删除</strong></h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试删除</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        userMapper.deleteById(<span class="number">5L</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过id批量删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteBatchId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        userMapper.deleteBatchIds(Arrays.asList(<span class="number">1L</span>,<span class="number">3L</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过map删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;glj&quot;</span>);</span><br><span class="line">        userMapper.deleteByMap(map);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h6 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a><strong>逻辑删除</strong></h6><p>物理删除 ：从数据库中直接移除 逻辑删除 ：在数据库中没有被移除，而是通过一个变量来让它失效！ deleted = 0 =&gt; deleted = 1 管理员可以查看被删除的记录！防止数据的丢失，类似于回收站！ 1、在数据表中增加一个 deleted 字段 2、实体类中增加属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@TableLogic</span><br><span class="line">private Integer deleted;</span><br></pre></td></tr></table></figure>

<p>3、配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mybatis-plus:</span><br><span class="line">  global-config:</span><br><span class="line">    db-config:</span><br><span class="line">      logic-delete-field: deleted  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span><br><span class="line">      logic-delete-value: 1 # 逻辑已删除值(默认为 1)</span><br><span class="line">      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)</span><br></pre></td></tr></table></figure>

<p>4、测试删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    @Test</span><br><span class="line">    public void testDeleteById()&#123;</span><br><span class="line">        userMapper.deleteById(2L);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">------------------------日志</span><br><span class="line">JDBC Connection [HikariProxyConnection@1551760389 wrapping com.mysql.cj.jdbc.ConnectionImpl@345d053b] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: UPDATE user SET deleted=1 WHERE id=? AND deleted=0</span><br><span class="line">==&gt; Parameters: 2(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意：</strong>自己在 xml 文件中写的 SQL 不会自动加上逻辑删除条件</p>
</blockquote>
<p>最后更多技巧请参考官网：<a href="https://mp.baomidou.com/">https://mp.baomidou.com/</a></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>java</category>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>mybatis-plus</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis中collection和association的使用区别</title>
    <url>/709/</url>
    <content><![CDATA[<p>最近一直把collection和association弄混，所以为了增强自己的记忆，就撸一个关系出来算是总结罢了</p>
<hr>
<p>\1. 关联-association<br>\2. 集合-collection</p>
<p>比如同时有User.java和Card.java两个类</p>
<p>User.java如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class User&#123;</span><br><span class="line"></span><br><span class="line">private Card card_one;</span><br><span class="line"></span><br><span class="line">private List&lt;Card&gt; card_many;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在映射card_one属性时用association标签, 映射card_many时用collection标签.</p>
<p>所以association是用于一对一和多对一，而collection是用于一对多的关系</p>
<p>下面就用一些例子解释下吧</p>
<p>association-一对一</p>
<p>人和身份证的关系</p>
<p>下面是pojo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Card implements Serializable&#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String code;</span><br><span class="line">//省略set和get方法.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Person implements Serializable&#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String name;</span><br><span class="line">	private String sex;</span><br><span class="line">	private Integer age;</span><br><span class="line">	//人和身份证是一对一的关系</span><br><span class="line">	private Card card;</span><br><span class="line">//省略set/get方法.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是mapper和实现的接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.mapper;</span><br><span class="line"></span><br><span class="line">import com.glj.poji.Card;</span><br><span class="line"></span><br><span class="line">public interface CardMapper &#123;</span><br><span class="line">	Card selectCardById(Integer id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">    PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">    &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.glj.mapper.CardMapper&quot;&gt;</span><br><span class="line">	&lt;select id=&quot;selectCardById&quot; parameterType=&quot;int&quot; resultType=&quot;com.glj.poji.Card&quot;&gt;</span><br><span class="line">		select * from tb_card where id = #&#123;id&#125; </span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.mapper;</span><br><span class="line"></span><br><span class="line">import com.glj.poji.Person;</span><br><span class="line"></span><br><span class="line">public interface PersonMapper &#123;</span><br><span class="line">	Person selectPersonById(Integer id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">    PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">    &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.glj.mapper.PersonMapper&quot;&gt;</span><br><span class="line">	&lt;resultMap type=&quot;com.glj.poji.Person&quot; id=&quot;personMapper&quot;&gt;</span><br><span class="line">		&lt;id property=&quot;id&quot; column=&quot;id&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;name&quot; column=&quot;name&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;sex&quot; column=&quot;sex&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;age&quot; column=&quot;age&quot;/&gt;</span><br><span class="line">		&lt;association property=&quot;card&quot; column=&quot;card_id&quot; </span><br><span class="line">			select=&quot;com.glj.mapper.CardMapper.selectCardById&quot;</span><br><span class="line">			javaType=&quot;com.glj.poji.Card&quot;&gt;</span><br><span class="line">		&lt;/association&gt;</span><br><span class="line">	&lt;/resultMap&gt;</span><br><span class="line">	&lt;select id=&quot;selectPersonById&quot; parameterType=&quot;int&quot; resultMap=&quot;personMapper&quot;&gt;</span><br><span class="line">		select * from tb_person where id = #&#123;id&#125;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<p>PersonMapper.xml 还使用association的分步查询。</p>
<p>同理多对一，也是一样</p>
<p>只要那个pojo出现private Card card_one;</p>
<p>即使用association</p>
<hr>
<p>collection 一对多和association的多对一关系</p>
<p>学生和班级的一对多的例子</p>
<p>pojo类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.pojo;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class Clazz implements Serializable&#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String code;</span><br><span class="line">	private String name;</span><br><span class="line">        //班级与学生是一对多的关系</span><br><span class="line">	private List&lt;Student&gt; students;</span><br><span class="line">//省略set/get方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.pojo;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line"></span><br><span class="line">public class Student implements Serializable &#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String name;</span><br><span class="line">	private String sex;</span><br><span class="line">	private Integer age;</span><br><span class="line">        //学生与班级是多对一的关系</span><br><span class="line">	private Clazz clazz;</span><br><span class="line">//省略set/get方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">    PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">    &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.glj.mapper.ClazzMapper&quot;&gt;</span><br><span class="line">	&lt;select id=&quot;selectClazzById&quot; parameterType=&quot;int&quot; resultMap=&quot;clazzResultMap&quot;&gt;</span><br><span class="line">		select * from tb_clazz where id = #&#123;id&#125;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">	&lt;resultMap type=&quot;com.glj.pojo.Clazz&quot; id=&quot;clazzResultMap&quot;&gt;</span><br><span class="line">		&lt;id property=&quot;id&quot; column=&quot;id&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;code&quot; column=&quot;code&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;name&quot; column=&quot;name&quot;/&gt;</span><br><span class="line">		&lt;!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 --&gt;</span><br><span class="line">		&lt;collection property=&quot;students&quot; ofType=&quot;com.glj.pojo.Student&quot;</span><br><span class="line">		column=&quot;id&quot; javaType=&quot;ArrayList&quot;</span><br><span class="line">		fetchType=&quot;lazy&quot; select=&quot;com.glj.mapper.StudentMapper.selectStudentByClazzId&quot;&gt;</span><br><span class="line">			&lt;id property=&quot;id&quot; column=&quot;id&quot;/&gt;</span><br><span class="line">			&lt;result property=&quot;name&quot; column=&quot;name&quot;/&gt;</span><br><span class="line">			&lt;result property=&quot;sex&quot; column=&quot;sex&quot;/&gt;</span><br><span class="line">			&lt;result property=&quot;age&quot; column=&quot;age&quot;/&gt;</span><br><span class="line">		&lt;/collection&gt;</span><br><span class="line">	&lt;/resultMap&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.mapper;</span><br><span class="line"></span><br><span class="line">import com.glj.pojo.Clazz;</span><br><span class="line"></span><br><span class="line">public interface ClazzMapper &#123;</span><br><span class="line">	Clazz selectClazzById(Integer id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ClazzMapper使用到了集合-collection 即为一对多，一个班级面对多个学生</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">    PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">    &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.glj.mapper.StudentMapper&quot;&gt;</span><br><span class="line">	&lt;select id=&quot;selectStudentById&quot; parameterType=&quot;int&quot; resultMap=&quot;studentResultMap&quot;&gt;</span><br><span class="line">		select * from tb_clazz c,tb_student s where c.id = s.id and s.id = #&#123;id&#125;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">	&lt;select id=&quot;selectStudentByClazzId&quot; parameterType=&quot;int&quot; resultMap=&quot;studentResultMap&quot;&gt;</span><br><span class="line">		select * from tb_student where clazz_id = #&#123;id&#125;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">	&lt;resultMap type=&quot;com.glj.pojo.Student&quot; id=&quot;studentResultMap&quot;&gt;</span><br><span class="line">		&lt;id property=&quot;id&quot; column=&quot;id&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;name&quot; column=&quot;name&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;sex&quot; column=&quot;sex&quot;/&gt;</span><br><span class="line">		&lt;result property=&quot;age&quot; column=&quot;age&quot;/&gt;</span><br><span class="line">		&lt;association property=&quot;clazz&quot; javaType=&quot;com.glj.pojo.Clazz&quot;&gt;</span><br><span class="line">			&lt;id property=&quot;id&quot; column=&quot;id&quot;/&gt;</span><br><span class="line">			&lt;result property=&quot;code&quot; column=&quot;code&quot;/&gt;</span><br><span class="line">			&lt;result property=&quot;name&quot; column=&quot;name&quot;/&gt;</span><br><span class="line">		&lt;/association&gt;</span><br><span class="line">	&lt;/resultMap&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.mapper;</span><br><span class="line"></span><br><span class="line">import com.glj.pojo.Student;</span><br><span class="line"></span><br><span class="line">public interface StudentMapper &#123;</span><br><span class="line">	Student selectStudentById(Integer id); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>StudentMapper则是与班级为多对一关系，所以使用了关联-association</p>
<hr>
<p>嗯，希望我以后又不记得二者的关系时,能感谢现在总结的自己</p>
<p>附上一张mybatis的类型别名图</p>
<p><img src="http://qn.199604.com/typoraImg/985599-20160719174815763-1552090814.png"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>association</tag>
        <tag>collection</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis工厂类封装SqlSessionFactory和SqlSession</title>
    <url>/663/</url>
    <content><![CDATA[<p>因为每次测试都西药读取mybatis-config.xml根配置文件，然后有需要重复创建SqlSessionFactory和SqlSession，这样的操作比较频繁。所以也想Hibernate一样。开发一个工厂类封装以上的重复代码…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.test;</span><br><span class="line"></span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">import org.apache.ibatis.io.Resources;</span><br><span class="line">import org.apache.ibatis.session.SqlSession;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line">public class MybatisUtils &#123;</span><br><span class="line">	//初始化创建SqlSessionFactory</span><br><span class="line">	private static SqlSessionFactory sqlSessionFactory = null;</span><br><span class="line">	static&#123;</span><br><span class="line">		try&#123;</span><br><span class="line">			//读取mybaits-config.xml文件</span><br><span class="line">			InputStream inputStream = Resources.getResourceAsStream(&quot;mybatis-config.xml&quot;);</span><br><span class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">		&#125;catch(Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	//获取SqlSession</span><br><span class="line">	public static SqlSession getSqlSession()&#123;</span><br><span class="line">		return sqlSessionFactory.openSession();</span><br><span class="line">	&#125;</span><br><span class="line">	//获取SqlSessionFactory</span><br><span class="line">	public static SqlSessionFactory getSessionFactory()&#123;</span><br><span class="line">		return sqlSessionFactory;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/375611971363640027-1024x768.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>SqlSession</tag>
        <tag>SqlSessionFactory</tag>
      </tags>
  </entry>
  <entry>
    <title>Myeclipse删除antlr-2.7.2.jar--解决struts和hibernate包冲突</title>
    <url>/606/</url>
    <content><![CDATA[<p>这个草稿放了大半年了…就是一直没有发布.今天就让他见下世面吧…</p>
<hr>
<p>要解决问题，可以修改配置。</p>
<p>在windows-&gt;proferences-&gt;MyEclipse-&gt;project Libraries 页面中勾选enable advanced configuration，然后在哪些库中找到struts2（在最后，我用的是struts2），将core下的antlr-2.7.2.jar取消掉，然后应用即可。</p>
<h3 id="java中，怎么新建子包？"><a href="#java中，怎么新建子包？" class="headerlink" title="java中，怎么新建子包？"></a>java中，怎么新建子包？</h3><p>对于新建子包，需要看你是什么等级的.</p>
<p>如果是src下的，就直接右键，new-&gt;package，然后输入包名就ok了。</p>
<p>如果已经存在了com.baidu.a，你想创建com.baidu.b，创建好之后，对于a和b，都是com.baidu的子包。</p>
<p>a和b此时类似于兄弟。 对于包的显示有两种。在Package Explorer右边，有个向下的白色三角箭头View menu。</p>
<p>点击，选择Package Presentation，就会有两个选择，分别是Flat和Hierarchial。 如果选择后者，包的结构会更加清晰，层次分明。</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
        <tag>JAVA</tag>
        <tag>hibernate</tag>
        <tag>struts</tag>
      </tags>
  </entry>
  <entry>
    <title>MyEclipse连接Mysql数据库步骤</title>
    <url>/120/</url>
    <content><![CDATA[<p>为了不想让一个好(zhi)心(zhang)认(you)真(bing)的老师搞乱自己爱学习的心。</p>
<p>我还是把步骤写上来，避免下次自己去自学了上他课还是给他扰乱思维</p>
<ul>
<li>启动Mysql-5.6,用户名和密码均为root（默认）</li>
<li>打开myeclipse，再打开菜单window–openPerspective–其它–myeclipse Database explorer</li>
<li>在DB Browser数据库浏览器窗口 选中myeclipse Derby–右击–new–在database Driver窗口填写驱动相关信息</li>
<li>将Mysql链接驱动mysql-connector-java-5.1.6文件放在某个盘的根目录下</li>
<li>填写Driver template(驱动模板),选择“MySQL Connection/J”</li>
<li>填写Driver name,填写链接名，一般为小写字母（这里我觉得是随便，打上fuck me 也是可以的）</li>
<li>填写Connection URL（链接方式，数据库类型，服务器名，端口号，数据库名）jdbc:mysql://<hostname>[&lt;:3306&gt;]/<dbname>，例如jdbc:mysql://localhost:3306/test</li>
<li>填写用户名和密码：username：root,password：root</li>
<li>填写驱动类Driver classname:com.mysql.jdbc.Driver–finish</li>
<li>next–选中要显示的Mysql服务器上的数据库名，默认全显示，可以选择第三项，即选择性地添加显示内容。</li>
</ul>
<p>然后你可以点击下方有一个Test Driver 测试，有显示什么Sucessfully established(原谅我是个英语奇葩)就说是成功了。后面就是让Myeclipse连接mysql了。</p>
<p>以下是我每次去学校机房都要测试的代码，毕竟每次去机房都要自己去配置mysql，要一部一个细节去弄不然就会死人！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;ISO-8859-1&quot;%&gt;</span><br><span class="line">&lt;%@page import=&quot;java.sql.*&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt; </span><br><span class="line">    &lt;title&gt;My JSP &#x27;index.jsp&#x27; starting page&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">    	try&#123;</span><br><span class="line">    		Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">    		String url = &quot;jdbc:mysql://127.0.0.1:3306/test?characterEcoding=utf-8&quot;;</span><br><span class="line">    		String username = &quot;root&quot;;</span><br><span class="line">    		String password = &quot;root&quot;;</span><br><span class="line">    		Connection conn = DriverManager.getConnection(url,username,password);</span><br><span class="line">    		if(conn!=null)&#123;</span><br><span class="line">    			out.print(&quot;ok&quot;);</span><br><span class="line">    			conn.close();</span><br><span class="line">    		&#125;else&#123;</span><br><span class="line">    			out.print(&quot;unok&quot;);</span><br><span class="line">    		&#125;</span><br><span class="line">    	&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line">    		e.printStackTrace();</span><br><span class="line">    	&#125;catch(SQLException e)&#123;</span><br><span class="line">    		e.printStackTrace();</span><br><span class="line">    	&#125;</span><br><span class="line">     %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>这个代码应该能看得懂吧。</p>
<p>下面是一个mysql驱动类-&gt;<a href="http://qn.199604.com/mysql-connector-java-5.1.6.jar">点击下载</a></p>
<hr>
<p>这张照片拍出了我要射的感觉！</p>
<p><img src="http://qn.199604.com/803972518689170254.jpg"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>Myeclipse</tag>
        <tag>步骤</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql时间与字符串之间相互转换</title>
    <url>/1251/</url>
    <content><![CDATA[<p>因为mysql的时间转换与oracle是有点区别，再上一家公司，是以oracle为主，重新用mysql需要在习惯一下，就记录一下呗~</p>
<hr>
<h2 id="时间转字符串："><a href="#时间转字符串：" class="headerlink" title="时间转字符串："></a>时间转字符串：</h2><p>DATE_FORMAT(日期，格式字符串) SELECT DATE_FORMAT(NOW(), ‘%Y-%m-%d %H:%i:%s’);–now()为当期时间 –结果：2019-08-20 20:40:08</p>
<h2 id="字符串转时间："><a href="#字符串转时间：" class="headerlink" title="字符串转时间："></a>字符串转时间：</h2><p>STR_TO_DATE(字符串，日志格式) SELECT STR_TO_DATE(‘2019-08-20 20:40:08’, ‘%Y-%m-%d %H:%i’); –结果：2019-08-20 20:40:00</p>
<h2 id="时间转时间戳："><a href="#时间转时间戳：" class="headerlink" title="时间转时间戳："></a>时间转时间戳：</h2><p>select unix_timestamp(now());–now()为当期时间 –结果：1566304856</p>
<h2 id="字符串转时间戳："><a href="#字符串转时间戳：" class="headerlink" title="字符串转时间戳："></a>字符串转时间戳：</h2><p>select unix_timestamp(‘2019-08-20’); –结果：1566230400</p>
<h2 id="时间戳转字符串："><a href="#时间戳转字符串：" class="headerlink" title="时间戳转字符串："></a>时间戳转字符串：</h2><p>select from_unixtime(1566230400,’%Y-%m-%d’); –结果：2019-08-20</p>
<h2 id="附表"><a href="#附表" class="headerlink" title="附表"></a>附表</h2><p>MySQL日期格式化（format）取值范围。(参考：<a href="https://www.cnblogs.com/kingsonfu/p/9865179.html">https://www.cnblogs.com/kingsonfu/p/9865179.html</a>)</p>
<p> <img src="http://qn.199604.com/typoraImg/20190820204811-523x1024.png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx与安全有关的几个配置</title>
    <url>/1747/</url>
    <content><![CDATA[<h3 id="隐藏版本号"><a href="#隐藏版本号" class="headerlink" title="隐藏版本号"></a>隐藏版本号</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>经常会有针对某个版本的nginx安全漏洞出现，隐藏nginx版本号就成了主要的安全优化手段之一，当然最重要的是及时升级修复漏洞.</p>
<span id="more"></span>

<h3 id="开启HTTPS"><a href="#开启HTTPS" class="headerlink" title="开启HTTPS"></a>开启HTTPS</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span> ops-coffee.cn;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/nginx/server.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/nginx/server.key;</span><br><span class="line">    <span class="attribute">ssl_protocols</span>       TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span>         HIGH:!aNULL:!MD5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>ssl on：</strong>开启https</p>
<p><strong>ssl_certificate：</strong>配置nginx ssl证书的路径</p>
<p><strong>ssl_certificate_key：</strong>配置nginx ssl证书key的路径</p>
<p><strong>ssl_protocols：</strong>指定客户端建立连接时使用的ssl协议版本，如果不需要兼容TSLv1，直接去掉即可</p>
<p><strong>ssl_ciphers：</strong>指定客户端连接时所使用的加密算法，你可以再这里配置更高安全的算法</p>
<h3 id="添加黑白名单"><a href="#添加黑白名单" class="headerlink" title="添加黑白名单"></a>添加黑白名单</h3><p>白名单配置</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> /admin/ &#123;</span><br><span class="line">    <span class="attribute">allow</span>   <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">deny</span>    all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上边表示只允许192.168.1.0/24网段的主机访问，拒绝其他所有</p>
<p>也可以写成黑名单的方式禁止某些地址访问，允许其他所有，例如</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> /ops-coffee/ &#123;</span><br><span class="line">    <span class="attribute">deny</span>   <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">allow</span>    all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更多的时候客户端请求会经过层层代理，我们需要通过<code>$http_x_forwarded_for</code>来进行限制，可以这样写</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">set</span> $allow <span class="literal">false</span>;</span><br><span class="line"><span class="attribute">if</span> ($http_x_forwarded_for = <span class="string">&quot;211.144.204.2&quot;</span>) &#123; <span class="attribute">set</span> $allow <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="attribute">if</span> ($http_x_forwarded_for <span class="regexp">~ &quot;108.2.66.[89]&quot;)</span> &#123; <span class="attribute">set</span> $allow <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="attribute">if</span> ($allow = <span class="literal">false</span>) &#123; <span class="attribute">return</span> <span class="number">404</span>; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="限制请求方法"><a href="#限制请求方法" class="headerlink" title="限制请求方法"></a>限制请求方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if ($request_method !~ ^(GET|POST)$ ) &#123;</span><br><span class="line">    return 405;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>$request_method</code>能够获取到请求nginx的method</p>
<p>配置只允许GET\POST方法访问，其他的method返回405</p>
<h3 id="拒绝User-Agent"><a href="#拒绝User-Agent" class="headerlink" title="拒绝User-Agent"></a>拒绝User-Agent</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if ($http_user_agent ~* LWP::Simple|BBBike|wget|curl) &#123;</span><br><span class="line">    return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可能有一些不法者会利用wget/curl等工具扫描我们的网站，我们可以通过禁止相应的user-agent来简单的防范</p>
<p>Nginx的444状态比较特殊，如果返回444那么客户端将不会收到服务端返回的信息，就像是网站无法连接一样</p>
<h3 id="图片防盗链"><a href="#图片防盗链" class="headerlink" title="图片防盗链"></a>图片防盗链</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /images/ &#123;</span><br><span class="line">    valid_referers none blocked www.199604.com 199604.com;</span><br><span class="line">    if ($invalid_referer) &#123;</span><br><span class="line">        return  403;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>valid_referers：</strong>验证referer，其中<code>none</code>允许referer为空，<code>blocked</code>允许不带协议的请求，除了以上两类外仅允许referer为<a href="http://www.199604.com或199604.com时访问images下的图片资源,否则返回403/">www.199604.com或199604.com时访问images下的图片资源，否则返回403</a></p>
<p>当然你也可以给不符合referer规则的请求重定向到一个默认的图片，比如下边这样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /images/ &#123;</span><br><span class="line">    valid_referers blocked www.199604.com 199604.com;</span><br><span class="line">    if ($invalid_referer) &#123;</span><br><span class="line">        rewrite ^/images/.*\.(gif|jpg|jpeg|png)$ /static/qrcode.jpg last;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="控制并发连接数"><a href="#控制并发连接数" class="headerlink" title="控制并发连接数"></a>控制并发连接数</h3><p>可以通过<code>ngx_http_limit_conn_module</code>模块限制一个IP的并发连接数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    limit_conn_zone $binary_remote_addr zone=ops:10m;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  199604.com;</span><br><span class="line"></span><br><span class="line">        root /home/project/webapp;</span><br><span class="line">        index index.html;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            limit_conn ops 10;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /tmp/nginx_access.log  main;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>limit_conn_zone：</strong>设定保存各个键(例如<code>$binary_remote_addr</code>)状态的共享内存空间的参数，zone=空间名字:大小</p>
<p>大小的计算与变量有关，例如<code>$binary_remote_addr</code>变量的大小对于记录IPV4地址是固定的4 bytes，而记录IPV6地址时固定的16 bytes，存储状态在32位平台中占用32或者64 bytes，在64位平台中占用64 bytes。1m的共享内存空间可以保存大约3.2万个32位的状态，1.6万个64位的状态</p>
<p><strong>limit_conn：</strong>指定一块已经设定的共享内存空间(例如name为<code>ops</code>的空间)，以及每个给定键值的最大连接数</p>
<p>上边的例子表示同一IP同一时间只允许10个连接</p>
<p>当有多个<code>limit_conn</code>指令被配置时，所有的连接数限制都会生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    limit_conn_zone $binary_remote_addr zone=ops:10m;</span><br><span class="line">    limit_conn_zone $server_name zone=coffee:10m;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  199604.com;</span><br><span class="line"></span><br><span class="line">        root /home/project/webapp;</span><br><span class="line">        index index.html;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            limit_conn ops 10;</span><br><span class="line">            limit_conn coffee 2000;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上边的配置不仅会限制单一IP来源的连接数为10，同时也会限制单一虚拟服务器的总连接数为2000</p>
<h3 id="缓冲区溢出攻击"><a href="#缓冲区溢出攻击" class="headerlink" title="缓冲区溢出攻击"></a>缓冲区溢出攻击</h3><p><strong>缓冲区溢出攻击</strong>是通过将数据写入缓冲区并超出缓冲区边界和重写内存片段来实现的，限制缓冲区大小可有效防止</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">client_body_buffer_size  1K;</span><br><span class="line">client_header_buffer_size 1k;</span><br><span class="line">client_max_body_size 1k;</span><br><span class="line">large_client_header_buffers 2 1k;</span><br></pre></td></tr></table></figure>

<p><strong>client_body_buffer_size：</strong>默认8k或16k，表示客户端请求body占用缓冲区大小。如果连接请求超过缓存区指定的值，那么这些请求实体的整体或部分将尝试写入一个临时文件。</p>
<p><strong>client_header_buffer_size：</strong>表示客户端请求头部的缓冲区大小。绝大多数情况下一个请求头不会大于1k，不过如果有来自于wap客户端的较大的cookie它可能会大于 1k，Nginx将分配给它一个更大的缓冲区，这个值可以在<code>large_client_header_buffers</code>里面设置</p>
<p><strong>client_max_body_size：</strong>表示客户端请求的最大可接受body大小，它出现在请求头部的Content-Length字段， 如果请求大于指定的值，客户端将收到一个”Request Entity Too Large” (413)错误，通常在上传文件到服务器时会受到限制</p>
<p><strong>large_client_header_buffers</strong>表示一些比较大的请求头使用的缓冲区数量和大小，默认一个缓冲区大小为操作系统中分页文件大小，通常是4k或8k，请求字段不能大于一个缓冲区大小，如果客户端发送一个比较大的头，nginx将返回”Request URI too large” (414)，请求的头部最长字段不能大于一个缓冲区，否则服务器将返回”Bad request” (400)</p>
<p>同时需要修改几个超时时间的配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">client_body_timeout   10;</span><br><span class="line">client_header_timeout 10;</span><br><span class="line">keepalive_timeout     5 5;</span><br><span class="line">send_timeout          10;</span><br></pre></td></tr></table></figure>

<p><strong>client_body_timeout：</strong>表示读取请求body的超时时间，如果连接超过这个时间而客户端没有任何响应，Nginx将返回”Request time out” (408)错误</p>
<p><strong>client_header_timeout：</strong>表示读取客户端请求头的超时时间，如果连接超过这个时间而客户端没有任何响应，Nginx将返回”Request time out” (408)错误</p>
<p><strong>keepalive_timeout：</strong>参数的第一个值表示客户端与服务器长连接的超时时间，超过这个时间，服务器将关闭连接，可选的第二个参数参数表示Response头中Keep-Alive: timeout=time的time值，这个值可以使一些浏览器知道什么时候关闭连接，以便服务器不用重复关闭，如果不指定这个参数，nginx不会在应Response头中发送Keep-Alive信息</p>
<p><strong>send_timeout：</strong>表示发送给客户端应答后的超时时间，Timeout是指没有进入完整established状态，只完成了两次握手，如果超过这个时间客户端没有任何响应，nginx将关闭连接</p>
<h3 id="Header头设置"><a href="#Header头设置" class="headerlink" title="Header头设置"></a>Header头设置</h3><p>通过以下设置可有效防止XSS攻击</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class="line">add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">add_header X-Content-Type-Options &quot;nosniff&quot;;</span><br></pre></td></tr></table></figure>

<p><strong>X-Frame-Options：</strong>响应头表示是否允许浏览器加载frame等属性，有三个配置<code>DENY</code>禁止任何网页被嵌入,<code>SAMEORIGIN</code>只允许本网站的嵌套,<code>ALLOW-FROM</code>允许指定地址的嵌套</p>
<p><strong>X-XSS-Protection：</strong>表示启用XSS过滤（禁用过滤为<code>X-XSS-Protection: 0</code>），<code>mode=block</code>表示若检查到XSS攻击则停止渲染页面</p>
<p><strong>X-Content-Type-Options：</strong>响应头用来指定浏览器对未指定或错误指定<code>Content-Type</code>资源真正类型的猜测行为，nosniff 表示不允许任何猜测</p>
<p>在通常的请求响应中，浏览器会根据<code>Content-Type</code>来分辨响应的类型，但当响应类型未指定或错误指定时，浏览会尝试启用MIME-sniffing来猜测资源的响应类型，这是非常危险的</p>
<p>例如一个.jpg的图片文件被恶意嵌入了可执行的js代码，在开启资源类型猜测的情况下，浏览器将执行嵌入的js代码，可能会有意想不到的后果</p>
<p>另外还有几个关于请求头的安全配置需要注意</p>
<p><strong>Content-Security-Policy：</strong>定义页面可以加载哪些资源，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add_header Content-Security-Policy &quot;default-src &#x27;self&#x27;&quot;;</span><br></pre></td></tr></table></figure>

<p>上边的配置会限制所有的外部资源，都只能从当前域名加载，其中<code>default-src</code>定义针对所有类型资源的默认加载策略，<code>self</code>允许来自相同来源的内容</p>
<p><strong>Strict-Transport-Security：</strong>会告诉浏览器用HTTPS协议代替HTTP来访问目标站点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot;;</span><br></pre></td></tr></table></figure>

<p>上边的配置表示当用户第一次访问后，会返回一个包含了<code>Strict-Transport-Security</code>响应头的字段，这个字段会告诉浏览器，在接下来的31536000秒内，当前网站的所有请求都使用https协议访问，参数<code>includeSubDomains</code>是可选的，表示所有子域名也将采用同样的规则</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL升级后导致libcrypt.so.10和libssl.so.10找不到的解决</title>
    <url>/1710/</url>
    <content><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>机器因为安全需要，对OpenSSL进行了升级，通过openssl version可以查看版本为1.1，执行curl提示libcrypto.so.10库不匹配。</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>OpenSSL是Linux的基础库，升级会带来不少问题，比如：weg, curl提示找不到libcrypt.so.10和libssl.so.10库</p>
<h3 id="通过资料分析："><a href="#通过资料分析：" class="headerlink" title="通过资料分析："></a>通过资料分析：</h3><p>这个问题就是因为升级OpenSSL导致的，新版本的SSL把1.1版本的库替换了老的1.0库，导致老的程序不兼容。因此需要让老程序也可以继续工作，不至于全部升级一遍。</p>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>从本机或者其他机器上找到libcrypt.so.1.0和libssl.so.1.0文件，复制到问题机器的/lib64目录，在创建1.0版本的符号链接。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在具有正常1.0版本的同版本机器：</span></span><br><span class="line">scp libcrypto.so.1.0.2k &lt;目标机器&gt;/lib64/</span><br><span class="line">scp libssl.so.1.0.2k &lt;目标机器&gt;/lib64/</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在问题机器上恢复链接</span></span><br><span class="line">cd /lib64/</span><br><span class="line">ls -l libcrypto.*</span><br><span class="line">ln -sf libssl.so.1.0.2k libssl.so.10</span><br><span class="line">ln -sf libcrypto.so.1.0.2k libcrypto.so.10</span><br></pre></td></tr></table></figure>

<p>通过ldd /usr/bin/curl 可以看到程序链接的位置，在通过符号链接来解决。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>Linux</tag>
        <tag>libcrypt</tag>
        <tag>libssl</tag>
        <tag>ssl</tag>
      </tags>
  </entry>
  <entry>
    <title>ORA-21561 OID generation failed解决</title>
    <url>/1189/</url>
    <content><![CDATA[<p>今天办离职，可能是在公司划水的一天了。</p>
<hr>
<p>最近一直在干运维的事情，越来越像自己是打杂的了。</p>
<p>好了直入吧。</p>
<p>最近linux安装完sqlplus之后，使用sqlplus登录是发现一则这个问题：ORA-21561: OID generation failed。</p>
<p>因为是项目组新的机器，然后我首先看能不能ping通数据库ip。</p>
<p>没问题，然后想了下，可能是hosts没配置或者是没配对hostname?</p>
<p>cat /etc/hosts 看下，不出其然，是hostname没有配上，还是全新的hosts，</p>
<p>然后修改hosts,保持hostname与hosts文件中127.0.0.1对应的名称一致即可！</p>
<p>然后再试下，问题解决，ojbk.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>oracle</tag>
        <tag>sqlplus</tag>
      </tags>
  </entry>
  <entry>
    <title>ORACLE 两表关联更新</title>
    <url>/992/</url>
    <content><![CDATA[<p>今天下午有一个需求，就是需要把B表中一个字段的值，更新到A表上。</p>
<p>在网上找了很多轮子都不行。</p>
<p>于是傻乎乎的用了这种办法可以了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE IOT_HAL_RSLT_DAY a </span><br><span class="line">SET a.TCP_ALL_UN = (select b.iot_imei_num from TEMP_IOT_TCP_ALL_VN3 b </span><br><span class="line">where a.mfr_nam_id = b.mfr_nam_id and a.stat_date = to_date(b.stat_date,&#x27;yyyymmdd&#x27;))</span><br><span class="line">WHERE EXISTS(SELECT 1 FROM TEMP_IOT_TCP_ALL_VN3 b</span><br><span class="line">WHERE a.mfr_nam_id = b.mfr_nam_id and a.stat_date = to_date(b.stat_date,&#x27;yyyymmdd&#x27;))</span><br></pre></td></tr></table></figure>

<p>记录完毕。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>oracle设置id自增sql</title>
    <url>/951/</url>
    <content><![CDATA[<p>记录自己的步骤…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---创建SEQUENCE实现自增长，SEQUENCE的命名规范(重要)：表名_SEQ</span><br><span class="line">CREATE SEQUENCE IOT_BASE_CM_SEQ  </span><br><span class="line">MINVALUE 1  </span><br><span class="line">MAXVALUE 99999999</span><br><span class="line">START WITH 1  </span><br><span class="line">INCREMENT BY 1;</span><br><span class="line"></span><br><span class="line">-- 创建INSERT操作创建触发器，命名规范（重要）：名称为表名_TRG</span><br><span class="line">CREATE OR REPLACE TRIGGER IOT_BASE_CM_TRG BEFORE INSERT ON IOT_BASE_CM/*源表*/ FOR EACH ROW WHEN(NEW.ID IS NULL)</span><br><span class="line">BEGIN</span><br><span class="line">  /** </span><br><span class="line">  1、(TO_CHAR(IOT_base_INDUSTRY_SEQ.NEXTVAL),4,&#x27;0&#x27;) 中的4指4位数字，不足4位前面补充0,</span><br><span class="line">  2、IOT_base_INDUSTRY_SEQ.NEXTVAL是具体表的序列，需要根据实际修改（重要）</span><br><span class="line">  */</span><br><span class="line">SELECT LPAD(TO_CHAR(IOT_BASE_CM_SEQ.NEXTVAL),8,&#x27;0&#x27;) INTO :NEW.ID FROM DUAL;</span><br><span class="line">END;</span><br><span class="line">--查看当前序列</span><br><span class="line">SELECT IOT_BASE_CM_SEQ.CURRVAL FROM DUAL;</span><br><span class="line">--查看下一个序列</span><br><span class="line">SELECT IOT_BASE_CM_SEQ.NEXTVAL FROM DUAL;</span><br><span class="line"></span><br><span class="line">例子:</span><br><span class="line">步骤一：</span><br><span class="line">CREATE SEQUENCE IOT_TAKE_OPER_LOGS_SEQ  </span><br><span class="line">MINVALUE 1  </span><br><span class="line">MAXVALUE 99999999</span><br><span class="line">START WITH 1  </span><br><span class="line">INCREMENT BY 1;</span><br><span class="line">步骤二;</span><br><span class="line">CREATE OR REPLACE TRIGGER IOT_TAKE_OPER_LOGS_TRG </span><br><span class="line">BEFORE INSERT ON IOT_TAKE_OPER_LOGS/*原表名称*/ FOR EACH ROW WHEN(NEW.LOGID IS NULL)</span><br><span class="line">BEGIN</span><br><span class="line">SELECT IOT_TAKE_OPER_LOGS_SEQ.NEXTVAL INTO :NEW.LOGID FROM DUAL;</span><br><span class="line">END;</span><br><span class="line">--查看当前序列</span><br><span class="line">SELECT IOT_TAKE_OPER_LOGS_SEQ.CURRVAL FROM DUAL;</span><br><span class="line">--查看下一个序列</span><br><span class="line">SELECT IOT_TAKE_OPER_LOGS_SEQ.NEXTVAL FROM DUAL;</span><br><span class="line">ps：</span><br><span class="line">Oracle刚创建完序列后用currval查询不了当前值的，得先用nextval查询过后才能进行currval的查询。</span><br><span class="line">不然报ORA-08002错误：序列 XXXX.CURRVAL 尚未在此会话中定义</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>over...</title>
    <url>/562/</url>
    <content><![CDATA[<p><img src="http://qn.199604.com/typoraImg/292405134037248759-768x1024.jpg"></p>
<hr>
<p>我想过</p>
<p>我们会无话不谈甚至到无甚可谈…</p>
<p>东渡到偏爱的岛屿</p>
<p>找一家僻静雅致的餐厅</p>
<p>一起消磨到深夜</p>
<p>一个久经世事却依旧清谈甜美的笑容</p>
<p>能让我丝毫不去想念从前也不考虑的未来</p>
<p>慢慢的发现</p>
<p>世上最美的符号</p>
<p>也只是…</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>5.7</tag>
        <tag>over</tag>
      </tags>
  </entry>
  <entry>
    <title>photoshop-多张图片合并一张</title>
    <url>/34/</url>
    <content><![CDATA[<p>今天下午上的那个Photoshop的课，没有听老师说啥，因为我自己都在钓鱼，因为今天非常非常的累！ 好了还是切入正题吧，为了制定这样的照片要求如下： 第一，每张相片的背景一定要完全一样。 第二，因为每张相片的亮度必须一致，所以曝光模式一定要用手动模式。</p>
<h3 id="步骤如下："><a href="#步骤如下：" class="headerlink" title="步骤如下："></a>步骤如下：</h3><p>1. 将下面相片全部汇入Photoshop。 <img src="http://qn.199604.com/photoshop--01.jpg"> <a href="http://qn.199604.com/photoshop--02.jpg"><img src="http://qn.199604.com/photoshop--02.jpg"></a> 2.你就看到我的效果图了 <img src="http://qn.199604.com/photoshop-1.jpg"> 哈哈哈哈哈啊哈哈哈哈哈哈，你给骗了。这么容易的我写步骤出来会给人喷的。 不行这个梗我是接不上去了的。 好了，睡觉去了晚安各位！！</p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>postgreSQL之raise用法</title>
    <url>/1339/</url>
    <content><![CDATA[<h2 id="postgreSQL之raise用法"><a href="#postgreSQL之raise用法" class="headerlink" title="postgreSQL之raise用法"></a>postgreSQL之raise用法</h2><p>以下是自己结合postgreSQL文档手册总结整理的入门手札，如有不严谨，请到官方文档手册查看：<a href="http://www.postgres.cn/docs/10/index.html">http://www.postgres.cn/docs/10/index.html</a></p>
<h4 id="raise函数"><a href="#raise函数" class="headerlink" title="raise函数"></a>raise函数</h4><p>在PostgreSQL中，该函数用于打印字符串，类似于Java中的System.out.println()，Oracle中的dbms_output.put_line()。</p>
<p>用法实例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">raise notice &#x27;My name is %, I am a %.&#x27;, &#x27;glj&#x27;, &#x27;Handsome boy&#x27;;</span><br></pre></td></tr></table></figure>
<p>以上sql会在控制台输出My name is glj, I am a Handsome boy。</p>
<p>raise后面的notice是级别，一共有debug/log/info/notice/warning/exception这些级别，可以任意指定一个级别。有些类似于Java里的日志框架，比如Log4j2之类的。</p>
<p>接着级别后面的是要输出的信息(字符串类型)，用一对单引号包括起来。这个字符串支持占位符的写法，也就是%这个字符。如果在字符串里使用了这个%，那么会自动使用字符串参数后面的参数来替换掉这里的%。有多少个占位符，就需要在第一个字符串参数后面加上多少个对应的参数。</p>
<p>演示raise的日常使用:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create or replace function raise_demo() </span><br><span class="line">	returns void as $body$</span><br><span class="line">	</span><br><span class="line">declare </span><br><span class="line">	param1 text:= &#x27;glj&#x27;;</span><br><span class="line">	param2 text:= &#x27;Handsome boy&#x27;;</span><br><span class="line">begin </span><br><span class="line">	raise notice &#x27;My name is %, I am a %.&#x27;, param1, param2;</span><br><span class="line">end;</span><br><span class="line">$body$</span><br><span class="line">LANGUAGE &#x27;plpgsql&#x27; VOLATILE </span><br><span class="line">COST 100;</span><br></pre></td></tr></table></figure>

<p>在Navicat 查询窗口中执行select raise_demo();</p>
<p>将会在输出窗口的历史区域看到如下信息：</p>
<p>– 执行查询:<br>select raise_demo();</p>
<p>如果用navicat 在信息栏可看到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SQL]select raise_demo()</span><br><span class="line"></span><br><span class="line">NOTICE:  My name is glj, I am a Handsome boy.</span><br><span class="line">CONTEXT:  PL/pgSQL function raise_demo() line 7 at RAISE</span><br></pre></td></tr></table></figure>

<hr>
<p>码字不易要不打个赏?–&gt;郭良俊博客：<a href="https://199604.com/">https://199604.com/</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>pg</tag>
        <tag>pgsql</tag>
        <tag>raise</tag>
      </tags>
  </entry>
  <entry>
    <title>postgreSQL之存储过程</title>
    <url>/1351/</url>
    <content><![CDATA[<h2 id="postgreSQL之存储过程"><a href="#postgreSQL之存储过程" class="headerlink" title="postgreSQL之存储过程"></a>postgreSQL之存储过程</h2><p>以下是自己结合postgreSQL文档手册总结整理的入门手札，如有不严谨，请到官方文档手册查看：<a href="http://www.postgres.cn/docs/10/index.html">http://www.postgres.cn/docs/10/index.html</a></p>
<hr>
<h3 id="基于SQL的存储过程"><a href="#基于SQL的存储过程" class="headerlink" title="基于SQL的存储过程"></a>基于SQL的存储过程</h3><h5 id="什么是sql函数"><a href="#什么是sql函数" class="headerlink" title="什么是sql函数?"></a>什么是sql函数?</h5><ol>
<li>SQL函数包体是一些可执行的SQL语言。同时包含1条以上的查询，但是函数只返回最后一个查询(必须是SELECT)的结果。</li>
<li>简单情况下，返回最后一条查询结果的第一行。</li>
<li>如果最后一个查询正好根本不返回行，将会返回空值。</li>
<li>除非SQL函数声明为返回void，否则最后一条语句必须是SELECT</li>
<li>如果需要该函数返回最后一条SELECT语句的所有行，可以将函数的返回值定义为集合，即SETOF sometype，或者等效地声明它为RETURNS TABLE(columns)</li>
</ol>
<p>创建sql函数，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION function_name([ [ argmode ] [ argname ] argtype [ &#123; DEFAULT | = &#125; default_expr ] [, ...] ])</span><br><span class="line">[RETURNS rettype]</span><br><span class="line">AS $$</span><br><span class="line">    $BODY$;</span><br><span class="line">$$ LANGUAGE SQL;</span><br></pre></td></tr></table></figure>
<p>接下来用一个例子，如最简单的SQL函数没有参数并且简单地返回一个基本类型：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE or replace FUNCTION one() </span><br><span class="line">	RETURNS  integer AS </span><br><span class="line">$body$</span><br><span class="line">    SELECT 1;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br><span class="line">----------</span><br><span class="line">select one();</span><br><span class="line">------</span><br><span class="line">one</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>如创建一个add函数，返回两者的入参值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE or replace FUNCTION add(a integer,b integer) </span><br><span class="line">	RETURNS  integer AS </span><br><span class="line">$body$</span><br><span class="line">    SELECT a+b;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br><span class="line">------</span><br><span class="line">select add(1,2)</span><br><span class="line">----</span><br><span class="line">add</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
<p>还有另外一种方式，即能省掉参数名而使用数字$n,$n这样的标识符来使用参数,如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE or replace FUNCTION add(a integer,b integer) </span><br><span class="line">	RETURNS  integer AS </span><br><span class="line">$body$</span><br><span class="line">    SELECT $1+$2;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br></pre></td></tr></table></figure>
<p>但个人觉得这种方式不怎么友好，就是可读性鸡巴的差~</p>
<p>上面的两个例子，都是只有入参，而没出参，接下来这个例子将同时包含输入参数和输出参数;由于存在输出参数；==这里不需要returns部分==，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION add1(in a integer, in b integer,out c integer)</span><br><span class="line">AS $body$</span><br><span class="line">    SELECT a+b;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br><span class="line">-----------------</span><br><span class="line">select add1(1,2);</span><br><span class="line">---------------</span><br><span class="line">add1</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
<p>还记得之前sql函数的介绍吗?sql函数包体是一些可执行的SQL语言。同时包含1条以上的查询，但是函数只返回最后一个查询(必须是SELECT)的结果。所以，在sql函数包体中，不一定是SELECT语句，可以是其它任意合法的SQL。但最后一条SQL必须是SELECT语句并且该SQL的结果将作为该函数的输出结果。接下来就做一个测试，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION add2(in a integer, in b integer,out c integer,out d integer)</span><br><span class="line">AS </span><br><span class="line">$body$</span><br><span class="line">	SELECT a+b,a*b;</span><br><span class="line">	delete from test_array where id =1;</span><br><span class="line">	SELECT a+b+a,a*b*a;</span><br><span class="line">		</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br><span class="line">--------</span><br><span class="line">select * from add2(1,2);</span><br><span class="line">---------</span><br><span class="line">c	d</span><br><span class="line">4	2</span><br></pre></td></tr></table></figure>
<p>继续上面的sql函数介绍–&gt;除非SQL函数声明为返回void，否则最后一条语句必须是SELECT,接下来我这边就直接返回void，所以就可以没有select，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION delete_array(id integer)</span><br><span class="line">RETURNS void AS </span><br><span class="line">$body$</span><br><span class="line">	delete from test_array where id =id;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br></pre></td></tr></table></figure>
<p>还有就是，当一个表里面含有多条记录咋办呢?带着疑问看例子吧骚年:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION select_array_er()</span><br><span class="line">RETURNS integer AS </span><br><span class="line">$body$</span><br><span class="line">	select id from test_array_er;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br><span class="line">------</span><br><span class="line">select  select_array_er();//我这边id就只有两条，1和2</span><br><span class="line">-------</span><br><span class="line">select_array_er</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p>所以，实践的真理告诉我们，是返回最后结果行。<br>等等，你肯定会问，那么我要返回所有id怎么弄?来，叔叔带你去看金鱼：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION select_array_er2()</span><br><span class="line">RETURNS setof INTEGER AS </span><br><span class="line">$body$</span><br><span class="line">	select id from test_array_er;</span><br><span class="line">$body$ </span><br><span class="line">LANGUAGE SQL;</span><br><span class="line">-----</span><br><span class="line">select  select_array_er2();</span><br><span class="line">-----</span><br><span class="line">select_array_er2</span><br><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>所以，如果需要返回该函数最后一条SELECT语句的所有行，可以将函数的返回值定义为集合，即SETOF sometype。</p>
<hr>
<h3 id="基于PL-PgSQL的存储过程"><a href="#基于PL-PgSQL的存储过程" class="headerlink" title="基于PL/PgSQL的存储过程"></a>基于PL/PgSQL的存储过程</h3><p>PL/pgSQL是一种用于PostgreSQL数据库系统的可载入的过程语言。PL/pgSQL的设计目标是创建一种这样的可载入过程语言：</p>
<ul>
<li>可以被用来创建函数和触发器过程</li>
<li>对SQL语言增加控制结构</li>
<li>可以执行复杂计算</li>
<li>继承所有用户定义类型、函数和操作符</li>
<li>可以被定义为受服务器信任</li>
<li>便于使用</li>
</ul>
<h5 id="PL-PgSQL的存储过程的块结构"><a href="#PL-PgSQL的存储过程的块结构" class="headerlink" title="PL/PgSQL的存储过程的块结构"></a>PL/PgSQL的存储过程的块结构</h5><p>PL/pgSQL是一个块结构语言。函数定义的所有文本都必须是一个块。<br>一个块用下面的方法定义：</p>
<ul>
<li>PL/pgSQL程序由三个部分组成，即：<ul>
<li>声明部分</li>
<li>执行部分</li>
<li>异常处理部分 </li>
</ul>
</li>
</ul>
<p>PL/pgSQ结构如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ &lt;&lt;label&gt;&gt; ]</span><br><span class="line">[ DECLARE</span><br><span class="line">    declarations ]</span><br><span class="line">    --声明部分: 在此声明PL/SQL用到的变量,类型及游标.</span><br><span class="line">BEGIN</span><br><span class="line">    statements</span><br><span class="line">    -- 执行部分:  过程及SQL语句,即程序的主要部分</span><br><span class="line">EXCEPTION</span><br><span class="line">   -- 执行异常部分: 错误处理    </span><br><span class="line">END [ label ];</span><br></pre></td></tr></table></figure>
<p>在一个块中的每一个声明和每一个语句都由一个分号终止。如上所示，出现在另一个块中的块必须有一个分号在END之后。不过最后一个结束函数体的END不需要一个分号。</p>
<h5 id="PL-PgSQL的存储过程的变量声明"><a href="#PL-PgSQL的存储过程的变量声明" class="headerlink" title="PL/PgSQL的存储过程的变量声明"></a>PL/PgSQL的存储过程的变量声明</h5><p>变量声明的一般语法是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name [ CONSTANT ] type [ COLLATE collation_name ] [ NOT NULL ] [ &#123; DEFAULT | := | = &#125; expression ];</span><br></pre></td></tr></table></figure>
<p>PL/pgSQL变量可以是任意 SQL 数据类型，例如integer、varchar和char。</p>
<p>这跟oracle中的存储过程声明变量是一样的 例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user_id integer;</span><br><span class="line">quantity numeric(5);</span><br><span class="line">url varchar;</span><br><span class="line">myrow tablename%ROWTYPE;--行类型</span><br><span class="line">myfield tablename.columnname%TYPE;--复制类型</span><br><span class="line">arow RECORD;--记录类型</span><br></pre></td></tr></table></figure>
<h5 id="PL-PgSQL的存储过程的参数"><a href="#PL-PgSQL的存储过程的参数" class="headerlink" title="PL/PgSQL的存储过程的参数"></a>PL/PgSQL的存储过程的参数</h5><p>声明一个参数的语法如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name [in|out|in out] type</span><br></pre></td></tr></table></figure>
<p>如果只指定输入参数类型，不指定参数名，则函数体里一般用$1，$n这样的标识符来使用参数。如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION demo(NUMERIC)</span><br><span class="line">RETURNS NUMERIC</span><br><span class="line">AS $$</span><br><span class="line">BEGIN</span><br><span class="line">    RETURN $1 * 0.8;</span><br><span class="line">END;</span><br><span class="line">$$ </span><br><span class="line">LANGUAGE PLPGSQL;</span><br></pre></td></tr></table></figure>
<p>但该方法可读性不好,最后还是在声明参数类型时同时声明相应的参数名，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION demo(total NUMERIC)</span><br><span class="line">RETURNS NUMERIC</span><br><span class="line">AS $$</span><br><span class="line">BEGIN</span><br><span class="line">    RETURN total * 0.8;</span><br><span class="line">END;</span><br><span class="line">$$ </span><br><span class="line">LANGUAGE PLPGSQL;</span><br></pre></td></tr></table></figure>

<h5 id="PL-PgSQL的存储过程的注释"><a href="#PL-PgSQL的存储过程的注释" class="headerlink" title="PL/PgSQL的存储过程的注释"></a>PL/PgSQL的存储过程的注释</h5><p>在PL/SQL里，可以使用两种符号来写注释，即：</p>
<ol>
<li>第一种是使用 双-(双减号)它的作用范围是只能在一行有效(类似java 单行注释//)</li>
<li>第二种就是一行或多行注释，使用的是/* */表示</li>
</ol>
<h5 id="简单的一个PL-PgSQL的存储过程例子"><a href="#简单的一个PL-PgSQL的存储过程例子" class="headerlink" title="简单的一个PL/PgSQL的存储过程例子"></a>简单的一个PL/PgSQL的存储过程例子</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE OR REPLACE FUNCTION somefunc() </span><br><span class="line">	RETURNS integer AS $body$</span><br><span class="line">DECLARE</span><br><span class="line">    somenum integer := 30;</span><br><span class="line">BEGIN</span><br><span class="line">    -- 这是单行注释</span><br><span class="line">    RAISE NOTICE &#x27;这是一条提示语 %&#x27;, somenum;</span><br><span class="line">    somenum := 50;</span><br><span class="line">	/*</span><br><span class="line">		这是多行注释</span><br><span class="line">	*/</span><br><span class="line">    RAISE NOTICE &#x27;somenum here is %&#x27;, somenum;</span><br><span class="line">    RETURN somenum;</span><br><span class="line">	--错误捕获</span><br><span class="line">	EXCEPTION</span><br><span class="line">		WHEN others THEN    </span><br><span class="line">		RAISE EXCEPTION &#x27;(%)&#x27;, SQLERRM;</span><br><span class="line">END;</span><br><span class="line">$body$</span><br><span class="line">LANGUAGE plpgsql;</span><br></pre></td></tr></table></figure>
<h5 id="PL-PgSQL的存储过程的异常错误处理"><a href="#PL-PgSQL的存储过程的异常错误处理" class="headerlink" title="PL/PgSQL的存储过程的异常错误处理"></a>PL/PgSQL的存储过程的异常错误处理</h5><p>在上面例子，其实已经有了处理异常错误的语句了。具体它是干嘛的呢?</p>
<p>其实阿，在PL/pgSQL函数中，如果没有异常捕获，函数会在发生错误时直接退出，与其相关的事物也会随之回滚。我们可以通过使用带有EXCEPTION子句的BEGIN块来捕获异常并使其从中恢复。见如下声明形式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ &lt;&gt; ]</span><br><span class="line">CREATE OR REPLACE FUNCTION function_name([ [ argmode ] [ argname ] argtype [ &#123; DEFAULT | = &#125; default_expr ] [, ...] ])</span><br><span class="line">[RETURNS rettype]</span><br><span class="line">[ DECLARE</span><br><span class="line">    declarations ]</span><br><span class="line">BEGIN</span><br><span class="line">    statements</span><br><span class="line">EXCEPTION</span><br><span class="line">　　WHEN condition [ OR condition ... ] THEN</span><br><span class="line">            handler_statements</span><br><span class="line">　　WHEN condition [ OR condition ... ] THEN</span><br><span class="line">　　       handler_statements</span><br><span class="line">END;   </span><br></pre></td></tr></table></figure>
<p>如果没有错误发生，只有BEGIN块中的statements会被正常执行，然而一旦这些语句中有任意一条发生错误，其后的语句都将被跳过，直接跳转到 EXCEPTION块的开始处。此时系统将搜索异常条件列表，寻找匹配该异常的第一个条件，如果找到匹配，则执行相应的 handler_statements，之后再执行END的下一条语句。如果没有找到匹配，该错误就会被继续向外抛出，其结果与没有EXCEPTION子 句完全等同。如果此时handler_statements中的语句发生新错误，它将不能被该EXCEPTION子句捕获，而是继续向外传播，交由其外层 的EXCEPTION子句捕获并处理。</p>
<p>在PostgreSQL中可以利用RAISE语句报告信息和抛出错误，其声明形式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RAISE level &#x27;format&#x27; [, expression [, ...]];</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">raise notice &#x27;My name is %, I am a %.&#x27;, &#x27;glj&#x27;, &#x27;Handsome boy&#x27;;</span><br></pre></td></tr></table></figure>
<p>更多可到：<a href="https://199604.com/1339">https://199604.com/1339</a> 查看</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>存储过程</tag>
      </tags>
  </entry>
  <entry>
    <title>postgreSQL之开窗函数用法</title>
    <url>/1335/</url>
    <content><![CDATA[<h2 id="postgreSQL之开窗函数用法"><a href="#postgreSQL之开窗函数用法" class="headerlink" title="postgreSQL之开窗函数用法"></a>postgreSQL之开窗函数用法</h2><p>以下是自己结合postgreSQL文档手册总结整理的入门手札，如有不严谨，请到官方文档手册查看：<a href="http://www.postgres.cn/docs/10/index.html">http://www.postgres.cn/docs/10/index.html</a></p>
<hr>
<h3 id="开窗函数语法相关"><a href="#开窗函数语法相关" class="headerlink" title="开窗函数语法相关"></a>开窗函数语法相关</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;窗口函数&gt;</span><br><span class="line">OVER (PARTITION BY &lt;列清单&gt; ORDER BY &lt;排序用列清单&gt;)</span><br></pre></td></tr></table></figure>
<p>1.over 表示窗口函数关键字</p>
<p>2.partition by 对查询返回的结果集进行分组</p>
<p>3.order by 设定结果集的分组数据排序</p>
<hr>
<h4 id="可作为窗口函数的函数分类"><a href="#可作为窗口函数的函数分类" class="headerlink" title="可作为窗口函数的函数分类"></a>可作为窗口函数的函数分类</h4><p>1.聚合函数：<br>SUM、AVG、COUNT、MAX、MIN</p>
<p>2.内置函数：RANK、DENSE_RANK、ROW_NUMBER 等专用窗口函数</p>
<hr>
<h5 id="avg-over"><a href="#avg-over" class="headerlink" title="avg() over()"></a>avg() over()</h5><p>演示avg()聚合函数后接over属性的窗口函数，此窗口函数用来计算分组后数据的平均值。</p>
<p>先创建一张成绩表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE score_demo (</span><br><span class="line">	id serial PRIMARY KEY,</span><br><span class="line">	subject character varying(32),</span><br><span class="line">	stu_name character varying(32),</span><br><span class="line">	score numeric(3, 0)</span><br><span class="line">);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;Chinese&#x27;, &#x27;francs&#x27;, 70);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;Chinese&#x27;, &#x27;matiler&#x27;, 70);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;Chinese&#x27;, &#x27;tutu&#x27;, 80);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;English&#x27;, &#x27;matiler&#x27;, 75);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;English&#x27;, &#x27;francs&#x27;, 90);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;English&#x27;, &#x27;tutu&#x27;, 60);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;Math&#x27;, &#x27;francs&#x27;, 80);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;Math&#x27;, &#x27;matiler&#x27;, 99);</span><br><span class="line">INSERT INTO score_demo (subject, stu_name, score)</span><br><span class="line">VALUES (&#x27;Math&#x27;, &#x27;tutu&#x27;, 65);</span><br></pre></td></tr></table></figure>
<p>查询每名学生学习成绩并且显示课程的平均分。请问我自己会怎么做呢?如果是不用窗口函数先做的话，我能想到是这样：<br>1.先计算出课程的平均分。<br>2.然后用成绩表与平均分表关联<br>如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select d.subject,d.stu_name,d.score,&quot;temp&quot;.avg_score from score_demo d</span><br><span class="line">LEFT JOIN (</span><br><span class="line">	select subject,avg(score) avg_score from score_demo </span><br><span class="line">	group by subject</span><br><span class="line">) temp on d.subject = temp.subject</span><br><span class="line">-----</span><br><span class="line">subject	stu_name	score	avg_score</span><br><span class="line">Chinese	francs	70	73.3333333333333</span><br><span class="line">Chinese	matiler	70	73.3333333333333</span><br><span class="line">Chinese	tutu	80	73.3333333333333</span><br><span class="line">English	matiler	75	75</span><br><span class="line">English	francs	90	75</span><br><span class="line">English	tutu	60	75</span><br><span class="line">Math	francs	80	81.3333333333333</span><br><span class="line">Math	matiler	99	81.3333333333333</span><br><span class="line">Math	tutu	65	81.3333333333333</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>而使用窗口函数，基本上一句搞掂:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select subject,stu_name,score,avg(score)over(partition by subject) from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">subject	stu_name	score	avg</span><br><span class="line">Chinese	francs	70	73.3333333333333</span><br><span class="line">Chinese	matiler	70	73.3333333333333</span><br><span class="line">Chinese	tutu	80	73.3333333333333</span><br><span class="line">English	matiler	75	75</span><br><span class="line">English	francs	90	75</span><br><span class="line">English	tutu	60	75</span><br><span class="line">Math	francs	80	81.3333333333333</span><br><span class="line">Math	matiler	99	81.3333333333333</span><br><span class="line">Math	tutu	65	81.3333333333333</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="sum-over"><a href="#sum-over" class="headerlink" title="sum() over()"></a>sum() over()</h5><p>演示sum()聚合函数后接over属性的窗口函数，此窗口函数用来计算分组后数据的总分值</p>
<p>例如：查询每名学生学习成绩并且显示课程的总分</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select subject,stu_name,score,sum(score)over(partition by subject) from score_demo</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">subject	stu_name	score	sum</span><br><span class="line">Chinese	francs	70	220</span><br><span class="line">Chinese	matiler	70	220</span><br><span class="line">Chinese	tutu	80	220</span><br><span class="line">English	matiler	75	225</span><br><span class="line">English	francs	90	225</span><br><span class="line">English	tutu	60	225</span><br><span class="line">Math	francs	80	244</span><br><span class="line">Math	matiler	99	244</span><br><span class="line">Math	tutu	65	244</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="count-over"><a href="#count-over" class="headerlink" title="count() over()"></a>count() over()</h5><p>演示count()聚合函数后接over属性的窗口函数，此窗口函数用来计算分组后数据的总条数值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select subject,stu_name,score,COUNT(score)over(partition by subject) from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">subject	stu_name	score	count</span><br><span class="line">Chinese	francs	70	3</span><br><span class="line">Chinese	matiler	70	3</span><br><span class="line">Chinese	tutu	80	3</span><br><span class="line">English	matiler	75	3</span><br><span class="line">English	francs	90	3</span><br><span class="line">English	tutu	60	3</span><br><span class="line">Math	francs	80	3</span><br><span class="line">Math	matiler	99	3</span><br><span class="line">Math	tutu	65	3</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="max-over"><a href="#max-over" class="headerlink" title="max() over()"></a>max() over()</h5><p>演示max()聚合函数后接over属性的窗口函数，此窗口函数用来计算分组后数据的最大值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select subject,stu_name,score,MAX(score)over(partition by subject) from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">subject	stu_name	score	max</span><br><span class="line">Chinese	francs	70	80</span><br><span class="line">Chinese	matiler	70	80</span><br><span class="line">Chinese	tutu	80	80</span><br><span class="line">English	matiler	75	90</span><br><span class="line">English	francs	90	90</span><br><span class="line">English	tutu	60	90</span><br><span class="line">Math	francs	80	99</span><br><span class="line">Math	matiler	99	99</span><br><span class="line">Math	tutu	65	99</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="min-over"><a href="#min-over" class="headerlink" title="min() over()"></a>min() over()</h5><p>演示min()聚合函数后接over属性的窗口函数，此窗口函数用来计算分组后数据的最小值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select subject,stu_name,score,min(score)over(partition by subject) from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">subject	stu_name	score	min</span><br><span class="line">Chinese	francs	70	70</span><br><span class="line">Chinese	matiler	70	70</span><br><span class="line">Chinese	tutu	80	70</span><br><span class="line">English	matiler	75	60</span><br><span class="line">English	francs	90	60</span><br><span class="line">English	tutu	60	60</span><br><span class="line">Math	francs	80	65</span><br><span class="line">Math	matiler	99	65</span><br><span class="line">Math	tutu	65	65</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="row-number"><a href="#row-number" class="headerlink" title="row_number()"></a>row_number()</h5><p>row_number()窗口函数对结果集分组后的数据标注行号，从1开始的..</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select row_number() over(partition by subject order by score desc),* from score_demo</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line">row_number	id	subject	stu_name	score</span><br><span class="line">1	3	Chinese	tutu	80</span><br><span class="line">2	1	Chinese	francs	70</span><br><span class="line">3	2	Chinese	matiler	70</span><br><span class="line">1	5	English	francs	90</span><br><span class="line">2	4	English	matiler	75</span><br><span class="line">3	6	English	tutu	60</span><br><span class="line">1	8	Math	matiler	99</span><br><span class="line">2	7	Math	francs	80</span><br><span class="line">3	9	Math	tutu	65</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>如果不指定partition属性，row_number()就类似于oracle的rownum记录所有行号。如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select row_number() over(order by id) rownum,* from score_demo</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line">1	1	Chinese	francs	70</span><br><span class="line">2	2	Chinese	matiler	70</span><br><span class="line">3	3	Chinese	tutu	80</span><br><span class="line">4	4	English	matiler	75</span><br><span class="line">5	5	English	francs	90</span><br><span class="line">6	6	English	tutu	60</span><br><span class="line">7	7	Math	francs	80</span><br><span class="line">8	8	Math	matiler	99</span><br><span class="line">9	9	Math	tutu	65</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="rank"><a href="#rank" class="headerlink" title="rank()"></a>rank()</h5><p>rank()窗口函数和row_number()函数类似，<br>主要区分为当组内某行字段值相同，行号重复并且行号产生间隙，如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select rank() over(partition by subject order by score) ,* from score_demo</span><br><span class="line"></span><br><span class="line">-----</span><br><span class="line"></span><br><span class="line">rank	id	subject	stu_name	score</span><br><span class="line">1	2	Chinese	matiler	70</span><br><span class="line">1	1	Chinese	francs	70</span><br><span class="line">3	3	Chinese	tutu	80</span><br><span class="line">1	6	English	tutu	60</span><br><span class="line">2	4	English	matiler	75</span><br><span class="line">3	5	English	francs	90</span><br><span class="line">1	9	Math	tutu	65</span><br><span class="line">2	7	Math	francs	80</span><br><span class="line">3	8	Math	matiler	99</span><br></pre></td></tr></table></figure>
<p>从返回结果看到..第一二行都是1，第三行就3了，产生了间隙…</p>
<hr>
<h5 id="dense-rank"><a href="#dense-rank" class="headerlink" title="dense_rank()"></a>dense_rank()</h5><p>dese_rank()函数和rank()函数类似，主要区别为当组内某个字段值相同时，虽然行号重复，但行号不产生间隙。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select dense_rank() over(partition by subject order by score),* from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">dense_rank	id	subject	stu_name	score</span><br><span class="line">1	2	Chinese	matiler	70</span><br><span class="line">1	1	Chinese	francs	70</span><br><span class="line">2	3	Chinese	tutu	80</span><br><span class="line">1	6	English	tutu	60</span><br><span class="line">2	4	English	matiler	75</span><br><span class="line">3	5	English	francs	90</span><br><span class="line">1	9	Math	tutu	65</span><br><span class="line">2	7	Math	francs	80</span><br><span class="line">3	8	Math	matiler	99</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="percent-rank"><a href="#percent-rank" class="headerlink" title="percent_rank()"></a>percent_rank()</h5><p>percent_rank()函数：当前行的相对排名： (rank- 1) / (总行数 - 1)，得到的数在0-1之间[0,1)，<br>例如：限制序号在0~1之间(0作为第一个序)–&gt;[0,1):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select percent_rank() over(partition by subject order by score),* from score_demo</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">percent_rank	id	subject	stu_name	score</span><br><span class="line">0	2	Chinese	matiler	70</span><br><span class="line">0	1	Chinese	francs	70</span><br><span class="line">1	3	Chinese	tutu	80</span><br><span class="line">0	6	English	tutu	60</span><br><span class="line">0.5	4	English	matiler	75</span><br><span class="line">1	5	English	francs	90</span><br><span class="line">0	9	Math	tutu	65</span><br><span class="line">0.5	7	Math	francs	80</span><br><span class="line">1	8	Math	matiler	99</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="cume-dist"><a href="#cume-dist" class="headerlink" title="cume_dist()"></a>cume_dist()</h5><p>cume_dist()函数：当前行的相对排名： (当前行前面的行数 或 与当前行同等的行的行数)/(总行数)</p>
<p>注意:上面的percernt_rank()函数默认是从0开始排序的，如果需要使用相对0<del>1之间(0,1)的排名<br>例如，限制序号在0</del>1之间相对排名(0,1)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select cume_dist() over(partition by subject order by score),* from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">cume_dist	id	subject	stu_name	score</span><br><span class="line">0.666666666666667	2	Chinese	matiler	70</span><br><span class="line">0.666666666666667	1	Chinese	francs	70</span><br><span class="line">1	3	Chinese	tutu	80</span><br><span class="line">0.333333333333333	6	English	tutu	60</span><br><span class="line">0.666666666666667	4	English	matiler	75</span><br><span class="line">1	5	English	francs	90</span><br><span class="line">0.333333333333333	9	Math	tutu	65</span><br><span class="line">0.666666666666667	7	Math	francs	80</span><br><span class="line">1	8	Math	matiler	99</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="first-value"><a href="#first-value" class="headerlink" title="first_value()"></a>first_value()</h5><p>first_value()函数用来取结果集每一个分组的第一行数的字段值。如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select first_value(score) over(partition by subject ),* from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">first_value	id	subject	stu_name	score</span><br><span class="line">70	1	Chinese	francs	70</span><br><span class="line">70	2	Chinese	matiler	70</span><br><span class="line">70	3	Chinese	tutu	80</span><br><span class="line">75	4	English	matiler	75</span><br><span class="line">75	5	English	francs	90</span><br><span class="line">75	6	English	tutu	60</span><br><span class="line">80	7	Math	francs	80</span><br><span class="line">80	8	Math	matiler	99</span><br><span class="line">80	9	Math	tutu	65</span><br></pre></td></tr></table></figure>

<p>所以通过first_value()函数很容易查询到分组数据的最大值和最小值。例如查询成绩表按课程分组同时取每门课程的最高分，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select first_value(score) over(partition by subject order by score desc) max_score,* from score_demo</span><br><span class="line">----</span><br><span class="line">max_score	id	subject	stu_name	score</span><br><span class="line">80	3	Chinese	tutu	80</span><br><span class="line">80	1	Chinese	francs	70</span><br><span class="line">80	2	Chinese	matiler	70</span><br><span class="line">90	5	English	francs	90</span><br><span class="line">90	4	English	matiler	75</span><br><span class="line">90	6	English	tutu	60</span><br><span class="line">99	8	Math	matiler	99</span><br><span class="line">99	7	Math	francs	80</span><br><span class="line">99	9	Math	tutu	65</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="last-value"><a href="#last-value" class="headerlink" title="last_value()"></a>last_value()</h5><p>last_value函数用来取结果集每一个分组的最后一行数据的字段值。<br>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select last_value(score) over(partition by subject ),* from score_demo</span><br><span class="line">---</span><br><span class="line">last_value	id	subject	stu_name	score</span><br><span class="line">80	1	Chinese	francs	70</span><br><span class="line">80	2	Chinese	matiler	70</span><br><span class="line">80	3	Chinese	tutu	80</span><br><span class="line">60	4	English	matiler	75</span><br><span class="line">60	5	English	francs	90</span><br><span class="line">60	6	English	tutu	60</span><br><span class="line">65	7	Math	francs	80</span><br><span class="line">65	8	Math	matiler	99</span><br><span class="line">65	9	Math	tutu	65</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="nth-value"><a href="#nth-value" class="headerlink" title="nth_value()"></a>nth_value()</h5><p>nth_value()函数用来取结果集每一个分组的指定行数据的字段值，语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nth_value(value any,nth integer)</span><br><span class="line"></span><br><span class="line">其中：</span><br><span class="line">1.value 指定表的字段</span><br><span class="line">2.nth 指定结果集分组数据的第几行，如不存在则返回空..</span><br></pre></td></tr></table></figure>
<p>例如成绩表按课程分组后去分组的第三行分数，如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select nth_value(score,3) over(partition by subject),* from score_demo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">nth_value	id	subject	stu_name	score</span><br><span class="line">80	1	Chinese	francs	70</span><br><span class="line">80	2	Chinese	matiler	70</span><br><span class="line">80	3	Chinese	tutu	80</span><br><span class="line">60	4	English	matiler	75</span><br><span class="line">60	5	English	francs	90</span><br><span class="line">60	6	English	tutu	60</span><br><span class="line">65	7	Math	francs	80</span><br><span class="line">65	8	Math	matiler	99</span><br><span class="line">65	9	Math	tutu	65</span><br></pre></td></tr></table></figure>

<h4 id="窗口函数别名的使用"><a href="#窗口函数别名的使用" class="headerlink" title="窗口函数别名的使用"></a>窗口函数别名的使用</h4><p>如果sql中需要多次使用到窗口函数，可以使用窗口函数别名，语法如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select .. from .. WINDOW window_name as (window_definiton)</span><br></pre></td></tr></table></figure>
<p>WINDOW 属性指定表的别名为window_name,可以给over属性引用，如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">select avg(score) over(r),sum(score) over(r) ,* from score_demo WINDOW r as (PARTITION by subject)</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">avg	sum	id	subject	stu_name	score</span><br><span class="line">73.3333333333333	220	1	Chinese	francs	70</span><br><span class="line">73.3333333333333	220	2	Chinese	matiler	70</span><br><span class="line">73.3333333333333	220	3	Chinese	tutu	80</span><br><span class="line">75	225	4	English	matiler	75</span><br><span class="line">75	225	5	English	francs	90</span><br><span class="line">75	225	6	English	tutu	60</span><br><span class="line">81.3333333333333	244	7	Math	francs	80</span><br><span class="line">81.3333333333333	244	8	Math	matiler	99</span><br><span class="line">81.3333333333333	244	9	Math	tutu	65</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<p>好了<del>终于写完常用的窗口函数了</del>啊呜…要不打个赏?–&gt;郭良俊博客：<a href="https://199604.com/">https://199604.com/</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>pg</tag>
        <tag>pgsql</tag>
      </tags>
  </entry>
  <entry>
    <title>postgreSQL之类型转换</title>
    <url>/1343/</url>
    <content><![CDATA[<h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p>以下是自己结合postgreSQL文档手册总结整理的入门手札，如有不严谨，请到官方文档手册查看：<a href="http://www.postgres.cn/docs/10/index.html">http://www.postgres.cn/docs/10/index.html</a></p>
<hr>
<p>postgreSQL类型转换有三种方式：</p>
<ol>
<li>通过格式化函数</li>
<li>cast函数</li>
<li>::操作符</li>
</ol>
<hr>
<h4 id="格式化函数"><a href="#格式化函数" class="headerlink" title="格式化函数"></a>格式化函数</h4><p>postgreSQL提供了很多内置的数据类型转换函数，如：<br><img src="http://qn.199604.com/function_add_20191020224240.jpg" alt="image"></p>
<p>例子练习：<br>把时间戳转成字符串：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select to_char(current_timestamp, &#x27;HH12:MI:SS&#x27;)</span><br></pre></td></tr></table></figure>
<p>把整数转成字符串:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select to_char(77777, &#x27;99999&#x27;)</span><br></pre></td></tr></table></figure>
<p>把实数或双精度转成字符串:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select to_char(125.8::real, &#x27;999D9&#x27;)</span><br></pre></td></tr></table></figure>
<p>把字符串转成日期:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select to_date(&#x27;2019-10-20&#x27;, &#x27;YYYY-mm-dd&#x27;)</span><br></pre></td></tr></table></figure>
<h4 id="cast函数"><a href="#cast函数" class="headerlink" title="cast函数"></a>cast函数</h4><p>一个类型造型指定从一种数据类型到另一种数据类型的转换。PostgreSQL接受两种等价的类型造型语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CAST ( expression AS type )</span><br><span class="line">expression::type</span><br></pre></td></tr></table></figure>
<p>如将varchar字符类型转成text类型：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select cast(varchar&#x27;123&#x27; as text)</span><br><span class="line">----</span><br><span class="line">text</span><br><span class="line">123</span><br></pre></td></tr></table></figure>
<p>如将varchar字符类型转成int4类型：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select cast(varchar&#x27;123&#x27; as int4)</span><br><span class="line">----</span><br><span class="line">int4</span><br><span class="line">123</span><br></pre></td></tr></table></figure>
<h4 id="操作符"><a href="#操作符" class="headerlink" title="::操作符"></a>::操作符</h4><p>直接例子介绍吧，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 1::int4,5/4::numeric</span><br><span class="line">----</span><br><span class="line">int4	?column?</span><br><span class="line">1	1.25</span><br></pre></td></tr></table></figure>

<p>如果想了解更多，可到：<a href="http://www.postgres.cn/docs/10/functions-formatting.html">http://www.postgres.cn/docs/10/functions-formatting.html</a> 查看~</p>
<hr>
<p>码字不易要不打个赏?–&gt;郭良俊博客：<a href="https://199604.com/">https://199604.com/</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>pgsql</tag>
      </tags>
  </entry>
  <entry>
    <title>postgresql导出表结构</title>
    <url>/1660/</url>
    <content><![CDATA[<p>pg_dump命令可以导出数据库中的表结构。 -s 选项用来只导出表结构，而不会导出表中的数据 -t 选项用来指定要导出的数据库表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#全库导出</span><br><span class="line">pg_dump -s -f /data/bakgp_101/linshi/20200703/tabledata_20200703.sql lte_mr</span><br><span class="line"></span><br><span class="line">#单表结构导出</span><br><span class="line">#pg_dump -s -t kpiday201706 lte_mr &gt;&gt; /data/bakgp_101/linshi/20200702/2017.sql </span><br></pre></td></tr></table></figure>

<p>lte_mr是数据库，kpiday201706是lte_mr中的表，/data/bakgp_101/linshi/20200702/2017.sql是定向到的文件. pg_dump 命令解释： <a href="https://www.cnblogs.com/huajiezh/p/6186309.html">https://www.cnblogs.com/huajiezh/p/6186309.html</a></p>
]]></content>
      <categories>
        <category>postgresql</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>python-离线安装psycopg2</title>
    <url>/1729/</url>
    <content><![CDATA[<h2 id="1-安装psycopg2需要安装依赖"><a href="#1-安装psycopg2需要安装依赖" class="headerlink" title="1.安装psycopg2需要安装依赖"></a>1.安装psycopg2需要安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本案例的操作系统为linux red hat</span><br><span class="line">在安装python依赖包psycopg之前，你必须需要先安装postgresql数据库的相关组件：</span><br><span class="line">postgresql-devel,postgresql,postgresql-libs这三个组件比较重要。另外，可选组件：postgresql-server</span><br></pre></td></tr></table></figure>

<h5 id="1-安装上述组件之前，可以用命令来查看你的系统现在是否已经安装了相关组件："><a href="#1-安装上述组件之前，可以用命令来查看你的系统现在是否已经安装了相关组件：" class="headerlink" title="1.安装上述组件之前，可以用命令来查看你的系统现在是否已经安装了相关组件："></a>1.安装上述组件之前，可以用命令来查看你的系统现在是否已经安装了相关组件：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dthost27 ~]#  rpm -qa  grep postgresql</span><br></pre></td></tr></table></figure>

<p>没有安装则需要安装如下依赖</p>
<ul>
<li>  postgresql-libs</li>
<li>  postgresql</li>
<li>  postgresql-devel</li>
</ul>
<h5 id="2-下载依赖地址："><a href="#2-下载依赖地址：" class="headerlink" title="2.下载依赖地址："></a>2.下载依赖地址：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://centos.pkgs.org/7/centos-x86_64/postgresql-libs-9.2.24-1.el7_5.x86_64.rpm.html</span><br><span class="line">https://centos.pkgs.org/7/centos-x86_64/postgresql-9.2.24-4.el7_8.x86_64.rpm.html</span><br><span class="line">https://centos.pkgs.org/7/centos-x86_64/postgresql-devel-9.2.24-4.el7_8.x86_64.rpm.html</span><br></pre></td></tr></table></figure>

<h5 id="3-安装依赖"><a href="#3-安装依赖" class="headerlink" title="3.安装依赖"></a>3.安装依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh postgresql-libs-9.2.24-1.el7_5.x86_64.rpm</span><br><span class="line">rpm -ivh postgresql-devel-9.2.24-1.el7_5.x86_64.rpm</span><br><span class="line">rpm -ivh postgresql-9.2.24-1.el7_5.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h2 id="2-安装psycopg2依赖包"><a href="#2-安装psycopg2依赖包" class="headerlink" title="2.安装psycopg2依赖包"></a>2.安装psycopg2依赖包</h2><h5 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h5><p>保证依赖组件存在后，就可以使用pip命令安装了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dthost27 ~]#  pip install psycopg2-binary</span><br><span class="line"></span><br><span class="line">注：这里安装的是binary格式的psycopg2依赖包，其实安装psycopg2也可以，但是有时候执行pip install psycopg2会报错，而安装psycopg2-binary（编译后）则不会</span><br><span class="line"></span><br><span class="line">或离线安装</span><br><span class="line">https://pypi.org/project/psycopg2-binary/#files</span><br><span class="line"></span><br><span class="line">python setpy.py install</span><br></pre></td></tr></table></figure>

<h5 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">下载psycopg2离线包，地址：https://pypi.org/project/psycopg2/#files</span><br><span class="line"></span><br><span class="line">下载源码tar包，编译安装</span><br><span class="line">步骤如下：</span><br><span class="line">tar -zxvf psycopg2-2.8.4.tar.gz</span><br><span class="line">cd psycopg2-2.8.4</span><br><span class="line">python setup.py build</span><br><span class="line">python setpy.py install</span><br></pre></td></tr></table></figure>

<h5 id="启动python测试"><a href="#启动python测试" class="headerlink" title="启动python测试"></a>启动python测试</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import psycopg2</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>pyhton</category>
      </categories>
      <tags>
        <tag>psycopg2</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>(python)两文件行数内容对比，输出二者不存在的内容</title>
    <url>/1678/</url>
    <content><![CDATA[<h4 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分:"></a>代码部分:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># _*_ coding:utf-8 _*_</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">两文件行数内容对比，输出二者不存在的内容</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import datetime</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def check_file(file1, file2):</span><br><span class="line">    time = str(datetime.datetime.now().strftime(&quot;%Y%m%d%H%M%S&quot;))</span><br><span class="line"></span><br><span class="line">    file1_name = os.path.split(file1)[1]</span><br><span class="line">    file2_name = os.path.split(file2)[1]</span><br><span class="line"></span><br><span class="line">    str1 = []</span><br><span class="line">    str2 = []</span><br><span class="line">    str_dump = []</span><br><span class="line">    f1 = open(file1, &#x27;r&#x27;, encoding=&#x27;UTF-8&#x27;)</span><br><span class="line">    f2 = open(file2, &#x27;r&#x27;, encoding=&#x27;UTF-8&#x27;)</span><br><span class="line"></span><br><span class="line">    for line in f1.readlines():</span><br><span class="line">        str1.append(line.replace(&quot;\n&quot;, &#x27;&#x27;))</span><br><span class="line"></span><br><span class="line">    for line in f2.readlines():</span><br><span class="line">        str2.append(line.replace(&quot;\n&quot;, &#x27;&#x27;))</span><br><span class="line">    f1.close()</span><br><span class="line">    f2.close()</span><br><span class="line"></span><br><span class="line">    for i in str1:</span><br><span class="line">        if i not in str2:</span><br><span class="line">            i = file1_name+&#x27;,&#x27;+i</span><br><span class="line">            str_dump.append(i)</span><br><span class="line"></span><br><span class="line">    for i in str2:</span><br><span class="line">        if i not in str1:</span><br><span class="line">            i = file2_name+&#x27;,&#x27;+i</span><br><span class="line">            str_dump.append(i)</span><br><span class="line"></span><br><span class="line">    # f3 = open(&#x27;target_&#123;&#125;.txt&#x27;.format(time), &#x27;w+&#x27;)</span><br><span class="line">    # for i in list(str_dump):</span><br><span class="line">    #     f3.write(i + &#x27;\n&#x27;)</span><br><span class="line">    # f3.close()</span><br><span class="line"></span><br><span class="line">    with open(&#x27;target_&#123;&#125;.txt&#x27;.format(time), &#x27;w+&#x27;) as f3:</span><br><span class="line">        for i in list(str_dump):</span><br><span class="line">            f3.write(i + &#x27;\n&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    check_file(&quot;1.txt&quot;, &quot;2.txt&quot;)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>pyhton</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python中 os.linesep 用法</title>
    <url>/1727/</url>
    <content><![CDATA[<p>os.linesep字符串给出当前平台使用的行终止符。例如，Windows使用’\r\n’，Linux使用’\n’而Mac使用’\r’。</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    wd=os.getcwd()</span><br><span class="line">    filetest = open (wd+&#x27;/test/test.txt&#x27;, &#x27;r+&#x27;,encoding=&#x27;utf-8&#x27;)</span><br><span class="line">    print(filetest.read())</span><br><span class="line">    # 不用\n　如果使用os.linesep</span><br><span class="line">    filetest.write (&quot;\n&quot;)</span><br><span class="line">    while 1:</span><br><span class="line">        newline = input(&quot;Enter a line word(&#x27;,&#x27; to quit):&quot;)</span><br><span class="line">        if newline != &quot;,&quot;:</span><br><span class="line">            filetest.write (&#x27;%s%s&#x27; % (newline, os.linesep))</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">    filetest.close ()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>pyhton</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python批量爬取域名备案</title>
    <url>/1704/</url>
    <content><![CDATA[<p>python批量爬取域名备案小工具–接口是站长之家</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import re, requests, time, xlrd, random, csv</span><br><span class="line">from lxml import etree</span><br><span class="line"></span><br><span class="line">domain_list = []</span><br><span class="line"># workbook = xlrd.open_workbook(&#x27;未爬.xls&#x27;)</span><br><span class="line"># sheet0 = workbook.sheet_by_index(0)</span><br><span class="line"># cols = sheet0.col_slice(0,1)</span><br><span class="line"># for col in cols:</span><br><span class="line">#     domain_list.append(col.value)</span><br><span class="line"></span><br><span class="line">with open(&#x27;111.txt&#x27;,encoding=&#x27;utf-8&#x27;,newline=&#x27;&#x27;)as fk:</span><br><span class="line">    for i in fk:</span><br><span class="line">        domain = re.sub(r&#x27;\r\n$&#x27;,&#x27;&#x27;,i)</span><br><span class="line">        domain_list.append(domain)</span><br><span class="line"></span><br><span class="line">user_Agent_list = [</span><br><span class="line">    &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36&quot;,</span><br><span class="line">    &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:6.0) Gecko/20100101 Firefox/6.0&quot;,</span><br><span class="line">    &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&quot;,</span><br><span class="line">    &quot;Opera/9.80 (Windows NT 10.0; U; zh-cn) Presto/2.9.168 Version/11.50&quot;,</span><br><span class="line">    &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">a = 0</span><br><span class="line">url = &#x27;http://icp.chinaz.com/searchs&#x27;</span><br><span class="line">with open(&#x27;test1.csv&#x27;,&#x27;a&#x27;,newline=&#x27;&#x27;)as fk:</span><br><span class="line">    writer = csv.writer(fk)</span><br><span class="line">    csv_header = [&#x27;域名&#x27;,&#x27;主办单位名称&#x27;,&#x27;单位性质&#x27;,&#x27;网站备案/许可证号&#x27;,&#x27;网站名称&#x27;,&#x27;审核时间&#x27;]</span><br><span class="line">    writer.writerow(csv_header)</span><br><span class="line">    for num in range(len(domain_list)//20-a//20+1):</span><br><span class="line">        local_time = int(time.time())</span><br><span class="line">        Cookie = &#x27;UM_distinctid=176dabed56b80a-080978cc77e73-376b4502-1fa400-176dabed56c952; __guid=31546918.3636803744203470000.1610026817897.5715; __gads=ID=2c6886bd82b7280d-2280524a92c500e4:T=1610026898:RT=1610026898:S=ALNI_MbyH5W7HulKDaCwCpZdoBvNfCv5fg; toolbox_urls=www.ccbechina.cn|www.apple.iducs.cn; qHistory=aHR0cDovL3dob2lzLmNoaW5hei5jb20vK1dob2lz5p+l6K+ifGh0dHA6Ly90b29sLmNoaW5hei5jb21f56uZ6ZW/5bel5YW3fGh0dHA6Ly9yYW5rLmNoaW5hei5jb20vcmFua2FsbC9f5p2D6YeN57u85ZCI5p+l6K+ifGh0dHA6Ly9zZW8uY2hpbmF6LmNvbV9TRU/nu7zlkIjmn6Xor6J8aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9kbnMvX0Ruc+afpeivog==; Hm_lvt_aecc9715b0f5d5f7f34fba48a3c511d6=1614822213,1614822577,1614822679,1614823108; CNZZDATA5082706=cnzz_eid%3D817694234-1610023182-%26ntime%3D1615443601; Hm_lvt_ca96c3507ee04e182fb6d097cb2a1a4c=1614158602,1614757255,1615271947,1615445490; .AspNetCore.Antiforgery.-Z5WMyCX4K0=CfDJ8GYV1qq4FPhNvMPl1WmHHp4TJ3UkqvXhcEpr97APD9DsO6WWhvHhS1Ur7lynrac2voNvP_6CKjUNJ7GfxR0Y8Hvzh5CzvnqGj1zDfZqI-uOal1z6njEfqbHpCtZTRIzvCbnZaH2ylkWKvQ8HYwdptNY; bbsmax_user=a3edcb67-4488-4058-ac01-ec29ef25c2d3; avatarId=14f364b2-af95-4174-a58f-b95415e9ad1c-; .AspNetCore.Session=CfDJ8GYV1qq4FPhNvMPl1WmHHp7xuHiscEHg0wvC5lfyLapGtl8WJLhWLk%2BrvYNFAM9CCKxQ6RnvIiEgR86UrCH%2FavX838WgaU%2BU%2FbXLz305a97b8qWufBUMzpsSVhMKMMBzfgT%2F9LSOKw1wTwgn9ND7ySHWDWbXg%2BXyPKaPVWG7dFdm; monitor_count=4; Hm_lpvt_ca96c3507ee04e182fb6d097cb2a1a4c=&#123;0&#125;&#x27;.format(local_time)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            &#x27;User-Agent&#x27;: random.choice(user_Agent_list),</span><br><span class="line">            &#x27;Cookie&#x27;:Cookie,</span><br><span class="line">            &#x27;Host&#x27;:&#x27;icp.chinaz.com&#x27;,</span><br><span class="line">            &#x27;Referer&#x27;:&#x27;http://icp.chinaz.com/web&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        form_data = &#123;</span><br><span class="line">            &#x27;hosts&#x27;:&#x27;,&#x27;.join(domain_list[a:a+20])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res = requests.post(url,headers=headers,data=form_data)</span><br><span class="line">        # print(res.content.decode(&#x27;utf-8&#x27;))</span><br><span class="line">        html = etree.HTML(res.content.decode(&#x27;utf-8&#x27;))</span><br><span class="line">        trs = html.xpath(&#x27;//tbody[@id=&quot;result_table&quot;]/tr&#x27;)</span><br><span class="line">        for tr in trs:</span><br><span class="line">            domain = tr.xpath(&#x27;./td[1]//text()&#x27;)[0]</span><br><span class="line">            organizer = tr.xpath(&#x27;./td[2]//text()&#x27;)[0]</span><br><span class="line">            unit_nature = tr.xpath(&#x27;./td[3]//text()&#x27;)[0]</span><br><span class="line">            passcord = tr.xpath(&#x27;./td[4]//text()&#x27;)[0]</span><br><span class="line">            website_name = tr.xpath(&#x27;./td[5]//text()&#x27;)[0]</span><br><span class="line">            audit_time = tr.xpath(&#x27;./td[8]//text()&#x27;)[0]</span><br><span class="line">            csv_content = [domain,organizer,unit_nature,passcord,website_name,audit_time]</span><br><span class="line">            print(csv_content)</span><br><span class="line">            writer.writerow(csv_content)</span><br><span class="line">        a += 20</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        print(&#x27;现在是第%s个&#x27;% a)</span><br><span class="line">        # print(form_data)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pyhton</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>PYTHON系统目录中的间隔符</title>
    <url>/1383/</url>
    <content><![CDATA[<p>python是跨平台的。在Windows上，文件的路径分隔符是’&#39;，在Linux上是’/‘。</p>
<p>为了让代码在不同的平台上都能运行，那么路径应该写’&#39;还是’/‘呢？如果写死？这个就不友好了</p>
<p>所以java的解决使用：File.separator</p>
<p>而python也解决了，先导入os模块(包)，然后就可以使用os.sep 这逼了~</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>间隔符</tag>
      </tags>
  </entry>
  <entry>
    <title>shell-grep</title>
    <url>/1671/</url>
    <content><![CDATA[<p>grep用了很久，不过以前我用得一直很浅显，就是简单的grep xxx。 本文对其他用法做下记录</p>
<h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p><strong>grep</strong>（global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-a 不要忽略二进制数据。</span><br><span class="line">-A&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。</span><br><span class="line">-b 在显示符合范本样式的那一行之外，并显示该行之前的内容。</span><br><span class="line">-c 计算符合范本样式的列数。</span><br><span class="line">-C&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。</span><br><span class="line">-d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。</span><br><span class="line">-e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式。</span><br><span class="line">-E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。</span><br><span class="line">-f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。</span><br><span class="line">-F 将范本样式视为固定字符串的列表。</span><br><span class="line">-G 将范本样式视为普通的表示法来使用。</span><br><span class="line">-h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。</span><br><span class="line">-H 在显示符合范本样式的那一列之前，标示该列的文件名称。</span><br><span class="line">-i 忽略字符大小写的差别。</span><br><span class="line">-l 列出文件内容符合指定的范本样式的文件名称。</span><br><span class="line">-L 列出文件内容不符合指定的范本样式的文件名称。</span><br><span class="line">-n 在显示符合范本样式的那一列之前，标示出该列的编号。</span><br><span class="line">-q 不显示任何信息。</span><br><span class="line">-R/-r 此参数的效果和指定“-d recurse”参数相同。</span><br><span class="line">-s 不显示错误信息。</span><br><span class="line">-v 反转查找。</span><br><span class="line">-w 只显示全字符合的列。</span><br><span class="line">-x 只显示全列符合的列。</span><br><span class="line">-y 此参数效果跟“-i”相同。</span><br><span class="line">-o 只输出文件中匹配到的部分。</span><br></pre></td></tr></table></figure>

<p> </p>
<h5 id="或操作"><a href="#或操作" class="headerlink" title="或操作"></a><strong>或操作</strong></h5><p>找出文件（filename）中包含123或者包含abc的行 <code>-E</code>将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -E &#x27;123abc&#x27; filename</span><br><span class="line"></span><br><span class="line">#正则</span><br><span class="line">grep -E &quot;[1-9]+&quot;</span><br><span class="line">或</span><br><span class="line">egrep &quot;[1-9]+&quot;</span><br></pre></td></tr></table></figure>

<h5 id="与操作"><a href="#与操作" class="headerlink" title="与操作"></a><strong>与操作</strong></h5><p>显示既匹配 pattern1 又匹配 pattern2 的行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep pattern1  grep pattern2</span><br></pre></td></tr></table></figure>

<h5 id="在多个文件中查找"><a href="#在多个文件中查找" class="headerlink" title="在多个文件中查找"></a><strong>在多个文件中查找</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;match_pattern&quot; file_1 file_2 file_3 ...</span><br></pre></td></tr></table></figure>

<h5 id="输出除之外的所有行-v-选项："><a href="#输出除之外的所有行-v-选项：" class="headerlink" title="输出除之外的所有行 -v 选项："></a>输出除之外的所有行 <strong>-v</strong> 选项：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -v &quot;match_pattern&quot; file_name</span><br></pre></td></tr></table></figure>

<h5 id="标记匹配颜色-color-auto-选项："><a href="#标记匹配颜色-color-auto-选项：" class="headerlink" title="标记匹配颜色 --color=auto 选项："></a>标记匹配颜色 <strong>--color=auto</strong> 选项：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;match_pattern&quot; file_name --color=auto</span><br></pre></td></tr></table></figure>

<h5 id="统计文件或者文本中包含匹配字符串的行数-c-选项："><a href="#统计文件或者文本中包含匹配字符串的行数-c-选项：" class="headerlink" title="统计文件或者文本中包含匹配字符串的行数 -c 选项："></a>统计文件或者文本中包含匹配字符串的行数 <strong>-c</strong> 选项：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -c &quot;text&quot; file_name</span><br></pre></td></tr></table></figure>

<h5 id="输出包含匹配字符串的行数-n-选项："><a href="#输出包含匹配字符串的行数-n-选项：" class="headerlink" title="输出包含匹配字符串的行数 -n 选项："></a>输出包含匹配字符串的行数 <strong>-n</strong> 选项：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;text&quot; -n file_name</span><br><span class="line">或</span><br><span class="line">cat file_name  grep &quot;text&quot; -n</span><br><span class="line"></span><br><span class="line">#多个文件</span><br><span class="line">grep &quot;text&quot; -n file_1 file_2</span><br></pre></td></tr></table></figure>

<h5 id="搜索多个文件并查找匹配文本在哪些文件中："><a href="#搜索多个文件并查找匹配文本在哪些文件中：" class="headerlink" title="搜索多个文件并查找匹配文本在哪些文件中："></a>搜索多个文件并查找匹配文本在哪些文件中：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -l &quot;text&quot; file1 file2 file3...</span><br></pre></td></tr></table></figure>

<h5 id="在多级目录中对文本进行递归搜索："><a href="#在多级目录中对文本进行递归搜索：" class="headerlink" title="在多级目录中对文本进行递归搜索："></a>在多级目录中对文本进行递归搜索：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;text&quot; . -r -n</span><br><span class="line"># .表示当前目录。</span><br></pre></td></tr></table></figure>

<h5 id="忽略匹配样式中的字符大小写："><a href="#忽略匹配样式中的字符大小写：" class="headerlink" title="忽略匹配样式中的字符大小写："></a>忽略匹配样式中的字符大小写：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;hello world&quot;  grep -i &quot;HELLO&quot;</span><br><span class="line">hello</span><br></pre></td></tr></table></figure>

<h5 id="在grep搜索结果中包括或者排除指定文件："><a href="#在grep搜索结果中包括或者排除指定文件：" class="headerlink" title="在grep搜索结果中包括或者排除指定文件："></a>在grep搜索结果中包括或者排除指定文件：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#只在目录中所有的.php和.html文件中递归搜索字符&quot;main()&quot;</span><br><span class="line">grep &quot;main()&quot; . -r --include *.&#123;php,html&#125;</span><br><span class="line"></span><br><span class="line">#在搜索结果中排除所有README文件</span><br><span class="line">grep &quot;main()&quot; . -r --exclude &quot;README&quot;</span><br><span class="line"></span><br><span class="line">#在搜索结果中排除filelist文件列表里的文件</span><br><span class="line">grep &quot;main()&quot; . -r --exclude-from filelist</span><br></pre></td></tr></table></figure>

<h5 id="打印出匹配文本之前或者之后的行："><a href="#打印出匹配文本之前或者之后的行：" class="headerlink" title="打印出匹配文本之前或者之后的行："></a>打印出匹配文本之前或者之后的行：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#显示匹配某个结果之后的3行，使用 -A 选项：</span><br><span class="line">seq 10  grep &quot;5&quot; -A 3</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line"></span><br><span class="line">#显示匹配某个结果之前的3行，使用 -B 选项：</span><br><span class="line">seq 10  grep &quot;5&quot; -B 3</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">#显示匹配某个结果的前三行和后三行，使用 -C 选项：</span><br><span class="line">seq 10  grep &quot;5&quot; -C 3</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line"></span><br><span class="line">#如果匹配结果有多个，会用“--”作为各匹配结果之间的分隔符：</span><br><span class="line">echo -e &quot;a\nb\nc\na\nb\nc&quot;  grep a -A 1</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">--</span><br><span class="line">a</span><br><span class="line">b</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>grep</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>split()方法上遇到的坑，JDK1.7和JDK1.8版本上的区别</title>
    <url>/958/</url>
    <content><![CDATA[<p>前段时间在公司程序上看到前辈们用split()方法去切割无分隔符号标志的字符串。</p>
<p>如：</p>
<p>String testStr = “asd”;</p>
<p>String[] testStrSplit = testStr.split(“”);</p>
<p>如果你的版本不是jdk1.7时</p>
<p>输出testStrSplit 是[“a”,”s”,”d”]</p>
<p>刚开始我还以为是前辈程序有问题。</p>
<p>然后切换到了和linux服务器java同版本(jdk1.7)</p>
<p>输出testStrSplit 是[“”,”a”,”s”,”d”]</p>
<p>emmmmm,这就是问题所在了，当版本不一时,jdk1.7前面是多了一个空，因此数组长度一个是4，而一个为3.(此处有眼泪)</p>
<p>所以，当想切割无分隔符的字符串时，我们是不是可以有其他方法?</p>
<p>是哒，这个时候可以用toCharArray().兼容jdk1.7和1.8。</p>
<p>char[] testStrArr = testStr.toCharArray();//[“a”,”s”,”d”]</p>
<hr>
<p>toCharArray 方法de作用：将字符串转换为字符数组.</p>
<p>split()和toCharArray的区别：</p>
<p>（1）split是根据你需要按照那个分隔符号来进行分割的</p>
<p>比如：</p>
<p>String a = “a,d,e,s,f”; String []b = a.split(‘,’);这个就是根据逗号将数据分开,遍历输出得到的b的对象为”a”,”d”,”e”,”s”,”f”</p>
<p>（2）toCharArray是将String对象的每一个下标位的对象保存在char[]中，</p>
<p>比如：</p>
<p>String a = “abcd”; char[] b = a.toCharArray(); 遍历输出得到的b信息就是[‘a’,’b’,’c’,’d’]</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>split</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 项目连接mysql数据库报错java.sql.SQLException: The server time zone value &#39;xxx&#39; is unrecognized...解决方法</title>
    <url>/1367/</url>
    <content><![CDATA[<p>spring boot 项目连接mysql数据库报错java.sql.SQLException: The server time zone value ‘xxx’ is unrecognized…解决方法</p>
<p>说的是时区不对</p>
<p>因为mysql-connection-java版本导致时区的问题。</p>
<p><strong>解决方式1：</strong></p>
<p>加上jar包版本号，因为不加版本会按照最新的。</p>
<p><strong>解决方式2</strong><br>不加版本号或者版本号为6以上，解决方式：在连接数据库的配置文件中加上以下，时区亚洲/上海</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jdbcdemo?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring4.0笔记</title>
    <url>/814/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>好了,为了巩固spring,那我也去写一个spring4.0的笔记…这个也是以前学习spring框架没有去写的笔记</p>
<hr>
<h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><ul>
<li>Spring 是一个开源框架.</li>
<li>Spring 为简化企业级应用开发而生.</li>
<li>Spring 是一个 IOC(DI) 和 AOP 容器框架.</li>
</ul>
<h4 id="Spring-模块"><a href="#Spring-模块" class="headerlink" title="Spring 模块"></a>Spring 模块</h4><p><img src="http://qn.199604.com/typoraImg/spring1.png" alt="img"></p>
<h4 id="搭建-Spring的-HelloWorld"><a href="#搭建-Spring的-HelloWorld" class="headerlink" title="搭建 Spring的 HelloWorld"></a>搭建 Spring的 HelloWorld</h4><p>HelloWorld.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.bean;</span><br><span class="line"></span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">	private String userName;</span><br><span class="line"></span><br><span class="line">	public String getUserName() &#123;</span><br><span class="line">		return userName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void setUserName(String userName) &#123;</span><br><span class="line">		this.userName = userName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void toHello()&#123;</span><br><span class="line">		System.out.println(userName);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>applicationContext.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">	xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;bean id=&quot;hello&quot; class=&quot;com.glj.bean.HelloWorld&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;userName&quot; value=&quot;hello Spring&quot;&gt;&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>

<p>HelloWorldTest.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.test;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.ApplicationContext;</span><br><span class="line">import org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line">import com.glj.bean.HelloWorld;</span><br><span class="line"></span><br><span class="line">public class HelloWorldTest &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		ApplicationContext ac = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</span><br><span class="line">	 	HelloWorld hw = (HelloWorld) ac.getBean(&quot;hello&quot;);</span><br><span class="line">	 	hw.toHello();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="IOC-前生-–分离接口与实现"><a href="#IOC-前生-–分离接口与实现" class="headerlink" title="IOC 前生 –分离接口与实现"></a>IOC 前生 –分离接口与实现</h4><p><img src="http://qn.199604.com/typoraImg/spring2.png" alt="img"></p>
<h4 id="IOC-前生-–采用工厂设计模式"><a href="#IOC-前生-–采用工厂设计模式" class="headerlink" title="IOC 前生 –采用工厂设计模式"></a>IOC 前生 –采用工厂设计模式</h4><p><img src="http://qn.199604.com/typoraImg/spring3.png" alt="img"></p>
<h4 id="IOC-–采用反转控制"><a href="#IOC-–采用反转控制" class="headerlink" title="IOC –采用反转控制"></a>IOC –采用反转控制</h4><p><img src="http://qn.199604.com/typoraImg/spring4.png" alt="img"></p>
<h4 id="在-Spring-的-IOC-容器里配置-Bean"><a href="#在-Spring-的-IOC-容器里配置-Bean" class="headerlink" title="在 Spring 的 IOC 容器里配置 Bean"></a>在 Spring 的 IOC 容器里配置 Bean</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;hello&quot; class=&quot;com.glj.bean.HelloWorld&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;userName&quot; value=&quot;hello Spring&quot;&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>id：Bean 的名称</li>
<li>-在 IOC 容器中必须是唯一的</li>
<li>-若 id 没有指定，Spring 自动将权限定性类名作为 Bean 的名字</li>
<li>-id 可以指定多个名字，名字之间可用逗号、分号、或空格分隔</li>
</ul>
<h4 id="Spring-提供了两种类型的-IOC-容器实现"><a href="#Spring-提供了两种类型的-IOC-容器实现" class="headerlink" title="Spring 提供了两种类型的 IOC 容器实现."></a>Spring 提供了两种类型的 IOC 容器实现.</h4><ul>
<li>BeanFactory: IOC 容器的基本实现.</li>
<li>ApplicationContext: 提供了更多的高级特性. 是 BeanFactory 的子接口.</li>
<li>BeanFactory 是 Spring 框架的基础设施，面向 Spring 本身.</li>
<li>ApplicationContext 面向使用 Spring 框架的开发者，几乎所有的应用场合都直接使用 ApplicationContext 而非底层的 BeanFactory</li>
<li>无论使用何种方式, 配置文件时相同的.</li>
</ul>
<h4 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a>ApplicationContext</h4><p>ApplicationContext 的主要实现类：</p>
<ul>
<li>ClassPathXmlApplicationContext：从 类路径下加载配置文件(在src下面而不是包或者其他下面)</li>
<li>FileSystemXmlApplicationContext: 从文件系统中加载配置文件(很少用这种)</li>
</ul>
<p>ConfigurableApplicationContext 扩展于 ApplicationContext，新增加两个主要方法：refresh() 和 close()， 让 ApplicationContext 具有启动、刷新和关闭上下文的能力.</p>
<p>ApplicationContext 在初始化上下文时就实例化所有单例的 Bean。</p>
<p>WebApplicationContext 是专门为 WEB 应用而准备的，它允许从相对于 WEB 根目录的路径中完成初始化工作.</p>
<p>结构如下图:</p>
<p><img src="http://qn.199604.com/typoraImg/spring5.png" alt="img"></p>
<h4 id="从-IOC-容器中获取-Bean"><a href="#从-IOC-容器中获取-Bean" class="headerlink" title="从 IOC 容器中获取 Bean"></a>从 IOC 容器中获取 Bean</h4><ul>
<li>调用 ApplicationContext 的 getBean() 方法</li>
</ul>
<p>即可有两种:</p>
<p>1.HelloWord hw= ac.getBean(HelloWord.class);这种方法基于类型来获取，如果类中有多个相同的bean的名称，这种方法将不在合适</p>
<p>2.HelloWord hw= (HelloWord) ac.getBean(“helloWord”);这种方法基于Bean的Id来获取，使用范围比上面较广</p>
<h4 id="依赖注入的方式"><a href="#依赖注入的方式" class="headerlink" title="依赖注入的方式"></a>依赖注入的方式</h4><p>Spring 支持 3 种依赖注入的方式：</p>
<ul>
<li>属性注入</li>
<li>构造器注入</li>
<li>工厂方法注入（很少使用，不推荐）</li>
</ul>
<h5 id="属性注入（最常用的注入方式）"><a href="#属性注入（最常用的注入方式）" class="headerlink" title="属性注入（最常用的注入方式）:"></a>属性注入（最常用的注入方式）:</h5><ul>
<li><p>属性注入即通过 setter 方法注入Bean 的属性值或依赖的对象</p>
</li>
<li><p>属性注入使用 <property> 元素, 使用 name 属性指定 Bean 的属性名称，value 属性或 <value> 子节点指定属性值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;hello&quot; class=&quot;com.glj.bean.HelloWorld&quot;&gt;</span><br><span class="line">	&lt;property name=&quot;userName&quot; value=&quot;hello Spring&quot;&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="构造方法注入："><a href="#构造方法注入：" class="headerlink" title="构造方法注入："></a>构造方法注入：</h5><ul>
<li>通过构造方法注入Bean 的属性值或依赖的对象，它保证了 Bean 实例在实例化后就可以使用</li>
<li>构造器注入在 <constructor-arg> 元素里声明属性, <constructor-arg> 中没有 name 属性</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 按索引匹配入参： --&gt;</span><br><span class="line">&lt;bean id=&quot;hello&quot; class=&quot;com.glj.bean.HelloWorld&quot;&gt;</span><br><span class="line">	&lt;constructor-arg value=&quot;hello&quot; index=&quot;0&quot;&gt;&lt;/constructor-arg&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;!-- 按类型匹配入参：--&gt;</span><br><span class="line">&lt;bean id=&quot;hello1&quot; class=&quot;com.glj.bean.HelloWorld&quot;&gt;</span><br><span class="line">	&lt;constructor-arg value=&quot;hello1&quot; type=&quot;java.lang.String&quot;&gt;&lt;/constructor-arg&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>

<h4 id="字面值："><a href="#字面值：" class="headerlink" title="字面值："></a>字面值：</h4><ul>
<li>字面值：可用字符串表示的值，可以通过 <value> 元素标签或 value 属性进行注入</li>
<li>基本数据类型及其封装类、String 等类型都可以采取字面值注入的方式</li>
<li>若字面值中包含特殊字符，可以使用 <![CDATA[]]> 把字面值包裹起来</li>
</ul>
<h4 id="引用其它-Bean："><a href="#引用其它-Bean：" class="headerlink" title="引用其它 Bean："></a>引用其它 Bean：</h4><p>可以通过 <ref> 元素或 ref 属性为 Bean 的属性或构造器参数指定对 Bean 的引用.</p>
<p>也可以在属性或构造器里包含 Bean 的声明, 这样的 Bean 称为内部 Bean</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;dog&quot; class=&quot;com.glj.bean.Dog&quot;&gt;</span><br><span class="line">	&lt;property name=&quot;name&quot; value=&quot;glj只狗&quot; /&gt;</span><br><span class="line">	&lt;property name=&quot;sex&quot; value=&quot;男&quot; /&gt;</span><br><span class="line">	&lt;!-- </span><br><span class="line">	&lt;property name=&quot;foot&quot; ref=&quot;foot&quot; /&gt;</span><br><span class="line">	 或者</span><br><span class="line">	 --&gt;</span><br><span class="line">	 &lt;property name=&quot;foot&quot;&gt;</span><br><span class="line">	 	&lt;ref bean=&quot;foot&quot;/&gt;</span><br><span class="line">	 &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;bean id=&quot;foot&quot; class=&quot;com.glj.bean.Foot&quot;&gt;</span><br><span class="line">	&lt;property name=&quot;name&quot; value=&quot;骨头&quot; /&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>



<h4 id="内部-Bean"><a href="#内部-Bean" class="headerlink" title="内部 Bean"></a>内部 Bean</h4><ul>
<li>当 Bean 实例仅仅给一个特定的属性使用时, 可以将其声明为内部 Bean.</li>
<li>内部 Bean 声明直接包含在 <property> 或 <constructor-arg> 元素里, 不需要设置任何 id 或 name 属性</li>
<li>内部 Bean 不能使用在任何其他地方</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;dog&quot; class=&quot;com.glj.bean.Dog&quot;&gt;</span><br><span class="line">	&lt;property name=&quot;name&quot; value=&quot;glj只狗&quot; /&gt;</span><br><span class="line">	&lt;property name=&quot;sex&quot; value=&quot;男&quot; /&gt;</span><br><span class="line">	 &lt;property name=&quot;foot&quot;&gt;</span><br><span class="line">	 	&lt;bean class=&quot;com.glj.bean.Foot&quot;&gt;</span><br><span class="line">	 		&lt;property name=&quot;name&quot; value=&quot;骨头&quot;&gt;&lt;/property&gt;</span><br><span class="line">	 	&lt;/bean&gt;</span><br><span class="line">	 &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>

<p>今天就先记到这里吧…</p>
<p>晚安…</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>sqoop入hdfs出现No primary key could be found forXX的问题记录</title>
    <url>/1116/</url>
    <content><![CDATA[<p>如果使用过sqoop工具，把关系型数据库(ORACLE/Mysql)的数据导入到hdfs时，应该也会出现一些问题..如果还不知道的话，可以先到<a href="http://199604.com/1102">http://199604.com/1102</a>( sqoop的简单用法)，我这篇文章简单入门。</p>
<hr>
<p>最近，出现最多的问题，应该是报这个错–&gt;</p>
<p>ERROR tool.ImportTool: Error during import: No primary key could be found for table IOT_DIG_CAT_COUNT_BAK_1904. Please specify one with –split-by or perform a sequential import with ‘-m 1’.</p>
<p>从报错的信息提示可以看出，他表示您这个表找不到主键，需要我们使用把–split-by或者把参数-m设置为1。</p>
<p> 从这个报错的信息里，其实也可以深入聊一下，就是 –split-by与-m的关系(小白开发也可以是垃圾开发，我写的你们最好别信)：</p>
<p>1.split-by 根据不同的参数类型有不同的切分方法，如int型，Sqoop会取最大和最小split-by 字段值，然后根据传入的-m（–num-mappers）来确定划分几个区域。比如select max(id),min(id) from得到的max(id)和min(id)分别为1000和1,而这时–num-mappers（-m）为2的话，程序就会分成两个map的区域，（1,500），（501-1000），同时也会分成2个sql给2个map去进行导入操作，其实就是分页查询…sql类似 select xxx字段 from queryTableName wher id &gt;=1 and id &lt;=500,后面的sql省略..然后你-m的2个map就去执行这两个sql。</p>
<p>2.这个问题，应该也很常见，因为我先在公司，很多表都是无主键的，所以有时候split-by 字段不是int(number)类型，我解决的办法就是最无奈的办法了，只能用一个map 去执行，split-by不设置。时间效率就慢了下来吧。ps：当-m 设置的值大于1时，split-by必须设置字段</p>
<p>3.如果split-by 设置的字段是int(number)类型，但是呢，你的数字不是连续的..这种情况有可能会造成 一些map执行数量比较多，一些比较少，从而造成了某些map消耗时间非常久，一些马上执行完的情况，造成数据倾斜有可能报错…</p>
<p>好了，根据这个解释，应该都知道，报这个错，怎么解决了吧…end，睡个漂亮的午休…</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>sqoop</tag>
        <tag>一些错</tag>
      </tags>
  </entry>
  <entry>
    <title>sqoop的简单用法</title>
    <url>/1102/</url>
    <content><![CDATA[<p>emmmmm，为了阐述写这次文章的理由是什么的话?那可能就是最近我那么分析大佬们，天天要我导数据，oracle&lt;—-&gt;hive/hdfs，贼浪费我时间!然后哪位拆一代的卢胖子，想教会他自己导，居然不学、不看、不动…这里强烈的谴责!</p>
<p>好了不BB…下面应该是我自己笔记，内容有错的话，自己去看书–&gt;Hadoop大数据挖掘从入门到跑路..</p>
<hr>
<p>这个用的应该是sqoop..它是hadoop生态圈的一员吧，剩下的自己百度，因为我也是辣鸡的小白，之前教我的大佬走了.不然你们可以坑他一逼(此处要有滑稽脸?)</p>
<h3 id="sqoop操作–从Oracle导入到HDFS"><a href="#sqoop操作–从Oracle导入到HDFS" class="headerlink" title="sqoop操作–从Oracle导入到HDFS"></a>sqoop操作–从Oracle导入到HDFS</h3><p>先上导出脚本</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sqoop import <span class="operator">-</span>Dmapred.job.queue.name<span class="operator">=</span>jfa5d_queue <span class="comment">--connect jdbc:oracle:thin:@10.201.xx.xx:1522/mmds --username 你数据库账号 --password 数据库密码 --table TEMP_HJX_XL_TT --columns &quot;COMPANY,MSISDN,IMEI,TAC&quot; --target-dir /user/jfa5d/glj_test/TEMP_HJX_XL_TT/ --fields-terminated-by &#x27;,&#x27; --lines-terminated-by &#x27;\n&#x27; --null-string &#x27;&#x27; --null-non-string &#x27;0&#x27; -m 2;</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>-Dmapred.job.queue.name=jfa5d_queue：为指定的资源池/指定队列</p>
<p>–connect jdbc:oracle:thin:@//10.201.29.41:1522/mmds ：指定JDBC连接字符串</p>
<p>–username、–password：就是数据库的账号密码啦..</p>
<p>–table ：数据库表名</p>
<p>–columns ：需要导出的字段，逗号分隔(没有这个参数就是全表字段导出)</p>
<p>–target-dir ：导入HDFS的目标路径，如果目录已经存在，则报错；需要先删除你要上传的目录：hadoop fs -rmr /user/hadoop/xxxxx，建议自己先建以自己名字首字母的目录，不然删错了别人了，你跪键盘吧</p>
<p>–fields-terminated-by：字段之间采用什么分隔符，我这里是用逗号</p>
<p>–lines-terminated-by ：行之间采用啥分隔符号，我这里用回车..</p>
<p>–null-string：当string类型的字段为空时，使用’’代替</p>
<p>–null-non-string ：当非string类型的字段为空时，使用0代替</p>
<p>-m n或者–num-mappers n ：n为数字，代码启动建立n个并发执行任务</p>
<h3 id="sqoop操作–从HDFS导到ORACLE"><a href="#sqoop操作–从HDFS导到ORACLE" class="headerlink" title="sqoop操作–从HDFS导到ORACLE"></a>sqoop操作–从HDFS导到ORACLE</h3><p>也是先上脚本，然后自己分析吧</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqoop export -Dmapred.job.queue.name=jfa5d_queue --connect jdbc:oracle:thin:@//10.201.xxx.xxx:1522/mmds --username xxx --password xxx --table temp_hjx_xl_tt --columns &quot;COMPANY,MSISDN,IMEI,TAC&quot; --export-dir /user/jfa5d/glj_test/pushFile/ --input-fields-terminated-by &#x27;\001&#x27; --input-lines-terminated-by &#x27;\n&#x27; --input-null-string &#x27;\\N&#x27; --input-null-non-string &#x27;\\N&#x27;  --num-mappers 8</span><br></pre></td></tr></table></figure>

<p>脚本基本上一样，就是参数分别为：export、import，相同的参数我就不再解释</p>
<p>–export-dir：导出数据的HDFS目录。</p>
<p>–input-fields-terminated-by：文件的分隔符,如果是hive自动生成默认为\001</p>
<p>–input-lines-terminated-by:行之间的分隔符</p>
<p>–input-null-string：当非string类型的字段为空时，如果是hive自动生成默认为\N</p>
<p>–input-null-non-string：当非string类型的字段为空时,如果是hive自动生成默认为\N</p>
<p>-m n或者–num-mappers n ：n为数字，代码启动建立n个并发执行任务</p>
<h3 id="注意问题"><a href="#注意问题" class="headerlink" title="注意问题"></a>注意问题</h3><p>1.分割符的方向问题：</p>
<p>首先sqoop的参数要小心, 如果是从数据库导出数据，写到HDFS的时候，字段分割符号和行分割符号必须要用</p>
<p>–fields-terminated-by 和 –lines-terminated-by</p>
<p>而不是有input的：</p>
<p>–input-fields-terminated-by和 –input-fields-terminated-by的</p>
<p>–input前缀的使用于读文件的分割符号，便于解析文件，所以用于从HDFS文件导出到数据库，两个用法方向不一样。</p>
<p>emmm.快两点了,好了不写了，我的午休时间没有了…如有错误，都是我水平不够，但我不听。</p>
<hr>
<p>–delete-target-dir 删除目标文件夹(建议少用自己手动删一下)</p>
<p>–where 按条件导入数据 –&gt;–where ‘id&lt;3’</p>
<p>–query 按照sql语句进行导入ps:使用–query关键字，就不能使用–table和–columns,自定义sql语句的where条件中必须包含字符串 $CONDITIONS，$CONDITIONS是一个变量，用于给多个map任务划分任务范围 –&gt;–query “select * from user where id&gt;1 and $CONDITIONS”<br>(或者quer使用这种格式：–query ‘select * from user where id&gt;1 and $CONDITIONS’)</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>sqoop</tag>
      </tags>
  </entry>
  <entry>
    <title>ssm搭建一些笔记</title>
    <url>/718/</url>
    <content><![CDATA[<p>如果springmvc-config.xml文件和web.xml文件一样，都放在WEB-INF目录下的话。</p>
<p>在web.xml中springmvc最好这样配置一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- SpringMVC配置 --&gt;</span><br><span class="line">&lt;servlet&gt;</span><br><span class="line">	&lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;</span><br><span class="line">	&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">	&lt;init-param&gt;</span><br><span class="line">		&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">		&lt;param-value&gt;/WEB-INF/springmvc.xml&lt;/param-value&gt;</span><br><span class="line">	&lt;/init-param&gt;</span><br><span class="line">	&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Map all requests to the DispatcherServlet for handling --&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">	&lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;</span><br><span class="line">	&lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure>

<p>如果<code>&lt;param-value&gt;/WEB-INF/springmvc.xml&lt;/param-value&gt;</code></p>
<p>改为<code>&lt;param-value&gt;classpath:springmvc.xml&lt;/param-value&gt;</code></p>
<p>可能会出现-&gt;classpath指向的地址，与需要的文件不一致，报错很明显了。文件不存在</p>
<blockquote>
<ol>
<li>警告: No mapping found for HTTP request with URI</li>
<li>class path resource [springmvc.xml] cannot be opened because it does not exist</li>
</ol>
</blockquote>
<p>那么就顺便记录下web.xml中或者spring配置文件中classpath和classpath*的区别吧</p>
<blockquote>
<ol>
<li>【classpath:】此配置表示告诉web容器去classpath（WEB-INF/classes和WEB-INF/lib）中去加载指定名称的配置文件，若是有同名文件，则只会加载一个。</li>
<li>【classpath*:】此配置表示告诉web容器去classpath（WEB-INF/classes和WEB-INF/lib）中去加载指定名称的配置文件，若是有同名文件则会全部加载。</li>
</ol>
</blockquote>
<p>即</p>
<ul>
<li>classpath：只会到你的class路径中查找找文件;</li>
<li>classpath*：不仅包含class路径，还包括jar文件中(class路径)进行查找.</li>
</ul>
<p>可以理解成就在/WEB-INF/classes/</p>
<p>因此classpath或者classpath*，编译之后会在/项目名/build/classes下找你的文件</p>
<p>而当你在WEB-INF目录下放置springmvc-config.xml文件和web.xml文件。</p>
<p>那么需要写成<code>&lt;param-value&gt;/WEB-INF/springmvc.xml&lt;/param-value&gt;</code></p>
<p>注意：</p>
<ol>
<li>用classpath*:需要遍历所有的classpath，所以加载速度是很慢的，因此，在规划的时候，应该尽可能规划好资源文件所在的路径，尽量避免使用classpath*。</li>
<li>在多个classpath中存在同名资源时候，都需要加载，但是用classpath:只会加载第一个。</li>
<li>lib和classes下文件访问优先级的问题:? lib&gt;classes</li>
</ol>
<p>总结的有点乱…希望日后自己可以理解一半吧</p>
<hr>
<p>基于(spring+springmvc+mybatis)ssm搭建测试(不是基于maven搭建)</p>
<ul>
<li><p>创建表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE IF EXISTS `tb_user`;</span><br><span class="line">CREATE TABLE `tb_user` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(18) DEFAULT NULL,</span><br><span class="line">  `sex` char(2) DEFAULT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of tb_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `tb_user` VALUES (&#x27;1&#x27;, &#x27;admin&#x27;, &#x27;女&#x27;, &#x27;21&#x27;);</span><br><span class="line">INSERT INTO `tb_user` VALUES (&#x27;3&#x27;, &#x27;修改后的&#x27;, &#x27;女&#x27;, &#x27;21&#x27;);</span><br><span class="line">INSERT INTO `tb_user` VALUES (&#x27;4&#x27;, &#x27;admin&#x27;, &#x27;女&#x27;, &#x27;21&#x27;);</span><br><span class="line">INSERT INTO `tb_user` VALUES (&#x27;2&#x27;, &#x27;update&#x27;, &#x27;女&#x27;, &#x27;21&#x27;);</span><br></pre></td></tr></table></figure></li>
<li><p><strong>db.properties</strong></p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3307/ssm?characterEncoding=utf8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=root</span><br></pre></td></tr></table></figure>

<ul>
<li>pojo</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.pojo;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line"></span><br><span class="line">public class User implements Serializable&#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String name;</span><br><span class="line">	private String sex;</span><br><span class="line">	private Integer age;</span><br><span class="line">//省略set和get...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserMapper</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line"> PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line"> &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line"> &lt;mapper namespace=&quot;com.glj.dao.UserMapper&quot;&gt;</span><br><span class="line">	&lt;!-- 	public List&lt;User&gt; getUser(); --&gt; </span><br><span class="line">	&lt;select id=&quot;getUserList&quot; resultType=&quot;com.glj.pojo.User&quot;&gt;</span><br><span class="line">		select * from tb_user</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line"> &lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserMapper接口</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.dao;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import com.glj.pojo.User;</span><br><span class="line"></span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line">	public List&lt;User&gt; getUserList();</span><br><span class="line">&#125;	</span><br></pre></td></tr></table></figure>

<ul>
<li><p>UserService</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.service;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import com.glj.pojo.User;</span><br><span class="line"></span><br><span class="line">public interface UserService &#123;</span><br><span class="line">	List&lt;User&gt; getUserList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>UserServiceImpl</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.service.impl;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">import com.glj.dao.UserMapper;</span><br><span class="line">import com.glj.pojo.User;</span><br><span class="line">import com.glj.service.UserService;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class UserServiceImpl implements UserService&#123;</span><br><span class="line">	@Autowired</span><br><span class="line">	private UserMapper userMapper;</span><br><span class="line">	</span><br><span class="line">	@Override</span><br><span class="line">	public List&lt;User&gt; getUserList() &#123;</span><br><span class="line">		return userMapper.getUserList();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>UserController</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.controller;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">import com.glj.pojo.User;</span><br><span class="line">import com.glj.service.UserService;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">public class UserController &#123;</span><br><span class="line">	@Autowired</span><br><span class="line">	private UserService userService;</span><br><span class="line">	</span><br><span class="line">	@RequestMapping(&quot;/listUser&quot;)</span><br><span class="line">	public ModelAndView listToUser()&#123;</span><br><span class="line">		ModelAndView mav = new ModelAndView();</span><br><span class="line">		List&lt;User&gt; users = userService.getUserList();</span><br><span class="line">		mav.addObject(&quot;users&quot;, users);</span><br><span class="line">		return mav;</span><br><span class="line">	&#125;</span><br><span class="line">//	@RequestMapping(value=&quot;/&#123;fromName&#125;&quot;)</span><br><span class="line">//	public String fromName(@PathVariable String fromName)&#123;</span><br><span class="line">//		return &quot;fromName&quot;;</span><br><span class="line">//	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;	</span><br></pre></td></tr></table></figure>

<ul>
<li>在WEB-INF目录下新增加web.xml，这个web.xml有两个作用：</li>
</ul>
<ol>
<li>通过ContextLoaderListener在web app启动的时候，获取contextConfigLocation配置文件的文件名applicationContext.xml，并进行Spring相关初始化工作</li>
<li>有任何访问，都被DispatcherServlet所拦截，这就是Spring MVC那套工作机制了。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">	xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;</span><br><span class="line">	xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><br><span class="line">	id=&quot;WebApp_ID&quot; version=&quot;2.5&quot;&gt;</span><br><span class="line">	</span><br><span class="line">	  &lt;!--Spring配置： needed for ContextLoaderListener --&gt;</span><br><span class="line">	&lt;context-param&gt;</span><br><span class="line">		&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">		&lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;</span><br><span class="line">	&lt;/context-param&gt;</span><br><span class="line">	&lt;listener&gt;</span><br><span class="line">		&lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">	&lt;/listener&gt;</span><br><span class="line">	&lt;!-- SpringMVC配置 --&gt;</span><br><span class="line">	&lt;servlet&gt;</span><br><span class="line">		&lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;</span><br><span class="line">		&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">		&lt;init-param&gt;</span><br><span class="line">			&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">			&lt;param-value&gt;/WEB-INF/springmvc.xml&lt;/param-value&gt;</span><br><span class="line">		&lt;/init-param&gt;</span><br><span class="line">		&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">	&lt;/servlet&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- Map all requests to the DispatcherServlet for handling --&gt;</span><br><span class="line">	&lt;servlet-mapping&gt;</span><br><span class="line">		&lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;</span><br><span class="line">		&lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">	&lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure>



<ul>
<li>在src目录下新建applicationContext.xml文件，这是Spring的配置文件，其作用</li>
</ul>
<ol>
<li>通过注解，将com.glj.*的生命周期纳入Spring的管理</li>
<li>?配置数据源</li>
<li>扫描存放SQL语句的UserMapper.xml</li>
<li>扫描Mapper接口，并将其生命周期纳入Spring的管理</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">	xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">	xmlns:mybatis-spring=&quot;http://mybatis.org/schema/mybatis-spring&quot;</span><br><span class="line">	xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;</span><br><span class="line">	xsi:schemaLocation=&quot;http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd</span><br><span class="line">		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span><br><span class="line">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd&quot;&gt;</span><br><span class="line">	&lt;!-- Spring希望管理所有的业务逻辑组件，等。。。 --&gt;</span><br><span class="line">	&lt;context:annotation-config /&gt;</span><br><span class="line">	&lt;context:component-scan base-package=&quot;com.glj&quot;&gt;</span><br><span class="line">		&lt;context:exclude-filter type=&quot;annotation&quot;</span><br><span class="line">			expression=&quot;org.springframework.stereotype.Controller&quot; /&gt;</span><br><span class="line">	&lt;/context:component-scan&gt;</span><br><span class="line">	&lt;!-- 引入数据库的配置文件 --&gt;</span><br><span class="line">	&lt;context:property-placeholder location=&quot;classpath:db.properties&quot;/&gt;</span><br><span class="line">	&lt;!-- Spring用来控制业务逻辑。数据源、事务控制、aop --&gt;</span><br><span class="line">	&lt;bean id=&quot;dataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;jdbcUrl&quot; value=&quot;$&#123;jdbc.url&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">		&lt;property name=&quot;driverClass&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">		&lt;property name=&quot;user&quot; value=&quot;$&#123;jdbc.username&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">		&lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">	&lt;!-- spring事务管理 --&gt;</span><br><span class="line">	&lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">	&lt;!-- 开启基于注解的事务 --&gt;</span><br><span class="line">	&lt;tx:annotation-driven transaction-manager=&quot;dataSourceTransactionManager&quot;/&gt;</span><br><span class="line">	&lt;!--创建出SqlSessionFactory对象  --&gt;</span><br><span class="line">	&lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.glj.pojo&quot; /&gt;</span><br><span class="line">		&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&gt;</span><br><span class="line">		&lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot; /&gt;</span><br><span class="line">		&lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:com/glj/mapper/*.xml&quot; /&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">	&lt;!-- 扫描所有的mapper接口的实现自动注入；</span><br><span class="line">		&lt;mybatis-spring:scan base-package=&quot;com.glj.dao&quot;/&gt;</span><br><span class="line">	 --&gt;</span><br><span class="line">	&lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</span><br><span class="line">                &lt;!-- 可以不用指定，因为MapperScannerConfigurer会自动装配</span><br><span class="line">                &lt;property name=&quot;sqlSessionFactoryBeanName&quot; value=&quot;sqlSessionFactory&quot; /&gt;  --&gt;</span><br><span class="line">		&lt;property name=&quot;basePackage&quot; value=&quot;com.glj.dao&quot;&gt;&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>



<ul>
<li>在src目录下新建<strong>mybatis-config.xml</strong>文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">  PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span><br><span class="line">  &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;!-- 配置全局属性 --&gt;</span><br><span class="line">    &lt;settings&gt;</span><br><span class="line">        &lt;!-- 使用jdbc的getGeneratedKeys获取数据库自增主键值 --&gt;</span><br><span class="line">        &lt;setting name=&quot;useGeneratedKeys&quot; value=&quot;true&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 使用列别名替换列名 默认:true --&gt;</span><br><span class="line">        &lt;setting name=&quot;useColumnLabel&quot; value=&quot;true&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 开启驼峰命名转换:Table&#123;create_time&#125; -&gt; Entity&#123;createTime&#125; --&gt;</span><br><span class="line">        &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;/settings&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>在WEB-INF目录下新建springMVC.xml(也可以在src目录下创建,然后就可以用classpath:springMVC.xml即可)</li>
</ul>
<ol>
<li>?扫描Controller,并将其生命周期纳入Spring管理</li>
<li>注解驱动</li>
<li>静态页面，如html,css,js,images可以访问</li>
<li>视图定位到/WEB/INF/jsp 这个目录下</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">	xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">	xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</span><br><span class="line">	xsi:schemaLocation=&quot;http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span><br><span class="line">		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd&quot;&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- 只扫描Controller,并将其生命周期纳入Spring管理 --&gt;</span><br><span class="line">	&lt;context:component-scan base-package=&quot;com.glj&quot; use-default-filters=&quot;false&quot;&gt;</span><br><span class="line">		&lt;context:include-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;</span><br><span class="line">	&lt;/context:component-scan&gt;</span><br><span class="line">	&lt;context:annotation-config/&gt;</span><br><span class="line">	&lt;!-- 注解驱动 --&gt;</span><br><span class="line">	&lt;mvc:annotation-driven /&gt;</span><br><span class="line">	&lt;!--静态页面，如html,css,js,images可以访问   --&gt;</span><br><span class="line">	&lt;mvc:default-servlet-handler /&gt; </span><br><span class="line">	&lt;!-- 视图定位 --&gt;</span><br><span class="line">	&lt;bean  class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;viewClass&quot;</span><br><span class="line">            value=&quot;org.springframework.web.servlet.view.JstlView&quot; /&gt;</span><br><span class="line">		&lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot;&gt;&lt;/property&gt;</span><br><span class="line">		&lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;&gt;&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>在WEB-INF下创建jsp目录，并创建文件listUser.jsp</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;    </span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table align=&#x27;center&#x27; border=&#x27;1&#x27; cellspacing=&#x27;0&#x27;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;id&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;name&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=&quot;$&#123;users&#125;&quot; var=&quot;c&quot; varStatus=&quot;st&quot;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;$&#123;c.id&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;c.name&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>spring</tag>
        <tag>springmvc</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM整合Shiro实现用户权限验证的增删改查实例demo</title>
    <url>/805/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这个是学习shiro过程中一个demo产物…</p>
<p>也为了自己毕业设计权限那块而学习的…</p>
<p>学习计划也完成了shiro..</p>
<p>接下来应该到memcache和radis的缓存技术了…</p>
<hr>
<p><del>emmm代码明天才发吧…</del></p>
<p>密码是明文创建的..这次没有使用shiro内置的加密..</p>
<p>一步一步完善吧…学习为主的一个框架..</p>
<p>效果图:</p>
<p><img src="http://qn.199604.com/typoraImg/mulu20171202025610.jpg" alt="img"><img src="http://qn.199604.com/typoraImg/user20171202025744-1024x453.jpg" alt="img"><img src="http://qn.199604.com/typoraImg/list20171202025727-1024x398.jpg" alt="img"></p>
<p>数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_human</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_human`;</span><br><span class="line">CREATE TABLE `t_human` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(20) DEFAULT NULL,</span><br><span class="line">  `age` int(3) DEFAULT NULL,</span><br><span class="line">  `sex` int(2) DEFAULT NULL,</span><br><span class="line">  `remark` varchar(255) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_human</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `t_human` VALUES (&#x27;17&#x27;, &#x27;阿达&#x27;, &#x27;2&#x27;, &#x27;2&#x27;, &#x27;1223123&#x27;);</span><br><span class="line">INSERT INTO `t_human` VALUES (&#x27;18&#x27;, &#x27;阿达&#x27;, &#x27;2&#x27;, &#x27;2&#x27;, &#x27;1223123&#x27;);</span><br><span class="line">INSERT INTO `t_human` VALUES (&#x27;19&#x27;, &#x27;阿达&#x27;, &#x27;2&#x27;, &#x27;2&#x27;, &#x27;1223123&#x27;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_permission</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_permission`;</span><br><span class="line">CREATE TABLE `t_permission` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `permissionName` varchar(50) DEFAULT NULL,</span><br><span class="line">  `roleId` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `roleId` (`roleId`),</span><br><span class="line">  CONSTRAINT `t_permission_ibfk_1` FOREIGN KEY (`roleId`) REFERENCES `t_role` (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_permission</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `t_permission` VALUES (&#x27;1&#x27;, &#x27;admin:*&#x27;, &#x27;1&#x27;);</span><br><span class="line">INSERT INTO `t_permission` VALUES (&#x27;2&#x27;, &#x27;user:update:*&#x27;, &#x27;2&#x27;);</span><br><span class="line">INSERT INTO `t_permission` VALUES (&#x27;3&#x27;, &#x27;user:update:*&#x27;, &#x27;1&#x27;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_role`;</span><br><span class="line">CREATE TABLE `t_role` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `roleName` varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `t_role` VALUES (&#x27;1&#x27;, &#x27;admin&#x27;);</span><br><span class="line">INSERT INTO `t_role` VALUES (&#x27;2&#x27;, &#x27;user&#x27;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_user`;</span><br><span class="line">CREATE TABLE `t_user` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `userName` varchar(20) DEFAULT NULL,</span><br><span class="line">  `password` varchar(100) DEFAULT NULL,</span><br><span class="line">  `roleId` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `roleId` (`roleId`),</span><br><span class="line">  CONSTRAINT `t_user_ibfk_1` FOREIGN KEY (`roleId`) REFERENCES `t_role` (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `t_user` VALUES (&#x27;6&#x27;, &#x27;admin&#x27;, &#x27;admin&#x27;, &#x27;1&#x27;);</span><br><span class="line">INSERT INTO `t_user` VALUES (&#x27;7&#x27;, &#x27;user&#x27;, &#x27;user&#x27;, &#x27;2&#x27;);</span><br></pre></td></tr></table></figure>

<p>代码在github:<a href="https://github.com/jiomer/shiro_demo">https://github.com/jiomer/shiro_demo</a></p>
<p>晚安</p>
<p><img src="http://qn.199604.com/typoraImg/20171201002958-1024x768.jpg"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>ssm</tag>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>Tez-On-Hive环境搭建手札</title>
    <url>/1164/</url>
    <content><![CDATA[<p>下载文档在文章末，直接复制上来实在太难看了…算了睡觉了一些搭建的手札罢了</p>
<hr>
<h1 id="1-服务器环境配置"><a href="#1-服务器环境配置" class="headerlink" title="1. *服务器环境配置*"></a><strong>1.</strong> <em><strong>*服务器环境配置*</strong></em></h1><p>所有配置均使用****root****用户操作完成</p>
<h2 id="1-1-资源准备"><a href="#1-1-资源准备" class="headerlink" title="1.1. *资源准备*"></a><strong>1.1.</strong> <em><strong>*资源准备*</strong></em></h2><p>三台服务器，操作系统为：<em><strong>*CentOS release 6.8*</strong></em></p>
<p>IP为别为：</p>
<p>10.0.109.99</p>
<p>10.0.109.100</p>
<p>10.0.109.101</p>
<h2 id="1-2-修改主机名"><a href="#1-2-修改主机名" class="headerlink" title="1.2. *修改主机名*"></a><strong>1.2.</strong> <em><strong>*修改主机名*</strong></em></h2><p>修改三台服务器主机名，修改****/etc/sysconfig/network****文件</p>
<p>master节点：<em><strong>*jttda-master*</strong></em></p>
<p>slave节点1：<em><strong>*jttda-slave*</strong></em><em><strong>*1*</strong></em></p>
<p>slave节点2：<em><strong>*jttda-slave*</strong></em><em><strong>*2*</strong></em></p>
<p>每台服务器都修改****/etc/hosts****文件，添加如下域名映射</p>
<p>10.0.109.99 jttda-master10.0.109.100 jttda-slave110.0.109.101 jttda-slave2</p>
<h2 id="1-3-安装JDK"><a href="#1-3-安装JDK" class="headerlink" title="1.3. *安装JDK*"></a><strong>1.3.</strong> <em><strong>*安装JDK*</strong></em></h2><h3 id="1-3-1-卸载openJDK"><a href="#1-3-1-卸载openJDK" class="headerlink" title="1.3.1. *卸载openJDK*"></a><strong>1.3.1.</strong> <em><strong>*卸载openJDK*</strong></em></h3><p>查看centos已安装的jdk</p>
<p><em><strong>*rpm –qa | grep gcj*</strong></em></p>
<p><em><strong>*rpm –qa | grep jdk*</strong></em></p>
<p>删除查询到的openJDK相关的安装包</p>
<p><em><strong>*rpm -e –nodeps ****</strong></em></p>
<h3 id="1-3-2-安装oracle-JDK"><a href="#1-3-2-安装oracle-JDK" class="headerlink" title="1.3.2. *安装oracle JDK*"></a><strong>1.3.2.</strong> <em><strong>*安装oracle JDK*</strong></em></h3><p>Oracle官网下载安装包<em><strong>*jdk-*</strong></em><em><strong>*8*</strong></em><em><strong>*u*</strong></em><em><strong>*152*</strong></em><em><strong>*-linux-x*</strong></em><em><strong>*64*</strong></em><em><strong>*.tar.gz*</strong></em></p>
<p>将安装包解压到指定目录</p>
<p><em><strong>*tar –zxvf*</strong></em> <em><strong>*jdk-*</strong></em><em><strong>*8*</strong></em><em><strong>*u*</strong></em><em><strong>*152*</strong></em><em><strong>*-linux-x*</strong></em><em><strong>*64*</strong></em><em><strong>*.tar.gz*</strong></em> <em><strong>*–C /usr/local/*</strong></em></p>
<p>修改<em><strong>*/etc/*</strong></em>****profile****，添加如下配置</p>
<p>export JAVA_HOME=/usr/local/jdk1.8.0_152export PATH=$PATH:$JAVA_HOME/bin</p>
<h2 id="1-4-配置无密码登陆"><a href="#1-4-配置无密码登陆" class="headerlink" title="1.4. *配置无密码登陆*"></a><strong>1.4.</strong> <em><strong>*配置无密码登陆*</strong></em></h2><p>在master节点上面按照如下顺序执行：</p>
<p>****ssh-keygen****，一路回车到执行结束</p>
<p>****ssh-copy-id root@jttda-slave1*<em><strong>，输入</strong></em>*yes****，回车</p>
<p>****ssh-copy-id root@jttda-slave2*<em><strong>，输入</strong></em>*yes****，回车</p>
<h2 id="1-5-关闭防火墙"><a href="#1-5-关闭防火墙" class="headerlink" title="1.5. *关闭防火墙*"></a><strong>1.5.</strong> <em><strong>*关闭防火墙*</strong></em></h2><p>关闭防火墙</p>
<p><em><strong>*service iptables stop*</strong></em></p>
<p>设置开机不启动</p>
<p><em><strong>*chkconfig iptables off*</strong></em></p>
<h2 id="1-6-NTP-时间同步"><a href="#1-6-NTP-时间同步" class="headerlink" title="1.6. *NTP**时间同步*"></a><strong>1.6.</strong> <em><strong>*NTP*</strong></em><em><strong>*时间同步*</strong></em></h2><p>设置提供ntp同步的服务器，修改各节点****/etc/ntp.conf****文件</p>
<p>开启ntp服务</p>
<p><em><strong>*service ntpd start*</strong></em></p>
<p>设置开机启动</p>
<p><em><strong>*chkconfig ntpd on*</strong></em></p>
<p>查看ntp同步状态</p>
<p><em><strong>*ntpstat*</strong></em></p>
<h1 id="2-H-adoop安装配置"><a href="#2-H-adoop安装配置" class="headerlink" title="2. *H**adoop安装配置*"></a><strong>2.</strong> <em><strong>*H*</strong></em><em><strong>*adoop安装配置*</strong></em></h1><h2 id="2-1-获取安装包"><a href="#2-1-获取安装包" class="headerlink" title="2.1. *获取安装包*"></a><strong>2.1.</strong> <em><strong>*获取安装包*</strong></em></h2><p><img src="http://qn.199604.com/typoraImg/img1-1024x410.png" alt="img"></p>
<p>如上图所示，选择所需版本，下载得到压缩包：<em><strong>*hadoop*</strong></em><em><strong>*-2.7.5.tar.gz*</strong></em></p>
<p>将压缩包解压到选定的目录：<em><strong>*tar -zxvf hadoop-2.7.5.tar.gz -C /home/hadoop/install/*</strong></em></p>
<h2 id="2-2-设置环境变量"><a href="#2-2-设置环境变量" class="headerlink" title="2.2. *设置环境变量*"></a><strong>2.2.</strong> <em><strong>*设置环境变量*</strong></em></h2><p>在****每个节点*<em><strong>的</strong></em>*/etc/profile****文件中添加如下内容</p>
<p>export HADOOP_HOME=/home/hadoop/install/hadoop-2.7.5export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport HADOOP_OPTS=”-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR”export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</p>
<h2 id="2-3-创建目录"><a href="#2-3-创建目录" class="headerlink" title="2.3. *创建目录*"></a><strong>2.3.</strong> <em><strong>*创建目录*</strong></em></h2><p>在每台服务器本地创建目录：</p>
<p><em><strong>*mkdir -p /home/mmds/hadoopdata/dfs/data*</strong></em></p>
<p><em><strong>*mkdir -p /home/mmds/hadoopdata/dfs/name*</strong></em></p>
<p><em><strong>*mkdir -p /home/mmds/hadoopdata/tmp*</strong></em></p>
<h2 id="2-4-修改配置文件"><a href="#2-4-修改配置文件" class="headerlink" title="2.4. *修改配置文件*"></a><strong>2.4.</strong> <em><strong>*修改配置文件*</strong></em></h2><p>进入****$HADOOP_HOME/etc/hadoop****目录</p>
<h3 id="2-4-1-修改-slaves-文件"><a href="#2-4-1-修改-slaves-文件" class="headerlink" title="2.4.1. *修改**slaves**文件*"></a><strong>2.4.1.</strong> <em><strong>*修改*</strong></em><em><strong>*slaves*</strong></em><em><strong>*文件*</strong></em></h3><p>添加DataNode主机名列表，每个主机名一行</p>
<p>jttda-slave1jttda-slave2</p>
<h3 id="2-4-2-修改-core-site-xml-文件"><a href="#2-4-2-修改-core-site-xml-文件" class="headerlink" title="2.4.2. *修改**core-site.xml**文件*"></a><strong>2.4.2.</strong> <em><strong>*修改*</strong></em><em><strong>*core-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p><configuration><property><name>fs.defaultFS</name><value>hdfs://jttda-master:9000</value></property><property><name>hadoop.tmp.dir</name><value>file:/data/hadoop/tmp</value></property><property><name>io.file.buffer.size</name><value>131702</value></property></configuration></p>
<h3 id="2-4-3-修改-hdfs-site-xml-文件"><a href="#2-4-3-修改-hdfs-site-xml-文件" class="headerlink" title="2.4.3. *修改**hdfs-site.xml**文件*"></a><strong>2.4.3.</strong> <em><strong>*修改*</strong></em><em><strong>*hdfs-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p><configuration><property><name>dfs.namenode.name.dir</name><value>file:/data/hadoop/dfs/name</value></property><property><name>dfs.datanode.data.dir</name><value>file:/data/hadoop/dfs/data</value></property><property><name>dfs.replication</name><value>2</value></property><property><name>dfs.namenode.secondary.http-address</name><value>jttda-master:9001</value></property><property><name>dfs.webhdfs.enabled</name><value>true</value></property><property><name>dfs.balance.bandwidthPerSec</name><value>10485760</value></property></configuration></p>
<h3 id="2-4-4-修改-mapred-site-xml-文件"><a href="#2-4-4-修改-mapred-site-xml-文件" class="headerlink" title="2.4.4. *修改**mapred-site.xml**文件*"></a><strong>2.4.4.</strong> <em><strong>*修改*</strong></em><em><strong>*mapred-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p>修改模版文件名</p>
<p><em><strong>*mv mapred-site.xml.template mapred-site.xml*</strong></em></p>
<p><configuration><property><name>mapreduce.framework.name</name><value>yarn</value></property><property><name>mapreduce.jobhistory.address</name><value>jttda-master:10020</value></property><property><name>mapreduce.jobhistory.webapp.address</name><value>jttda-master:19888</value></property><property><name>mapreduce.map.memory.mb</name><value>2048</value></property><property><name>mapreduce.reduce.memory.mb</name><value>2048</value></property><property><name>mapreduce.map.java.opts</name><value>-Xmx1536M</value></property><property><name>mapreduce.reduce.java.opts</name><value>-Xmx1536M</value></property><property><name>mapred.tasktracker.map.tasks.maximum</name><value>8</value></property><property><name>mapred.tasktracker.reduce.tasks.maximum</name><value>12</value></property></configuration></p>
<h3 id="2-4-5-修改-yarn-site-xml-文件"><a href="#2-4-5-修改-yarn-site-xml-文件" class="headerlink" title="2.4.5. *修改**yarn-site.xml**文件*"></a><strong>2.4.5.</strong> <em><strong>*修改*</strong></em><em><strong>*yarn-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p><configuration><property><name>yarn.resourcemanager.hostname</name><value>jttda-master</value></property><property><name>yarn.nodemanager.aux-services</name><value>mapreduce_shuffle</value></property><property><name>yarn.nodemanager.resource.memory-mb</name><value>51200</value></property><property><name>yarn.scheduler.minimum-allocation-mb</name><value>2048</value></property><property><name>yarn.scheduler.maximum-allocation-mb</name><value>10240</value></property></configuration></p>
<h3 id="2-4-6-修改-hadoop-env-sh-文件"><a href="#2-4-6-修改-hadoop-env-sh-文件" class="headerlink" title="2.4.6. *修改**hadoop-env.sh**文件*"></a><strong>2.4.6.</strong> <em><strong>*修改*</strong></em><em><strong>*hadoop-env.sh*</strong></em><em><strong>*文件*</strong></em></h3><p>修改如下两个配置项</p>
<p>export JAVA_HOME=/usr/local/jdk1.8.0_152export HADOOP_HEAPSIZE=2048</p>
<h3 id="2-4-7-修改-yarn-env-sh-文件"><a href="#2-4-7-修改-yarn-env-sh-文件" class="headerlink" title="2.4.7. *修改**yarn-env.sh**文件*"></a><strong>2.4.7.</strong> <em><strong>*修改*</strong></em><em><strong>*yarn-env.sh*</strong></em><em><strong>*文件*</strong></em></h3><p>修改如下两个配置项</p>
<p>export JAVA_HOME=/usr/local/jdk1.8.0_152export YARN_HEAPSIZE=2048</p>
<p>配置完成：</p>
<p><em><strong>*将*</strong></em><em><strong>*/usr/local/hadoop-2.7.5*</strong></em><em><strong>*整个目录复制到各节点机器上，放在*</strong></em><em><strong>*/usr/local/*</strong></em><em><strong>*目录下*</strong></em></p>
<p><em><strong>*scp –r /home/hadoop/install/hadoop-2.7.5 jttda-slave50:/home/hadoop/install/hadoop-2.7.5*</strong></em></p>
<h2 id="2-5-启动Hadoop"><a href="#2-5-启动Hadoop" class="headerlink" title="2.5. *启动Hadoop*"></a><strong>2.5.</strong> <em><strong>*启动Hadoop*</strong></em></h2><p>在jttda-master服务器上，进入$HADOOP_HOME目录</p>
<p>格式化NameNode：<em><strong>*hdfs namenode -format*</strong></em></p>
<p>启动NameNode和DataNode守护进程：<em><strong>*sbin/start-dfs.sh*</strong></em></p>
<p>启动ResourceManager和NodeManager守护进程：<em><strong>*sbin/start-yarn.sh*</strong></em></p>
<h2 id="2-6-验证-Hadoop"><a href="#2-6-验证-Hadoop" class="headerlink" title="2.6. *验证**Hadoop*"></a><strong>2.6.</strong> <em><strong>*验证*</strong></em><em><strong>*Hadoop*</strong></em></h2><p>执行****jps****命令，有如下进程，说明Hadoop启动正常</p>
<h1 id="jps59024-Jps153505-ResourceManager152951-NameNode156206-RunJar153247-SecondaryNameNode"><a href="#jps59024-Jps153505-ResourceManager152951-NameNode156206-RunJar153247-SecondaryNameNode" class="headerlink" title="jps59024 Jps153505 ResourceManager152951 NameNode156206 RunJar153247 SecondaryNameNode"></a>jps59024 Jps153505 ResourceManager152951 NameNode156206 RunJar153247 SecondaryNameNode</h1><h1 id="3-H-ive安装配置"><a href="#3-H-ive安装配置" class="headerlink" title="3. *H**ive安装配置*"></a><strong>3.</strong> <em><strong>*H*</strong></em><em><strong>*ive安装配置*</strong></em></h1><h2 id="3-1-获取安装包"><a href="#3-1-获取安装包" class="headerlink" title="3.1. *获取安装包*"></a><strong>3.1.</strong> <em><strong>*获取安装包*</strong></em></h2><p><img src="http://qn.199604.com/typoraImg/img3-1024x369.png" alt="img"></p>
<p>如上图所示，选择所需版本，下载得到压缩包：<em><strong>*apache-hive-2.2.0-bin.tar.gz*</strong></em></p>
<p>将压缩包解压到选定的目录：</p>
<p><em><strong>*tar -zxvf apache-hive-2.2.0-bin.tar.gz -C /home/hadoop/install/*</strong></em></p>
<h2 id="3-2-设置环境变量"><a href="#3-2-设置环境变量" class="headerlink" title="3.2. *设置环境变量*"></a><strong>3.2.</strong> <em><strong>*设置环境变量*</strong></em></h2><p>在****master节点jttda-master*<em><strong>的</strong></em>*/etc/profile****文件中添加如下内容</p>
<p>export HIVE_HOME=/usr/local/apache-hive-2.2.0-binexport PATH=$HIVE_HOME/bin:$PATH</p>
<h2 id="3-3-创建metastore库"><a href="#3-3-创建metastore库" class="headerlink" title="3.3. *创建metastore库*"></a><strong>3.3.</strong> <em><strong>*创建metastore库*</strong></em></h2><p>使用Oracle Database 11g作为hive的metastore数据库，创建对应用户并授权</p>
<p>CREATE USER <em><strong>*hive*</strong></em> IDENTIFIED BY <em><strong>*hive*</strong></em>;GRANT <em><strong>*SELECT_CATALOG_ROLE*</strong></em> TO <em><strong>*hive*</strong></em>;GRANT <em><strong>*CONNECT, RESOURCE*</strong></em> TO <em><strong>*hive*</strong></em>;</p>
<p>在oracle官网下载JDBC驱动：<em><strong>*ojdbc*</strong></em>****6.jar*<em><strong>，将其放到</strong></em>*$HIVE_HOME/lib****目录下</p>
<h2 id="3-4-创建目录"><a href="#3-4-创建目录" class="headerlink" title="3.4. *创建目录*"></a><strong>3.4.</strong> <em><strong>*创建目录*</strong></em></h2><p>在hdfs 中创建下面的目录 ，并且授权</p>
<p>hdfs dfs -mkdir -p /user/hive/warehousehdfs dfs -mkdir -p /user/hive/tmphdfs dfs -chmod -R 777 /user/hive/warehousehdfs dfs -chmod -R 777 /user/hive/tmp</p>
<p>创建本地目录，进入<em><strong>*$*</strong></em>****HIVE_HOME****目录</p>
<p><em><strong>*mkdir log*</strong></em></p>
<p><em><strong>*mkdir execlog*</strong></em></p>
<p><em><strong>*mkdir tmp*</strong></em></p>
<h2 id="3-5-修改配置文件"><a href="#3-5-修改配置文件" class="headerlink" title="3.5. *修改配置文件*"></a><strong>3.5.</strong> <em><strong>*修改配置文件*</strong></em></h2><p>进入****$HIVE_HOME/conf****目录，复制默认配置文件并改名</p>
<p>cp hive-env.sh.template hive-env.shcp hive-default.xml.template hive-site.xmlcp hive-log4j2.properties.template hive-log4j2.propertiescp hive-exec-log4j2.properties.template hive-exec-log4j2.properties</p>
<h3 id="3-5-1-修改-hive-env-sh-文件"><a href="#3-5-1-修改-hive-env-sh-文件" class="headerlink" title="3.5.1. *修改**hive**-env.sh**文件*"></a><strong>3.5.1.</strong> <em><strong>*修改*</strong></em><em><strong>*hive*</strong></em><em><strong>*-env.sh*</strong></em><em><strong>*文件*</strong></em></h3><p>修改以下配置项</p>
<p>export JAVA_HOME=/usr/local/jdk1.8.0_152export HADOOP_HOME=/usr/local/hadoop-2.7.5export HIVE_HOME=/usr/local/apache-hive-2.2.0-binexport HIVE_CONF_DIR=/usr/local/apache-hive-2.2.0-bin/conf</p>
<h3 id="3-5-2-修改-hive-site-xml-文件"><a href="#3-5-2-修改-hive-site-xml-文件" class="headerlink" title="3.5.2. *修改**hive-site.xml**文件*"></a><strong>3.5.2.</strong> <em><strong>*修改*</strong></em><em><strong>*hive-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p><configuration><property><name>hive.exec.scratchdir</name><value>/user/hive/tmp</value></property><property><name>hive.metastore.warehouse.dir</name><value>/user/hive/warehouse</value></property><property><name>hive.querylog.location</name><value>/usr/local/apache-hive-2.2.0-bin/tmp/${user.name}</value></property><property><name>javax.jdo.option.ConnectionURL</name><value>jdbc:oracle:thin:@10.0.109.8:1521:sjzx8</value></property><property><name>javax.jdo.option.ConnectionDriverName</name><value>oracle.jdbc.driver.OracleDriver</value></property><property><name>javax.jdo.option.ConnectionUserName</name><value>hive</value></property><property><name>javax.jdo.option.ConnectionPassword</name><value>hive</value></property></configuration></p>
<p>并在****hive-site.xml****中</p>
<p>所有<em><strong>*${system:java.io.tmpdir}*<em><strong>替换为</strong></em>*/usr/local/apache-hive-2.2.0-bin/tmp/*</strong></em></p>
<p>所有<em><strong>*{system:user.name}*<em><strong>替换为</strong></em>*{user.name}*</strong></em></p>
<h3 id="3-5-3-修改-hive-log4j2-properties-文件"><a href="#3-5-3-修改-hive-log4j2-properties-文件" class="headerlink" title="3.5.3. *修改**hive-log4j2.properties**文件*"></a><strong>3.5.3.</strong> <em><strong>*修改*</strong></em><em><strong>*hive-log4j2.properties*</strong></em><em><strong>*文件*</strong></em></h3><p>property.hive.log.dir = /usr/local/apache-hive-2.2.0-bin/log/${sys:user.name}</p>
<h3 id="3-5-4-修改-hive-exec-log4j2-properties-文件"><a href="#3-5-4-修改-hive-exec-log4j2-properties-文件" class="headerlink" title="3.5.4. *修改**hive-exec-log4j2.properties**文件*"></a><strong>3.5.4.</strong> <em><strong>*修改*</strong></em><em><strong>*hive-exec-log4j2.properties*</strong></em><em><strong>*文件*</strong></em></h3><p>property.hive.log.dir = /usr/local/apache-hive-2.2.0-bin/execlog/${sys:user.name}</p>
<h3 id="3-5-5-修改-core-site-xml-文件"><a href="#3-5-5-修改-core-site-xml-文件" class="headerlink" title="3.5.5. *修改**core-site.xml**文件*"></a><strong>3.5.5.</strong> <em><strong>*修改*</strong></em><em><strong>*core-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p>进入****$HADOOP_HOME/etc/hadoop****目录给beeline登录时的用户root配置权限，增加如下的配置项</p>
<p><configuration><property><name>hadoop.proxyuser.root.groups</name><value>root</value></property><property><name>hadoop.proxyuser.root.hosts</name><value>*</value></property></configuration></p>
<h2 id="3-6-启动Hive"><a href="#3-6-启动Hive" class="headerlink" title="3.6. *启动Hive*"></a><strong>3.6.</strong> <em><strong>*启动Hive*</strong></em></h2><h3 id="3-6-1-初始化"><a href="#3-6-1-初始化" class="headerlink" title="3.6.1. *初始化*"></a><strong>3.6.1.</strong> <em><strong>*初始化*</strong></em></h3><p><em><strong>*schematool -dbType*</strong></em> <em><strong>*mysql*</strong></em> <em><strong>*-initSchema*</strong></em></p>
<h3 id="3-6-2-CLI启动Hive"><a href="#3-6-2-CLI启动Hive" class="headerlink" title="3.6.2. *CLI启动Hive*"></a><strong>3.6.2.</strong> <em><strong>*CLI启动Hive*</strong></em></h3><p>在命令行输入命令：<em><strong>*hive*</strong></em></p>
<h3 id="3-6-3-使用beeline"><a href="#3-6-3-使用beeline" class="headerlink" title="3.6.3. *使用beeline*"></a><strong>3.6.3.</strong> <em><strong>*使用beeline*</strong></em></h3><p>启动hiveserver2：<em><strong>*nohup*</strong></em> <em><strong>*hive –service hiveserver2*</strong></em> &gt;/dev/null 2&gt;&amp;1 <em><strong>*&amp;*</strong></em></p>
<p>查看hiveserver2启动状态：<em><strong>*netstat -nptl | grep 10000*</strong></em></p>
<p>启动beeline</p>
<p>在命令行输入命令：<em><strong>*beeline*</strong></em></p>
<p>连接Hive：<em><strong>*!connect jdbc:hive2://localhost:10000 root root*</strong></em></p>
<h1 id="4-T-ez安装配置"><a href="#4-T-ez安装配置" class="headerlink" title="4. *T**ez安装配置*"></a><strong>4.</strong> <em><strong>*T*</strong></em><em><strong>*ez安装配置*</strong></em></h1><h2 id="4-1-获取安装包"><a href="#4-1-获取安装包" class="headerlink" title="4.1. *获取安装包*"></a><strong>4.1.</strong> <em><strong>*获取安装包*</strong></em></h2><p><img src="http://qn.199604.com/typoraImg/img4-1024x206.png" alt="img"></p>
<p>如上图所示，选择所需版本，下载得到压缩包：apache-tez-0.9.0-bin.tar.gz</p>
<p>将压缩包解压到选定的目录：</p>
<p><em><strong>*tar –zxvf apache- tez-0.9.0-bin.tar.gz –C /usr/local/*</strong></em></p>
<h2 id="4-2-上传运行包"><a href="#4-2-上传运行包" class="headerlink" title="4.2. *上传运行包*"></a><strong>4.2.</strong> <em><strong>*上传运行包*</strong></em></h2><p>在****apache-tez-0.9.0-bin/share*<em><strong>下有个</strong></em>*tez.tar.gz****压缩包，把它上传到hdfs上面</p>
<p><em><strong>*hadoop fs -mkdir -p /user/tez*</strong></em></p>
<p><em><strong>*hadoop fs -put tez.tar.gz /user/tez*</strong></em></p>
<h2 id="4-3-修改配置文件"><a href="#4-3-修改配置文件" class="headerlink" title="4.3. *修改配置文件*"></a><strong>4.3.</strong> <em><strong>*修改配置文件*</strong></em></h2><p>进入****$HADOOP_HOME/etc/hadoop****目录</p>
<h3 id="4-3-1-新建-tez-site-xml-文件"><a href="#4-3-1-新建-tez-site-xml-文件" class="headerlink" title="4.3.1. *新建**tez-site.xml**文件*"></a><strong>4.3.1.</strong> <em><strong>*新建*</strong></em><em><strong>*tez-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p><configuration><property><name>tez.lib.uris</name><value>/user/tez/tez.tar.gz</value></property></configuration></p>
<h3 id="4-3-2-修改-mapred-site-xml-文件"><a href="#4-3-2-修改-mapred-site-xml-文件" class="headerlink" title="4.3.2. *修改**mapred-site.xml**文件*"></a><strong>4.3.2.</strong> <em><strong>*修改*</strong></em><em><strong>*mapred-site.xml*</strong></em><em><strong>*文件*</strong></em></h3><p><configuration><property><name>mapreduce.framework.name</name><value>yarn-tez</value></property>&lt;/configuration</p>
<h3 id="4-3-3-修改-hadoop-env-sh-文件"><a href="#4-3-3-修改-hadoop-env-sh-文件" class="headerlink" title="4.3.3. *修改**hadoop-env.sh**文件*"></a><strong>4.3.3.</strong> <em><strong>*修改*</strong></em><em><strong>*hadoop-env.sh*</strong></em><em><strong>*文件*</strong></em></h3><p>export TEZ_HOME=/usr/local/apache-tez-0.9.0-binfor jar in <code>ls $TEZ_HOME |grep jar</code>; doexport HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$TEZ_HOME/$jardonefor jar in <code>ls $TEZ_HOME/lib</code>; doexport HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$TEZ_HOME/lib/$jardone</p>
<h2 id="4-4-测试Tez"><a href="#4-4-测试Tez" class="headerlink" title="4.4. *测试Tez*"></a><strong>4.4.</strong> <em><strong>*测试Tez*</strong></em></h2><p>在hdfs上创建****/tinput*<em><strong>和</strong></em>*/toutput****目录</p>
<p>准备测试文件</p>
<p><em><strong>*echo “Hello World Hello Tez” &gt; file01*</strong></em>  </p>
<p><em><strong>*echo “Hello World Goodbye Tez” &gt; file02*</strong></em></p>
<p>将测试文件file01和file02上传到hdfs上的****/tinput****目录</p>
<p><em><strong>*hdfs dfs -mkdir /tinput*</strong></em></p>
<p><em><strong>*hdfs dfs -put file0* /tinput*</strong></em></p>
<p>执行如下命令测试tez是否配置成功，进去****$TEZ_HOME****目录</p>
<p><em><strong>*hadoop jar tez-examples-0.9.0.jar orderedwordcount /tinput /toutput*</strong></em></p>
<h1 id="5-测试用例"><a href="#5-测试用例" class="headerlink" title="5. 测试用例"></a>5. 测试用例</h1><h1 id="6-备注"><a href="#6-备注" class="headerlink" title="6. 备注"></a>6. 备注</h1><p>将$HIVE_HOME/lib/log4j-slf4j-impl-2.6.2.jar和$TEZ_HOME/lib/slf4j-log4j12-1.7.10.jar删除，否则会与$HADOOP_HOME/LIB/slf4j-log4j12-1.7.10.jar重复</p>
<hr>
<p>算了直接弄上来太难看了，弄成了文档–&gt;</p>
<p><a href="http://qn.199604.com/Tez-On-Hive%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.docx"><strong>下载地址1：七牛下载</strong></a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>thymeleaf使用th:onclick()遇到的一点小坑</title>
    <url>/1081/</url>
    <content><![CDATA[<p>因为最近都一直没有用thymeleaf，于是温习了一下，但还是th:onclick()传参直接报错。</p>
<p>于是乎csdn普遍都是在调用之前添加javascript申明?</p>
<p><button class="btn" th:onclick="'javascript:functionName(\''+${xx.xx}+'\');'">（spring boot 1.3版本没问题）</p>
<p>但是spring boot 新版本（2.xx）也会出现报错</p>
<p>于是解决办法可以用thymeleaf中的内联[[]]解决:</p>
<p><button class="btn" th:onclick="functionName([[${xx.xx}]]);"></button></p>
<p>最后水一句：wp最新的编辑器就是一坨屎!!</p>
<p>内联介绍–&gt;<a href="https://www.cnblogs.com/suncj/p/4031486.html">https://www.cnblogs.com/suncj/p/4031486.html</a></p>
<p>参考手册–&gt;<a href="https://blog.csdn.net/zrk1000/article/details/72667478">https://blog.csdn.net/zrk1000/article/details/72667478</a></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat Manager动态部署</title>
    <url>/785/</url>
    <content><![CDATA[<p>动态部署是指可以在服务器启动之后部署web应用程序，而不用重新启动服务器。动态部署要用到服务器提供的manager. 如果在$CATALINA_HOME\webapps\下没有该文件，你必须去重新下载tomcat，否则不能完成以下的功能。 要想使用该管理程序必须首先编辑$CATALINA_HOME\conf\tomcat-users.xml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;tomcat-users&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line"> &lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line"> &lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line"> &lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;test&quot; password=&quot;test&quot; roles=&quot;manager-gui,manager-script,manager-jmx,manager-status&quot;/&gt;</span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure>

<p>注：目前roles使用manager已失效，使用manager-gui替代。</p>
<p>然后在浏览器中键入如下地址：?</p>
<p><a href="http://localhost:8080/">http://localhost:8080/</a></p>
<p>点击左边的Manager APP链接，提示输入用户名和密码</p>
<p>就打上我们在tomcat-users.xml文件配置的账号密码</p>
<p>然后进入界面能看到?WAR file to deploy</p>
<p>上传你项目的war包就OK了</p>
<p>如我上传的项目是Blog</p>
<p><img src="http://qn.199604.com/typoraImg/20171126221129.jpg"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat启动中删除war包导致项目文件夹丢失问题</title>
    <url>/1505/</url>
    <content><![CDATA[<p>今天早上把公司web项目打war包到服务器tomcat上部署。因为tomcat自己会解压war,但是在我删除war包后，项目文件夹什么的也一并丢失不见了~我在删除前把文件夹名称更改了也会一并删除/丢失。</p>
<p>然后我试着把tomcat服务先停了<del>再删除war问题解决</del></p>
<p>因为导致这个问题的原因可能是tomcat服务在运行问题</p>
<p>所以解决方法：</p>
<p>1.部署war后，如要删除war包必须先停tomcat服务再删除war 包。</p>
<p>2.或者直接上传war包解压编译好的文件</p>
<p>以上就是我今天早上遇到的坑~又记录一下</p>
]]></content>
      <categories>
        <category>项目遇到的坑</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>typora上传图片到七牛存储</title>
    <url>/1568/</url>
    <content><![CDATA[<p>最近从有道云笔记转到typora，只能说真他妈爽~ 最近看了知乎大神的 <a href="https://zhuanlan.zhihu.com/p/137426939?utm_source=qq&utm_medium=social&utm_oi=748992839609782272">最强markdown编辑器typora图床教程-七牛版</a> 配置 以前图片都是直接保存在本地文件夹，这次爽了，我直接可以放到七牛上(每个月有10G免费流量–&gt;http)认证的时候好像要交个10块钱押金？忘记了..</p>
<hr>
<p>步骤：</p>
<h5 id="1-确保typora的版本在0-9-86以上"><a href="#1-确保typora的版本在0-9-86以上" class="headerlink" title="1.确保typora的版本在0.9.86以上"></a>1.确保typora的版本在0.9.86以上</h5><p>导航-帮助-关于 <img src="http://qn.199604.com/typoraImg/image-20200517161720490.png" alt="image-20200517161720490"> 如果不是这个版本，导航-帮助-检查更新，确保版本为最新的</p>
<h5 id="2-偏好设置"><a href="#2-偏好设置" class="headerlink" title="2.偏好设置"></a>2.偏好设置</h5><p>导航-文件-偏好设置-图片 按照下面图进行设置： <img src="http://qn.199604.com/typoraImg/image-20200517163120586.png" alt="image-20200517163120586"> 点击下图的：下载或更新 <img src="http://qn.199604.com/typoraImg/image-20200517163314362.png" alt="image-20200517163314362"></p>
<h5 id="3-注册七牛云账号，并实名认证"><a href="#3-注册七牛云账号，并实名认证" class="headerlink" title="3.注册七牛云账号，并实名认证"></a>3.注册七牛云账号，并实名认证</h5><p>访问下面的链接： <a href="https://portal.qiniu.com/signup?code=1hmaclwcimk42">https://portal.qiniu.com/</a> 七牛配置请看知乎大神的 <a href="https://zhuanlan.zhihu.com/p/137426939?utm_source=qq&utm_medium=social&utm_oi=748992839609782272">最强markdown编辑器typora图床教程-七牛版</a> 配置，我这边感觉不像累赘 直接跳到正式配置这里的坑，因为知乎大神默认只是华南的存储区域，这样如果其他区域配置就有问题</p>
<h5 id="4-配置上传"><a href="#4-配置上传" class="headerlink" title="4.配置上传"></a>4.配置上传</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;picBed&quot;: &#123;</span><br><span class="line">    &quot;uploader&quot;: &quot;qiniu&quot;,</span><br><span class="line">    &quot;qiniu&quot;: &#123;</span><br><span class="line">      &quot;accessKey&quot;: &quot;&quot;,</span><br><span class="line">      &quot;secretKey&quot;: &quot;&quot;,</span><br><span class="line">      &quot;bucket&quot;: &quot;&quot;, // 存储空间名</span><br><span class="line">      &quot;url&quot;: &quot;http://&quot;, // 自定义域名</span><br><span class="line">      &quot;area&quot;:  &quot;z2&quot;, // 存储区域编号</span><br><span class="line">      &quot;options&quot;: &quot;&quot;, // 网址后缀，比如？imgslim</span><br><span class="line">      &quot;path&quot;: &quot;img/&quot; // 自定义存储路径，比如 img/</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;picgoPlugins&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>“area”: “z2”, // 存储区域编号，这个配置，如果你是华南，可以默认，如果是华南以外：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">z0:华东</span><br><span class="line">z1:华北</span><br><span class="line">z2:华南</span><br><span class="line">zNa0:北美</span><br></pre></td></tr></table></figure>

<h5 id="引用：知乎大神：夏2同学的-最强markdown编辑器typora图床教程-七牛版-配置"><a href="#引用：知乎大神：夏2同学的-最强markdown编辑器typora图床教程-七牛版-配置" class="headerlink" title="引用：知乎大神：夏2同学的 最强markdown编辑器typora图床教程-七牛版 配置"></a>引用：知乎大神：夏2同学的 <a href="https://zhuanlan.zhihu.com/p/137426939?utm_source=qq&utm_medium=social&utm_oi=748992839609782272">最强markdown编辑器typora图床教程-七牛版</a> 配置</h5>]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>七牛</tag>
      </tags>
  </entry>
  <entry>
    <title>uniapp之列表、下拉刷新、上拉加载</title>
    <url>/1548/</url>
    <content><![CDATA[<h2 id="1-在nvue页面中"><a href="#1-在nvue页面中" class="headerlink" title="1.在nvue页面中"></a>1.在nvue页面中</h2><p>主要是利用 <a href="https://uniapp.dcloud.io/component/list">app的nvue专用组件</a>来完成一个整体的功能</p>
<p>参考案例</p>
<p><a href="https://ext.dcloud.net.cn/plugin?id=103%20">新闻/资讯应用模板</a>（ps：案例中使用uni-list和uni-list-item推荐看组件源码，这样能更好理解整个使用方式）</p>
<p>优点</p>
<ul>
<li>原生列表。 适合做长列表，性能高，对不可见部分的渲染资源回收有特殊的优化处理 。</li>
<li>各项功能组件化。由此体现出来功能设置非常灵活，强大的自定义能力。</li>
</ul>
<p>缺点</p>
<ul>
<li>开发上需要接受nvue的限制</li>
<li>强大的自定义和灵活性导致整体使用上复杂度高，并不能做到简单的接口调用（推荐封装使用）</li>
</ul>
<p>使用场景</p>
<ul>
<li>复杂场景，<strong>对性能比较高的地方</strong></li>
</ul>
<h2 id="2-scroll-view"><a href="#2-scroll-view" class="headerlink" title="2.scroll-view"></a>2.scroll-view</h2><p><a href="https://uniapp.dcloud.io/component/scroll-view">scroll-view</a> , 区域级别的滚动。有提供丰富上拉、下拉、各项钩子函数。</p>
<p>优点</p>
<ul>
<li>非常丰富的API</li>
<li>区域级别的滚动，使用上面很灵活，通常用在页面局部区域</li>
<li>提供了几种预设样式</li>
</ul>
<p>缺点</p>
<ul>
<li>区域级别的刷新, 在复杂的长列表下面会有<strong>性能问题</strong></li>
</ul>
<p>使用场景</p>
<p><strong>顶部选项栏</strong></p>
<h2 id="3-页面自带的下拉、上拉"><a href="#3-页面自带的下拉、上拉" class="headerlink" title="3.页面自带的下拉、上拉"></a>3.页面自带的下拉、上拉</h2><p><a href="https://uniapp.dcloud.io/frame?id=%E9%A1%B5%E9%9D%A2%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F">页面生命周期</a> , 每个页面自带有上拉和下拉 ,<strong>体现为页面的钩子函数</strong>.</p>
<p>具体配置请看这里<a href="https://uniapp.dcloud.io/collocation/pages?id=app-pulltorefresh%20">下拉刷新相关配置</a></p>
<p>优点</p>
<ul>
<li>相比scroll-view的区域级滚动，页面级别的滚动列表性能要好</li>
<li>无需引入多余的代码，接口简单，作为生命周期直接提供给开发者使用</li>
<li>可以<a href="https://uniapp.dcloud.io/collocation/pages?id=app-pulltorefresh">自定义下拉刷新样式</a>, 提供了几种预设样式</li>
</ul>
<p>缺点</p>
<ul>
<li>正是因为简单，所以自定义能力不够强，下拉样式不能做复杂logo和图形, 如果有这种需求推荐考虑nvue组件实现</li>
<li>上拉和下拉功能是以一个页面为基本单位的，不能做到细致化的滚动</li>
</ul>
<p>使用场景</p>
<p>单页面列表 (或者是以单个页面为基本的需求)</p>
<h2 id="4-前端模拟列表"><a href="#4-前端模拟列表" class="headerlink" title="4.前端模拟列表"></a>4.前端模拟列表</h2><p>主要来源是插件市场的各种前端模拟下拉刷新方案</p>
<p>优点</p>
<ul>
<li>熟悉的开发方式</li>
<li>超强大的自定义能力</li>
</ul>
<p>缺点</p>
<ul>
<li>性能上来看相比其他几个要查</li>
<li>下拉刷新可能会因为使用了部分原生组件而失效的问题 (比如层级上被覆盖)</li>
</ul>
<h2 id="5-特殊案例"><a href="#5-特殊案例" class="headerlink" title="5.特殊案例"></a>5.特殊案例</h2><p>插件市场的<a href="https://ext.dcloud.net.cn/plugin?id=343">mescroll-uni</a> , 这个插件使用量极高(但还是不支持nvue)</p>
<hr>
<p>感谢 <strong>李坤泉</strong> 前端大佬的投稿…</p>
]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>uniapp</tag>
      </tags>
  </entry>
  <entry>
    <title>unix_timestamp、from_unixtime时间戳函数用法（hive）</title>
    <url>/946/</url>
    <content><![CDATA[<p>一、<code>unix_timestamp</code>函数用法</p>
<p>1、unix_timestamp() 得到当前时间戳</p>
<p>2、如果参数date满足yyyy-MM-dd HH:mm:ss形式，则可以直接unix_timestamp(string date) 得到参数对应的时间戳</p>
<p>3、如果参数date满足yyyy-MM-dd HH:mm:ss形式，则我们需要指定date的形式，在进行转换</p>
<p>unix_timestamp(‘2009-03-20’, ‘yyyy-MM-dd’)=1237532400</p>
<p>二、<code>from_unixtime</code>函数用法</p>
<p>语法：from_unixtime(t1,’yyyy-MM-dd HH:mm:ss’)</p>
<p>其中t1是10位的时间戳值，即1970-1-1至今的秒，而13位的所谓毫秒的是不可以的。</p>
<p>对于13位时间戳，需要截取，然后转换成bigint类型，因为from_unixtime类第一个参数只接受bigint类型。</p>
<p>例如：</p>
<p><code>select from\_unixtime(cast(substring(timetemp,1,10) as bigint),’yyyy-MM-dd HH’) timetemp,count(\*) cn from dual</code></p>
<hr>
<p><img src="http://qn.199604.com/wp-content/uploads/2017/07/zhifubao.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/weixin.png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js中watch、computed、和methods三者区别~</title>
    <url>/1388/</url>
    <content><![CDATA[<p>最近再次复习了vue.js，一直混淆watch、computed、和methods三者。就谢谢笔记吧~</p>
<p>1.computed：</p>
<p>属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算，主要当作属性来使用。</p>
<p>例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">	test1:function()&#123;</span><br><span class="line">		return &#x27;computed:test1&#x27;;</span><br><span class="line">	&#125;,</span><br><span class="line">	test2()&#123;</span><br><span class="line">		return &#x27;computed:test2&#x27;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//html引用</span><br><span class="line">&#123;&#123;test1&#125;&#125;</span><br><span class="line">&#123;&#123;test2&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>2.methods：</p>
<p>是一个方法，表示一个具体的操作，主要书写业务逻辑。</p>
<p>例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">	handleSubmit()&#123;</span><br><span class="line">		this.count +=1</span><br><span class="line">		console.log(&#x27;count:&#x27;+this.count)</span><br><span class="line">	&#125;,</span><br><span class="line">	logInfo(event)&#123;</span><br><span class="line">		console.log(event);</span><br><span class="line">	&#125;,</span><br><span class="line">	test()&#123;</span><br><span class="line">		return &#x27;methods:test&#x27;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;form v-on:submit.prevent=&quot;handleSubmit()&quot;&gt;</span><br><span class="line">	&lt;p&gt;无pervent&lt;/p&gt;</span><br><span class="line">	&lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-on:keyup.enter=&quot;logInfo($event)&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; @click.ctrl=&quot;logInfo($event)&quot; /&gt;</span><br><span class="line">&#123;&#123;test()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>数据量大，需要缓存的时候用computed；每次确实需要重新加载，不需要缓存时用methods</p>
<p>3.watch(侦听属性)：</p>
<p>是一个对象，键是需要观察的表达式，值是对应回调函数，主要用来监听某些特定数据的变化，从而进行某些具体的业务逻辑操作；可以看做是computed和methods 的结合体。</p>
<p>例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let app11 = new Vue(&#123;</span><br><span class="line">	el: &#x27;#app-11&#x27;,</span><br><span class="line">	data: &#123;</span><br><span class="line">		firstName: &#x27;Foo&#x27;,</span><br><span class="line">		lastName: &#x27;Bar&#x27;,</span><br><span class="line">		fullName: &#x27;1&#x27;</span><br><span class="line">	&#125;,</span><br><span class="line">	watch: &#123;</span><br><span class="line">		firstName: function(val) &#123;</span><br><span class="line">			this.fullName = val + &#x27; &#x27; + this.lastName</span><br><span class="line">		&#125;,</span><br><span class="line">		lastName: function(val) &#123;</span><br><span class="line">			this.fullName = this.firstName + &#x27; &#x27; + val</span><br><span class="line">		&#125;,</span><br><span class="line">		firstName: function(newValue,oldValue)&#123;</span><br><span class="line">			console.log(newValue+&#x27;   &#x27;+oldValue)</span><br><span class="line">			//console.log(&#x27;changed firstName&#x27;)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;app-11&quot;&gt;</span><br><span class="line">	&#123;&#123; firstName &#125;&#125;</span><br><span class="line">	&lt;input type=&quot;text&quot;  v-model=&quot;firstName&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>–&gt;<a href="http://www.imooc.com/article/49239?block_id=tuijian_wz">http://www.imooc.com/article/49239?block_id=tuijian_wz</a> 不错的总结吧~</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2.0中的 render: h =&gt; h(App) 表达啥含义？</title>
    <url>/1443/</url>
    <content><![CDATA[<p>render: h =&gt; h(App)含义?</p>
<p>看代码我自己看出这个分为两个知识点：</p>
<p>一个是vue render的知识点;另外一个是es6的箭头函数知识点~</p>
<p>首先render是一个渲染函数，直接到vue看文档：<a href="https://cn.vuejs.org/v2/guide/render-function.html">https://cn.vuejs.org/v2/guide/render-function.html</a></p>
<p>而es6的箭头函数呢：</p>
<p>以前我们函数的定义方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var fn1 = function(a, b) &#123;</span><br><span class="line">    return a + b</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function fn2(a, b) &#123;</span><br><span class="line">    return a + b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但使用ES6箭头函数语法定义函数，将原函数的“function”关键字和函数名都删掉，并使用“=&gt;”连接参数列表和函数体。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var fn1 = (a, b) =&gt; &#123;</span><br><span class="line">    return a + b</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">(a, b) =&gt; &#123;</span><br><span class="line">    return a + b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当函数参数只有一个，括号可以省略；但是没有参数时，括号不可以省略。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 无参</span><br><span class="line">var fn1 = function() &#123;&#125;</span><br><span class="line">var fn1 = () =&gt; &#123;&#125;</span><br><span class="line"> </span><br><span class="line">// 单个参数</span><br><span class="line">var fn2 = function(a) &#123;&#125;</span><br><span class="line">var fn2 = a =&gt; &#123;&#125;</span><br><span class="line"> </span><br><span class="line">// 多个参数</span><br><span class="line">var fn3 = function(a, b) &#123;&#125;</span><br><span class="line">var fn3 = (a, b) =&gt; &#123;&#125;</span><br><span class="line"> </span><br><span class="line">// 可变参数</span><br><span class="line">var fn4 = function(a, b, ...args) &#123;&#125;</span><br><span class="line">var fn4 = (a, b, ...args) =&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>箭头函数相当于匿名函数，并且简化了函数定义。箭头函数有两种格式：<br>一种只包含一个表达式，省略掉了{ … }和return：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">() =&gt; return &#x27;hello&#x27;</span><br><span class="line">(a, b) =&gt; a + b</span><br></pre></td></tr></table></figure>

<p>还有一种可以包含多条语句，这时候就不能省略{ … }和return:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a) =&gt; &#123;</span><br><span class="line">  a = a + 1</span><br><span class="line">  return a</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，现在render: h =&gt; h(App)含义是什么?</p>
<p>官方文档上没有使用ES6写法是这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">render: function (createElement) &#123;</span><br><span class="line">    return createElement(</span><br><span class="line">      &#x27;h&#x27; + this.level,   // 标签名称</span><br><span class="line">      this.$slots.default // 子节点数组</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以 createElement就是h,一个形参，没有任何意义，可以随意改变书写，还原下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">render:function(createElement)&#123;</span><br><span class="line">    return createElement(App);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>vue</tag>
        <tag>es6</tag>
      </tags>
  </entry>
  <entry>
    <title>win10-java环境变量失效问题</title>
    <url>/1180/</url>
    <content><![CDATA[<p>最近换了一台笔记本，至于为什么换…看上一篇文章–&gt;<a href="http://199604.com/1175#article">最近受的教训有点多…</a></p>
<hr>
<p>因为需要撸码，笔记本需要重新安装jdk和maven环境变量</p>
<p>但出现了一个很奇怪的问题，配置好的java和maven环境，重启后，测试命令不生效…</p>
<p>但是查看配置环境，配置环境没毛病…</p>
<p>但想了想，会不会是权限不够?</p>
<p>然后用了管理员运行cmd，几把可以了…</p>
<p>好了好了…可以散了。</p>
<p>解决方法 ：运行cmd 时候以管理员身份运行cmd</p>
<p>或者右键windows图标打开PowerShell（管理员方式）即可解决..</p>
<p><img src="http://qn.199604.com/typoraImg/199604.com_2018-04-22_13-56-20.jpg"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>maven</tag>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10:VMware无法在Windows运行</title>
    <url>/1348/</url>
    <content><![CDATA[<p>最近win10系统自动升级之后，我的VMware不能用了，然后百度了一次，普遍让卸载之前win10的更新。我觉得这个不是长久之计，还不如直接升级VMware了呢。</p>
<p>然后到VMware官网下载15.5的时候，鸡巴下载速度只有100k/s，哭了。于是想了想为毛不用国内的下载网站，如qq/360都有VMware下载阿，腾讯：pc.qq.com搜索就是了</p>
<p>然后如何直接安装升级就行了，至于激活码，百度上很多</p>
<p>比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZC10K-8EF57-084QZ-VXYXE-ZF2XF</span><br><span class="line">UF71K-2TW5J-M88QZ-8WMNT-WKUY4</span><br><span class="line">AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</span><br><span class="line">CU702-DRD1M-H89GP-JFW5E-YL8X6 (我用了是这个)</span><br><span class="line">YY5EA-00XDJ-480RP-35QQV-XY8F6</span><br><span class="line">VA510-23F57-M85PY-7FN7C-MCRG0</span><br><span class="line">UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</span><br><span class="line">VF750-4MX5Q-488DQ-9WZE9-ZY2D6</span><br><span class="line">UU54R-FVD91-488PP-7NNGC-ZFAX6</span><br><span class="line">YC74H-FGF92-081VZ-R5QNG-P6RY4</span><br><span class="line">YC34H-6WWDK-085MQ-JYPNX-NZRA2</span><br></pre></td></tr></table></figure>

<p>好了，88，撸码去了….</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress--Crayon Syntax Highlighter与主题不兼容问题</title>
    <url>/1535/</url>
    <content><![CDATA[<h3 id="Crayon-Syntax-Highlighter是什么"><a href="#Crayon-Syntax-Highlighter是什么" class="headerlink" title="Crayon Syntax Highlighter是什么?"></a>Crayon Syntax Highlighter是什么?</h3><p>WordPress 最强大的代码高亮插件之一。剩下的百度一下~</p>
<h3 id="今天遇到的问题："><a href="#今天遇到的问题：" class="headerlink" title="今天遇到的问题："></a>今天遇到的问题：</h3><p>今天换了新主题后，显示出来的代码块无法点击，右上角的复制/粘贴、展开等功能按钮点击不起任何作用。 刚开始以为主题自带的代码高亮和pjax功能影响<del>关了之后还是不行</del> 网上找了很多资料，都没有找到原因。后来在这位大神中解决了<del><a href="https://zhaoshuai.me/2019-05-16/">【WordPress】Crayon Syntax Highlighter 与主题不兼容</a> <img src="http://199604.com/wp-content/uploads/2020/04/image-1.png"> 于是乎我也检查了下我这边主题是否也是这种情况</del> 还真的给我找到了，注销之后完美运行Crayon Syntax Highlighter <img src="http://199604.com/wp-content/uploads/2020/04/4608-1024x493.png"></p>
<p>wp_deregister_script(‘jquery’);</p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>WP实现建站天数、文章总数、最后更新时间功能。</title>
    <url>/29/</url>
    <content><![CDATA[<h5 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h5><ol>
<li> 登录博客后台 -&gt; 选择外观选项的编辑项。</li>
<li> 选择index.php或其它你想修改的文件，选择合适位置进行函数调用。</li>
</ol>
<p>然后回到首页刷新就OK了！</p>
<h4 id="以下是调用代码："><a href="#以下是调用代码：" class="headerlink" title="以下是调用代码："></a>以下是调用代码：</h4><p>文章：<?php $count\_posts = wp\_count\_posts(); echo $published\_posts = $count\_posts->publish; ?> 篇<br>页面：<?php $count\_pages = wp\_count\_posts('page'); echo $page\_posts = $count\_pages->publish; ?> 个<br>草稿：<?php $count\_posts = wp\_count\_posts(); echo $draft\_posts = $count\_posts->draft; ?> 篇<br>分类：<?php echo $count\_categories = wp\_count\_terms('category'); ?> 个<br>标签：<?php echo $count\_tags = wp\_count\_terms('post\_tag'); ?> 个<br>会员：<?php $users = $wpdb->get\_var("SELECT COUNT(ID) FROM $wpdb->users"); echo $users; ?> 个<br>链接：<?php $link = $wpdb->get\_var("SELECT COUNT(\*) FROM $wpdb->links WHERE link\_visible = 'Y'"); echo $link; ?> 个<br>评论：<?php $total\_comments = get\_comment\_count(); echo $total\_comments\['approved'\];?> 条<br>浏览：<?php get\_totalviews(true, true, true); ?> 次<br>运行：<?php echo floor((time()-strtotime("2013-10-01"))/86400);?>天<br>//请将 2013-10-01 修改为您的建站日期<br>更新：<?php $last = $wpdb->get\_results("SELECT MAX(post\_modified) AS MAX\_m FROM $wpdb->posts WHERE (post\_type = 'post' OR post\_type = 'page') AND (post\_status = 'publish' OR post\_status = 'private')");$last = date('Y年n月j日', strtotime($last\[0\]->MAX\_m));echo $last; ?></p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>wp</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>xml配置文件上的坑-&gt;元素内容必须由格式正确的字符数据或标记组成</title>
    <url>/948/</url>
    <content><![CDATA[<p>今天xml配置文件时候，遇到了一个坑，开始还以为是打jar包出了问题，然后测试环境跑了一下，没问题。可是在生产环境中报错是<code>Error on line 38 of document : 元素内容必须由格式正确的字符数据或标记组成。</code></p>
<p>刚开始这个错误百思不得其解..然后看了下xml的配置文件后，跑测试环境一看，这尼玛是’&lt;’/‘&gt;’的字符错误。</p>
<p><img src="http://qn.199604.com/typoraImg/T20180929232754.png" alt="img"></p>
<p>好了，怎么解决应该不难了吧?XML转义字符百度一下.</p>
<p>&lt;&lt;  小于号</p>
<p>&gt;&gt; 大于号</p>
<p>&apos;  ‘’单引号</p>
<p>&quot; “”  双引号</p>
<p>或者当我们在XML需要用大量的非法字符时，又不想转义，那么使用CDATA段是最理想的，</p>
<p>语法格式：&lt; ! [ CDATA ［忽略检查的文本］］&gt;</p>
<p>在CDATA中将文本的内容写入，那么这段文本内容会被忽略检查，无论里面是否包含XML敏感内容，全部被当作普通的文本去看待</p>
<p>如果还是不懂?那么到<a href="http://www.w3school.com.cn/xml/xml_cdata.asp">http://www.w3school.com.cn/xml/xml_cdata.asp</a> 学习学习吧</p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>坑</tag>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>一个定时生成文件的java小程序</title>
    <url>/1023/</url>
    <content><![CDATA[<p>今晚学习了java-&gt;Timer 类的使用 然后回想了之前是用java-&gt;Quartz 定时执行，然后今天写了一个小程序是用Timer类，感觉还行，这个小程序我也可以后期做第二次开发嘻嘻 记录一下。</p>
<hr>
<p>小程序就几个类而已; <img src="http://199604.com/wp-content/uploads/2018/12/20181226000831.png"> pox.xml</p>
<p><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><br><modelVersion>4.0.0</modelVersion><br><groupId>com.glj</groupId><br><artifactId>hdpShare</artifactId><br><version>0.0.1-SNAPSHOT</version></p>
<p><name>iot-share</name><br><url><a href="http://maven.apache.org/">http://maven.apache.org</a></url></p>
<properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
<java.version>1.7</java.version>
</properties>

<dependencies>
<dependency>
<groupId>junit</groupId>
<artifactId>junit</artifactId>
<version>3.8.1</version>
<scope>test</scope>
</dependency>
<dependency>
<groupId>log4j</groupId>
<artifactId>log4j</artifactId>
<version>1.2.17</version>
</dependency>
<dependency>
<groupId>org.apache.commons</groupId>
<artifactId>commons-lang3</artifactId>
<version>3.4</version>
</dependency>
<dependency>
<groupId>commons-io</groupId>
<artifactId>commons-io</artifactId>
<version>2.4</version>
</dependency>
<dependency>
<groupId>org.quartz-scheduler</groupId>
<artifactId>quartz</artifactId>
<version>2.3.0</version>
</dependency>
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>5.1.38</version>
</dependency>
</dependencies>
<build>
  <finalName>hdpShare</finalName>
  <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>\[2.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
  <plugins>
  <plugin>
  <groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-compiler-plugin</artifactId>  
<version>3.2</version>
<configuration>  
            <source>${java.version}</source>
<target>${java.version}</target>
<encoding>${project.build.sourceEncoding}</encoding>
            </configuration> 
  </plugin>
  <plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-dependency-plugin</artifactId>
<executions>
<execution>
<id>copy-dependencies</id>
<phase>package</phase>
<goals>
<goal>copy-dependencies</goal>
</goals>
<configuration>
<includeScope>compile</includeScope>
<excludeScope>test</excludeScope>
<outputDirectory>${project.build.directory}/lib</outputDirectory>
<overWriteReleases>false</overWriteReleases>
<overWriteSnapshots>false</overWriteSnapshots>
<overWriteIfNewer>true</overWriteIfNewer>
</configuration>
</execution>
</executions>
</plugin>
  </plugins>
  </build>
</project>

<p>FileWriter（文件写入）</p>
<p>package com.glj.main;</p>
<p>import java.io.File;<br>import java.io.IOException;<br>import java.util.List;<br>import java.util.Map;</p>
<p>import org.apache.commons.io.FileUtils;<br>import org.apache.log4j.Logger;</p>
<p>import com.glj.service.ShareService;<br>import com.glj.util.ConfigUtil;</p>
<p>public class FileWriter {<br>private static final Logger log = Logger.getLogger(FileWriter.class);<br>private static final String ENCODING = “utf-8”;<br>private String statDate;<br>private String path;</p>
<p>public FileWriter() {}</p>
<p>public FileWriter(String statDate,String path) {<br>this.path = path;<br>this.statDate = statDate;<br>}</p>
<p>public void write() {<br>ShareService service = new ShareService(statDate);<br>List&lt;Map&lt;String,Object&gt;&gt; dataList = service.getShareDate();<br>StringBuffer sb = new StringBuffer();<br>for (int i = 0; i &lt; dataList.size(); i++) {<br>sb.append(dataList.get(i).get(“imei”)+”,”);<br>sb.append(dataList.get(i).get(“apn”)).append(System.lineSeparator());<br>}</p>
<p>try {<br>File file = new File(path);<br>FileUtils.writeStringToFile(file, sb.toString(), ENCODING, false);<br>log.info(“写入数据完成！”+path);<br>} catch (IOException e) {<br>log.error(“写入数据文件出错：”+path, e);<br>}<br>}<br>public static void main(String[] args) {<br>String statDate = “2018-01-30”;<br>String path = ConfigUtil.getProperty(“share.path”)+File.separator+statDate+”.txt”;<br>FileWriter fw = new FileWriter(statDate, path);<br>fw.write();<br>}</p>
<p>}</p>
<p>MainSchedule定时跑的类</p>
<p>package com.glj.main;</p>
<p>import java.io.File;<br>import java.text.SimpleDateFormat;<br>import java.util.Calendar;<br>import java.util.Timer;<br>import java.util.TimerTask;</p>
<p>import org.apache.log4j.Logger;</p>
<p>import com.glj.util.ConfigUtil;</p>
<p>public class MainSchedule {<br>private static Logger log = Logger.getLogger(MainSchedule.class);</p>
<p>public static void main(String[] args) {<br>int startTime = Integer.parseInt(ConfigUtil.getProperty(“share.statTime”));<br>int startMin = Integer.parseInt(ConfigUtil.getProperty(“share.statMin”));<br>System.out.println(“第一次开始时间：”+startTime+”:”+startMin);</p>
<p>Calendar calendar = Calendar.getInstance();<br>calendar.add(Calendar.DATE, 0); // 第二天开始执行<br>calendar.set(Calendar.HOUR_OF_DAY, startTime);<br>calendar.set(Calendar.MINUTE, startMin);<br>calendar.set(Calendar.SECOND, 0);<br>calendar.set(Calendar.MILLISECOND, 0);<br>Timer timer = new Timer();<br>TimerTask timerTask = new TimerTask() {<br>@Override<br>public void run() {<br>SimpleDateFormat dateFromat = new SimpleDateFormat(“yyyy-MM-dd”);<br>Calendar calendar = Calendar.getInstance();<br>calendar.add(Calendar.DATE, -1);</p>
<p>String statDate = dateFromat.format(calendar.getTime());<br>String path = ConfigUtil.getProperty(“share.path”)+File.separator+statDate+”.txt”;<br>System.out.println(statDate);<br>System.out.println(path);<br>log.info(“开始生成文件”);<br>FileWriter fw = new FileWriter(statDate, path);<br>fw.write();<br>}<br>};<br>timer.scheduleAtFixedRate(timerTask, calendar.getTime(),24 * 60 * 60 * 1000);<br>}<br>}</p>
<p>ShareService</p>
<p>package com.glj.service;</p>
<p>import java.util.List;<br>import java.util.Map;</p>
<p>import org.apache.log4j.Logger;</p>
<p>import com.glj.util.JDBCUtil;</p>
<p>public class ShareService {<br>private static final Logger log = Logger.getLogger(ShareService.class);<br>private String statDate = “”;</p>
<p>public ShareService() {<br>}<br>/**<br> * 日期格式YYYY-MM-DD<br> * @param statDate<br> */<br>public ShareService(String statDate) {<br>this.statDate = statDate;<br>}</p>
<p>public List&lt;Map&lt;String,Object&gt;&gt; getShareDate() {<br>String sql = “select imei,apn from wajuepingfen_apn where lt =’”+statDate+”‘ “;<br>List&lt;Map&lt;String,Object&gt;&gt;  list = JDBCUtil.executeSQLWithResultList(sql);<br>return list;<br>}</p>
<p>}</p>
<p>ConfigUtil(工具类)</p>
<p>package com.glj.util;</p>
<p>import java.io.BufferedInputStream;<br>import java.io.File;<br>import java.io.FileInputStream;<br>import java.io.IOException;<br>import java.io.InputStream;<br>import java.net.URL;<br>import java.util.Properties;</p>
<p>import org.apache.commons.lang3.StringUtils;<br>import org.apache.log4j.Logger;</p>
<p>public class ConfigUtil {<br>private static final Logger log = Logger.getLogger(ConfigUtil.class);<br>private static Properties prop = null;</p>
<p>public ConfigUtil(InputStream is) {<br>prop = new Properties();</p>
<pre><code>    try(BufferedInputStream bis = new BufferedInputStream(is);
    InputStream in = bis)&#123;
    prop.load(in);
    &#125;catch (Exception e)&#123;
    log.error(&quot;读取&quot;+prop+&quot;配置文件错误！&quot;, e);
    &#125;
&#125;
</code></pre>
<p>public static void init(String cfgPath) {<br>String realPath = “”;<br>if(StringUtils.isNotBlank(cfgPath) &amp;&amp; new File(cfgPath).exists()) {<br>realPath = cfgPath;<br>}else {<br>//优先读取上一级目录中的cfg，如果不存在，再读取bin目录中的cfg<br>//String defPath = “../cfg.properties”;<br>String defPath = “../cfg.properties”;<br>String defExistsPath = ClassLoader.getSystemResource(“”).getPath()+File.separator+”cfg.properties”;<br>realPath = new File(defPath).exists()? defPath: defExistsPath;<br>}<br>System.out.println(realPath);<br>try{<br>InputStream is = StringUtils.isNotBlank(realPath)? new FileInputStream(realPath):<br>ConfigUtil.class.getResourceAsStream(“/cfg.properties”);<br>log.info(“读取配置文件：”+realPath);<br>new ConfigUtil(is);<br>} catch (IOException e1) {<br>log.error(“读取配置文件出错”);<br>}<br>}</p>
<p>public static String getProperty(String propertyName) {<br>if(prop == null) {<br>ConfigUtil.init(“”);<br>}<br>if(“”.equals(propertyName)  null==propertyName) {<br>return “”;<br>}<br>return prop.getProperty(propertyName);<br>}<br>public static void main(String[] args) {<br>System.out.println(ConfigUtil.getProperty(“mysql.url”));<br>}<br>}</p>
<p>JDBCUtil（数据库链接工具类）</p>
<p>package com.glj.util;</p>
<p>import java.sql.Connection;<br>import java.sql.DriverManager;<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>import java.sql.Statement;<br>import java.util.ArrayList;<br>import java.util.HashMap;<br>import java.util.List;<br>import java.util.Map;</p>
<p>import org.apache.log4j.Logger;</p>
<p>public class JDBCUtil {<br>private static final Logger log = Logger.getLogger(JDBCUtil.class);</p>
<p>public static Connection getDefaultConn() throws Exception {<br>String mysqlUrl = ConfigUtil.getProperty(“mysql.url”);<br>String mysqlUserName = ConfigUtil.getProperty(“mysql.userName”);<br>String mysqlPassWord = ConfigUtil.getProperty(“mysql.password”);<br>return getConn(mysqlUrl, mysqlUserName, mysqlPassWord);<br>}</p>
<p>public static Connection getConn(String url, String username, String password) throws Exception{<br>String driverName = ConfigUtil.getProperty(“mysql.className”);<br>Connection conn = null;<br>try{<br>Class.forName(driverName);<br>conn = DriverManager.getConnection(url,username,password);<br>}catch (ClassNotFoundException e){<br>log.error(“数据库驱动文件不存在”);<br>throw e;<br>}catch (SQLException e) {<br>log.error(“获取数据库连接失败”);<br>throw e;<br>}<br>return conn;<br>}<br>public static void insertOrUpdateSQL(String sql) {<br>Connection conn = null;<br>Statement stat = null;<br>try {<br>conn = getDefaultConn();<br>conn.setAutoCommit(false);<br>stat = conn.createStatement();<br>stat.executeUpdate(sql);<br>conn.commit();<br>} catch (Exception e) {<br>log.error(“insertOrUpdateSQL出错:—&gt;”+e);<br>}finally{<br>close(conn, stat);<br>}</p>
<p>}<br>public static List&lt;Map&lt;String,Object&gt;&gt; executeSQLWithResultList(String sql) {<br>List&lt;Map&lt;String,Object&gt;&gt; list = new ArrayList&lt;Map&lt;String,Object&gt;&gt;();<br>Connection conn = null;<br>Statement stat = null;<br>ResultSet rs = null;<br>Map&lt;String,Object&gt; map = null;</p>
<p>try {<br>conn = getDefaultConn();<br>stat = conn.createStatement();<br>rs = stat.executeQuery(sql);<br>while(rs.next()){<br>map = new HashMap&lt;String,Object&gt;();<br>int colCounts = rs.getMetaData().getColumnCount();<br>for(int i=1; i&lt;=colCounts;i++){<br>map.put(rs.getMetaData().getColumnName(i).toLowerCase(), rs.getObject(i));<br>}<br>list.add(map);<br>}<br>} catch (SQLException e) {<br>log.error(“查询出错”+e);<br>} catch (Exception e) {<br>log.error(“数据链接错误”+e);<br>}finally{<br>close(conn, stat, rs);<br>}<br>return list;<br>}<br>public static void close(Connection conn, Statement stat) {<br>try {<br>if (stat != null) stat.close();<br>if (conn != null) conn.close();<br>} catch (SQLException e) {<br>e.printStackTrace();<br>}<br>}</p>
<p>public static void close(Connection conn, Statement stat, ResultSet rs) {<br>try {<br>if (rs != null) rs.close();<br>if (stat != null) stat.close();<br>if (conn != null) conn.close();<br>} catch (SQLException e) {<br>e.printStackTrace();<br>}<br>}</p>
<p>}</p>
<p>cfg.properties配置文件</p>
<p>#mysql<br>mysql.className=com.mysql.jdbc.Driver<br>mysql.url=jdbc:mysql://localhost:3306/work?characterEncoding=UTF-8<br>mysql.userName=root<br>mysql.password=root</p>
<p>#share.path=/home/iotshare/shareFiles<br>share.path=G:\pushFile_test<br>share.statTime=23<br>share.statMin=54</p>
<p>log4j.properties配置文件</p>
<p>log4j.rootLogger=stdout,ERROR,logfile<br>#\u8f93\u51fa\u5230\u63a7\u5236\u53f0#<br>log4j.appender.stdout=org.apache.log4j.ConsoleAppender<br>log4j.appender.stdout.Threshold=INFO<br>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout<br>log4j.appender.stdout.layout.ConversionPattern = %d %-5p [%-8t] [%-17c{1}]-%m%n</p>
<p>#\u8f93\u51fa\u5230\u9879\u76ee\u6587\u4ef6\u4e0b#<br>log4j.appender.logfile = org.apache.log4j.DailyRollingFileAppender<br>log4j.appender.logfile.File = ./logs/info_log.log<br>log4j.appender.logfile.Append = true<br>log4j.appender.logfile.Threshold = INFO<br>log4j.appender.logfile.layout = org.apache.log4j.PatternLayout<br>log4j.appender.logfile.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n<br>##log4j.appender.logfile.layout.ConversionPattern= %d %-5p [%-8t] [%-17c{1}]-%m%n</p>
<p>#\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230\u9879\u76ee\u5b50\u6587\u4ef6\u5939\u4e0b#<br>log4j.appender.ERROR=org.apache.log4j.DailyRollingFileAppender<br>log4j.appender.ERROR.File = ./logs/err_log.log<br>log4j.appenile.ERROR.Append = true<br>log4j.appender.ERROR.Threshold = ERROR<br>log4j.appender.ERROR.layout = org.apache.log4j.PatternLayout<br>log4j.appender.ERROR.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n</p>
<p>生成文件成功… <img src="http://199604.com/wp-content/uploads/2018/12/20181226000832.png"> 好了,应该能让我再优化以后公司需求对外也能做二次开发使用吧… 记录完成睡觉…</p>
<hr>
<p><img src="http://199604.com/wp-content/uploads/2017/07/zhifubao.png"> <img src="http://199604.com/wp-content/uploads/2017/07/weixin.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/zhifubao.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/weixin.png"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>Quartz</tag>
        <tag>Timer</tag>
      </tags>
  </entry>
  <entry>
    <title>一个月了这个域名</title>
    <url>/346/</url>
    <content><![CDATA[<p>好了换域名有一个月了我只想记录一下吧。感谢自己的坚持感谢保罗的主机恩用手机写的。就这到这里了等放假再详细的写吧。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>一个纠结吧</title>
    <url>/1312/</url>
    <content><![CDATA[<p>今天是2019年09月23日，也是从上个月开始找工作到今天正式上班的第一天。 但今天入职公司，部门人满为患，没有固定位置~8个人挤在一个会议室上办公，让我想起当年在全球通驻点开发的同事们。 而再看了下文档，主要是为客户做二次开发，开发模式类似微信小程序之类的，拖出需要的模块，写下js和sql就ok。(底层语言还是公司规定的开发语言–&gt;与自己想继续的java不同) 中午吃饭的时候，听他们一直在吐槽工单问题，没工单就等于绩效不及格。给工单需要产品经理给(求)。 1.想继续往java发展，但是找了快三个月，海投也很少邀约 2.目前工资的话还行，主要听前辈们说绩效有点严重吧? 3.自己目前不算上实习时间，也是1年工作经验，但自己想继续深入java，但是现在妖都java普遍本科以上，自己才大专狗。 人生的一个十字路口,前行还是徘徊？怕前行，以后想转回java那就更难了</p>
<hr>
<p><img src="http://qn.199604.com/typoraImg/20171207215931-1024x768.jpg"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>一个线程例子</title>
    <url>/937/</url>
    <content><![CDATA[<p>emmm… 代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String\[\] args)</span> </span>&#123;</span><br><span class="line">        Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> TestRunnable(list));</span><br><span class="line">        thread1.start();</span><br><span class="line">    </span><br><span class="line">        TestThread thread2 = <span class="keyword">new</span> TestThread(list);</span><br><span class="line">        thread2.run();</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">private</span>  List&lt;Integer&gt; list;</span><br><span class="line">    </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">TestRunnable</span><span class="params">(List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.list = list;</span><br><span class="line">       &#125;</span><br><span class="line">    </span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            Thread.currentThread().setName(<span class="string">&quot;Runnable线程&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++)&#123;</span><br><span class="line">                TestThreadAddList testThreadAddList = <span class="keyword">new</span> TestThreadAddList(i,list);</span><br><span class="line">                testThreadAddList.run();</span><br><span class="line">               <span class="comment">// System.out.println(Thread.currentThread().getName()+&quot;第&quot;+i+&quot;个&quot;);</span></span><br><span class="line">               <span class="comment">// System.out.println(Thread.currentThread().getName()+&quot;list大小&quot;+list.size());</span></span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span>  List&lt;Integer&gt; list;</span><br><span class="line">    </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TestThread</span><span class="params">(List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.list = list;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            Thread.currentThread().setName(<span class="string">&quot;Thread线程&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++)&#123;</span><br><span class="line">                TestThreadAddList testThreadAddList = <span class="keyword">new</span> TestThreadAddList(i,list);</span><br><span class="line">                testThreadAddList.run();</span><br><span class="line">               <span class="comment">// System.out.println(Thread.currentThread().getName()+&quot;list大小&quot;+list.size());</span></span><br><span class="line">                <span class="comment">// System.out.println(Thread.currentThread().getName()+&quot;第&quot;+i+&quot;个&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThreadAddList</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span>  <span class="keyword">int</span> num;</span><br><span class="line">        <span class="keyword">private</span>  List&lt;Integer&gt; list;</span><br><span class="line">    </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TestThreadAddList</span><span class="params">( <span class="keyword">int</span> num, List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.num = num;</span><br><span class="line">            <span class="keyword">this</span>.list = list;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (TestThreadAddList.class)&#123;</span><br><span class="line">              list.add(num);</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+<span class="string">&quot;list大小&quot;</span>+list.size());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>线程</tag>
      </tags>
  </entry>
  <entry>
    <title>一个自己都不敢用的WP模板</title>
    <url>/490/</url>
    <content><![CDATA[<p>折腾了一天.. 终于把一个WP模板给弄出来了… 但是在本地测试过，基本的WP函数也实现了… 可是评论后邮件通知还是没有效果… 有很多地方也是参考雄哥的… 遇到了各种问题… 比如没有自己没有加评论页面,但自己会显示… 我就奇了个怪.. 还有就是text-overflow: ellipsis;无法实现… 调用了<?php the\_content(); ?>后是整篇文章出现而不是自己设置的大小.. 最后应该是侧栏那边无法去调用最新留言代码… 嗯，就先吐槽那么多先吧晚安… 以下是测试ing的模板,参考了雄哥的… 模板代码小弟不才 做了一个居多Bug的模板… 纪念一下这个测试版吧-》<a href="http://199604.com/wp-content/uploads/2017/03/SunLife.zip">SunLife</a> <img src="http://qn.199604.com/typoraImg/20170326211805-1024x492.png"> <img src="http://qn.199604.com/typoraImg/20170326010429-1024x585.png"> <img src="http://qn.199604.com/typoraImg/20170326005746-1024x501.png"> <img src="http://qn.199604.com/typoraImg/751200183298449283-576x1024.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>wp</tag>
        <tag>wp模板</tag>
      </tags>
  </entry>
  <entry>
    <title>一些自用的正则表达式</title>
    <url>/1608/</url>
    <content><![CDATA[<h5 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 数字：^[0-9]*$</span><br><span class="line">2. n位的数字：^\d&#123;n&#125;$</span><br><span class="line">3. 至少n位的数字：^\d&#123;n,&#125;$</span><br><span class="line">4. m-n位的数字：^\d&#123;m,n&#125;$</span><br><span class="line">5. 零和非零开头的数字：^(0[1-9][0-9]*)$</span><br><span class="line">6. 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]&#123;1,2&#125;)?$</span><br><span class="line">7. 带1-2位小数的正数或负数：^(\-)?\d+(\.\d&#123;1,2&#125;)?$</span><br><span class="line">8. 正数、负数、和小数：^(\-\+)?\d+(\.\d+)?$</span><br><span class="line">9. 有两位小数的正实数：^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br><span class="line">10. 有1~3位小数的正实数：^[0-9]+(.[0-9]&#123;1,3&#125;)?$</span><br><span class="line">11. 非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$ 或 ^\+?[1-9][0-9]*$</span><br><span class="line">12. 非零的负整数：^\-[1-9][]0-9&quot;*$ 或 ^-[1-9]\d*$</span><br><span class="line">13. 非负整数：^\d+$ 或 ^[1-9]\d*0$</span><br><span class="line">14. 非正整数：^-[1-9]\d*0$ 或 ^((-\d+)(0+))$</span><br><span class="line">15. 非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*0\.\d*[1-9]\d*0?\.0+0$</span><br><span class="line">16. 非正浮点数：^((-\d+(\.\d+)?)(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*0\.\d*[1-9]\d*))0?\.0+0$</span><br><span class="line">17. 正浮点数：^[1-9]\d*\.\d*0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)([0-9]*[1-9][0-9]*\.[0-9]+)([0-9]*[1-9][0-9]*))$</span><br><span class="line">18. 负浮点数：^-([1-9]\d*\.\d*0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)([0-9]*[1-9][0-9]*\.[0-9]+)([0-9]*[1-9][0-9]*)))$</span><br><span class="line">19. 浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*0\.\d*[1-9]\d*0?\.0+0)$</span><br></pre></td></tr></table></figure>

<h5 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 汉字：^[\u4e00-\u9fa5]&#123;0,&#125;$</span><br><span class="line">2. 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]&#123;4,40&#125;$</span><br><span class="line">3. 长度为3-20的所有字符：^.&#123;3,20&#125;$</span><br><span class="line">4. 由26个英文字母组成的字符串：^[A-Za-z]+$</span><br><span class="line">5. 由26个大写英文字母组成的字符串：^[A-Z]+$</span><br><span class="line">6. 由26个小写英文字母组成的字符串：^[a-z]+$</span><br><span class="line">7. 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$</span><br><span class="line">8. 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w&#123;3,20&#125;$</span><br><span class="line">9. 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$</span><br><span class="line">10. 中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</span><br><span class="line">11. 可以输入含有^%&amp;&#x27;,;=?$\&quot;等字符：[^%&amp;&#x27;,;=?$\x22]+</span><br><span class="line">12. 禁止输入含有~的字符：[^~\x22]+</span><br></pre></td></tr></table></figure>

<h5 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</span><br><span class="line">2. 域名：[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(/.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+/.?</span><br><span class="line">3. InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$</span><br><span class="line">4. 手机号码：^(13[0-9]14[57]15[012356789]18[012356789])\d&#123;8&#125;$</span><br><span class="line">5. 电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：^(\(\d&#123;3,4&#125;-)\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$ </span><br><span class="line">6. 国内电话号码(0511-4405222、021-87888822)：\d&#123;3&#125;-\d&#123;8&#125;\d&#123;4&#125;-\d&#123;7&#125;</span><br><span class="line">7. 身份证号(15位、18位数字)：^\d&#123;15&#125;\d&#123;18&#125;$</span><br><span class="line">8. 短身份证号码(数字、字母x结尾)：^([0-9])&#123;7,18&#125;(xX)?$ 或 ^\d&#123;8,18&#125;[0-9x]&#123;8,18&#125;[0-9X]&#123;8,18&#125;?$</span><br><span class="line">9. 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</span><br><span class="line">10. 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w&#123;5,17&#125;$</span><br><span class="line">11. 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$ </span><br><span class="line">12. 日期格式：^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</span><br><span class="line">13. 一年的12个月(01～09和1～12)：^(0?[1-9]1[0-2])$</span><br><span class="line">14. 一个月的31天(01～09和1～31)：^((0?[1-9])((12)[0-9])3031)$ </span><br><span class="line">15. 钱的输入格式：</span><br><span class="line">16. 1.有四种钱的表示形式我们可以接受:&quot;10000.00&quot; 和 &quot;10,000.00&quot;, 和没有 &quot;分&quot; 的 &quot;10000&quot; 和 &quot;10,000&quot;：^[1-9][0-9]*$ </span><br><span class="line">17. 2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符&quot;0&quot;不通过,所以我们采用下面的形式：^(0[1-9][0-9]*)$ </span><br><span class="line">18. 3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0-?[1-9][0-9]*)$ </span><br><span class="line">19. 4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$ </span><br><span class="line">20. 5.必须说明的是,小数点后面至少应该有1位数,所以&quot;10.&quot;是不通过的,但是 &quot;10&quot; 和 &quot;10.2&quot; 是通过的：^[0-9]+(.[0-9]&#123;2&#125;)?$ </span><br><span class="line">21. 6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">22. 7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">23. 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*)(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">24. 备注：这就是最终结果了,别忘了&quot;+&quot;可以用&quot;*&quot;替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里</span><br><span class="line">25. xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[xX][mM][lL]$</span><br><span class="line">26. 中文字符的正则表达式：[\u4e00-\u9fa5]</span><br><span class="line">27. 双字节字符：[^\x00-\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</span><br><span class="line">28. 空白行的正则表达式：\n\s*\r (可以用来删除空白行)</span><br><span class="line">29. HTML标记的正则表达式：&lt;(\S*?)[^&gt;]*&gt;.*?&lt;/\1&gt;&lt;.*? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</span><br><span class="line">30. 首尾空白字符的正则表达式：^\s*\s*$或(^\s*)(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</span><br><span class="line">31. 腾讯QQ号：[1-9][0-9]&#123;4,&#125; (腾讯QQ号从10000开始)</span><br><span class="line">32. 中国邮政编码：[1-9]\d&#123;5&#125;(?!\d) (中国邮政编码为6位数字)</span><br><span class="line">33. IP地址：\d+\.\d+\.\d+\.\d+ (提取IP地址时有用)</span><br><span class="line">34. IP地址：((?:(?:25[0-5]2[0-4]\\d[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]2[0-4]\\d[01]?\\d?\\d))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>一次渣到吐的PS明信片</title>
    <url>/82/</url>
    <content><![CDATA[<p>不</p>
<p>知道</p>
<p>为什么</p>
<p>自己去学PS</p>
<p>能学得那么的渣</p>
<p>渣得我自己都无法直视</p>
<p>下面是一个非常的不会做的PS作业</p>
<p>然而度娘那些又不咋地</p>
<p>于是自己能折磨对着显示的明信片去P</p>
<p>PS大神来吐槽我这个新生吧！</p>
<p><img src="http://qn.199604.com/2016-10-23.jpg"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>ps</tag>
      </tags>
  </entry>
  <entry>
    <title>一种激励！！！！</title>
    <url>/421/</url>
    <content><![CDATA[<p>总有累觉不爱时 </p>
<p> 三月里的一天,外头阳光正好,电脑里放着陈奕迅的歌,不知怎么的,心情一下子变得很差。无论多大年纪,经过多少事,总会有这样的时刻吧。某个瞬间,毫无缘由,忽然就觉得疲惫,莫名其妙地悲从中来。 常常会回忆高三那一年,总觉得现在经历的很多人和事,都能在那一年找到对照。 家境好,有背景的人可以不学习就去念心仪的好大学,就像社会上那些从出生就不为前途发愁的富二代；没看过书就能写出百万级别的畅销书,没考过电影学院,当两天群众演员就变成当红炸仔鸡……这样的人就好像那些上课不学习、课后不复习却能保持成绩名列前茅的学霸；天天闷在课桌前连厕所都舍不得去,成绩却怎么也上不去的人的处境,跟那些社会上努力打拼却不得要领总是失败的可怜虫也很像；压根就不想学习每天吊儿郎当只求上个民办专科就好的同学,和工作上不上进的人也是同一类型吧…… 所以就会自然而然地回忆,高三那年,出现如今这种状况,目标不定,动力全失,拔剑四顾心茫然时,我在想什么,又在做什么呢？ </p>
<p> 高三那年能让我感到灰心沮丧的原因只有一个：我的数学成绩太差。 物理化学可以撑到高二就早早抛弃它们,可是数学,简直是文科生们的命脉。考不到120以上,就算语文卷子上作文满分,政治历史题全部背会,也做不到在模拟考试时排到本科线以上的名次。一上高三就认清了这一点的我,为了奔赴美好盛大的未来,下狠心封了所有小说漫画,开始恶补数学。我开始在每天的课余时间多做一份模拟试卷,会找老师询问,会仔细订正错误,会翻来覆去研究课题。 </p>
<p> 两个月后,信心百倍地参加模考,数学的成绩是95分。 彼时的我,从来没有经历过如此灰心失望的事。怎么会付出没有回报的？我明明有努力过,而且是那样认真,那样诚恳地努力过。难道我每天在晚上十点该睡觉的时间再做一份难到死的卷子,就为了考试时比以前的成绩多两分？这不科学,这不公平。一丁点思路也没有,一丁点轮廓都没有。 那些夜深人静时的努力,那些强大美好的自信,面对一张冷酷的试卷,统统不值一提。 那次考试之后的第二天中午,毫无来由的,我趴在桌子上哭了起来。就像如今,明明是阳光大好的午后,我却深感难过,不知道明天该如何生活下去,不知道应该怎样做,才能把数学看到120分以上。哭过之后我就选择了自暴自弃,想着干脆念个二本或者专科得了。于是我泄愤般的把题库都锁在了书柜。下晚自习时再也不急匆匆地回家做题,而是和同学去路边摊吃臭豆腐,看别人打游戏机。 </p>
<p> 第三次模考的数学是82分。数学老师忧心忡忡地找我谈话：语文可以考到132这种高分,连数列的应用题都不会做？应用题不就是文字游戏吗？ 我垂头丧气地回到座位上盯着红叉满篇的卷子,真不知道该拿它怎么办。如果真的是因为偏科没有考上大学,那我是不是对不起其他学科,对不起语文、历史、英语这些我希望上了大学能够进一步精修的美好学问？ 于是在沮丧过、失落过、自暴自弃地撕破卷子、得过且过地虚度时间后,我还是老老实实地把题库又搬回书桌,把卷子用胶带贴起来。订正错题,补写笔记,对着那些泪痕斑斑的考题努力研究解题思路。 没有别的办法,不甘心放弃,就只能在似乎永无止境的黑暗里,对着试卷默默做题。做了一份又一份,不会做的题总是很多,做错了的也不少,“双眼爆题”的神技,看来这辈子也不能掌握。 那是记忆里很惨淡的冬天,穿着臃肿的羽绒服,头发长了,油乎乎地披在领子周围,没有心思打理。偶遇暗恋的男生,没有以前心头乱跳的兴奋,满脑子都是“数学不好没脸见人”的自卑茫然。每天都挣扎着做题,实在做不下去了就背答案,还好我记忆力不错,错过的题,不会再错。 </p>
<p> 数学真是一门神奇而残忍的学科。 就在我觉得自己马上就要淹死在这些该死的题目里的时候,寒假来了。名正言顺地休息了一周,回学校就迎接新学期的第一次模拟考试。我考了年级第一,数学是147分。 我只考过那么一次年级第一,实在是不敢相信的奇迹。我不是万年偏科鬼么？上小学一年级就跟数学做斗争,努力维持及格,怎么会考出147的高分？到底是为什么考了那么高？ 是因为那一整个冬天,我都在一边沮丧失落,一边随时想自暴自弃,一边咬牙切齿地做题吗？一边抱怨,一边吐槽,时常会摔笔,恨不得掀桌咆哮,大吼老子不干了,一边强忍着,用最笨的方法一步一步求解,寄希望于每一步都不错…… 挺着,努力挺下去,挺不下去也咬牙挺着,然后就终于迎来了147的高分吗？ 所以人生的惊喜,高峰上的景色,总是需要这样漫长而辛苦的积累么？唉,好像真没有别的办法了呢。除了咬牙挺着,坚持努力、默默付出,想变得更强大、更美好、更聪明、更漂亮……似乎只有这样的一条路吧。 在那个忽感“累觉不爱”的午后,一个人想了想高三的那个冬天。 对于每一个“累觉不爱”的瞬间,心情沮丧到极点之后,真的能做的,还是应该像高三时那样,深吸一口气,埋下头,淹在数学题的海洋里。坚信着只要挺下去,总会看到希望和变化,努力地前进啊！</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>加油高考</tag>
      </tags>
  </entry>
  <entry>
    <title>一种激情</title>
    <url>/426/</url>
    <content><![CDATA[<p>   马克思曾说过：“生活就像海洋，只有意志坚强的人，才能到达彼岸。”</p>
<p>   很久没有更新博客了，一天半的假期有没有了一直在做题做题还是做题，虽然说惠州二模已经考完，但是我总感觉没有考试的紧张没有高三的气氛，更不要说我这次的成绩了。</p>
<p>   我真的feel到过去的一切真的是一去不复返了，不同的老师、不同的班主任、不同的同学最后也就不同的班级！一个不爱学习的班级，处于一个不好的环境永远也不能有好的气氛好的氛围去学习。</p>
<p>   恩。</p>
<p>   把生活中的困难比作是海洋吧,你遇到了困难就好比掉到了海里,要想克服困难,不被海水淹死就要一直游一直游,直到上岸为止,所以当然要意志坚强了,不然就死掉了.<br>   生活就像大海，漂漂荡荡，沉沉浮浮。没有坚强的意志，没有一心向前的精神。是不能成为到达彼岸的成功者！<br>   其实很简单，勇往直前，不要怕失败，就会成功。失败不可怕，只怕没有勇气。<br>   笑口常开，笑看人生,一切皆有可能！</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>加油高考</tag>
      </tags>
  </entry>
  <entry>
    <title>一路上</title>
    <url>/423/</url>
    <content><![CDATA[<p>  八月的清晨、九月的五点，在梦中迷茫茫的醒来，抓着手中的3500个单词，在匆匆赶往育英楼，使昏昏沉沉的我逐渐变得清醒。抬眼望向四周，夜色仍未散去，而同行的同学却步履匆匆。似乎在我们奔往高考的路，而我们的背后总有无形的鞭子在不停地驱赶我们前进，前进前进进！</p>
<p>  在开学典礼后，八月已经结束，九月也匆匆离去，高考倒计时日历也被撕了一页又一页，而我们的高中时光也像流水般缓缓地流逝着。总感觉，身后有一股无形的力量推着我在这通往高考的路上前进，而非自己踏实的步伐。内心没来由的开始空慌，莫不是胸未有成竹？可是，我们这些人走在高考路上已长达十二年之久了，临上战场，理应无须恐慌！</p>
<p>  曾有好友跟我说过一句话–“未到最后一刻都没有输。输到赢为止”不错，我们在高考这条路上总会有输。可是，我们的每一次输都是为了高考的赢！为了彼一次的赢，此前我们不怕输无数次输。所以我们无须怕输。不是高考，就涮赢一万次也不算赢；不是高考，数以百万次输也算书。所以我们无须怕输。</p>
<p>  一路上，我们应以理想为动力，以信心为源泉，以勤奋为关键，全力以赴，挑战每一天。我坚信，在高考的路上的终点处，每个人都会绽放成功的微笑。</p>
<p>  <a href="http://199604.com/content/uploadfile/201409/8f391412088675.jpg"><img src="http://199604.com/content/uploadfile/201409/thum-8f391412088675.jpg" alt="QQ图片20140930224954.jpg" title="点击查看原图"></a></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>加油高考</tag>
      </tags>
  </entry>
  <entry>
    <title>万网免费空间测评</title>
    <url>/432/</url>
    <content><![CDATA[<p>  从17号开始用上了万网的免费空间（免费虚拟主机提供1G网页空间、50M数据库、10G/月流量。）感觉速度不错！</p>
<p>  看了下免费空间与收费版的放在同一服务器上！用了几天一直很稳定，我也终于不用给人包养了。这次也抱上了大腿。</p>
<p>  两年的免费空间，其实两年后的中国网络都不知道上了什么层次了。这也是我们习大大的作风。</p>
<p>  我也支持党的领导、马克思列宁主义、毛泽东思想、邓小平理论、科学发展观、三个代表、还有习大大的打老虎。</p>
<p>  好了测评到此为止。</p>
<p>  需要空间的去万网申请。但是有三个条件：</p>
<p>  一是每天限量发放免费名额（但是我17号10点申请都可以申请到）；<br>  二是域名必须在万网BA且绑定；<br>  三是账户要实名认证。</p>
<p>  ——————————————————————————————————————————————————–华丽的分界线</p>
<p>  新年肯定要有一首歌。</p>
<p>  送个我亲爱的同胞</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>免费空间</tag>
        <tag>虚拟主机</tag>
      </tags>
  </entry>
  <entry>
    <title>三袋米的故事。</title>
    <url>/390/</url>
    <content><![CDATA[<p> 这是一个真实的故事。这是个特困家庭。儿子刚上小学时，父亲去世了。娘儿俩相互搀扶着，用一堆黄土轻轻送走了父亲。<br>母亲没改嫁，含辛茹苦地拉扯着儿子。那时村里没通电，儿子每晚在油灯下书声朗朗、写写画画，母亲拿着针线，轻轻、细细地将母爱密密缝进儿子的衣衫。日复一日，年复一年，当一张张奖状覆盖了两面斑驳陆离的土墙时，儿子也像春天的翠竹，噌噌地往上长。望着高出自己半头的儿子，母亲眼角的皱纹张满了笑意。<br> 当满山的树木泛出秋意时，儿子考上了县重点一中。母亲却患上了严重的风湿病，干不了农活，有时连饭都吃不饱。那时的一中，学生每月都得带30斤米交给食堂。儿知道母亲拿不出，便说：“娘，我要退学，帮你干农活。”母亲摸着儿的头，疼爱地说：“你有这份心，娘打心眼儿里高兴，但书是非读不可。放心，娘生你，就有法子养你。你先到学校报名，我随后就送米去。”儿固执地说不，母亲说快去，儿还是说不，母亲挥起粗糙的巴掌，结实地甩在儿脸上，这是16岁的儿第一次挨打……<br> 儿终于上学去了，望着他远去的背影，母亲在默默沉思。<br> 没多久，县一中的大食堂迎来了姗姗来迟的母亲，她一瘸一拐地挪进门，气喘吁吁地从肩上卸下一袋米。负责掌秤登记的熊师傅打开袋口，抓起一把米看了看，眉　头就锁紧了，说：“你们这些做家长的，总喜欢占点小便宜。你看看，这里有早稻、中稻、晚稻，还有细米，简直把我们食堂当杂米桶了。”这位母亲臊红了脸，连说对不起。熊师傅见状，没再说什么，收了。母亲又掏出一个小布包，说：“大师傅，这是5元钱，我儿子这个月的生活费，麻烦您转给他。”熊师傅接过去，摇了摇，里面的硬币丁丁当当。他开玩笑说：“怎么，你在街上卖茶叶蛋？”母亲的脸又红了，支吾着道个谢，一瘸一拐地走了。<br> 又一个月初，这位母亲背着一袋米走进食堂。熊师傅照例开袋看米，眉头又锁紧，还是杂色米。他想，是不是上次没给这位母亲交待清楚，便一字一顿地对她说：“不管什么米，我们都收。但品种要分开，千万不能混在一起，否则没法煮，煮出的饭也是夹生的。下次还这样，我就不收了。”母亲有些惶恐地请求道：“大师傅，我家的米都是这样的，怎么办？”熊师傅哭笑不得，反问道：“你家一亩田能种出百样米？真好笑。”遭此抢白，母亲不敢吱声，熊师傅也不再理她。<br> 第三个月初，母亲又来了，熊师傅一看米，勃然大怒，用几乎失去理智的语气，毛辣辣地呵斥：“哎，我说你这个做妈的，怎么顽固不化呀？咋还是杂色米呢？你呀，今天是怎么背来的，还是怎样背回去！”<br> 母亲似乎早有预料，双膝一弯，跪在熊师傅面前，两行热泪顺着凹陷无神的眼眶涌出：“大师傅，我跟您实说了吧，这米是我讨……讨饭得来的啊！”熊师傅大吃一惊，眼睛瞪得溜圆，半晌说不出话。<br> 母亲坐在地上，挽起裤腿，露出一双僵硬变形的腿，肿大成梭形……母亲抹了一把泪，说：“我得了晚期风湿病，连走路都困难，更甭说种田了。儿子懂事，要退学帮我，被我一巴掌打到了学校……”<br> 她又向熊师傅解释，她一直瞒着乡亲，更怕儿知道伤了他的自尊心。每天天蒙蒙亮，她就揣着空米袋，拄着棍子悄悄到十多里外的村子去讨饭，然后挨到天黑后才偷偷摸进村。她将讨来的米聚在一起，月初送到学校……母亲絮絮叨叨地说着，熊师傅早已潸然泪下。他扶起母亲，说：“好妈妈啊，我马上去告诉校长，要学校给你家捐款。”母亲慌不迭地摇着手，说：“别、别，如果儿子知道娘讨饭供他上学，就毁了他的自尊心。影响他读书可不好。大师傅的好意我领了，求你为我保密，切记切记！”<br> 母亲走了，一瘸一拐。<br> 校长最终知道了这件事，不动声色，以特困生的名义减免了儿子三年的学费与生活费。三年后，儿子以627分的成绩考进了清华大学。欢送毕业生那天，县一中锣鼓喧天，校长特意将母亲的儿子请上主席台，此生纳闷：考了高分的同学有好几个，为什么单单请我上台呢？更令人奇怪的是，台上还堆着三只鼓囊囊的蛇皮袋。此时，熊师傅上台讲了母亲讨米供儿上学的故事，台下鸦雀无声。校长指着三只蛇皮袋，情绪激昂地说：“这就是故事中的母亲讨得的三袋米，这是世上用金钱买不到的粮食。下面有请这位伟大的母亲上台。”<br> 儿子疑惑地往后看，只见熊师傅扶着母亲正一步一步往台上挪。我们不知儿子那一刻在想什么，相信给他的那份震动绝不亚于惊涛骇浪。于是，人间最温暖的一幕亲情上演了，母子俩对视着，母亲的目光暖暖的、柔柔的，一绺儿有些花白的头发散乱地搭在额前，儿子猛扑上前，搂住她，嚎啕大哭：“娘啊，我的娘啊……”  </p>
<p>这个故事我听了有听、每次听了眼角不觉得出现一丝丝的露水、每次听都会有非常非常多的感触。好了。希望你们能看完或者听下这个电台的故事挺感触的</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>三高</title>
    <url>/428/</url>
    <content><![CDATA[<p>我知道，高三的生活很苦很累，但永远不放弃努力与希望，当你要泄气的时候，当你坚持不下去的时候，看看这些，熬过去，2015、6月誓将高考踩在脚下！–GLJ。</p>
<p> 忍别人所不能忍的痛，吃别人所别人所不能吃的苦，是为了收获得不到的收获。目标都定下来了赶快把还有170天了！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>加油高考</tag>
      </tags>
  </entry>
  <entry>
    <title>不再是大学生..</title>
    <url>/856/</url>
    <content><![CDATA[<p>星期2去广州面试了一下..</p>
<p>然后当天晚上就给我回复录取了..</p>
<p>下星期一上班</p>
<p>在荔湾和业广场上班..</p>
<p>公司感觉都是和我差不多年纪的</p>
<p>然后在看准APP说那个公司经常加班,还没有加班补贴,但是适合刚刚毕业的学生去..</p>
<p>所以我也打算看下自己能不能在广州飘着</p>
<p>虽然试用期工资有点低.不到2.5K</p>
<p>扣了房租900，其他开销基本是月光族还要贴一点..</p>
<p>emmmm…想了一下过了试用期有5K左右还是可以的</p>
<p>回想了一下,这两天在广州找房子.市区小区房合租基本上1500以上.所以自己就去花地湾的城中村找了一套</p>
<p>一个月单间700房租,30垃圾费(这个有点厉害),电费1.5,水费5块,宽带50.提供了热水器空调.找了一天,城中村基本上都是外省人在做.然后感觉不知道是不是我手机问题,没有信号,2G也没有…emmmmmm</p>
<p>嗯,我也不知道能不能在那间公司长待,好吧,算是准毕业第一份java开发的工作,希望能好好学习吧…</p>
<p>现在越看这张图约有感触了…</p>
<p><img src="http://qn.199604.com/typoraImg/20180119101828.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title>不到一个月</title>
    <url>/438/</url>
    <content><![CDATA[<p>高考完再见</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>不要看真的不要看。</title>
    <url>/352/</url>
    <content><![CDATA[<p>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈,</p>
<p>我不会告诉你们我朋友也加入了emlog。</p>
<p>我更不会告诉你地址<a href="http://blog.199604.com/">http://blog.199604.com/</a>真的不会告诉你们的</p>
<p>然后她也和我一样大。从小玩大的。好了想知道她是男还是女。访问了就知道。她是一个电脑盲。很多东西不懂的。</p>
<p>你们也多多教教她吧。好了就介绍到这里</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>不负青春</title>
    <url>/429/</url>
    <content><![CDATA[<p> 年华未逝，心已老。在最好的时光里蹉跎了岁月，留下的只有苦涩的遗憾。人活一世，不负青春才对得起那个最初对人生充满希望的自己，还有未来那个垂垂老矣的自己。  </p>
<p>      刚踏上青春的旅途时，心里有着各种憧憬和壮志，描绘了一幅美好的蓝图。雄心勃勃地订下前进的计划，信心满满地按着计划向前走，自信一定可以提前走到目的地，完成自己的梦想。  </p>
<p>      快速地走着，走了一会儿就被沿途的风景吸引了，渐渐放慢了脚步，尽情地饱览美景，淡忘了自己的目标，忘记了当时的雄心。等到不小心被绊倒了，突如其来的疼痛让混沌的头脑瞬间清醒了，才明白自己浪费了多少时间和精力，连忙爬起来埋头直追，想要追回落后的进度，却仍有一大段距离。</p>
<p> 走得累了，便停下了脚步，踮起脚眺望那个遥远的终点，再回头看看来时的路，心里突然萌生出茫然，不知道是要继续往下走，还是另辟蹊径。因为现在距离成功还太遥远了，该不该坚持和能不能坚持这两个问题困扰着疲惫的心。  </p>
<p>      还是决定坚持，却在路途中遇到多个难关。怯懦地看着眼前的难关，不禁往后退了几步。信心渐渐消失了，开始怀疑自己当初的坚持是不是错误的决定。于是，选择了另一条平坦的道路，远离了那些难关，也偏离了梦想。渐渐对这种毫无起伏的平淡产生了厌倦，这个时候才发现自己已经和梦想越来越遥远，青春年华已经耗费了许多，却还是一无所得。  </p>
<p>      不负青春的前提是知道自己的目标是什么，重要的是懂得勇敢地面对眼前的坎。搞清楚了方向，拥有足够的信心和勇气，无论最后的结果，如何至少已经对得起那个曾经努力过的自己。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>激励</tag>
        <tag>高考</tag>
      </tags>
  </entry>
  <entry>
    <title>为何你怎么吊。</title>
    <url>/380/</url>
    <content><![CDATA[<p>三日不读书，便觉面目可憎。在我看来，除了不读书，不写东西，若超三日，也觉面目可憎了。</p>
<p>可惜的是我对PHP始终是三分热度，到头来一手贱添加了一个HTML代码把数据弄乱了。从上午9点开始一直折腾到现在；从我他妈的热度到落寞的心情。在这半天的时间里我整个人都乱套了，不知道从哪里入手从哪里去修复。我常常在想，为什么每次遇到解决不了的问题都想着坏的一面为什么就不能想着好的一面呢？</p>
<p>其实我们不仅不应该害怕挫折，反而应该感谢挫折。你想想看，是不是挫折使你明白生命的内涵？他告诉我们生活的八字真诀：正视、不屈、沉着、奋进。顺境中人们看到的是鲜花和笑脸，然而，习惯于喜悦侵润的心灵往往承受不起打击的负荷，只有迎向挫折，尝遍人间酸甜苦辣，感受世态冷暖炎凉，才能有更多一层对生活的领悟，更了解人生的真谛。</p>
<p>就像今天，如果不是自己手贱造成了怎么大的问题我也不会去面对这些问题，有一句老话：实践是检验真理的惟一标准。或许很多人都会明白了吧！这只是生活中乃至你人生中的一个微不足道的小问题，问题还有很多只是看你怎么去面对罢了。对挫折的体验，能培养人从容应付风险的能力，一旦发现自己能在风险中挺过来，对失败的恐惧就更少了。不经历风雨怎能见彩虹？没有失败的人生绝不是完美的人生，当你战胜失败时，你会对成功有更深的感悟，就是在这样一次次的感悟中，你走出了一个完美的人生。</p>
<p>忠心希望我自己在写完这几百字的吐槽中可以正视挫折，藐视挫折，勇敢的面对挫折，最终走向成功。为了自己的快乐，为了成功后的快乐，努力吧。加油。</p>
<p><strong>最好感谢寒川and一路上对这次修复博客大力支持。哦还差一个是湖畔楼阁大叔。</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>五年</title>
    <url>/875/</url>
    <content><![CDATA[<p>这个域名五年之际 阿里云给了我一个惊喜? <img src="http://qn.199604.com/typoraImg/20180207091214.png"> 我也不知道什么情况 emmmmm 如果这个月还是这样 那就关闭网站吧 <img src="http://qn.199604.com/typoraImg/20180207091355.jpg"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>人生的酸甜苦辣。</title>
    <url>/18/</url>
    <content><![CDATA[<p>刚看的一个益达广告微电影吧,挺感动的一个真实故事,虽然电视上也有,但是这个是一个完整版。</p>
<p>哈哈,最近也迷上了一些微电影吧,因为感动所以就喜欢了。</p>
<p>@黎奸雄。你就继续喷我博客吧。嗯哈我就会发这些吧,这可能就是我生活的一部分。每个人都有不同的表达方法。</p>
<p>嗯哈,可能吧我blog就是一个乱七八糟的。但是我觉得也有很多自己的真实故事在这里。</p>
<p>嗯哈,但是也谢谢你这个老乡的,给了我怎么多建议!</p>
<p>好了,接下来看看这个视频吧,不错的我也希望我以后也能这样。哈哈哈说真的,这故事不错我梦想就像骑着单车去旅游。</p>
<p>噢又扯话题了。</p>
<p>看微电影吧!!!!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>什么是YAML</title>
    <url>/1720/</url>
    <content><![CDATA[<p>YAML是”YAML Ain’t a Markup Language”（YAML不是一种标记语言）的递归缩写。YAML的意思其实是：“Yet Another Markup Language”（仍是一种标记语言）。主要强度这种语音是以数据为中心，而不是以标记语音为重心，例如像xml语言就会使用大量的标记。 YAML是一个可读性高，易于理解，用来表达数据序列化的格式。它的语法和其他高级语言类似，并且可以简单表达清单（数组）、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件等。 YAML的配置文件后缀为 .yml，例如Springboot项目中使用到的配置文件 application.yml 。</p>
<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ul>
<li>  YAML使用可打印的Unicode字符，可使用UTF-8或UTF-16。</li>
<li>  数据结构采用键值对的形式，即 键名称: 值，注意冒号后面要有空格。</li>
<li>  每个清单（数组）成员以单行表示，并用短杠+空白（- ）起始。或使用方括号（[]），并用逗号+空白（, ）分开成员。</li>
<li>  每个散列表的成员用冒号+空白（: ）分开键值和内容。或使用大括号（{ }），并用逗号+空白（, ）分开。</li>
<li>  字符串值一般不使用引号，必要时可使用，使用双引号表示字符串时，会转义字符串中的特殊字符（例如\n）。使用单引号时不会转义字符串中的特殊字符。</li>
<li>  大小写敏感</li>
<li>  使用缩进表示层级关系，缩进不允许使用tab，只允许空格，因为有可能在不同系统下tab长度不一样</li>
<li>  缩进的空格数可以任意，只要相同层级的元素左对齐即可</li>
<li>  在单一文件中，可用连续三个连字号（—）区分多个文件。还有选择性的连续三个点号（…）用来表示文件结尾。</li>
<li>  ‘#’表示注释，可以出现在一行中的任何位置，单行注释</li>
<li>  在使用逗号及冒号时，后面都必须接一个空白字符，所以可以在字符串或数值中自由加入分隔符号（例如：1,5,280或<a href="http://199604.com/">http://199604.com</a>）而不需要使用引号。</li>
</ul>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul>
<li>  纯量（标量）（scalars）：单个的、不可再分的值</li>
<li>  对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li>
<li>  数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li>
</ul>
<h3 id="标量"><a href="#标量" class="headerlink" title="标量"></a>标量</h3><p>标量是最基础的数据类型，不可再分的值，他们一般用于表示单个的变量，有以下七种：</p>
<ul>
<li>  字符串</li>
<li>  布尔值</li>
<li>  整数</li>
<li>  浮点数</li>
<li>  Null</li>
<li>  时间</li>
<li>  日期</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字符串</span></span><br><span class="line"><span class="attr">string.value:</span> <span class="string">Hello!您好呀!</span></span><br><span class="line"><span class="comment"># 布尔值，true或false</span></span><br><span class="line"><span class="attr">boolean.value:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">boolean.value1:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 整数</span></span><br><span class="line"><span class="attr">int.value:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">int.value1:</span> <span class="string">0b1010_0111_0100_1010_1110</span> <span class="comment"># 二进制</span></span><br><span class="line"><span class="comment"># 浮点数</span></span><br><span class="line"><span class="attr">float.value:</span> <span class="number">3.14159</span></span><br><span class="line"><span class="attr">float.value1:</span> <span class="number">314159e-5</span> <span class="comment"># 科学计数法</span></span><br><span class="line"><span class="comment"># Null，~代表null</span></span><br><span class="line"><span class="attr">null.value:</span> <span class="string">~</span></span><br><span class="line"><span class="comment"># 时间，时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区</span></span><br><span class="line"><span class="attr">datetime.value:</span> <span class="type">!!timestamp</span> <span class="number">2021-04-13T10:31:00+08:00</span></span><br><span class="line"><span class="comment"># 日期,日期必须使用ISO 8601格式，即yyyy-MM-dd</span></span><br><span class="line"><span class="attr">date.value:</span> <span class="type">!!timestamp</span> <span class="number">2021-04-13</span></span><br></pre></td></tr></table></figure>

<p>这样，我们就可以在程序中引入了，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;string.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String stringValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;boolean.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> booleanValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;boolean.value1&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> booleanValue1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;int.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> intValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;int.value1&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> intValue1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;float.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> floatValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;float.value1&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> floatValue1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;null.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String nullValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;datetime.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date datetimeValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;date.value&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date datevalue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>我们知道单个变量可以用键值对，使用冒号结构表示 key: value，注意冒号后面要加一个空格。可以使用缩进层级的键值对表示一个对象，如下所示：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre-user:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">郭良俊只狗</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">25</span></span><br></pre></td></tr></table></figure>

<p>然后在程序对这几个属性进行赋值到user对象中。使用@ConfigurationProperties注入对象，@value不能很好的解析复杂对象。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: GuoLiangJun</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/4/21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Time</span>: 0:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;pre-user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>可以用短横杆加空格 -开头的行组成数组的每一个元素，如下的address字段：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre-user:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">郭良俊只狗</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">25</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">广州</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">清远</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">韶关</span></span><br></pre></td></tr></table></figure>

<p>也可以使用中括号进行行内显示形式，如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre-user:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">郭良俊只狗</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">25</span></span><br><span class="line">  <span class="attr">address:</span> [<span class="string">广州</span>,<span class="string">清远，韶关</span>]</span><br></pre></td></tr></table></figure>

<p>在代码中引入方式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: GuoLiangJun</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/4/21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Time</span>: 0:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;pre-user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文本块"><a href="#文本块" class="headerlink" title="文本块"></a>文本块</h2><p>如果你想引入多行的文本块，可以使用符号，注意在冒号:和 符号之间要有空格。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre-user:</span></span><br><span class="line">  <span class="attr">name:</span> </span><br><span class="line">    <span class="string">Hello</span> <span class="string">Javaer!!</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">25</span></span><br><span class="line">  <span class="attr">address:</span> [<span class="string">广州</span>,<span class="string">清远</span>,<span class="string">韶关</span>]</span><br></pre></td></tr></table></figure>

<p>它和加双引号的效果一样，双引号能转义特殊字符：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre-user:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;Hello Java!!\nI am fine!\nThanks! GoodBye!&quot;</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">25</span></span><br><span class="line">  <span class="attr">address:</span> [<span class="string">广州</span>,<span class="string">清远</span>,<span class="string">韶关</span>]</span><br></pre></td></tr></table></figure>

<h2 id="显示指定类型"><a href="#显示指定类型" class="headerlink" title="显示指定类型"></a>显示指定类型</h2><p>有时我们需要显示指定某些值的类型，可以使用 !（感叹号）显式指定类型。!单叹号通常是自定义类型，!!双叹号是内置类型，例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定为字符串</span></span><br><span class="line"><span class="attr">string.value:</span> <span class="type">!!str</span> <span class="string">HelloWorld!</span></span><br><span class="line"><span class="comment"># !!timestamp指定为日期时间类型</span></span><br><span class="line"><span class="attr">datetime.value:</span> <span class="type">!!timestamp</span> <span class="number">2021-04-13T02:31:00+08:00</span></span><br></pre></td></tr></table></figure>

<p>内置的类型如下：</p>
<ul>
<li>  !!int：整数类型</li>
<li>  !!float：浮点类型</li>
<li>  !!bool：布尔类型</li>
<li>  !!str：字符串类型</li>
<li>  !!binary：二进制类型</li>
<li>  !!timestamp：日期时间类型</li>
<li>  !!null：空值</li>
<li>  !!set：集合类型</li>
<li>  !!omap，!!pairs：键值列表或对象列表</li>
<li>  !!seq：序列</li>
<li>  !!map：散列表类型</li>
</ul>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用会用到 &amp;锚点符合和 <em>星号符号，&amp;用来建立锚点，&lt;&lt; 表示合并到当前数据，</em> 用来引用锚点。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">guoliangjun:</span> <span class="meta">&amp;guoliangjun</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">郭良俊</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dept:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">dd001</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*guoliangjun</span></span><br></pre></td></tr></table></figure>

<p>上面最终相当于如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">guoliangjun:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">郭良俊</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dept:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">dd001</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">郭良俊</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">20</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>还有一种文件内引用，引用已经定义好的变量，如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">base.host:</span> <span class="string">https://199604.com</span></span><br><span class="line"><span class="attr">add.person.url:</span> <span class="string">$&#123;base.host&#125;?s=hive</span></span><br></pre></td></tr></table></figure>

<h2 id="单文件多配置"><a href="#单文件多配置" class="headerlink" title="单文件多配置"></a>单文件多配置</h2><p>可以在同一个文件中，实现多文档分区，即多配置。在一个yml文件中，通过 — 分隔多个不同配置，根据spring.profiles.active 的值来决定启用哪个配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#公共配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">pro</span> <span class="comment"># 指定使用哪个文档块</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#开发环境配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span> <span class="comment"># profiles属性代表配置的名称</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#生产环境配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">pro</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure>

<h4 id="激活配置文件方式"><a href="#激活配置文件方式" class="headerlink" title="激活配置文件方式"></a>激活配置文件方式</h4><ol>
<li> 通过在主配置文件中（application.yml或application.properties）指定变量spring.profiles.active的值，例如spring.profiles.active=dev</li>
<li> 命令行指定：java -jar springboot-demo.jar –spring.profiles.active=dev</li>
<li> 虚拟机参数指定：-Dspring.profiles.active=dev</li>
</ol>
<h4 id="配置文件加载顺序"><a href="#配置文件加载顺序" class="headerlink" title="配置文件加载顺序"></a>配置文件加载顺序</h4><p>springBoot启动会扫描读取以下位置中的配置文件，优先级由高到低：</p>
<ol>
<li> -file:./config/，即当前项目下的config文件夹（src同级目录）</li>
<li> -file:./，即当前项目下</li>
<li> -classpath:./config/，即当前项目中resources资源文件夹下的config文件夹</li>
<li> -classpath:./，即当前项目中resources资源文件夹下</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
        <category>yaml</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>yaml</tag>
      </tags>
  </entry>
  <entry>
    <title>今天有点热-</title>
    <url>/126/</url>
    <content><![CDATA[<p><img src="http://qn.199604.com/861699094936704511.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>从HBASE导出数据到本地服务器</title>
    <url>/1616/</url>
    <content><![CDATA[<h4 id="HBASE导出数据到本地服务器"><a href="#HBASE导出数据到本地服务器" class="headerlink" title="HBASE导出数据到本地服务器"></a>HBASE导出数据到本地服务器</h4><h5 id="1-连接hbase"><a href="#1-连接hbase" class="headerlink" title="1.连接hbase"></a>1.连接hbase</h5><p><code>hbase shell</code></p>
<h5 id="2-查看Hbase中的表"><a href="#2-查看Hbase中的表" class="headerlink" title="2.查看Hbase中的表"></a>2.查看Hbase中的表</h5><p><code>list</code></p>
<h5 id="3-获取hbase表的数据"><a href="#3-获取hbase表的数据" class="headerlink" title="3.获取hbase表的数据"></a>3.获取hbase表的数据</h5><p>扫描1条数据 <code>scan &#39;PM_NR_SA_NRCELLDU_HOUR&#39;,&#123;LIMIT=&gt;1&#125;</code> 范围查询 <code>scan &#39;PM_NR_SA_NRCELLDU_HOUR&#39;,&#123;LIMIT=&gt;1,STARTROW=&gt;&#39;190601&#39;&#125;</code> <code>scan &#39;PM_NR_SA_NRCELLDU_HOUR&#39;, &#123;STARTROW =&gt; &#39;190601&#39;, ENDROW =&gt; &#39;190602&#39;&#125;</code> 参考：<a href="https://www.cnblogs.com/hello-wei/p/10314435.html">https://www.cnblogs.com/hello-wei/p/10314435.html</a></p>
<h5 id="4-将Hbase数据导出到HDFS"><a href="#4-将Hbase数据导出到HDFS" class="headerlink" title="4.将Hbase数据导出到HDFS"></a>4.将Hbase数据导出到HDFS</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase org.apache.hadoop.hbase.mapreduce.Export -D hbase.mapreduce.scan.row.start=190701_s00001nks_101179-135 -D hbase.mapreduce.scan.row.stop=190702_s00001nks_101122-129  v2.mdt.grid.date_gh_cgi /user/hdfs/data1/output/glj</span><br></pre></td></tr></table></figure>

<h5 id="5-查看HDFS中的是否成功导出数据"><a href="#5-查看HDFS中的是否成功导出数据" class="headerlink" title="5.查看HDFS中的是否成功导出数据"></a>5.查看HDFS中的是否成功导出数据</h5><p><code>hadoop fs -ls /user/hdfs/data1/output/glj</code></p>
<h5 id="6-将HDFS中的数据导出到本地（合并导出）"><a href="#6-将HDFS中的数据导出到本地（合并导出）" class="headerlink" title="6.将HDFS中的数据导出到本地（合并导出）"></a>6.将HDFS中的数据导出到本地（合并导出）</h5><p><code>hadoop fs -getmerge /user/hdfs/data1/output/glj/ /data1/output/glj_test.csv</code> getmerge命令使用：<a href="https://199604.com/981">https://199604.com/981</a></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>hbase</tag>
      </tags>
  </entry>
  <entry>
    <title>他们</title>
    <url>/327/</url>
    <content><![CDATA[<p>在城市尽头，没有繁华的街市，闪亮的霓虹;在城市的尽头，只有破旧的棚户区，有饱经生活风霜的生命;在城市的尽头，有他们这样一群人。</p>
<p>让我怎样称呼他们?外来务工人员子女?农民子弟?亦或是农民工二代?不，我不想用这些冰冷的名字称呼他们，我多想叫着他们带着泥土气的乳名，拉着他们的小手，走近他们的生活……</p>
<p>他们从小生长在故乡的青山绿水中，纯洁的灵魂在田野里抽穗拔节。在山野的风中，他们奔跑着，憧憬着。风从田野中吹过，吹进了城市，为了生计，为了未来，他们跟从父母来到了城市，在城市的尽头扎下了根。于是习惯了青山绿水的双眸第一次触碰到了高楼大厦、车水马龙。他们不知道怎样穿过六车道的马路，小小的手指怎么也数不清写字楼的层数。繁华的现代文明不曾给他们带来任何快乐，这一次，却在心上烙下了深深的痕迹。</p>
<p>他们背起书包，小心翼翼地融入城市的生活。可是却在“城市人”异样的眼光中，第一次明白了户口与暂住证的区别。他们都是父母心头的宝啊!却过早地承担了不属于这个年龄的负担。</p>
<p>放学回家，他们做好简单的晚饭，父母还在工地或菜场上劳作;午夜醒来，泪眼中城里的星空没有家乡的明亮;悄悄许愿，希望明天他们的打工子弟小学不会因交不出电费而被查封……</p>
<p>然而，在他们日益长高的身体上，我看到了他们的成长。记得一位记者问一个打工子弟学校的孩子，学成后是否会回到家乡时，小姑娘毫不犹豫地说：当然，一定回去!那一刻，我差点落下泪来，为他们的成长。</p>
<p>记得那年春晚他们稚气的宣言：“我们的学校很小，但我们的成绩不差”“我们不和城里的孩子比爸爸”“北京的2008，也是我们的2008!”他们逐渐成熟，告别昨天的羞怯，开始迎接新的一天。</p>
<p>虽然，他们还在为不多的学费而苦恼;虽然，学校还是交不上水电费;虽然，还有好多体制还不够完善……虽然有好多个“虽然”，但是，只有一个“但是”就足够了，已经有好多视线转向他们，他们正在茁壮地成长。</p>
<p>太阳从地平线上升起，照亮了城市的尽头，照亮了他们的生活。</p>
<p>他们，终将会成为我们。</p>
<p>阅卷老师点评：</p>
<p>满分作文有五大优点，首先，作文将民工子女的生存状态很真实地描绘出来，从农村到城市经历的不自然、不适应，再到他们心态的逐渐成熟，让人感受到一个真实存在的群体;其次，作文的文字很流畅，可以看出考生具有一定的阅读积累，但是并无炫耀，恰如其分地表现了自己的情感和视野，文字和主题很匹配;第三，总体上看作文表达了作者对同龄人的同情、关注和企盼，言为心声，也正是作文题目要求的体现;第四，这篇文章的描写非常细腻，“小小的手指怎么也数不清写字楼的层数”;最后，文章关键还写出农民工子女的变化,“他们，终将会成为我们”，考生没有一味抱怨，写出了变化和希望。</p>
<p>这篇作文我感觉说出了很多作者的心情。我也给深深的感触了。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>余庆小叶苦丁茶个人认为是传销~(不服可以律师函)</title>
    <url>/1587/</url>
    <content><![CDATA[<h1 id="余庆小叶苦丁茶个人认为是传销-不服可以律师函"><a href="#余庆小叶苦丁茶个人认为是传销-不服可以律师函" class="headerlink" title="余庆小叶苦丁茶个人认为是传销~(不服可以律师函)"></a>余庆小叶苦丁茶个人认为是传销~(不服可以律师函)</h1><p>不说，先上图：</p>
<p><img src="http://qn.199604.com/typoraImg/image-20200615141927164.png" alt="image-20200615141927164"></p>
<p><img src="http://qn.199604.com/typoraImg/image-20200615141947878.png" alt="image-20200615141947878"></p>
<p>可以从照片看出是，这逼的茶叶为“贵州银河湾茶业有限公司”，那好咧~那我看看你是哪个逼出来传销的？</p>
<p><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/image-20200615142557401.png" alt="image-20200615142557401"></p>
<p><img src="http://qn.199604.com/typoraImg/image-20200615142728253.png" alt="image-20200615142728253"></p>
<hr>
<p><img src="http://qn.199604.com/typoraImg/image-20200615144223309.png" alt="image-20200615144223309"></p>
<p>好了看了一些图片之后，那就开始说下正事~</p>
<p>今年5月份，家里的老妈仔被所谓的朋友介绍(就是越是熟人才骗你上钩)大量购买了苦丁茶，每天沉迷于喝大剂量高浓度的苦丁茶，我爸和我说还天天晚上用来泡脚洗澡<del>当时我问我妈啥玩意，他还说是朋友介绍，朋友已经喝了很多年，中风的老人天天喝这个茶叶都好了(我手动狗头？你们信吗?)</del>还说能强身健体、包治百病、还鼓吹有毛病的人喝了才会觉得苦，身体越好就慢慢不苦了????</p>
<p>现在的茶都可以治百病？那么还需要医生干嘛？</p>
<p>最后说说吧，我妈喝了几个星期后，直接出现高烧，拍片肝、肾有问题~</p>
<p>算了不划水了<del>希望能懂就懂</del>微商宣传的东西是真tm恶心噢~</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>作为学生的我们越早懂得这些越好。</title>
    <url>/410/</url>
    <content><![CDATA[<p> 你有足够的理由佩服每天早起的人，不信的话，你去做，做到后会发现有很多人在佩服你呢。</p>
<p> 别迷恋网络。千万别。永远别。</p>
<p> 你在学生时代有很多花钱的地方。为了你的家人和你自己的前途，永远别乱花钱。</p>
<p> 如果你的个性让很多人对你敬而远之，那么你的个性是失败的，个性的成功在于能吸引，而不是能排斥。</p>
<p> 　　很多事情当你再回忆时会发现其实没什么。所以，不管你当时多么生气愤怒或者别的，都告诉自己不必这样。</p>
<p> 　　要学习也要休息，学会劳逸结合。</p>
<p> 　　在高中里，你有足够的空间承受失败和打击，因此，你真的应该找找自信和自傲的区别，可以用一辈子的。</p>
<p> 　　别为你自己和别人下定论，这非常重要。你所看到听到的可能只是一面。</p>
<p> 如果你发现很久了你一直是一个人去食堂吃饭或者去上自习，别在意，高中里一个人是正常的。</p>
<p> 很多事情别人通知你了，要说谢谢，没有通知你，不要责怪，因为那些事情你其实应该自己弄清楚。</p>
<p> “包在我身上”类话不要乱说，在没确定自己有能力办到之前。</p>
<p> 尊严是最重要的，但在学生时代里，要懂得利用这个空间锻炼自己，让自己的尊严有足够大的承受力。除了你自己，没人会为你保留它。社会是一个最喜欢打碎人的尊严的地方。</p>
<p> 不论男人还是女人，如果在学时时代里还把容貌当做重要的东西而过分重视的话，可能不会吃亏，但是早晚会吃亏。 　　高中可能有真实的爱情，但只是可能。很多时候他们是因为别人都谈恋爱而羡慕或者别的原因而在一起。</p>
<p> 要爱自己的学校，不管别人说它有多烂或有多好，它都是你的家，一个不爱家的人又怎么会好好在家工作呢。</p>
<p> 如果把上课不睡觉当做一种锻炼并且你做到了，那么，你将会很强。 　　别怕丢人，那是一种成功的尝试，不要笑话那些上台丢人的人。</p>
<p> 从绝望中寻找希望。</p>
<p> 你的确要学会有心计，但是永远记住，要胜利的唯一的方法永远只是:实力。</p>
<p> 面对不公平的东西，不要抱怨，你不如去努力奋斗，争取你自己最合适的公平。</p>
<p> 人生百态，不要对新的看不惯的东西生气，无所谓的，自己做好自己就好了。</p>
<p> 在学生时代里就开始训练自己的冷静力，这是一种能力，有大事时，能安静并能快速想出办法的人，很厉害。</p>
<p> 永远不要嘲笑你的教师单调，因为有一天现实会让你为这种愚蠢付出代价。</p>
<p> 不要幻想自己能成为老师的宠儿，因为你会发现不是自己的每个老师都会太管你，一切靠自觉。</p>
<p> 你可以看不惯一些东西，但是你应该学会接受，如果你没法改变那一切的话。</p>
<p> 对陌生人，或者把对方当做一张白纸，或者把对方当做你的朋友，总之别当做敌人，即使你听到再多的关于他(她)的不好的传闻。</p>
<p> 不必在穿着打扮上花太多心思。</p>
<p> 永远别渴望做个谁都不得罪的人，在反对和支持声中自己做出决定才精彩。</p>
<p> 要试着努力，不要还没开始就放弃。</p>
<p> 不要总想是否能成功，既然选择，便当风雨兼程。</p>
<p> 后悔，它是一种耗费精神的情绪，后悔是比损失更大的损失，比错误更大的错误。所以不要后悔。</p>
<p> 我们确实活得艰难，要承受种种外部的压力，更要面对自己内心的困惑。在苦苦挣扎中，如果有人向你投以理解的目光，你会感到一种生命的暖意，或许仅有短暂的一瞥，便足以使我感奋不已。</p>
<p> 每个人都有潜在的能量，只是很容易被习惯所掩盖，被时间所迷离，被惰性所消磨。</p>
<p> 相信时间的力量，可以冲淡很多东西。</p>
<p> 越大，我们就会发现对与错越是那么不明显，这不是错，这是事实，而且无法改变，所以不要斤斤计较，没有用的。</p>
<p> 珍惜每一个朋友，朋友是你除了家之外的第二个港湾。</p>
<p> 无聊的时候，别忘记朋友。朋友无聊的时候，别忘记你是他们的朋友。</p>
<p> 凡事要乐观，遇到挫折或者困难的时候，想开一点，换个角度想一想，坏事也许会变好事。</p>
<p> 无需自卑，我们只是扮演好适合自己的角色而已，不可能每个人都是主角，即使是配角，也要抬头挺胸地演下去。</p>
<p> 没有人喜欢学习，但这是我们在这个年龄必须做的事，每个人都如此，无人可以幸免。不要觉得学习很无聊，因为你会发现长大后的做的工作也很无聊。</p>
<p> 你往往对本篇文章没有免疫力，往往产生的只是“三分钟热情”，所以建议你经常看看本文，或者在你坚持不下去的时候再看一下。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>人生回忆</tag>
      </tags>
  </entry>
  <entry>
    <title>你妈逼</title>
    <url>/333/</url>
    <content><![CDATA[<p>不就是中考高考么 有本事你就再难点 有本事你问我三圈环流对罗马法形成有何影响 有本事你问我金融风暴刮到北京的加速度是多少 有本事你问我从汉朝到清朝的政治制度画成函数图像是什么样,有本事你让我把阿伏加得罗的所有细胞画出来 有本事你叫我把史记拿英语全翻译出来 来阿 来阿 有本事你来阿你妈逼</p>
<p>不就是读研究生麽你妈逼有本事你就吧研究低俗喜剧那些也弄来研究呀你妈逼 我去你妈个班主任你妈逼 天天背英语你妈逼 还很多不会呀你妈逼 不是全部都和你一个是英语研究生阿你妈逼 我们都是爱国的你妈逼 不想你这个日语1级的你妈逼 更不是英语6级的你妈逼 天天背课文就算了你妈逼 还要把每天留下来唱班歌你妈逼 唱班歌就算了你妈逼 唱得还要是团结就是力量你妈逼 比赛还进了决赛你妈逼 上天弄我们麽你妈逼 好把我不说了你妈逼 </p>
<p>你妈逼就是牛欢喜!!!!</p>
<p>牛欢喜阿你妈逼!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>使用BufferedReader和BufferedWriter转换文件编码格式遇到的坑~</title>
    <url>/1633/</url>
    <content><![CDATA[<p>最近一个省的导出功能遇到了一个奇葩的BUG，自个折腾了很久很无助，先记录吧~</p>
<p>启初还以为是部署的代码版本过久导致的，于是又重新去部署一份最新代码还是无法解决。因为导出功能是先从gp数据库上copy出 UTF-8的csv文件,基本上很快生成。可是到了需要到数据转换成GBK编码格式时候就出问题了。</p>
<p>BUG是这样的，开始导出并且转换小数据量呢基本上莫得问题，可到了50W条数据以后就变成假死状态。</p>
<p>起初我看代码都发现不了问题所在，觉得代码在几个比较大的省份都能跑起来~数据量基本上都在百万基本上。</p>
<p>进而我分了这这几步排除：</p>
<p>1.检查跳转tomcat的jvm参数/或者server.xml是否有存在限制—正常</p>
<p>2.检查是否是服务器的缓冲区设置问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/sys/vm/drop_caches </span><br></pre></td></tr></table></figure>

<p>发现/proc/sys/vm/drop_caches 状态为3，且crontab 定时也是1/3 状态每十分钟执行一遍，禁止后还是会无法生成 转换后的文件–假死状态</p>
<p>3.既然环境都修改了，还是无法成功那么继续从代码定位。</p>
<p>debug定位到假死代码块：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while ((line = bin.readLine()) != null) &#123;</span><br><span class="line">content.append(line);</span><br><span class="line">content.append(System.getProperty(&quot;line.separator&quot;));</span><br><span class="line">if(content.length()&gt;9999999) &#123;</span><br><span class="line">log.info(&quot;content.length:&#123;&#125;&quot;,content.length());</span><br><span class="line">writer.write(content.toString());</span><br><span class="line">writer.flush();</span><br><span class="line">content = new StringBuffer();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过日志发现，每次当 content.length()满足条件之后并且进行写入后，就卡住了.且日志的content.length 只会提示一遍。</p>
<p>因此判断if(content.length()&gt;9999999)条件存在一定问题。可能就是因为content太大，缓冲区无法一次性写入造成的。于是换一个条件进行写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int count = 0;</span><br><span class="line">while ((line = bin.readLine()) != null) &#123;</span><br><span class="line">count++;</span><br><span class="line">content.append(line);</span><br><span class="line">content.append(System.getProperty(&quot;line.separator&quot;));</span><br><span class="line">if (count%100000==0) &#123;</span><br><span class="line">log.info(&quot;count.length:&#123;&#125;&quot;,count);</span><br><span class="line">writer.write(content.toString());</span><br><span class="line">writer.flush();</span><br><span class="line">content = new StringBuffer();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>即每当遍历条数到达一定程度即可写入，防止缓冲区过大被回收(后期遍历条数设置多少可在参数管理设置)</p>
<p>测试部署后，转换生成文件耗时是原来的1/2.那么解决…</p>
<p>因此，使用BufferedWriter写入时候也需要考虑系统性能设置的问题</p>
<p>完整的代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将一指定编码的文件转换为另一编码的文件</span><br><span class="line"> *</span><br><span class="line"> * @param oldFullFileName</span><br><span class="line"> * @param oldCharsetName</span><br><span class="line"> * @param newFullFileName</span><br><span class="line"> * @param newCharsetName</span><br><span class="line"> */</span><br><span class="line">public static void convert(String oldFullFileName, String oldCharsetName, String newFullFileName, String newCharsetName) &#123;</span><br><span class="line">log.info(&quot;the old file name is : &#123;&#125;, The oldCharsetName is : &#123;&#125;&quot;, oldFullFileName, oldCharsetName);</span><br><span class="line">log.info(&quot;the new file name is : &#123;&#125;, The newCharsetName is : &#123;&#125;&quot;, newFullFileName, newCharsetName);</span><br><span class="line">try &#123;</span><br><span class="line">semaphore.acquire();// 获取信号量,占用</span><br><span class="line">&#125; catch (InterruptedException e1) &#123;</span><br><span class="line">   log.error(&quot;文件转码并发占用异常&quot;,e1);</span><br><span class="line">   return;</span><br><span class="line">&#125;</span><br><span class="line">try (BufferedReader bin = new BufferedReader(new InputStreamReader(new FileInputStream(oldFullFileName), oldCharsetName));</span><br><span class="line"> BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(newFullFileName), newCharsetName)))&#123;</span><br><span class="line">StringBuffer content = new StringBuffer();</span><br><span class="line"></span><br><span class="line">String line;</span><br><span class="line">newFullFileName = newFullFileName.replace(&quot;\\&quot;, &quot;/&quot;);</span><br><span class="line">File dir = new File(newFullFileName.substring(0, newFullFileName.lastIndexOf(&quot;/&quot;)));</span><br><span class="line">if (!dir.exists()) &#123;</span><br><span class="line">dir.mkdirs();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int count = 0;</span><br><span class="line">while ((line = bin.readLine()) != null) &#123;</span><br><span class="line">count++;</span><br><span class="line">content.append(line);</span><br><span class="line">content.append(System.getProperty(&quot;line.separator&quot;));</span><br><span class="line">if (count%100000==0) &#123;</span><br><span class="line">log.info(&quot;count.length:&#123;&#125;&quot;,count);</span><br><span class="line">writer.write(content.toString());</span><br><span class="line">writer.flush();</span><br><span class="line">content = new StringBuffer();</span><br><span class="line">&#125;</span><br><span class="line">//if(content.length()&gt;9999999) &#123;</span><br><span class="line">//log.info(&quot;content.length:&#123;&#125;&quot;,content.length());</span><br><span class="line">//writer.write(content.toString());</span><br><span class="line">//writer.flush();</span><br><span class="line">//content = new StringBuffer();</span><br><span class="line">//Thread.sleep(1000);</span><br><span class="line">//log.info(&quot;Thread sleep end&quot;);</span><br><span class="line">//&#125;</span><br><span class="line">&#125;</span><br><span class="line">log.info(&quot;count:&#123;&#125;&quot;,count);</span><br><span class="line"></span><br><span class="line">//write(newFullFileName,content.toString(),newCharsetName);</span><br><span class="line"></span><br><span class="line">writer.write(content.toString());</span><br><span class="line">writer.flush();</span><br><span class="line">log.info(&quot;writer---end&#123;&#125;&quot;);</span><br><span class="line">semaphore.release();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">log.error(&quot;文件转码异常&quot;,e);</span><br><span class="line">semaphore.release();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>内网机器使用frp实现内网穿透(centos)</title>
    <url>/1739/</url>
    <content><![CDATA[<p>现在大部分家里的宽带都没有独立的公网ip，没有公网IP是一件很不方便的事情，为了解决这个问题，则需要内网穿透，而内网穿透的方法有很多种，例如使用<code>花生壳</code>、<code>ngrok</code>等，该文章要介绍的是使用frp让家里的机器实现内网穿透。</p>
<p><strong>实际上frp有官方的<a href="https://gofrp.org/docs/">中文文档(https://gofrp.org/docs/)</a>，上面的内容已经非常详尽，对相关操作比较熟悉的人可以直接阅读官方的中文文档。</strong></p>
<h3 id="什么是frp"><a href="#什么是frp" class="headerlink" title="什么是frp"></a>什么是frp</h3><blockquote>
<p><a href="https://links.jianshu.com/go?to=https://github.com/fatedier/frp">frp</a> 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</p>
</blockquote>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>在使用frp之前，需要一台有公网IP的服务器（下文称外网主机），一台需要实现内网穿透的机器（下文称内网主机），SSH工具，以及一个域名（如果只是建立SSH反向代理则不需要域名）。</p>
<h3 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h3><p>根据机器的操作系统，在<a href="https://github.com/fatedier/frp/releases">Release</a>页面中找到对应的frp程序，然后分别在外网主机和内网主机中下载它。</p>
<p>我这边使用的是：frp_0.36.2_linux_amd64.tar</p>
<h6 id="外网服务器-外网主机"><a href="#外网服务器-外网主机" class="headerlink" title="外网服务器-外网主机"></a>外网服务器-外网主机</h6><p>SSH连接上外网主机后，使用<code>wget</code>指令下载frp或者直接本机下载完后上传到外网主机。</p>
<p>使用<code>tar</code>指令解压tar.gz文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.36.2_linux_amd64.tar</span><br></pre></td></tr></table></figure>

<p>使用<code>cd</code>指令进入解压出来的文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd frp_0.36.2_linux_amd64/</span><br></pre></td></tr></table></figure>

<p>外网主机作为服务端，可以删掉不必要的客户端文件，使用<code>rm</code>指令删除文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f frpc</span><br><span class="line">rm -f frpc.ini</span><br></pre></td></tr></table></figure>

<p>接下来要修改服务器配置文件，即<code>frps.ini</code>文件。使用<code>vi</code>指令对目标文件进行编辑。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 17000 #默认是7000</span><br></pre></td></tr></table></figure>

<p><code>[common]</code>部分是必须有的配置，其中<code>bind_port</code>是自己设定的frp服务端端口</p>
<p>保存上面的配置后，使用以下指令后台启动frp服务端。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ./frps -c ./frps.ini &amp;</span><br></pre></td></tr></table></figure>

<p>服务端的工作就到此结束了。</p>
<h6 id="内网机器-客户端"><a href="#内网机器-客户端" class="headerlink" title="内网机器-客户端"></a>内网机器-客户端</h6><p>客户端前面的操作和服务端是一模一样的，这里不再重复填写了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.36.2_linux_amd64.tar</span><br><span class="line">cd frp_0.36.2_linux_amd64/</span><br><span class="line">rm -f frps</span><br><span class="line">rm -f frps.ini</span><br><span class="line">vi frpc.ini</span><br></pre></td></tr></table></figure>

<p>frpc.ini内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 17000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 192.168.31.101</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 16000</span><br></pre></td></tr></table></figure>

<p>上面的配置和服务端是对应的。</p>
<p><code>[common]</code>中的<code>server_addr</code>填frp服务端的ip（也就是外网主机的IP），<code>server_port</code>填frp服务端的<code>bind_prot</code>。</p>
<p><code>[ssh]</code>中的<code>local_port</code>填群晖的ssh端口。</p>
<p>保存配置，使用以下指令后台启动frp客户端。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ./frpc -c ./frpc.ini &amp;</span><br></pre></td></tr></table></figure>

<p>PS:</p>
<p>如果咱们使用阿里云或者腾讯云之类的云上服务器，记得在安全策略开放 <code>17000</code>和<code>16000</code>端口哦，不然这边也无法进行访问的~</p>
<p>参考：<a href="https://gofrp.org/docs/">https://gofrp.org/docs/</a></p>
]]></content>
      <categories>
        <category>nginx</category>
        <category>centos</category>
        <category>frp</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>nginx</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hadoop fs -getmerge命令合并多个文件</title>
    <url>/981/</url>
    <content><![CDATA[<p>emmm怎么说好呢,感觉-getmerge是真的好用 使用方法：</p>
<p><code>hadoop fs -getmerge &lt;src&gt; &lt;localdst&gt; \[addnl\] </code></p>
<p>说白了就是：</p>
<p>hadoop fs -getmerge hdsf目录 linux目录 </p>
<p>例子:</p>
<p><code>hadoop fs -getmerge /user/jfa5d/glj\_test/pushFile/\* /home/a5duser/pushFile/glj/one/x.csv </code></p>
<p>然后就OJBK了..</p>
<p> <img src="http://199604.com/wp-content/uploads/2018/12/hadoop_20181203105941.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>getmerge</tag>
      </tags>
  </entry>
  <entry>
    <title>六月前夕</title>
    <url>/590/</url>
    <content><![CDATA[<h3 id="京东商家怎么挣钱"><a href="#京东商家怎么挣钱" class="headerlink" title="京东商家怎么挣钱"></a>京东商家怎么挣钱</h3><p>前几天在京东上买了一款华为mate9 pro钢化软膜水性曲面贴膜，然后第三方的客服居然打电话给我告知我，你申请一下维修。就能全额退款…(然后我收到的不是全款)全款为：卷后33。返款为：27，差价为6块 其实我是疑惑特么那个第三方的商家怎么挣钱？ 从我申请到退款成功时间10分钟左右… 这里面是不是有一些不可告人的秘密我就不太清楚了… 毕竟我经常是好奇害死了自己… 下面就截图..曝光一下商家吧…</p>
<p> <img src="http://qn.199604.com/typoraImg/20170608180921-576x1024.png"> <img src="http://qn.199604.com/typoraImg/20170608181008.png"></p>
<hr>
<h3 id="六月是噩梦"><a href="#六月是噩梦" class="headerlink" title="六月是噩梦"></a>六月是噩梦</h3><p>连续上班了6天,京东派也就我和璇姐天天搬货… </p>
<p><img src="http://qn.199604.com/typoraImg/20170608181613-1024x576.jpg"> 而这种天气，我觉得出现在图片里就好了。 毕竟现在中实在是太热了….</p>
<p> <img src="http://qn.199604.com/typoraImg/0170608181846-576x1024.jpg"> </p>
<p>原谅我拍照技术贼差 <img src="http://qn.199604.com/typoraImg/20170608182218-1024x573.jpg"> 最后只能对还没有高考的朋友说</p>
<p> <img src="http://qn.199604.com/typoraImg/20170608182401.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>2016河职院京东派纳新宣传</title>
    <url>/216/</url>
    <content><![CDATA[<p><img src="http://qn.199604.com/naxin.jpg"></p>
<hr>
<p>TO:如还有没加纳新群的小伙伴请加群！</p>
<p>记得哦，请先看完宣传界面扫二维码进微信群呀！</p>
<hr>
<p>河源职业技术学院京东派店</p>
<p>现为河源职业技术学院大一学生提供多名努力接触社会的表现机会</p>
<p>本店旨在为能进入京东派的小伙伴们提供实训平台</p>
<p>锻炼其综合能力，并为日后走向社会提供历练经验</p>
<p>如果你觉得我们只是看店、送货的</p>
<p>那么你就错了…</p>
<p>so</p>
<p>如果你不想大学三年碌碌无为</p>
<p>如果你不想大学三年一事无成</p>
<p>如果你不想虚度你的青春</p>
<p>那么，12月27日</p>
<p>我们在京东派，不见不散</p>
<h2 id="适合你们的位置："><a href="#适合你们的位置：" class="headerlink" title="适合你们的位置："></a>适合你们的位置：</h2><p><strong>①</strong>常驻小伙伴（店员）：</p>
<p>在店里负责学校的快递，上班时间会比较长，相对枯燥，但比较轻松。 <strong>?②</strong>常驻大伙伴（配送员） ：</p>
<p>三四节与七八节没课的优先，可找个不同专业的搭档。</p>
<p><strong>小伙伴要求：</strong></p>
<p><strong>①有耐心?②有耐心?③有耐心?</strong></p>
<p><strong>①有责任心 ②有责任心 ③有责任心</strong></p>
<p><strong>①有团队精神 ②有团队精神 ③有团队精神</strong></p>
<p>报名时间：12月25，26日</p>
<p>报名地点：河职院创业园6号店京东派</p>
<p>或者在线填写信息：点击填写(已经结束！)</p>
<p>联系人:陈奕璇 手机:13690032554 邮箱:<a href="mailto:&#52;&#x37;&#x38;&#x38;&#x37;&#57;&#52;&#52;&#x30;&#64;&#113;&#113;&#46;&#99;&#x6f;&#x6d;">&#52;&#x37;&#x38;&#x38;&#x37;&#57;&#52;&#52;&#x30;&#64;&#113;&#113;&#46;&#99;&#x6f;&#x6d;</a></p>
<hr>
<h3 id="以下是京东派小伙伴团队的经历"><a href="#以下是京东派小伙伴团队的经历" class="headerlink" title="以下是京东派小伙伴团队的经历:"></a>以下是京东派小伙伴团队的经历:</h3><p><img src="http://qn.199604.com/388159457624652629.jpg"></p>
<p>this is 活动</p>
<p><img src="http://qn.199604.com/1989595525462360.jpg"></p>
<p><img src="http://qn.199604.com/514229225492403318.jpg"><img src="http://qn.199604.com/821144896376331654.jpg"></p>
<p><img src="http://qn.199604.com/100729055746665144.jpg"> <img src="http://qn.199604.com/720388333602398275.jpg"> <img src="http://qn.199604.com/8cce80ecgw1f7sct4my78j20np0hs777.jpg"></p>
<p>元老级的小伙伴(师兄师姐们)</p>
<p><img src="http://qn.199604.com/20161225004835.jpg"></p>
<p>在努力的我们</p>
<p><img src="http://qn.199604.com/20161225004940.jpg"></p>
<p>面对京东618、双十一的我们</p>
<p><img src="http://qn.199604.com/461652854330978470.jpg"> <img src="http://qn.199604.com/570608131170190447.jpg"> <img src="http://qn.199604.com/528626266731359465.jpg"> <img src="http://qn.199604.com/60389317375466934.jpg"><img src="http://qn.199604.com/394844099444254765.jpg"></p>
<p>一起玩耍的我们</p>
<p><img src="http://qn.199604.com/58096045293522145.jpg"></p>
<p><img src="http://qn.199604.com/694958535603645539.jpg"></p>
<p><img src="http://qn.199604.com/542601792838639798.jpg"></p>
<p><img src="http://qn.199604.com/20161225005522.jpg"></p>
<p><strong>最后,我们需要的是能吃苦耐劳的小伙伴</strong></p>
<p><strong>因为我们是三心（耐心、责任心、团结心）团队</strong></p>
<p><strong>心有多大–团队就有多大</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>京东派</tag>
      </tags>
  </entry>
  <entry>
    <title>关于java截取多重域名的笔记...</title>
    <url>/869/</url>
    <content><![CDATA[<p>最近一直在做域名筛选,因为之前一直在学javaweb,但是来到这个公司,一直是让我去截取数据。</p>
<p>所以自己也做下笔记吧..</p>
<p>先上图再说需求吧</p>
<p><img src="http://qn.199604.com/typoraImg/TIM20180128230132.png" alt="img"></p>
<p>需求：</p>
<p>如：把<a href="http://www.baidu.com/">www.baidu.com</a> 或者news.baidu.com,截取分布拆成</p>
<p>即,先去除www和后缀com/net/cn/com.cn….</p>
<p>然后输入结果为：.baidu.(根域名)news.(二级)news.baidu.(二级全域名)</p>
<p>实现步骤…</p>
<p>1.先把数据,即url除去www/后缀</p>
<p>2.使用java代码去跑,分析判断,如果遇到4级、5级域名，就重复跑(即把含有几级的数据，跑到只剩下根域名)</p>
<p>下面是主要代码吧。有点乱，做的过程我自己也很懵逼…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.quchong;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">import comglj.utils.CharUtil;</span><br><span class="line">import comglj.utils.JDBCUtil;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class TestJDBC &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		try&#123;</span><br><span class="line">			Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">			</span><br><span class="line">			Connection conn = JDBCUtil.getConnection();</span><br><span class="line">			Statement s = conn.createStatement();</span><br><span class="line">			</span><br><span class="line">			String sql = &quot;select * FROM sanji&quot;;</span><br><span class="line">			ResultSet rs = s.executeQuery(sql);</span><br><span class="line">			while (rs.next()) &#123;</span><br><span class="line">				String id = rs.getString(1);</span><br><span class="line">				String tac = rs.getString(2);</span><br><span class="line">				String host = rs.getString(3);</span><br><span class="line">				String is_reg = rs.getString(4);</span><br><span class="line">				String host_id = rs.getString(5);</span><br><span class="line">				String pass_time = &quot;&quot;;</span><br><span class="line">				SimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);//设置日期格式</span><br><span class="line">				pass_time = df.format(new Date());</span><br><span class="line">				//判断第一个.不在开头and最后一个.不在域名最后面</span><br><span class="line">				if(host.indexOf(&quot;.&quot;)&gt;0&amp;&amp;host.indexOf(&quot;.&quot;)+1&lt;host.length())&#123;</span><br><span class="line">					//一级域名</span><br><span class="line">//					System.out.println(host+&quot;--&quot;+host.substring(0,host.indexOf(&quot;.&quot;)+1)); </span><br><span class="line">					String hostByyiji = host.substring(0,host.indexOf(&quot;.&quot;)+1);</span><br><span class="line">					String sqlByyiji = &quot;insert into yiji (ID,TAC,HOST,IS_REG,HOST_ID,PASS_TIME) &quot;</span><br><span class="line">							+ &quot;values(&#x27;&quot;+id+&quot;&#x27;,&#x27;&quot;+tac+&quot;&#x27;,&#x27;&quot;+hostByyiji+&quot;&#x27;,&#x27;&quot;+is_reg+&quot;&#x27;,&#x27;&quot;+host_id+&quot;&#x27;,&#x27;&quot;+pass_time+&quot;&#x27;)&quot;;</span><br><span class="line">					Statement s1 = conn.createStatement();</span><br><span class="line">					s1.execute(sqlByyiji);</span><br><span class="line">					</span><br><span class="line">					//包含一级二级域名，再次去筛选截取</span><br><span class="line">					String hostByerji = host.substring(host.indexOf(&quot;.&quot;),host.length());</span><br><span class="line">					if(CharUtil.CharNumber(hostByerji)&gt;2)&#123;</span><br><span class="line">						//二级及其以上</span><br><span class="line">//						System.out.println(hostByerji);</span><br><span class="line">						hostByerji = host.substring(host.indexOf(&quot;.&quot;)+1,host.length());</span><br><span class="line">//						System.out.println(host+&quot;----&quot;+host.substring(host.indexOf(&quot;.&quot;)+1,host.length()));</span><br><span class="line">						String sqlByerji = &quot;insert into siji (ID,TAC,HOST,IS_REG,HOST_ID,PASS_TIME) &quot;</span><br><span class="line">								+ &quot;values(&#x27;&quot;+id+&quot;&#x27;,&#x27;&quot;+tac+&quot;&#x27;,&#x27;&quot;+hostByerji+&quot;&#x27;,&#x27;&quot;+is_reg+&quot;&#x27;,&#x27;&quot;+host_id+&quot;&#x27;,&#x27;&quot;+pass_time+&quot;&#x27;)&quot;;</span><br><span class="line">						Statement sterji = conn.createStatement();</span><br><span class="line">						sterji.execute(sqlByerji);</span><br><span class="line">					&#125;else&#123;</span><br><span class="line">						//根域名</span><br><span class="line">//						System.out.println(hostByerji);</span><br><span class="line">						String sqlBygeng = &quot;insert into geng (ID,TAC,HOST,IS_REG,HOST_ID,PASS_TIME) &quot;</span><br><span class="line">								+ &quot;values(&#x27;&quot;+id+&quot;&#x27;,&#x27;&quot;+tac+&quot;&#x27;,&#x27;&quot;+hostByerji+&quot;&#x27;,&#x27;&quot;+is_reg+&quot;&#x27;,&#x27;&quot;+host_id+&quot;&#x27;,&#x27;&quot;+pass_time+&quot;&#x27;)&quot;;</span><br><span class="line">						Statement st1 = conn.createStatement();</span><br><span class="line">						st1.execute(sqlBygeng);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					//根域名</span><br><span class="line">//					System.out.println(host); </span><br><span class="line">					String sqlBygeng = &quot;insert into geng (ID,TAC,HOST,IS_REG,HOST_ID,PASS_TIME) &quot;</span><br><span class="line">							+ &quot;values(&#x27;&quot;+id+&quot;&#x27;,&#x27;&quot;+tac+&quot;&#x27;,&#x27;&quot;+host+&quot;&#x27;,&#x27;&quot;+is_reg+&quot;&#x27;,&#x27;&quot;+host_id+&quot;&#x27;,&#x27;&quot;+pass_time+&quot;&#x27;)&quot;;</span><br><span class="line">					Statement st1 = conn.createStatement();</span><br><span class="line">					st1.execute(sqlBygeng);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;catch(ClassNotFoundException | SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;	</span><br></pre></td></tr></table></figure>

<p>下面代码是判断域名里面还有几个‘.’即可判断还有几级没有拆分</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package comglj.utils;</span><br><span class="line"></span><br><span class="line">public class CharUtil &#123;</span><br><span class="line">	public static int CharNumber(String url)&#123;</span><br><span class="line">		//需要查找重复的字或者符号</span><br><span class="line">		char c = &#x27;.&#x27;;</span><br><span class="line">		int i,index=-1,count=0;</span><br><span class="line">		for(i=0;i&lt;url.length();i++)</span><br><span class="line">		if((url.indexOf(c,index+1))!=-1)&#123;</span><br><span class="line">			index=url.indexOf(c,index+1);</span><br><span class="line">			count++;</span><br><span class="line">		&#125;</span><br><span class="line">		return count;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>数据库类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package comglj.utils;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line"></span><br><span class="line">public class JDBCUtil &#123;</span><br><span class="line">	private static String url;</span><br><span class="line">	private static String username;</span><br><span class="line">	private static String password;</span><br><span class="line">	public JDBCUtil() &#123;</span><br><span class="line">		super();</span><br><span class="line">		// TODO Auto-generated constructor stub</span><br><span class="line">	&#125;</span><br><span class="line">	static &#123;</span><br><span class="line">		try &#123;</span><br><span class="line">			Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">			url = &quot;jdbc:mysql://127.0.0.1:3306/work?characterEncoding=UTF-8&quot;;</span><br><span class="line">			username = &quot;root&quot;;</span><br><span class="line">			password = &quot;root&quot;;</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			// TODO: handle exception</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static Connection getConnection() throws SQLException&#123;</span><br><span class="line">		Connection con = DriverManager.getConnection(url,username,password);</span><br><span class="line">		return con;</span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		try &#123;</span><br><span class="line">			Connection conn = JDBCUtil.getConnection();</span><br><span class="line">			String sql = &quot;select * from k2&quot;;</span><br><span class="line">			PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">			ResultSet rs =  ps.executeQuery(sql);</span><br><span class="line">			while(rs.next())&#123;</span><br><span class="line">				String name = rs.getString(&quot;NAME&quot;);</span><br><span class="line">				System.out.println(name);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (SQLException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后在用sql语句 统计拆分出现的次数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT MFR_NAM_ID as ID,TAC,RULE as 域名,count(1) as 次数 from x5GROUP BY MFR_NAM_ID,TAC,RULE ORDER BY count(1) DESC</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>关于oracle中in和exists的效率</title>
    <url>/1007/</url>
    <content><![CDATA[<p>我又遇到了问题了… 当遇到数据量大但是又要考虑效率和资源消耗问题时，我还是会从查的效率去改善,然后再到程序，毕竟你load数据时间也过长的话，那么程序等待数据也是一部分吧?</p>
<p>以下总结都是扯淡，请勿相信..</p>
<hr>
<p>前两天有一个开发java小程序的需求，需要到全量话单数据里面抽出某几款的数据,因为等待结果时间比较长，前前后后优化了几次…因为全量话单数据表一个表就上E数据..好了新手扯淡请不要相信。</p>
<hr>
<p>emmm..说回正题吧。自从工作后一直听到老大们对我说尽量用exists不要用in，因为exists只判断存在而in需要对比值，所以exists比较快，然后和同事打赌还输过一杯奶茶(心疼)。但看了看网上的一些东西才发现这种比较需要分情况哒…</p>
<ul>
<li>使用in方式</li>
<li>使用exists方式</li>
<li>普通连表方式</li>
</ul>
<p>1.使用in方式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> B)<span class="comment">--使用in方式执行的过程相当于:</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A, ( <span class="keyword">select</span> <span class="keyword">distinct</span> id <span class="keyword">from</span> B ) B <span class="keyword">where</span> A.id <span class="operator">=</span> B.id;</span><br></pre></td></tr></table></figure>

<p>2.使用exists方式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">exists</span>(<span class="keyword">select</span> B.id <span class="keyword">from</span> B <span class="keyword">where</span> B.id<span class="operator">=</span>A.id)<span class="comment">--使用exists方式执行的过程相当于:</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> ( <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A )</span><br><span class="line">loop</span><br><span class="line">if ( <span class="keyword">exists</span> ( <span class="keyword">select</span> <span class="keyword">null</span> <span class="keyword">from</span> B <span class="keyword">where</span> B.id <span class="operator">=</span> A.id )</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">OUTPUT THE RECORD</span><br><span class="line"><span class="keyword">end</span> if</span><br><span class="line"><span class="keyword">end</span> loop</span><br></pre></td></tr></table></figure>

<p>3.普通连表方式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> A.<span class="operator">*</span>,B.<span class="operator">*</span> <span class="keyword">from</span> A,B <span class="keyword">where</span> A.id <span class="operator">=</span> B.id <span class="comment">--普通连表方式使用笛卡尔乘积</span></span><br></pre></td></tr></table></figure>

<p>具体使用时到底选择哪一个，主要需要考虑查询效率问题：</p>
<p>第一条语句使用了A表的索引；</p>
<p>第二条语句使用了B表的索引；</p>
<p>第三条语句同时使用了A表、B表的索引；</p>
<p>如果A、B表的数据量不大，那么这三个语句执行效率几乎无差别；</p>
<p>如果A表数据量大，B表小，显然第一条语句效率更高，反之，则第二条语句效率更高；</p>
<p>第三条语句尽管同时使用了A表、B表的索引，单扫描次数是笛卡尔乘积，效率最差。(hive上我是这样用的，因为使用多个字段是不支持)</p>
<p>即：</p>
<p>IN 是把外表和内表做hash连接，而exists是对外表做loop循环，每次loop循环再对内表进行查询 如果查询的两个表大小相当，那么用in和exists差别不大。 如果两个表一个较小，一个较大，则子查询表大的用exists,子查询表小的用in not in 和not exists: 如果查询语句使用了not in 那么内外表都进行全表扫描，没有用到索引； 而not exists 的子查询依然能用到表上的索引，所以无论那个表大，用not exists都比not in要快</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>exists</tag>
        <tag>in</tag>
      </tags>
  </entry>
  <entry>
    <title>内网机器使用frp实现内网穿透(centos)</title>
    <url>/1739/</url>
    <content><![CDATA[<p>现在大部分家里的宽带都没有独立的公网ip，没有公网IP是一件很不方便的事情，为了解决这个问题，则需要内网穿透，而内网穿透的方法有很多种，例如使用<code>花生壳</code>、<code>ngrok</code>等，该文章要介绍的是使用frp让家里的机器实现内网穿透。 <strong>实际上frp有官方的<a href="https://gofrp.org/docs/">中文文档(https://gofrp.org/docs/)</a>，上面的内容已经非常详尽，对相关操作比较熟悉的人可以直接阅读官方的中文文档。</strong></p>
<h3 id="什么是frp"><a href="#什么是frp" class="headerlink" title="什么是frp"></a>什么是frp</h3><blockquote>
<p><a href="https://links.jianshu.com/go?to=https://github.com/fatedier/frp">frp</a> 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</p>
</blockquote>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>在使用frp之前，需要一台有公网IP的服务器（下文称外网主机），一台需要实现内网穿透的机器（下文称内网主机），SSH工具，以及一个域名（如果只是建立SSH反向代理则不需要域名）。</p>
<h3 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h3><p>根据机器的操作系统，在<a href="https://github.com/fatedier/frp/releases">Release</a>页面中找到对应的frp程序，然后分别在外网主机和内网主机中下载它。 我这边使用的是：frp_0.36.2_linux_amd64.tar</p>
<h6 id="外网服务器-外网主机"><a href="#外网服务器-外网主机" class="headerlink" title="外网服务器-外网主机"></a>外网服务器-外网主机</h6><p>SSH连接上外网主机后，使用<code>wget</code>指令下载frp或者直接本机下载完后上传到外网主机。 使用<code>tar</code>指令解压tar.gz文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.36.2_linux_amd64.tar</span><br></pre></td></tr></table></figure>

<p>使用<code>cd</code>指令进入解压出来的文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd frp_0.36.2_linux_amd64/</span><br></pre></td></tr></table></figure>

<p>外网主机作为服务端，可以删掉不必要的客户端文件，使用<code>rm</code>指令删除文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f frpc</span><br><span class="line">rm -f frpc.ini</span><br></pre></td></tr></table></figure>

<p>接下来要修改服务器配置文件，即<code>frps.ini</code>文件。使用<code>vi</code>指令对目标文件进行编辑。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 17000 #默认是7000</span><br></pre></td></tr></table></figure>

<p><code>[common]</code>部分是必须有的配置，其中<code>bind_port</code>是自己设定的frp服务端端口 保存上面的配置后，使用以下指令后台启动frp服务端。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ./frps -c ./frps.ini &amp;</span><br></pre></td></tr></table></figure>

<p>服务端的工作就到此结束了。</p>
<h6 id="内网机器-客户端"><a href="#内网机器-客户端" class="headerlink" title="内网机器-客户端"></a>内网机器-客户端</h6><p>客户端前面的操作和服务端是一模一样的，这里不再重复填写了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.36.2_linux_amd64.tar</span><br><span class="line">cd frp_0.36.2_linux_amd64/</span><br><span class="line">rm -f frps</span><br><span class="line">rm -f frps.ini</span><br><span class="line">vi frpc.ini</span><br></pre></td></tr></table></figure>

<p>frpc.ini内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 17000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 192.168.31.101</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 16000</span><br></pre></td></tr></table></figure>

<p>上面的配置和服务端是对应的。 <code>[common]</code>中的<code>server_addr</code>填frp服务端的ip（也就是外网主机的IP），<code>server_port</code>填frp服务端的<code>bind_prot</code>。 <code>[ssh]</code>中的<code>local_port</code>填群晖的ssh端口。 保存配置，使用以下指令后台启动frp客户端。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ./frpc -c ./frpc.ini &amp;</span><br></pre></td></tr></table></figure>

<p>PS: 如果咱们使用阿里云或者腾讯云之类的云上服务器，记得在安全策略开放 <code>17000</code>和<code>16000</code>端口哦，不然这边也无法进行访问的~ 参考：<a href="https://gofrp.org/docs/">https://gofrp.org/docs/</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>Linux</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title>再次搬家</title>
    <url>/350/</url>
    <content><![CDATA[<p>好了这次成功的搬家把了枫叶的新加波主机上。</p>
<p>感觉还是不错的。希望可以稳定,稳定才是最重要的。</p>
<p>也感谢<a href="http://asheblog.org/">ashe</a>&amp;<a href="http://www.fyvps.com/aff.php?aff=018">枫叶主机</a>的无私与支持!!!</p>
<p>好了继续做作业去</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>准高三的杂感。</title>
    <url>/403/</url>
    <content><![CDATA[<p> 从一楼到四楼的距离原来只有三年—–听，（北京东路的日子）很有feel……</p>
<p> 高一的时候，觉得高三太遥远了，每天上课睡得天昏地暗，醒来调戏一下前后的女生，笑的肆无忌惮。那时的我对成绩不屑一顾，所以成绩也对我不屑一顾。现在都觉得很后悔!!!!!!</p>
<p> “放心吧，我都没用用过，正所谓船到桥头自然直。”我是这样对父母的担心的。但是我很快明白了，船到桥头不管他，他是会沉还很快的沉没。</p>
<p> 到了高二下学期，可以说是准高三了，理综都进入了第一轮的复习去了，然后渐渐变得对成绩很敏感，会看着试卷上鲜红的分数思索万千，我这试卷的手指骨在发抖，也会有时趴在桌子上睡觉而自责，一阵又一阵的心酸。</p>
<p> 课室黎都弥漫着准高三的味道，门口有对联，墙上贴着各个名校的分数线，后面的黑板写着“高三来了准备好了吗?”挂历上每天减少的数字，刺激你的神经，拉紧你心中的弦—-面对6月9号的小高考（会考）。</p>
<p> 每当高三的师姐师兄们说高三有多变态我就会感觉到高三代表着压力、紧张、辛苦，但有一个很好的词—充实。</p>
<p> 我甚至喜欢上这种生活，每天醒来，在心中大喊几声“尽力做好！”然后很清楚知道今天自己要做什么。以前的朋友笑着给我说：“你怎么变了怎么多的？这可不是你的风格挨。”</p>
<p> 虽说今时不同往日了，但成绩这东西吧，也不是说你勤奋，立刻就能一飞冲天的。所以，但你有梦想在荆刺中摔倒了几百次伤得遍体鳞伤，在现实的绝壁上撞得头破血流的时候，请不要沮丧，不要绝望。</p>
<p> 泰戈尔说过：“如果你在错过太阳的时候落泪，那么一将错失群星。”</p>
<p> 最后，以一句话共勉：命运由两部分组成，一半在上帝手中，是宿命；另一半是在自己手中，是拼命。</p>
<p> 在不到20天的时间里。希望准备高考的师兄师姐们加油！冲破自己的梦想！考到理想的大学。</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>删除eclipse中的SVN账号信息</title>
    <url>/887/</url>
    <content><![CDATA[<p>当我们需要清理eclipse中记录的SVN账号信息时，按如下操作： eclipse中打开window——&gt;preferences——-&gt;SVN页面，</p>
<p>如下所示：</p>
<p> <img src="http://qn.199604.com/typoraImg/20180308164025.jpg"> </p>
<p>一般情况下，根据使用的SVN接口类型不同，清理eclipse中记录的SVN账号信息有如下两种方法：</p>
<p> 1.当使用的SVN接口是SVNK时，打开elcipse的安装位置，找到configuration\org.eclipse.core.runtime文件夹，然后删除其中的.keyring文件，然后重启eclipse就可以了，提交的时候就会让你重新输入用户名和密码；</p>
<p> 2.如果用到的是JavaHL，那么需要打开C:\Users\Administrator（用户）\AppData\Roaming\Subversion\auth文件夹，然后删除其中的内容并重启eclipse即可。</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Java的UUID生成唯一标识</title>
    <url>/842/</url>
    <content><![CDATA[<p>在做很多java设计都会遇到一个唯一标识 所以也记录一下吧</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取uuid</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>).toUpperCase();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/20171229235719-178x1024.jpg"></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
  </entry>
  <entry>
    <title>利用jq插件(Table2excel)table转excel</title>
    <url>/1121/</url>
    <content><![CDATA[<p>利用jq插件(Table2excel)table转excel，其实说白了就是有现成的轮子为什么还要自己去写脚本呢?(自己懒吧)</p>
<hr>
<p>jquery-table2excel 是一款可以将 HTML 表格的内容导出到微软 Excel 电子表格中的 jQuery 插件。该插件可以根据你的需要导出表格中的内容，不需要的行可以不导出。它文件体积小，使用非常方便。注意导出的 Excel 文件的格式，默认导出为.xlsx 格式的 excel 文件，需要 excel2010 以上的版本才能打开，如果是使用低版本的 excel，可以手动将文件扩展名修改为.xls。</p>
<p>jquery-table2excel 插件的 github 地址为：<a href="https://github.com/rainabba/jquery-table2excel">https://github.com/rainabba/jquery-table2excel</a></p>
<p>怎么使用?怎么使用你都不知道的话，回去看html+css+js入门到放弃吧你–使用插件需要在页面中引入 jquery 和 jquery.table2excel.js 文件。</p>
<p>触发方法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#table2excel&quot;</span>).table2excel(&#123;</span><br><span class="line">  <span class="comment">// 不被导出的表格行的CSS class类</span></span><br><span class="line">  <span class="attr">exclude</span>: <span class="string">&quot;.noExl&quot;</span>,</span><br><span class="line">  <span class="comment">// 导出的Excel文档的名称</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Excel Document Name&quot;</span>,</span><br><span class="line">  <span class="comment">// Excel文件的名称</span></span><br><span class="line">  <span class="attr">filename</span>: <span class="string">&quot;myExcelTable&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">table2excel 插件的可用配置参数有：</span><br><span class="line"></span><br><span class="line">exclude：不被导出的表格行的 CSS <span class="class"><span class="keyword">class</span> 类</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">name</span>：导出的 <span class="title">Excel</span> 文档的名称</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">filename</span>：<span class="title">Excel</span> 文件的名称</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">exclude</span>\<span class="title">_img</span>：是否导出图片</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">exclude</span>\<span class="title">_links</span>：是否导出超链接</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">exclude</span>\<span class="title">_inputs</span>：是否导出输入框中的内容</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">function</span> <span class="title">table2excel</span>()</span>&#123;</span><br><span class="line">$(<span class="string">&quot;#table2excel&quot;</span>).table2excel(&#123;</span><br><span class="line"><span class="comment">// 不被导出的表格行的CSS class类</span></span><br><span class="line"><span class="attr">exclude</span>: <span class="string">&quot;.noExl&quot;</span>,</span><br><span class="line"><span class="comment">// 导出的Excel文档的名称</span></span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;表格-&quot;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(),</span><br><span class="line"><span class="comment">// Excel文件的名称</span></span><br><span class="line"><span class="attr">filename</span>: <span class="string">&quot;表格-&quot;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime() ,</span><br><span class="line"><span class="comment">//文件后缀名</span></span><br><span class="line"><span class="attr">fileext</span>: <span class="string">&quot;.xls&quot;</span>,</span><br><span class="line"><span class="comment">//是否排除导出图片</span></span><br><span class="line">exclude\_img: <span class="literal">false</span>,</span><br><span class="line"><span class="comment">//是否排除导出超链接</span></span><br><span class="line">exclude\_links: <span class="literal">false</span>,</span><br><span class="line"><span class="comment">//是否排除导出输入框中的内容</span></span><br><span class="line">exclude\_inputs: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>excel</tag>
        <tag>jq</tag>
        <tag>Table2excel</tag>
      </tags>
  </entry>
  <entry>
    <title>利用学生机搭建owncloud云储存</title>
    <url>/258/</url>
    <content><![CDATA[<p>随着各种网盘的关闭-百度云的限速且下载速度不稳定，所以自己利用腾讯云的学生机架了云存储平台，这样数据至少掌握在我手上，PS:前提我们记得备份。 因此,我盯上ownCloud开源程序，ownCloud基于支持PHP、SQLite、MySQL、Oracle及PostgreSQL数据库，可以利用虚拟主机、VPS、或者你家的路由器！ 测试地址:<a href="http://cloud.199604.com/">cloud.199604.com</a>?(因为我主域名没有在腾讯云备案)所以只能说是暂时的测试使用，以后直接利用IP地址访问即可。 服务器为:1G、1M带宽…</p>
<hr>
<p> </p>
<ul>
<li>  <strong>准备网站环境和下载OWNCLOUD脚本</strong></li>
</ul>
<p>我们可以在虚拟主机、VPS上搭建支持PHP的环境，然后下载owncloud程序。</p>
<p><a href="https://download.owncloud.org/download/community/owncloud-latest.zip">https://download.owncloud.org/download/community/owncloud-latest.zip</a></p>
<p>目前的版本已经是9.1.4版本，如果有最新版本关注官方的更新信息。</p>
<ul>
<li>  <strong>安装和部署</strong></li>
</ul>
<p>上传解压、或者VPS需要到官网找命令我记得已经有了全套</p>
<ul>
<li>  <strong>ownCloud部署安装</strong></li>
</ul>
<p><img src="http://qn.199604.com/gg213542.png"> 写上管理员账号密码、选择数据库即可！</p>
<ul>
<li>  <strong>owncloud安装完成</strong></li>
</ul>
<p>以下就是安装完成自己的网盘 <img src="http://qn.199604.com/20170212181219.jpg"> 下面有支持的同步数据windows、安卓、iphone. <img src="http://qn.199604.com/20170212181023.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>刷下存在感</title>
    <url>/289/</url>
    <content><![CDATA[<p>因为下学期需要学习JS</p>
<p>为了铁了心不再撸</p>
<p>我就晚上在VM12拿了装了一个WIN7</p>
<p>不料</p>
<p>妈的</p>
<p>自己脑残</p>
<p>没有给VM权限</p>
<p>也启动不了</p>
<p>于是就百度了一下</p>
<p>打开vmware12后出现内核错误，查了一下，在自己的win10下面应该是如下的解决方法：</p>
<ol>
<li><p>找到c:\windows\system32\cmd.exe 文件，右击选择以管理员身份运行</p>
</li>
<li><p>输入以下的命令并回车<br>net start vmci<br>net start vmx86<br>net start VMnetuserif</p>
</li>
<li><p>改变vmware几种服务的启动方式为：<br>sc config vmci start= auto<br>sc config vmx86 start= auto<br>sc config VMnetuserif start= auto<br>这一点儿与win7下面的有所不同，特此提醒，win7下面的是：<br>sc config vmci=auto<br>sc config vmx86=auto<br>sc config VMnetuserif=auto<br>如果无法运行命令，则从 VMware Workstation安装目录，找到 ：vmci.sys文件并复制到c:\windows\system32\drivers</p>
</li>
</ol>
<p>嗯 自己留下来保存一下</p>
<p>祝自己鱼的记忆没有消失</p>
<p>]]&gt;</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>VM12</tag>
      </tags>
  </entry>
  <entry>
    <title>包含(后代)选择器</title>
    <url>/288/</url>
    <content><![CDATA[<p><strong>包含选择器</strong>，即加入空格,用于选择指定标签元素下的<strong>后辈元素。</strong>如右侧代码编辑器中的代码：</p>
<p><code>.first  span&#123;color:red;&#125;</code></p>
<p>这行代码会使第一段文字内容中的“胆小如鼠”字体颜色变为红色。</p>
<p>请注意这个选择器与子选择器的区别，子选择器（child selector）仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代。而后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，而子选择器是通过“&gt;”进行选择。</p>
<p>总结：<strong>&gt;<strong>作用于元素的第一代后代，</strong>空格</strong>作用于元素的所有后代。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>华硕笔记本在bios中设置U盘启动</title>
    <url>/536/</url>
    <content><![CDATA[<p>最近有几位基友都反映我的邮箱一直退件…</p>
<p>其实我自己也搞不懂…因为我用的是360cdn+腾讯的企业邮箱的缘故?</p>
<p>而我测试了一段时间收信和发信的功能依旧存在.</p>
<p>但是奇怪的是基佬们一起反映退信截图</p>
<p><img src="http://qn.199604.com/typoraImg/411173852.jpg" alt="img"></p>
<p>这是来自狼哥的反馈~</p>
<p>算了算了..如果最近还是这样就只能要熊掌而不要鱼了</p>
<p>用不用360cdn无所谓了,但是发信收信是必须的..</p>
<hr>
<p>以上纯属扯淡.下面才是正题….</p>
<p>对于我这种英文盲和鱼的记忆每次u盘重装笔记本，都需要想很久很久才记清楚如果设置bios.</p>
<ol>
<li>开机按F2键，进入bios<img src="http://qn.199604.com/typoraImg/1-1.png" alt="img"></li>
<li>切换到Security标签，找到Secure BOOT Control，将Enabled改为Disabled，这一步的作用是关闭微软的Secure BOOT，这个功能开启会导致不能识别U盘启动系统的安装</li>
<li><img src="http://qn.199604.com/typoraImg/20.png" alt="img"></li>
<li>切换到BOOT标签，将Launch CSM改为Enabled（如果是灰色不可以选择，先按F10保存退出再次进入就可以选择了），这个选项的作用就是，将UEFI的BIOS改为传统BIOS</li>
<li>最后按 F10 保存并退出，重新启动。开机时长按 ESC 键调出开机启动项，就可以选择u盘或光盘启动了。</li>
</ol>
<p>至于制作u盘,大家自行百度…</p>
<p>以上是最新的华硕笔记本（R556L）型号的设置方法。这样方法适合当前华硕笔记本U盘启动设置…</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>bios</tag>
        <tag>华硕</tag>
      </tags>
  </entry>
  <entry>
    <title>单列模式&amp;事务规范写法的笔记</title>
    <url>/567/</url>
    <content><![CDATA[<h3 id="事务代码规范写法"><a href="#事务代码规范写法" class="headerlink" title="事务代码规范写法"></a>事务代码规范写法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class TestHibernate &#123;</span><br><span class="line">	</span><br><span class="line">	@Test</span><br><span class="line">	public void test2()&#123;</span><br><span class="line">		SessionFactory sessionFactory = null;</span><br><span class="line">		Session session = null;</span><br><span class="line">		Transaction transaction = null;</span><br><span class="line">		try &#123;</span><br><span class="line">			sessionFactory = HibernateUtils.getSessionFactory();</span><br><span class="line">			session = sessionFactory.openSession();</span><br><span class="line">			transaction = session.beginTransaction();</span><br><span class="line">			</span><br><span class="line">			User u = new User();</span><br><span class="line">			u.setUsername(&quot;小胡&quot;);</span><br><span class="line">			u.setPassword(&quot;333&quot;);</span><br><span class="line">			session.save(u);</span><br><span class="line">			</span><br><span class="line">			transaction.commit();</span><br><span class="line">			</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			// TODO: handle exception</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			transaction.rollback();</span><br><span class="line">		&#125;finally&#123;</span><br><span class="line">			session.close();</span><br><span class="line">			sessionFactory.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>笔记罢了…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.utils;</span><br><span class="line"></span><br><span class="line">import org.hibernate.SessionFactory;</span><br><span class="line">import org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line">public class HibernateUtils &#123;</span><br><span class="line">	static Configuration cfg = null;</span><br><span class="line">	static SessionFactory sessionFactory = null;</span><br><span class="line">	</span><br><span class="line">	static&#123;</span><br><span class="line">		cfg = new Configuration();</span><br><span class="line">		cfg.configure();</span><br><span class="line">		sessionFactory = cfg.buildSessionFactory();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static SessionFactory getSessionFactory()&#123;</span><br><span class="line">		return sessionFactory;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><p>定义：</p>
<ol>
<li>在任何地方，任何时候都只能获取某种类型(class)的同一个实例。</li>
<li>即无论怎么取得的实例均为同一个实例。</li>
</ol>
<p>需满足三个条件：</p>
<ol>
<li>一个私有的静态变量指向自身</li>
<li>一个私有空参的构造方法</li>
<li>一个公有的静态方法返回自身</li>
</ol>
<hr>
<h3 id="单例模式种类"><a href="#单例模式种类" class="headerlink" title="单例模式种类"></a>单例模式种类</h3><ol>
<li>饿汉式</li>
<li>懒汉式</li>
</ol>
<p>饿汉式代码demo：</p>
<ol>
<li>类加载时，马上实例化对象</li>
<li>在需要时返回此实例化好的对象</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Singleton &#123;</span><br><span class="line">private static Singleton instance = new Singleton();</span><br><span class="line"></span><br><span class="line">private Singleton() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static Singleton getInstance() &#123;</span><br><span class="line">return instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>懒汉式代码demo:</p>
<ol>
<li>类加载是并不马上实例化对象</li>
<li>请求这个对象时才开始实例化</li>
<li>需要同步加锁</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Singleton &#123;</span><br><span class="line">private static Singleton instance ;</span><br><span class="line"></span><br><span class="line">private Singleton() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static Singleton getInstance() &#123;</span><br><span class="line">if (instance == null) &#123;</span><br><span class="line">synchronized(&quot;key&quot;)&#123;</span><br><span class="line">if (instance == null) &#123;</span><br><span class="line">instance = new Singleton();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return instance;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><img src="http://qn.199604.com/typoraImg/375611971363640027-1024x768.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>spring</tag>
        <tag>单例模式</tag>
      </tags>
  </entry>
  <entry>
    <title>单机CDH安装报错：HDFS-副本不足的块</title>
    <url>/1604/</url>
    <content><![CDATA[<h5 id="报错信息："><a href="#报错信息：" class="headerlink" title="报错信息："></a>报错信息：</h5><p>副本不足的块-测试 HDFS 是否具有过多副本不足块。 不良 : 群集中有 8 个 副本不足的块 块。群集中共有 10 个块。百分比 副本不足的块: 80.00%。 临界阈值：40.00%。 <img src="http://qn.199604.com/typoraImg/image-20200719004626997.png" alt="image-20200719004626997"></p>
<h5 id="分析原因："><a href="#分析原因：" class="headerlink" title="分析原因："></a>分析原因：</h5><p>因为此次同事让我部署的只有一台机器。而CDH安装初始化时默认是3个副本。 因此出现这个报错，是初始化设置的副本备份数与DataNode的个数不同造成的。</p>
<h5 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h5><p>1.设置目标备份数为1 2.通过命令修改当前备份数 点击集群-HDFS-配置，搜索dfs.replication,设置为<strong>1</strong>后保存更改。 <img src="http://qn.199604.com/typoraImg/image-20200719005552543.png" alt="image-20200719005552543"></p>
<blockquote>
<p>dfs.replication这个参数其实只在文件被写入dfs时起作用，虽然更改了配置文件，但是不会改变之前写入的文件的备份数，所以我们还需要步骤2</p>
</blockquote>
<p>通过命令更改备份数： 这里的-R 1的数字1就对应我们的DataNode个数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su  hdfs</span><br><span class="line"> </span><br><span class="line">hadoop fs -setrep -R 1 /</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>linux总结</category>
        <category>CDH</category>
      </categories>
      <tags>
        <tag>CDH</tag>
        <tag>HDFS</tag>
      </tags>
  </entry>
  <entry>
    <title>压缩工具-zstd</title>
    <url>/1667/</url>
    <content><![CDATA[<h2 id="压缩工具-zstd"><a href="#压缩工具-zstd" class="headerlink" title="压缩工具-zstd"></a>压缩工具-zstd</h2><p><img src="http://qn.199604.com/typoraImg/image-20210311234402942.png" alt="image-20210311234402942"></p>
<h5 id="1-工具解释"><a href="#1-工具解释" class="headerlink" title="1.工具解释"></a>1.工具解释</h5><p>主要介绍 zstd 工具的作用和性能测试 我们称 Zstandard 或 Zstd 是一种快速的无损压缩算法，是针对 zlib 级别的实时压缩方案，以及更好的压缩比。它由一个非常快的熵阶段，由 Huff0 和 FSE 库提供。这个项目是作为开源的 BSD 许可收费的库，以及一个生成和解码 .zst 格式。 开源地址：<a href="https://github.com/facebook/zstd">https://github.com/facebook/zstd</a> 介绍：<a href="https://facebook.github.io/zstd/">https://facebook.github.io/zstd/</a></p>
<h6 id="性能介绍"><a href="#性能介绍" class="headerlink" title="性能介绍"></a>性能介绍</h6><p><img src="http://qn.199604.com/typoraImg/image-20210311234549475.png" alt="image-20210311234549475"> Zstd 还可以压缩速度为代价提供更强的压缩比，Speed vs Rtrade 可以通过小增量进行配置。在所有设置中，解压速度保持不变，并在所有 LZ压缩算法( 比如 zlib 或者lzma) 共享的属性中保持不变。 更加具体可到：<a href="https://facebook.github.io/zstd/">https://facebook.github.io/zstd/</a> 查看介绍</p>
<h5 id="2-参数命令"><a href="#2-参数命令" class="headerlink" title="2.参数命令"></a>2.参数命令</h5><p>主要介绍 zstd 工具的安装和全部的参数命令</p>
<h6 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Ubuntu</span><br><span class="line">$ apt install zstd</span><br><span class="line"></span><br><span class="line"># CentOS</span><br><span class="line">$ yum install zstd</span><br><span class="line"></span><br><span class="line"># 编译安装</span><br><span class="line">$ git clone https://github.com/facebook/zstd.git</span><br><span class="line">$ cd zstd; make; sudo make install</span><br><span class="line"></span><br><span class="line"># RPM包安装</span><br><span class="line"># http://rpmfind.net/linux/rpm2html/search.php?query=zstd 搜索下载#</span><br><span class="line">#如：zstd-1.4.7-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h6 id="参数命令"><a href="#参数命令" class="headerlink" title="参数命令"></a>参数命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ zstd --help</span><br><span class="line">使用方式 :</span><br><span class="line">      zstd [args] [FILE(s)] [-o file]</span><br><span class="line"></span><br><span class="line">参数选项 :</span><br><span class="line"> -#     : 压缩级别(1-19，默认值为3)</span><br><span class="line"> -d     : 解压</span><br><span class="line"> -D file: 使用文件作为字典</span><br><span class="line"> -o file: 结果存储在文件中</span><br><span class="line"> -f     : 在没有提示的情况下覆盖输出并(解压)压缩链接</span><br><span class="line">--rm    : 成功解压缩后删除源文件</span><br><span class="line"> -k     : 保存源文件(默认)</span><br><span class="line"> -h/-H  : 显示帮助/长帮助并退出</span><br><span class="line"></span><br><span class="line">高级选项 :</span><br><span class="line"> -V     : 显示版本号并退出</span><br><span class="line"> -v     : 详细模式</span><br><span class="line"> -q     : 静默输出</span><br><span class="line"> -c     : 强制写入标准输出</span><br><span class="line"> -l     : 输出zstd压缩包中的信息</span><br><span class="line">--ultra : 启用超过19级，最多22级(需要更多内存)</span><br><span class="line"> -T#    : 使用几个线程进行压缩(默认值:1个)</span><br><span class="line"> -r     : 递归地操作目录</span><br><span class="line">--format=gzip : 将文件压缩为.gz格式</span><br><span class="line"> -M#    : 为解压设置内存使用限制</span><br><span class="line"></span><br><span class="line">字典生成器 :</span><br><span class="line">--train ## : 从一组训练文件中创建一个字典</span><br><span class="line">--train-cover[=k=#,d=#,steps=#] : 使用带有可选参数的cover算法</span><br><span class="line">--train-legacy[=s=#] : 有选择性地使用遗留算法(默认值:9)</span><br><span class="line"> -o file : “file”是字典名(默认:字典)</span><br><span class="line">--maxdict=# : 将字典限制为指定大小(默认值:112640)</span><br><span class="line">--dictID=# : 强制字典ID为指定值(默认:随机)</span><br><span class="line"></span><br><span class="line">性能测试参数 :</span><br><span class="line"> -b#    : 基准测试文件，使用#压缩级别(默认为1)</span><br><span class="line"> -e#    : 测试从-bX到#的所有压缩级别(默认值:1)</span><br><span class="line"> -i#    : 最小计算时间(秒)(默认为3s)</span><br><span class="line"> -B#    : 将文件切成大小为#个独立块(默认:无块)</span><br><span class="line">--priority=rt : 将进程优先级设置为实时</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#---------------------------</span><br><span class="line">英文解释：</span><br><span class="line">[gpadmin@mdw34: /data3/data_bk_tmp/lte_min]$zstd --help</span><br><span class="line">*** zstd command line interface 64-bits v1.4.7, by Yann Collet ***</span><br><span class="line">Usage : </span><br><span class="line">      zstd [args] [FILE(s)] [-o file] </span><br><span class="line"></span><br><span class="line">FILE    : a filename </span><br><span class="line">          with no FILE, or when FILE is - , read standard input</span><br><span class="line">Arguments : </span><br><span class="line"> -#     : # compression level (1-19, default: 3) </span><br><span class="line"> -d     : decompression </span><br><span class="line"> -D DICT: use DICT as Dictionary for compression or decompression </span><br><span class="line"> -o file: result stored into `file` (only 1 output file) </span><br><span class="line"> -f     : overwrite output without prompting, also (de)compress links </span><br><span class="line">--rm    : remove source file(s) after successful de/compression </span><br><span class="line"> -k     : preserve source file(s) (default) </span><br><span class="line"> -h/-H  : display help/long help and exit </span><br><span class="line"></span><br><span class="line">Advanced arguments : </span><br><span class="line"> -V     : display Version number and exit </span><br><span class="line"> -c     : force write to standard output, even if it is the console </span><br><span class="line"> -v     : verbose mode; specify multiple times to increase verbosity </span><br><span class="line"> -q     : suppress warnings; specify twice to suppress errors too </span><br><span class="line">--no-progress : do not display the progress counter </span><br><span class="line"> -r     : operate recursively on directories </span><br><span class="line">--filelist FILE : read list of files to operate upon from FILE </span><br><span class="line">--output-dir-flat DIR : processed files are stored into DIR </span><br><span class="line">--output-dir-mirror DIR : processed files are stored into DIR respecting original directory structure </span><br><span class="line">--[no-]check : during compression, add XXH64 integrity checksum to frame (default: enabled). If specified with -d, decompressor will ignore/validate checksums in compressed frame (default: validate).</span><br><span class="line">--      : All arguments after &quot;--&quot; are treated as files </span><br><span class="line"></span><br><span class="line">Advanced compression arguments : </span><br><span class="line">--ultra : enable levels beyond 19, up to 22 (requires more memory) </span><br><span class="line">--long[=#]: enable long distance matching with given window log (default: 27) </span><br><span class="line">--fast[=#]: switch to very fast compression levels (default: 1) </span><br><span class="line">--adapt : dynamically adapt compression level to I/O conditions </span><br><span class="line"> -T#    : spawns # compression threads (default: 1, 0==# cores) </span><br><span class="line"> -B#    : select size of each job (default: 0==automatic) </span><br><span class="line">--single-thread : use a single thread for both I/O and compression (result slightly different than -T1) </span><br><span class="line">--rsyncable : compress using a rsync-friendly method (-B sets block size) </span><br><span class="line">--exclude-compressed: only compress files that are not already compressed </span><br><span class="line">--stream-size=# : specify size of streaming input from `stdin` </span><br><span class="line">--size-hint=# optimize compression parameters for streaming input of approximately this size </span><br><span class="line">--target-compressed-block-size=# : generate compressed block of approximately targeted size </span><br><span class="line">--no-dictID : don&#x27;t write dictID into header (dictionary compression only) </span><br><span class="line">--[no-]compress-literals : force (un)compressed literals </span><br><span class="line">--format=zstd : compress files to the .zst format (default) </span><br><span class="line"></span><br><span class="line">Advanced decompression arguments : </span><br><span class="line"> -l     : print information about zstd compressed files </span><br><span class="line">--test  : test compressed file integrity </span><br><span class="line"> -M#    : Set a memory usage limit for decompression </span><br><span class="line">--[no-]sparse : sparse mode (default: enabled on file, disabled on stdout) </span><br><span class="line"></span><br><span class="line">Dictionary builder : </span><br><span class="line">--train ## : create a dictionary from a training set of files </span><br><span class="line">--train-cover[=k=#,d=#,steps=#,split=#,shrink[=#]] : use the cover algorithm with optional args </span><br><span class="line">--train-fastcover[=k=#,d=#,f=#,steps=#,split=#,accel=#,shrink[=#]] : use the fast cover algorithm with optional args </span><br><span class="line">--train-legacy[=s=#] : use the legacy algorithm with selectivity (default: 9) </span><br><span class="line"> -o DICT : DICT is dictionary name (default: dictionary) </span><br><span class="line">--maxdict=# : limit dictionary to specified size (default: 112640) </span><br><span class="line">--dictID=# : force dictionary ID to specified value (default: random) </span><br><span class="line"></span><br><span class="line">Benchmark arguments : </span><br><span class="line"> -b#    : benchmark file(s), using # compression level (default: 3) </span><br><span class="line"> -e#    : test all compression levels successively from -b# to -e# (default: 1) </span><br><span class="line"> -i#    : minimum evaluation time in seconds (default: 3s) </span><br><span class="line"> -B#    : cut file into independent blocks of size # (default: no block) </span><br><span class="line"> -S     : output one benchmark result per input file (default: consolidated result) </span><br><span class="line">--priority=rt : set process priority to real-time </span><br></pre></td></tr></table></figure>

<h5 id="3-命令演示"><a href="#3-命令演示" class="headerlink" title="3.命令演示"></a>3.命令演示</h5><h6 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 将一个文件压缩成一个后缀为.zst的新文件</span><br><span class="line"># 如果命令后面没有文件或文件为-的话，则读取标准输入</span><br><span class="line">$ zstd file</span><br><span class="line"></span><br><span class="line"># 在压缩操作后删除源文件</span><br><span class="line"># 默认情况下，源文件在成功压缩或解压缩后不会被删除</span><br><span class="line">$ zstd --rm file</span><br><span class="line"></span><br><span class="line"># 解压zst压缩包</span><br><span class="line">$ zstd -d file.zst</span><br><span class="line"></span><br><span class="line"># 解压zst压缩包到标准输出</span><br><span class="line">$ zstd -dc file.zst</span><br><span class="line"></span><br><span class="line"># 查看zst压缩包</span><br><span class="line">$ zstd -l file.zst</span><br><span class="line">$ zstdcat file.zst</span><br></pre></td></tr></table></figure>

<h6 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 输出详细信息</span><br><span class="line">$ zstd -v file</span><br><span class="line">$ zstd -v -d file.zst</span><br><span class="line"></span><br><span class="line"># 压缩一个文件同时指定压缩级别(19最高，0最低，3为默认)</span><br><span class="line">$ zstd -level file</span><br><span class="line">$ zstd -9 file</span><br><span class="line"></span><br><span class="line"># 使用更多的内存(压缩和解压时)以达到更高的压缩比</span><br><span class="line">$ zstd --ultra -level file</span><br><span class="line"></span><br><span class="line"># 解压缩为单进程</span><br><span class="line"># 多个进程并发执行压缩过程(0表示自动使用所有CPU核心)</span><br><span class="line">$ zstd -T0 file</span><br><span class="line">$ zstd -T4 file</span><br><span class="line">$ zstd -T4 -d file.zst</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>zstd</tag>
      </tags>
  </entry>
  <entry>
    <title>又一份经历结束</title>
    <url>/1447/</url>
    <content><![CDATA[<p>今天是2020年4月8号，今年的本命年，结束在广州市玄武无线科技有限公司的经历。经历时长198天，希望下一份工作能遇到好的领导。感谢分组前的lbw粉丝群员。希望你们越来越好<del>业绩越来越好</del>有机会江湖见~ <img src="http://qn.199604.com/typoraImg/15863376597369.png"></p>
<hr>
<p>pm6小组我就不多说了，祝福吧 <img src="http://qn.199604.com/typoraImg/20200408171954-1024x515.png"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>玄武无线</tag>
      </tags>
  </entry>
  <entry>
    <title>只能说我输了。</title>
    <url>/204/</url>
    <content><![CDATA[<p>“这不是完美的结果，但这就是事实。”</p>
<p>在下午玩玩篮球的心态比赛时候，虽然已经打了3个多小时篮球,但是我还是坚持的打完了全场。</p>
<p>虽然在26-29分的时候。我用三分扳平了比分,然后我再得到了一个抢断,但是最后关头我脚抽筋了,绝杀不成功。自卑了真的,如果那个快攻没有失误,如果我有掌握好球，我就不会失去了对球的控制!!!最后一分输了。</p>
<p>好了,我只想总结这次吧。哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈没事只在参与。</p>
<p>以后还有机会- -I believe me.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>各大媒体，你欠河职一个道歉！</title>
    <url>/198/</url>
    <content><![CDATA[<p><strong>当有一天，网络暴力如洪水猛兽般将原本充满着书香气息的淳朴的大学校园推向舆论的风口浪尖，有多少人愿意站出来为河职发声？</strong></p>
<p><img src="http://qn.199604.com/388226280772733780.jpg"></p>
<p>以下是斗殴的gif图 <img src="http://qn.199604.com/69faac28gw1faf35df7kfg20b408c4qp.gif"> 亲们能仔细看下吗，这行为是大学生的行为吗！更何况我们大学生是有素质的！！河职院更是！！！</p>
<p><strong>所以、这个锅我们不背！！</strong></p>
<hr>
<p><strong>本来是一件中专生打架的事情，各大媒体却以河源大学生为名，我们母校却背了这个黑锅，如今在“河源大学生”打架事件上了各大新闻媒体的头条，掀起轩然大波。以下是被传播相关新闻。</strong> <img src="http://qn.199604.com/20161205125748.jpg">   <img src="http://qn.199604.com/567580127390277920.jpg"> <img src="http://qn.199604.com/351856817211228687.jpg"> <img src="http://qn.199604.com/694537097930766515.jpg"></p>
<hr>
<p><strong>各大媒体，你的观点，夸张离谱的描述，不了解事情经过，却以河源大学生街头混战为标题，我们河职同胞表示抗议！</strong></p>
<p>你了解河源大学城吗？</p>
<p>你来过河职吗？</p>
<p>你有真正了解过事情的缘由经过吗?</p>
<p>你知道我们学校领导为了学生的安全</p>
<p>第一时间发了公告吗？</p>
<p><img src="http://qn.199604.com/557407036222861447.jpg"></p>
<p>希望你们可以为我们河源大学生澄清，拿出媒体精神来，新闻报道出来最基本的是尊重事实和还原客观现场。 此次事件的发生到底起因为何，没没有调查清楚的情况下，不要抓着社会愤青的情感共鸣和当代大学生素质这样的热点话题，在这里哗众取宠。</p>
<p>河源大学生（河职同胞)</p>
<p>欢迎一切善意的建议</p>
<p>但是我们拒绝恶意的诋毁</p>
<p>以及充满攻击性的夸大报导</p>
<p>母校不容诋毁</p>
<p><strong>我们所捍卫的</strong></p>
<p><strong>不仅是一所大学的底线</strong></p>
<p><strong>更是河职同胞的尊严！</strong></p>
<p>各大媒体</p>
<p>请自重</p>
<p><strong>-END-</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>河职院</tag>
      </tags>
  </entry>
  <entry>
    <title>向社会的“补漏者”致敬!</title>
    <url>/338/</url>
    <content><![CDATA[<p>    嗯哈,其实社会是什么。社会需要什么?我不清楚但我们都要有道德！！！</p>
<p>    看完这则小故事，我们不妨来个假设：如果油漆工没有把船上那个漏洞给补上，造成船主孩子舟覆人亡的后果，船主能追究油漆工的责任吗？</p>
<p>　　答案显然是否定的，因为油漆工的本职工作就是涂漆，按他与船主之间的契约，他只要负责把船上的漆涂好就行了，补洞是他职责之外的事，由此漏洞所造成的一切后果都与油漆工无关。</p>
<p>　　这无疑是个冷冰冰的答案，之所以冷冰冰，是因为它只强调了契约精神和法律责任，而忽视了社会道德的担当和人性善良的守护。</p>
<p>　　是的，现在是法治社会，我们必须遵守法律，必须要有契约精神，但法律和契约，从来都只是最低层面的道德，可以想见，如果一个社会仅仅靠条条框框的法律和契约来维持运转，那无疑是个令人恐怖没有半点温情的社会，也是个没有半点希望的社会!</p>
<p>　　还好，这则故事有个令人欣慰的结尾：因为油漆工在做好本职工作之余，顺手也把船上那个漏洞给补了，保证了船主孩子们出海之后能安全归来。</p>
<p>　　也许，他补的不是那么太专业，也许，他仅仅是因为“看不顺眼”，但关键的是，他“出手”了??正是他这一看似随意的“举手之劳”，挽救了几条鲜活的生命!</p>
<p>　　这不禁让人想起不久前的“小悦悦”事件，那么多人从这个可怜的小女孩身旁经过，却没有一个人做出一个小小的“举手之劳”，到最后还是一位农村阿婆伸出她那双长满老茧的双手……那些匆匆而过的人，他们忙于各自的生计，法律也难以追究他们的“见死不救”，但他们难以逃脱公众的谴责;阿婆“出手”了，她没能挽救小悦悦的生命，但挽救了一个社会最后的良心和普世价值，她也替我们所有人，守住人性最基本的善良!</p>
<p>　　这位阿婆也就像那位油漆工一样，顺手把一个漏洞给补上了，她补的是我们这个社会的漏洞……</p>
<p>　　是的，在生活中我们各有各的分工和角色，我们必须恪尽职守各尽其责，但我们还有一个共同的角色，那就是社会公民，是人类文明的传承者，而且在我们中华民族的传统美德中，历来都提倡厚德载物和谐共处，强调与人为善助人为乐，如“勿以恶小而为之，勿以善小而不为”，如“赠人玫瑰，手有余香”。。。我们也应同样欣慰地看到，在我们民族的传统美德和普世价值的“润物细无声”下，涌现出一批在本职岗位尽职尽责并发扬出高尚道德情操的人，如“最美女教师”张丽莉，“最美司机”吴斌等等，他们无疑是值得赞美的，但我们同样也要向这样一群“沉默的大多数”致敬：他们，以每一次不经意的善良人性的流露，以每一次看似随意而额外的“举手之劳”，解人于困厄之际救人于危难之时，他们如点点星光，照亮并温暖着这个急速转型的社会。</p>
<p>　　他们，正是给我们这个社会补漏的“油漆工”！</p>
<p>(此文通过<a href="http://www.juntk.com/">emlog自动发布插件</a>发布)</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>告一段落</title>
    <url>/918/</url>
    <content><![CDATA[<p>15软件技术1班的各位老铁，社会见了… </p>
<p><img src="http://qn.199604.com/typoraImg/w_20180625000840-768x1024.jpg"> <img src="http://qn.199604.com/typoraImg/w_20180625000855-1024x768.jpg"> <img src="http://qn.199604.com/typoraImg/w_20180625000901-768x1024.jpg"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>哦啦啦拔河比赛怎么看。</title>
    <url>/282/</url>
    <content><![CDATA[<p>毫无压力的赢了。哈哈哈哈哈，我是记者你信吗你信吗。我的声音好听吗。我是高富帅的记者哈哈哈哈哈。</p>
<p>下面看我的美音吧不要瞎掉尿了、</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业到现在的一个总结吧~</title>
    <url>/1553/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>主要回忆一下自己这出来工作快两年半的一些总结+顺带回答一下<strong>李坤泉</strong>大佬的一些问题</p>
<h4 id="你毕业后一开始面临的基本情况"><a href="#你毕业后一开始面临的基本情况" class="headerlink" title="你毕业后一开始面临的基本情况"></a>你毕业后一开始面临的基本情况</h4><h5 id="实习-2018-01-2018-04"><a href="#实习-2018-01-2018-04" class="headerlink" title="实习(2018.01-2018.04)"></a>实习(2018.01-2018.04)</h5><p>这个问题，我觉得我是比较幸运的吧<del>时间回到2017年12月份底。那时候已经是大三上学期尾了，课程也基本上结束</del>于是乎我利用这段时间看了下招聘信息，也投了几份，幸运的是我一次面试就通过收到了实习offer(公司广东华仝九方科技有限公司)，实习期间工作也就2.2k，在广州算非常低了，但是想想先混过实习再说~</p>
<p>回想实习，可以说自己是幸运的，因为当时Java开发学历门槛不会太高，大专的我居然一次面试啥的就收到了offer，经历了三个月我也顺利的提前转正，虽然工资也不高，转正税前才5k，心想着怎么也要混够一年的工作经验再跳槽(于是乎有了后面的裸辞经历)</p>
<h5 id="转正到裸辞-2018-04-2019-07"><a href="#转正到裸辞-2018-04-2019-07" class="headerlink" title="转正到裸辞(2018.04-2019.07)"></a>转正到裸辞(2018.04-2019.07)</h5><p>说实话<del>我的这段时间，遇到过想放弃、想离开，但是混够一年的工作经验再跳槽的理念在我心里是一直没变过，期间我也有关注过Java开发的相关招聘信息，从18年6月份后起，广州Java开发其实学历门槛基本上从专科–&gt;本科转变了，但说到我要裸辞，其实真的和同事领导有关</del>为什么呢？</p>
<ol>
<li>开发组长离职</li>
<li>开发就剩下我一人面对所有开发活</li>
<li>钱少事多</li>
</ol>
<p>其实总结来说就是干得不开心吧<del>所有我5月中我就申请了离职</del>到7月头才正式办理离职手续。但是现在还和我之前一群同事有交流~(可能是我人比较好?噗其实是我八卦)</p>
<p>这段经历，其实我的收获还是蛮多的，对一个刚出来工作的人，还是不错的选择。</p>
<h5 id="裸辞到下一份工作（2019-07-2019-09）"><a href="#裸辞到下一份工作（2019-07-2019-09）" class="headerlink" title="裸辞到下一份工作（2019.07-2019.09）"></a>裸辞到下一份工作（2019.07-2019.09）</h5><p>坦白说，回想当时裸辞我是不是脑给门夹了，现在后悔死了。找了快两个月还没有找到工作，当时心态是真的崩了，虽然这段时间天天煮好饭等女票下班。但心里是真的着急<del>投了几十份简历，就几份是回复的，其他基本上聊都不聊</del>虽说收到过2个offer,一个是电网外包，但他说下午给我offer，过了两天后才给我，就这样我觉得不怎么靠谱就放弃了，然后然后然后….过了很久也没有收到offer了，就这样后心想着放弃吧，先找个其他工作，边工作边继续学习和找工作吧。于是乎就有了一段干实施工程师的经历(广州市玄武无线科技股份有限公司)，薪资福利应该是我经历过最好的公司吧。</p>
<h5 id="实施到跳槽（2019-09-2020-04）"><a href="#实施到跳槽（2019-09-2020-04）" class="headerlink" title="实施到跳槽（2019.09-2020.04）"></a>实施到跳槽（2019.09-2020.04）</h5><p>在干实施工程师的这份经历来说，我其实收获基本上是没有，但就有幸的体验了一下大公司的运作(500多人)，HRBP为了培训我们新知识几乎绞尽脑汁<del>也第一次体验过为了工时，为了绩效不为C而努力！这也有了2020年1月份，为了业绩也奋斗，说白了就是你这人今年要完成多少业绩才能分年终+项目奖金。但怎么分，如何分，没有一个准则，而我的业绩，在我申请离职了后，业绩也没了，绩效也给重新分组的项目组长私吞了。(因为新组员在签业绩分成时，项目组长占了绝大部分)，幸运女神有一个眷顾了我，我也从2020.04正式离职跳槽到现在公司，老大很nice，同事也很好</del>自己的目标也很明确。</p>
<h4 id="毕业后一开始有没有计划。如果有，那计划是什么"><a href="#毕业后一开始有没有计划。如果有，那计划是什么" class="headerlink" title="毕业后一开始有没有计划。如果有，那计划是什么"></a>毕业后一开始有没有计划。如果有，那计划是什么</h4><p>坦白说，还真的有，但最后因为挤不出时间而没干成，或者那段时间我转了实施。</p>
<p>今年打算继续干学习Spring cloud、了解jvm原理和高并发 ，考数据库工程师中级证书 。奥利给…</p>
<h4 id="为什么没有做计划-为什么这么制定计划-基本思路是什么"><a href="#为什么没有做计划-为什么这么制定计划-基本思路是什么" class="headerlink" title="为什么没有做计划/ 为什么这么制定计划 (基本思路是什么)"></a>为什么没有做计划/ 为什么这么制定计划 (基本思路是什么)</h4><p>因为现在没有Spring cloud是真的没有面试的机会，还有jvm这个是真的很重要，而数据库工程师就是我现在很必要的一个证书，因为我现在基本上对着数据库打交道。</p>
<h4 id="中间一直到疫情前的发展过程"><a href="#中间一直到疫情前的发展过程" class="headerlink" title="中间一直到疫情前的发展过程"></a>中间一直到疫情前的发展过程</h4><p>已经在问题（你毕业后一开始面临的基本情况）说的很清楚了~这里就不再累赘</p>
<h4 id="疫情的影响"><a href="#疫情的影响" class="headerlink" title="疫情的影响"></a>疫情的影响</h4><p>疫情对我的影响暂时来说是很少，就上下班通勤口罩憋着有点难受，过点时间天气热了就更难受吧~</p>
<h4 id="个人对疫情的思考"><a href="#个人对疫情的思考" class="headerlink" title="个人对疫情的思考"></a>个人对疫情的思考</h4><p>疫情期间还是别乱花钱~因为这个疫情我们见证了太多太多了，连以前书本上的奶农倒奶到河流的事情、美股熔断、买原油还倒贴钱等等等….努力存钱过冬吧，这个冬天是真的冷且长</p>
<h4 id="疫情后的现在"><a href="#疫情后的现在" class="headerlink" title="疫情后的现在"></a>疫情后的现在</h4><p>感觉日子还是一样过，该吃吃该睡睡努力挣钱。</p>
<h4 id="未来的计划"><a href="#未来的计划" class="headerlink" title="未来的计划"></a>未来的计划</h4><p>继续努力为了自己的目标吧~还是自己的口头禅：越努力越幸运(天道酬勤)</p>
<hr>
<p>总结了那么多~感觉自己毕业到现在都是CRUD-MAN,这样子的意义何在?噗</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>经历</tag>
      </tags>
  </entry>
  <entry>
    <title>在pgsql环境下，Insert into table select...与create table as select...的比较</title>
    <url>/1320/</url>
    <content><![CDATA[<p>最近时间，因为刚入职没人培训就发了一些文档，感觉坑也挺大…心里又有了跑的…… 好了回顾正题，因为实在太闲，于是听了一些前辈在讨论备份数据的时候，他们普遍使用insert into newTable select * from oldTable的做法(在pgsql环境下)。 因为我也不太懂pgsql调优，但是问了咋不直接用create table as select…?前辈们都是nsert into newTable select * from oldTable 效率是最高的…但是我懵逼了? 在我使用mysql和oralce下经常用insert into select 与 create table as语句来进行表单数据的复制，但就当复制表的数据量很小的时候两个语句的效率区别不大，而当表的数量级别达百万级以上的时候，就会有很明显的效率区别了呀?是不是pgsql不一样，于是我就自己弄了一点临时数据测试看看…百度了也没有相关pgsql的调优文章…..</p>
<p><img src="http://qn.199604.com/typoraImg/20191006143130.png"></p>
<p>然后，在微信读书上看到了一本关于pgsql的书之后，pgsql复制表，其实就这两种</p>
<p>1. INSERT INTO  NEWTABLE FROM SELECT * FROM OLDTABLE 语句</p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>insert into NEWTABLE select * from OLDTABLE;<br>insert into NEWTABLE select field1,field2,field3 from OLDTABLEwhere …;</p>
<p>前提：NEWTABLE 必须存在</p>
<p>2. SELECT INTO NEWTABLE FROM OLDTABLE 语句</p>
<h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><p>select * into NEWTABLE from OLDTABLE;<br>select field1,field2,field3 into NEWTABLE from OLDTABLE;<br>##要求目标NEWTABLE不存在，在插入时会自动创建表NEWTABLE，<br>##并将OLDTABLE中指定字段数据复制到NEWTABLE中。<br>##如果NEWTABLE存在则会报错..<br>##其实就相当于create table as语句</p>
<p>至于他们的效率问题，我这边没有安装pgsql环境，国庆后再测试一下，再对比一下两者的效率怎么样..这次是吃了没有文化的亏..pgsql复制表居然还与其他不一样了…继续学习..</p>
<hr>
<p>继续上次说的，这次测试时自己虚拟机环境，2H2G，docker环境搭建的pgsql，没任何设置优化。处理结果如下：</p>
<p>[SQL]insert into employees_i select * from employees<br>时间: 0.636s<br>受影响的行: 393216</p>
<p>[SQL]create table employees_c as select * from employees<br>时间: 0.401s<br>受影响的行: 393216</p>
<p>[SQL]SELECT INTO employees_si FROM employees<br>时间: 0.188s<br>受影响的行: 393216</p>
<hr>
<p>[SQL]insert into employees_i select * from employees<br>时间: 5.952s<br>受影响的行: 3145728</p>
<p>[SQL]create table employees_c as select * from employees<br>时间: 2.513s<br>受影响的行: 3145728</p>
<p>[SQL]SELECT INTO employees_si FROM employees<br>时间: 1.438s<br>受影响的行: 3145728</p>
<hr>
<p>[SQL]insert into employees_i select * from employees<br>时间: 18.942s<br>受影响的行: 12582912</p>
<p>[SQL]create table employees_c as select * from employees<br>时间: 9.979s<br>受影响的行: 12582912</p>
<p>[SQL]SELECT INTO employees_si FROM employees<br>时间: 6.236s<br>受影响的行: 12582912</p>
<p>从结果上看，pgsql的表复制最快是 select into &gt;create table as select &gt;insert into table select * 所以，这又是吃了没文化的亏吧~</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>pgsql</tag>
      </tags>
  </entry>
  <entry>
    <title>域名三个月十二天</title>
    <url>/7/</url>
    <content><![CDATA[<p>今天天气真的很好，因为已经连续下了一个多月的雨了。现在天气真是夏天吧但是我更喜欢秋天。</p>
<p>刚刚有空玩玩电脑吧。已经习惯了每次用电脑第一时间都是上Q、去看看邮箱里有没有消息、微博上没有人@我……..</p>
<p>然后就上了博客就看了一下SEO信息。不知不觉这个域名也三个月了很快呀。</p>
<p>域名年龄:3个月12天（创建于2013年2月7日）</p>
<p>这三个月虽然博客的成绩不怎么样但是呢我已经很满足了不是吗?</p>
<p>虽然访问博客的速度很烂。但是很稳定,我曾经也用过了新加波的CND加速。速度很快、但是有一个弱点就是不稳定。</p>
<p>嗯,现在用的主机是<a href="http://my.paulhost.com/aff.php?aff=278">保罗主机</a>赞助的西雅图300M主机、速度还行稳定才是重要的不是吗?</p>
<p>好了上一个龟图吧</p>
<p><a href="http://199604.com/content/uploadfile/201305/91981368935598.png"><img src="http://199604.com/content/uploadfile/201305/thum-91981368935598.png" alt="点击查看原图"></a>  </p>
<p>来也匆匆去也匆匆吧。走了、see you</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>域名后缀整理~</title>
    <url>/1669/</url>
    <content><![CDATA[<p>国际顶级后缀：</p>
<p>.aaa<br>.aarp<br>.abarth<br>.abb<br>.abbott<br>.abbvie<br>.abc<br>.able<br>.abogado<br>.abudhabi<br>.ac<br>.academy<br>.accenture<br>.accountant<br>.accountants<br>.aco<br>.actor<br>.ad<br>.adac<br>.ads<br>.adult<br>.ae<br>.aeg<br>.aero<br>.aetna<br>.af<br>.afamilycompany<br>.afl<br>.africa<br>.ag<br>.agakhan<br>.agency<br>.ai<br>.aig<br>.airbus<br>.airforce<br>.airtel<br>.akdn<br>.al<br>.alfaromeo<br>.alibaba<br>.alipay<br>.allfinanz<br>.allstate<br>.ally<br>.alsace<br>.alstom<br>.am<br>.amazon<br>.americanexpress<br>.americanfamily<br>.amex<br>.amfam<br>.amica<br>.amsterdam<br>.analytics<br>.android<br>.anquan<br>.anz<br>.ao<br>.aol<br>.apartments<br>.app<br>.apple<br>.aq<br>.aquarelle<br>.ar<br>.arab<br>.aramco<br>.archi<br>.army<br>.arpa<br>.art<br>.arte<br>.as<br>.asda<br>.asia<br>.associates<br>.at<br>.athleta<br>.attorney<br>.au<br>.auction<br>.audi<br>.audible<br>.audio<br>.auspost<br>.author<br>.auto<br>.autos<br>.avianca<br>.aw<br>.aws<br>.ax<br>.axa<br>.az<br>.azure<br>.ba<br>.baby<br>.baidu<br>.banamex<br>.bananarepublic<br>.band<br>.bank<br>.bar<br>.barcelona<br>.barclaycard<br>.barclays<br>.barefoot<br>.bargains<br>.baseball<br>.basketball<br>.bauhaus<br>.bayern<br>.bb<br>.bbc<br>.bbt<br>.bbva<br>.bcg<br>.bcn<br>.bd<br>.be<br>.beats<br>.beauty<br>.beer<br>.bentley<br>.berlin<br>.best<br>.bestbuy<br>.bet<br>.bf<br>.bg<br>.bh<br>.bharti<br>.bi<br>.bible<br>.bid<br>.bike<br>.bing<br>.bingo<br>.bio<br>.biz<br>.bj<br>.black<br>.blackfriday<br>.blockbuster<br>.blog<br>.bloomberg<br>.blue<br>.bm<br>.bms<br>.bmw<br>.bn<br>.bnpparibas<br>.bo<br>.boats<br>.boehringer<br>.bofa<br>.bom<br>.bond<br>.boo<br>.book<br>.booking<br>.bosch<br>.bostik<br>.boston<br>.bot<br>.boutique<br>.box<br>.br<br>.bradesco<br>.bridgestone<br>.broadway<br>.broker<br>.brother<br>.brussels<br>.bs<br>.bt<br>.budapest<br>.bugatti<br>.build<br>.builders<br>.business<br>.buy<br>.buzz<br>.bv<br>.bw<br>.by<br>.bz<br>.bzh<br>.ca<br>.cab<br>.cafe<br>.cal<br>.call<br>.calvinklein<br>.cam<br>.camera<br>.camp<br>.cancerresearch<br>.canon<br>.capetown<br>.capital<br>.capitalone<br>.car<br>.caravan<br>.cards<br>.care<br>.career<br>.careers<br>.cars<br>.casa<br>.case<br>.caseih<br>.cash<br>.casino<br>.cat<br>.catering<br>.catholic<br>.cba<br>.cbn<br>.cbre<br>.cbs<br>.cc<br>.cd<br>.center<br>.ceo<br>.cern<br>.cf<br>.cfa<br>.cfd<br>.cg<br>.ch<br>.chanel<br>.channel<br>.charity<br>.chase<br>.chat<br>.cheap<br>.chintai<br>.christmas<br>.chrome<br>.church<br>.ci<br>.cipriani<br>.circle<br>.cisco<br>.citadel<br>.citi<br>.citic<br>.city<br>.cityeats<br>.ck<br>.cl<br>.claims<br>.cleaning<br>.click<br>.clinic<br>.clinique<br>.clothing<br>.cloud<br>.club<br>.clubmed<br>.cm<br>.cn<br>.com.cn<br>.net.cn<br>.gov.cn<br>.org.cn<br>.co<br>.coach<br>.codes<br>.coffee<br>.college<br>.cologne<br>.com<br>.comcast<br>.commbank<br>.community<br>.company<br>.compare<br>.computer<br>.comsec<br>.condos<br>.construction<br>.consulting<br>.contact<br>.contractors<br>.cooking<br>.cookingchannel<br>.cool<br>.coop<br>.corsica<br>.country<br>.coupon<br>.coupons<br>.courses<br>.cpa<br>.cr<br>.credit<br>.creditcard<br>.creditunion<br>.cricket<br>.crown<br>.crs<br>.cruise<br>.cruises<br>.csc<br>.cu<br>.cuisinella<br>.cv<br>.cw<br>.cx<br>.cy<br>.cymru<br>.cyou<br>.cz<br>.dabur<br>.dad<br>.dance<br>.data<br>.date<br>.dating<br>.datsun<br>.day<br>.dclk<br>.dds<br>.de<br>.deal<br>.dealer<br>.deals<br>.degree<br>.delivery<br>.dell<br>.deloitte<br>.delta<br>.democrat<br>.dental<br>.dentist<br>.desi<br>.design<br>.dev<br>.dhl<br>.diamonds<br>.diet<br>.digital<br>.direct<br>.directory<br>.discount<br>.discover<br>.dish<br>.diy<br>.dj<br>.dk<br>.dm<br>.dnp<br>.do<br>.docs<br>.doctor<br>.dog<br>.domains<br>.dot<br>.download<br>.drive<br>.dtv<br>.dubai<br>.duck<br>.dunlop<br>.dupont<br>.durban<br>.dvag<br>.dvr<br>.dz<br>.earth<br>.eat<br>.ec<br>.eco<br>.edeka<br>.edu<br>.education<br>.ee<br>.eg<br>.email<br>.emerck<br>.energy<br>.engineer<br>.engineering<br>.enterprises<br>.epson<br>.equipment<br>.er<br>.ericsson<br>.erni<br>.es<br>.esq<br>.estate<br>.et<br>.etisalat<br>.eu<br>.eurovision<br>.eus<br>.events<br>.exchange<br>.expert<br>.exposed<br>.express<br>.extraspace<br>.fage<br>.fail<br>.fairwinds<br>.faith<br>.family<br>.fan<br>.fans<br>.farm<br>.farmers<br>.fashion<br>.fast<br>.fedex<br>.feedback<br>.ferrari<br>.ferrero<br>.fi<br>.fiat<br>.fidelity<br>.fido<br>.film<br>.final<br>.finance<br>.financial<br>.fire<br>.firestone<br>.firmdale<br>.fish<br>.fishing<br>.fit<br>.fitness<br>.fj<br>.fk<br>.flickr<br>.flights<br>.flir<br>.florist<br>.flowers<br>.fly<br>.fm<br>.fo<br>.foo<br>.food<br>.foodnetwork<br>.football<br>.ford<br>.forex<br>.forsale<br>.forum<br>.foundation<br>.fox<br>.fr<br>.free<br>.fresenius<br>.frl<br>.frogans<br>.frontdoor<br>.frontier<br>.ftr<br>.fujitsu<br>.fujixerox<br>.fun<br>.fund<br>.furniture<br>.futbol<br>.fyi<br>.ga<br>.gal<br>.gallery<br>.gallo<br>.gallup<br>.game<br>.games<br>.gap<br>.garden<br>.gay<br>.gb<br>.gbiz<br>.gd<br>.gdn<br>.ge<br>.gea<br>.gent<br>.genting<br>.george<br>.gf<br>.gg<br>.ggee<br>.gh<br>.gi<br>.gift<br>.gifts<br>.gives<br>.giving<br>.gl<br>.glade<br>.glass<br>.gle<br>.global<br>.globo<br>.gm<br>.gmail<br>.gmbh<br>.gmo<br>.gmx<br>.gn<br>.godaddy<br>.gold<br>.goldpoint<br>.golf<br>.goo<br>.goodyear<br>.goog<br>.google<br>.gop<br>.got<br>.gov<br>.gp<br>.gq<br>.gr<br>.grainger<br>.graphics<br>.gratis<br>.green<br>.gripe<br>.grocery<br>.group<br>.gs<br>.gt<br>.gu<br>.guardian<br>.gucci<br>.guge<br>.guide<br>.guitars<br>.guru<br>.gw<br>.gy<br>.hair<br>.hamburg<br>.hangout<br>.haus<br>.hbo<br>.hdfc<br>.hdfcbank<br>.health<br>.healthcare<br>.help<br>.helsinki<br>.here<br>.hermes<br>.hgtv<br>.hiphop<br>.hisamitsu<br>.hitachi<br>.hiv<br>.hk<br>.hkt<br>.hm<br>.hn<br>.hockey<br>.holdings<br>.holiday<br>.homedepot<br>.homegoods<br>.homes<br>.homesense<br>.honda<br>.horse<br>.hospital<br>.host<br>.hosting<br>.hot<br>.hoteles<br>.hotels<br>.hotmail<br>.house<br>.how<br>.hr<br>.hsbc<br>.ht<br>.hu<br>.hughes<br>.hyatt<br>.hyundai<br>.ibm<br>.icbc<br>.ice<br>.icu<br>.id<br>.ie<br>.ieee<br>.ifm<br>.ikano<br>.il<br>.im<br>.imamat<br>.imdb<br>.immo<br>.immobilien<br>.in<br>.inc<br>.industries<br>.infiniti<br>.info<br>.ing<br>.ink<br>.institute<br>.insurance<br>.insure<br>.int<br>.international<br>.intuit<br>.investments<br>.io<br>.ipiranga<br>.iq<br>.ir<br>.irish<br>.is<br>.ismaili<br>.ist<br>.istanbul<br>.it<br>.itau<br>.itv<br>.iveco<br>.jaguar<br>.java<br>.jcb<br>.je<br>.jeep<br>.jetzt<br>.jewelry<br>.jio<br>.jll<br>.jm<br>.jmp<br>.jnj<br>.jo<br>.jobs<br>.joburg<br>.jot<br>.joy<br>.jp<br>.jpmorgan<br>.jprs<br>.juegos<br>.juniper<br>.kaufen<br>.kddi<br>.ke<br>.kerryhotels<br>.kerrylogistics<br>.kerryproperties<br>.kfh<br>.kg<br>.kh<br>.ki<br>.kia<br>.kim<br>.kinder<br>.kindle<br>.kitchen<br>.kiwi<br>.km<br>.kn<br>.koeln<br>.komatsu<br>.kosher<br>.kp<br>.kpmg<br>.kpn<br>.kr<br>.krd<br>.kred<br>.kuokgroup<br>.kw<br>.ky<br>.kyoto<br>.kz<br>.la<br>.lacaixa<br>.lamborghini<br>.lamer<br>.lancaster<br>.lancia<br>.land<br>.landrover<br>.lanxess<br>.lasalle<br>.lat<br>.latino<br>.latrobe<br>.law<br>.lawyer<br>.lb<br>.lc<br>.lds<br>.lease<br>.leclerc<br>.lefrak<br>.legal<br>.lego<br>.lexus<br>.lgbt<br>.li<br>.lidl<br>.life<br>.lifeinsurance<br>.lifestyle<br>.lighting<br>.like<br>.lilly<br>.limited<br>.limo<br>.lincoln<br>.linde<br>.link<br>.lipsy<br>.live<br>.living<br>.lixil<br>.lk<br>.llc<br>.llp<br>.loan<br>.loans<br>.locker<br>.locus<br>.loft<br>.lol<br>.london<br>.lotte<br>.lotto<br>.love<br>.lpl<br>.lplfinancial<br>.lr<br>.ls<br>.lt<br>.ltd<br>.ltda<br>.lu<br>.lundbeck<br>.luxe<br>.luxury<br>.lv<br>.ly<br>.ma<br>.macys<br>.madrid<br>.maif<br>.maison<br>.makeup<br>.man<br>.management<br>.mango<br>.map<br>.market<br>.marketing<br>.markets<br>.marriott<br>.marshalls<br>.maserati<br>.mattel<br>.mba<br>.mc<br>.mckinsey<br>.md<br>.me<br>.med<br>.media<br>.meet<br>.melbourne<br>.meme<br>.memorial<br>.men<br>.menu<br>.merckmsd<br>.mg<br>.mh<br>.miami<br>.microsoft<br>.mil<br>.mini<br>.mint<br>.mit<br>.mitsubishi<br>.mk<br>.ml<br>.mlb<br>.mls<br>.mm<br>.mma<br>.mn<br>.mo<br>.mobi<br>.mobile<br>.moda<br>.moe<br>.moi<br>.mom<br>.monash<br>.money<br>.monster<br>.mormon<br>.mortgage<br>.moscow<br>.moto<br>.motorcycles<br>.mov<br>.movie<br>.mp<br>.mq<br>.mr<br>.ms<br>.msd<br>.mt<br>.mtn<br>.mtr<br>.mu<br>.museum<br>.mutual<br>.mv<br>.mw<br>.mx<br>.my<br>.mz<br>.na<br>.nab<br>.nagoya<br>.name<br>.nationwide<br>.natura<br>.navy<br>.nba<br>.nc<br>.ne<br>.nec<br>.net<br>.netbank<br>.netflix<br>.network<br>.neustar<br>.new<br>.newholland<br>.news<br>.next<br>.nextdirect<br>.nexus<br>.nf<br>.nfl<br>.ng<br>.ngo<br>.nhk<br>.ni<br>.nico<br>.nike<br>.nikon<br>.ninja<br>.nissan<br>.nissay<br>.nl<br>.no<br>.nokia<br>.northwesternmutual<br>.norton<br>.now<br>.nowruz<br>.nowtv<br>.np<br>.nr<br>.nra<br>.nrw<br>.ntt<br>.nu<br>.nyc<br>.nz<br>.obi<br>.observer<br>.off<br>.office<br>.okinawa<br>.olayan<br>.olayangroup<br>.oldnavy<br>.ollo<br>.om<br>.omega<br>.one<br>.ong<br>.onl<br>.online<br>.onyourside<br>.ooo<br>.open<br>.oracle<br>.orange<br>.org<br>.organic<br>.origins<br>.osaka<br>.otsuka<br>.ott<br>.ovh<br>.pa<br>.page<br>.panasonic<br>.paris<br>.pars<br>.partners<br>.parts<br>.party<br>.passagens<br>.pay<br>.pccw<br>.pe<br>.pet<br>.pf<br>.pfizer<br>.pg<br>.ph<br>.pharmacy<br>.phd<br>.philips<br>.phone<br>.photo<br>.photography<br>.photos<br>.physio<br>.pics<br>.pictet<br>.pictures<br>.pid<br>.pin<br>.ping<br>.pink<br>.pioneer<br>.pizza<br>.pk<br>.pl<br>.place<br>.play<br>.playstation<br>.plumbing<br>.plus<br>.pm<br>.pn<br>.pnc<br>.pohl<br>.poker<br>.politie<br>.porn<br>.post<br>.pr<br>.pramerica<br>.praxi<br>.press<br>.prime<br>.pro<br>.prod<br>.productions<br>.prof<br>.progressive<br>.promo<br>.properties<br>.property<br>.protection<br>.pru<br>.prudential<br>.ps<br>.pt<br>.pub<br>.pw<br>.pwc<br>.py<br>.qa<br>.qpon<br>.quebec<br>.quest<br>.qvc<br>.racing<br>.radio<br>.raid<br>.re<br>.read<br>.realestate<br>.realtor<br>.realty<br>.recipes<br>.red<br>.redstone<br>.redumbrella<br>.rehab<br>.reise<br>.reisen<br>.reit<br>.reliance<br>.ren<br>.rent<br>.rentals<br>.repair<br>.report<br>.republican<br>.rest<br>.restaurant<br>.review<br>.reviews<br>.rexroth<br>.rich<br>.richardli<br>.ricoh<br>.ril<br>.rio<br>.rip<br>.rmit<br>.ro<br>.rocher<br>.rocks<br>.rodeo<br>.rogers<br>.room<br>.rs<br>.rsvp<br>.ru<br>.rugby<br>.ruhr<br>.run<br>.rw<br>.rwe<br>.ryukyu<br>.sa<br>.saarland<br>.safe<br>.safety<br>.sakura<br>.sale<br>.salon<br>.samsclub<br>.samsung<br>.sandvik<br>.sandvikcoromant<br>.sanofi<br>.sap<br>.sarl<br>.sas<br>.save<br>.saxo<br>.sb<br>.sbi<br>.sbs<br>.sc<br>.sca<br>.scb<br>.schaeffler<br>.schmidt<br>.scholarships<br>.school<br>.schule<br>.schwarz<br>.science<br>.scjohnson<br>.scot<br>.sd<br>.se<br>.search<br>.seat<br>.secure<br>.security<br>.seek<br>.select<br>.sener<br>.services<br>.ses<br>.seven<br>.sew<br>.sex<br>.sexy<br>.sfr<br>.sg<br>.sh<br>.shangrila<br>.sharp<br>.shaw<br>.shell<br>.shia<br>.shiksha<br>.shoes<br>.shop<br>.shopping<br>.shouji<br>.show<br>.showtime<br>.si<br>.silk<br>.sina<br>.singles<br>.site<br>.sj<br>.sk<br>.ski<br>.skin<br>.sky<br>.skype<br>.sl<br>.sling<br>.sm<br>.smart<br>.smile<br>.sn<br>.sncf<br>.so<br>.soccer<br>.social<br>.softbank<br>.software<br>.sohu<br>.solar<br>.solutions<br>.song<br>.sony<br>.soy<br>.spa<br>.space<br>.sport<br>.spot<br>.spreadbetting<br>.sr<br>.srl<br>.ss<br>.st<br>.stada<br>.staples<br>.star<br>.statebank<br>.statefarm<br>.stc<br>.stcgroup<br>.stockholm<br>.storage<br>.store<br>.stream<br>.studio<br>.study<br>.style<br>.su<br>.sucks<br>.supplies<br>.supply<br>.support<br>.surf<br>.surgery<br>.suzuki<br>.sv<br>.swatch<br>.swiftcover<br>.swiss<br>.sx<br>.sy<br>.sydney<br>.systems<br>.sz<br>.tab<br>.taipei<br>.talk<br>.taobao<br>.target<br>.tatamotors<br>.tatar<br>.tattoo<br>.tax<br>.taxi<br>.tc<br>.tci<br>.td<br>.tdk<br>.team<br>.tech<br>.technology<br>.tel<br>.temasek<br>.tennis<br>.teva<br>.tf<br>.tg<br>.th<br>.thd<br>.theater<br>.theatre<br>.tiaa<br>.tickets<br>.tienda<br>.tiffany<br>.tips<br>.tires<br>.tirol<br>.tj<br>.tjmaxx<br>.tjx<br>.tk<br>.tkmaxx<br>.tl<br>.tm<br>.tmall<br>.tn<br>.to<br>.today<br>.tokyo<br>.tools<br>.top<br>.toray<br>.toshiba<br>.total<br>.tours<br>.town<br>.toyota<br>.toys<br>.tr<br>.trade<br>.trading<br>.training<br>.travel<br>.travelchannel<br>.travelers<br>.travelersinsurance<br>.trust<br>.trv<br>.tt<br>.tube<br>.tui<br>.tunes<br>.tushu<br>.tv<br>.tvs<br>.tw<br>.tz<br>.ua<br>.ubank<br>.ubs<br>.ug<br>.uk<br>.unicom<br>.university<br>.uno<br>.uol<br>.ups<br>.us<br>.uy<br>.uz<br>.va<br>.vacations<br>.vana<br>.vanguard<br>.vc<br>.ve<br>.vegas<br>.ventures<br>.verisign<br>.versicherung<br>.vet<br>.vg<br>.vi<br>.viajes<br>.video<br>.vig<br>.viking<br>.villas<br>.vin<br>.vip<br>.virgin<br>.visa<br>.vision<br>.viva<br>.vivo<br>.vlaanderen<br>.vn<br>.vodka<br>.volkswagen<br>.volvo<br>.vote<br>.voting<br>.voto<br>.voyage<br>.vu<br>.vuelos<br>.wales<br>.walmart<br>.walter<br>.wang<br>.wanggou<br>.watch<br>.watches<br>.weather<br>.weatherchannel<br>.webcam<br>.weber<br>.website<br>.wed<br>.wedding<br>.weibo<br>.weir<br>.wf<br>.whoswho<br>.wien<br>.wiki<br>.williamhill<br>.win<br>.windows<br>.wine<br>.winners<br>.wme<br>.wolterskluwer<br>.woodside<br>.work<br>.works<br>.world<br>.wow<br>.ws<br>.wtc<br>.wtf<br>.xbox<br>.xerox<br>.xfinity<br>.xihuan<br>.xin<br>.xn–11b4c3d<br>.xn–1ck2e1b<br>.xn–1qqw23a<br>.xn–2scrj9c<br>.xn–30rr7y<br>.xn–3bst00m<br>.xn–3ds443g<br>.xn–3e0b707e<br>.xn–3hcrj9c<br>.xn–3oq18vl8pn36a<br>.xn–3pxu8k<br>.xn–42c2d9a<br>.xn–45br5cyl<br>.xn–45brj9c<br>.xn–45q11c<br>.xn–4gbrim<br>.xn–54b7fta0cc<br>.xn–55qw42g<br>.xn–55qx5d<br>.xn–5su34j936bgsg<br>.xn–5tzm5g<br>.xn–6frz82g<br>.xn–6qq986b3xl<br>.xn–80adxhks<br>.xn–80ao21a<br>.xn–80aqecdr1a<br>.xn–80asehdb<br>.xn–80aswg<br>.xn–8y0a063a<br>.xn–90a3ac<br>.xn–90ae<br>.xn–90ais<br>.xn–9dbq2a<br>.xn–9et52u<br>.xn–9krt00a<br>.xn–b4w605ferd<br>.xn–bck1b9a5dre4c<br>.xn–c1avg<br>.xn–c2br7g<br>.xn–cck2b3b<br>.xn–cckwcxetd<br>.xn–cg4bki<br>.xn–clchc0ea0b2g2a9gcd<br>.xn–czr694b<br>.xn–czrs0t<br>.xn–czru2d<br>.xn–d1acj3b<br>.xn–d1alf<br>.xn–e1a4c<br>.xn–eckvdtc9d<br>.xn–efvy88h<br>.xn–fct429k<br>.xn–fhbei<br>.xn–fiq228c5hs<br>.xn–fiq64b<br>.xn–fiqs8s<br>.xn–fiqz9s<br>.xn–fjq720a<br>.xn–flw351e<br>.xn–fpcrj9c3d<br>.xn–fzc2c9e2c<br>.xn–fzys8d69uvgm<br>.xn–g2xx48c<br>.xn–gckr3f0f<br>.xn–gecrj9c<br>.xn–gk3at1e<br>.xn–h2breg3eve<br>.xn–h2brj9c<br>.xn–h2brj9c8c<br>.xn–hxt814e<br>.xn–i1b6b1a6a2e<br>.xn–imr513n<br>.xn–io0a7i<br>.xn–j1aef<br>.xn–j1amh<br>.xn–j6w193g<br>.xn–jlq480n2rg<br>.xn–jlq61u9w7b<br>.xn–jvr189m<br>.xn–kcrx77d1x4a<br>.xn–kprw13d<br>.xn–kpry57d<br>.xn–kput3i<br>.xn–l1acc<br>.xn–lgbbat1ad8j<br>.xn–mgb9awbf<br>.xn–mgba3a3ejt<br>.xn–mgba3a4f16a<br>.xn–mgba7c0bbn0a<br>.xn–mgbaakc7dvf<br>.xn–mgbaam7a8h<br>.xn–mgbab2bd<br>.xn–mgbah1a3hjkrd<br>.xn–mgbai9azgqp6j<br>.xn–mgbayh7gpa<br>.xn–mgbbh1a<br>.xn–mgbbh1a71e<br>.xn–mgbc0a9azcg<br>.xn–mgbca7dzdo<br>.xn–mgbcpq6gpa1a<br>.xn–mgberp4a5d4ar<br>.xn–mgbgu82a<br>.xn–mgbi4ecexp<br>.xn–mgbpl2fh<br>.xn–mgbt3dhd<br>.xn–mgbtx2b<br>.xn–mgbx4cd0ab<br>.xn–mix891f<br>.xn–mk1bu44c<br>.xn–mxtq1m<br>.xn–ngbc5azd<br>.xn–ngbe9e0a<br>.xn–ngbrx<br>.xn–node<br>.xn–nqv7f<br>.xn–nqv7fs00ema<br>.xn–nyqy26a<br>.xn–o3cw4h<br>.xn–ogbpf8fl<br>.xn–otu796d<br>.xn–p1acf<br>.xn–p1ai<br>.xn–pgbs0dh<br>.xn–pssy2u<br>.xn–q7ce6a<br>.xn–q9jyb4c<br>.xn–qcka1pmc<br>.xn–qxa6a<br>.xn–qxam<br>.xn–rhqv96g<br>.xn–rovu88b<br>.xn–rvc1e0am3e<br>.xn–s9brj9c<br>.xn–ses554g<br>.xn–t60b56a<br>.xn–tckwe<br>.xn–tiq49xqyj<br>.xn–unup4y<br>.xn–vermgensberater-ctb<br>.xn–vermgensberatung-pwb<br>.xn–vhquv<br>.xn–vuq861b<br>.xn–w4r85el8fhu5dnra<br>.xn–w4rs40l<br>.xn–wgbh1c<br>.xn–wgbl6a<br>.xn–xhq521b<br>.xn–xkc2al3hye2a<br>.xn–xkc2dl3a5ee0h<br>.xn–y9a3aq<br>.xn–yfro4i67o<br>.xn–ygbi2ammx<br>.xn–zfr164b<br>.xxx<br>.xyz<br>.yachts<br>.yahoo<br>.yamaxun<br>.yandex<br>.ye<br>.yodobashi<br>.yoga<br>.yokohama<br>.you<br>.youtube<br>.yt<br>.yun<br>.za<br>.zappos<br>.zara<br>.zero<br>.zip<br>.zm<br>.zone<br>.zuerich<br>.zw</p>
<p>  双顶级域名：</p>
<p>.com.cn<br>.co.uk<br>.com.au<br>.co.nz<br>.com.com<br>.edu.hk<br>.com.hk<br>.org.cn<br>.net.cn<br>.gov.cn<br>.gz.cn<br>.hb.cn<br>.com.mx<br>.go.kr<br>.js.cn<br>.gov.br<br>.go.jp<br>.gov.tr<br>.org.uk<br>.nm.cn<br>.com.my<br>.tj.cn<br>.co.th<br>.co.nz<br>.cq.cn<br>.or.jp<br>.gx.cn<br>.ac.jp<br>.com.sg<br>.sh.cn<br>.net.au<br>.org.hk<br>.hl.cn<br>.ac.uk<br>.co.uk<br>.cn.com<br>.net.hk<br>.edu.tw<br>.com.tw<br>.gs.cn<br>.gd.cn<br>.co.jp<br>.org.au<br>.org.tw<br>.com.tr<br>.gov.sg<br>.org.br<br>.ac.cn<br>.ah.cn<br>.edu.cn<br>.co.in<br>.ne.kr<br>.or.kr<br>.com.pl<br>.hk.cn<br>.ac.in<br>.ln.cn<br>.hi.cn<br>.co.za<br>.net.ru<br>.ac.at<br>.ac.za<br>.sx.cn<br>.ac.kr<br>.jl.cn<br>.sc.cn<br>.sd.cn<br>.zj.cn<br>.he.cn<br>.ac.th<br>.go.th<br>.re.kr<br>.gov.za<br>.org.sg<br>.or.th<br>.sn.cn<br>.sklep.pl<br>.bj.cn<br>.org.za<br>.hn.cn<br>.gob.mx<br>.co.il<br>.bc.ca<br>.nx.cn<br>.qh.cn<br>.me.uk<br>.edu.pl<br>.org.il<br>.us.com<br>.net.tw<br>.se.com<br>.mb.ca<br>.eu.com<br>.mo.cn<br>.net.br<br>.yn.cn<br>.on.ca<br>.tm.fr<br>.edu.tr<br>.uk.com<br>.com.ru<br>.gb.net<br>.org.tr<br>.com.mm<br>.gov.il<br>.gov.in<br>.xj.cn<br>.org.mx<br>.qc.ca<br>.ac.il<br>.tw.cn<br>.gv.at<br>.net.il<br>.edu.mm<br>.net.in<br>.co.at<br>.sa.com<br>.sk.ca<br>.com.fr<br>.asn.au<br>.com.ec<br>.org.ru<br>.asso.fr<br>.net.mx<br>.ns.ca<br>.res.in<br>.eng.br<br>.net.sg<br>.ernet.in<br>.xz.cn<br>.edu.mx<br>.net.pl<br>.qc.com<br>.med.br<br>.mil.pl</p>
]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>后缀</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>域名报红检测小工具-python</title>
    <url>/1700/</url>
    <content><![CDATA[<p>域名爆红检测小工具,方便做识别批量检查，作为另一种思路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># _*_ coding:utf-8 _*_</span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def check_file(file):</span><br><span class="line">    str_dump = []</span><br><span class="line">    line_len = 100</span><br><span class="line">    with open(file, &#x27;r&#x27;) as f1:</span><br><span class="line">        for line in f1:</span><br><span class="line">            line = line.replace(&#x27;\n&#x27;, &#x27;&#x27;)</span><br><span class="line">            print(line)</span><br><span class="line">            # link = &#x27;https://cgi.urlsec.qq.com/index.php?m=check&amp;a=check&amp;url=http://&#123;&#125;&#x27;.format(line)</span><br><span class="line">            t = int(round(time.time()*1000))</span><br><span class="line">            link = &#x27;https://cgi.urlsec.qq.com/index.php?m=check&amp;a=check&amp;callback=jQuery1113049533065324068226_1585819829729&amp;url=&#123;0&#125;&amp;_=&#123;1&#125;&#x27;.format(line, t)</span><br><span class="line">            try:</span><br><span class="line">                # 接口header</span><br><span class="line">                headers = &#123;</span><br><span class="line">                    &quot;Content-Type&quot;: &quot;application/json;charset=utf-8&quot;,</span><br><span class="line">                    &quot;Accept&quot;: &quot;*/*&quot;,</span><br><span class="line">                    &quot;Connection&quot;: &quot;keep-alive&quot;,</span><br><span class="line">                    &quot;Host&quot;: &quot;cgi.urlsec.qq.com&quot;,</span><br><span class="line">                    # &quot;Referer&quot;: &quot;https://guanjia.qq.com&quot;,</span><br><span class="line">                    &quot;Referer&quot;: &quot;https://urlsec.qq.com/check.html?url=&#123;&#125;&quot;.format(line),</span><br><span class="line">                    &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74&quot;,</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                req = requests.get(link, headers=headers, timeout=100)</span><br><span class="line">                # print(req)</span><br><span class="line">                response = req.text</span><br><span class="line">                # print(response[len(&#x27;jQuery1113049533065324068226_1585819829729(&#x27;):len(response)-1])</span><br><span class="line">                data = json.loads(response[len(&#x27;jQuery1113049533065324068226_1585819829729(&#x27;):len(response)-1])</span><br><span class="line"></span><br><span class="line">                # whitetype: 1：安全性未知 2：危险网站 3：安全网站</span><br><span class="line">                white_type = data[&#x27;data&#x27;][&#x27;results&#x27;][&#x27;whitetype&#x27;]</span><br><span class="line">                # python 没switch 语法 害</span><br><span class="line">                if white_type == 1:</span><br><span class="line">                    type_str = &#x27;unknown&#x27;</span><br><span class="line">                elif white_type == 2:</span><br><span class="line">                    type_str = &#x27;danger&#x27;</span><br><span class="line">                elif white_type == 3:</span><br><span class="line">                    type_str = &#x27;safe&#x27;</span><br><span class="line">                else:</span><br><span class="line">                    type_str = &#x27;null&#x27;</span><br><span class="line"></span><br><span class="line">                str_data = line + &#x27;,&#x27; + type_str + &#x27;,&#x27; + str(white_type) + &#x27;\n&#x27;</span><br><span class="line">                str_dump.append(str_data)</span><br><span class="line">                req.close()</span><br><span class="line"></span><br><span class="line">            except Exception as e:</span><br><span class="line">                print(e)</span><br><span class="line"></span><br><span class="line">            if len(str_dump) &gt; 0:</span><br><span class="line">                if (len(str_dump) % line_len) == 0:</span><br><span class="line">                    # print(&#x27;够&#123;&#125;条啦...&#x27;.format(len(str_dump)))</span><br><span class="line">                    with open(&#x27;target_qq.txt&#x27;, &#x27;a+&#x27;) as f3:</span><br><span class="line">                        f3.write(&#x27;&#x27;.join(str_dump))</span><br><span class="line">                        str_dump = []</span><br><span class="line"></span><br><span class="line">            time.sleep(0.1)</span><br><span class="line"></span><br><span class="line">    if len(str_dump) &gt; 0:</span><br><span class="line">        with open(&#x27;target_qq.txt&#x27;, &#x27;a+&#x27;) as f3:</span><br><span class="line">            f3.write(&#x27;&#x27;.join(str_dump))</span><br><span class="line">            str_dump = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    check_file(&#x27;url.txt&#x27;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pyhton</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>域名</tag>
        <tag>报红</tag>
      </tags>
  </entry>
  <entry>
    <title>域名注册商不给转移域名转移码和续费价高我们怎么办？</title>
    <url>/379/</url>
    <content><![CDATA[<p>最近因为域名快到期了，准备到域名商那里续费，看到了续费价钱我去80.当初我买域名注册是35续费是55的，现在涨到80一年。你猜这是我做了啥？肯定是去和客服说了客服不理你说价格没有商量的话直接发邮件去和他们经理说，“就说为什么续费这么贵，客服还是不是VIP不能降价，我要去ICANN投诉了”这时候必须把价格降下来不信你们试试看，因为他们哪敢不降价，ICANN把他们骂死不可了。</p>
<p>又有一种情况就是域名注册商不给转移码我们又怎么办？</p>
<p>因为国内不少域名注册商为了些域名管理费硬是不给你转移码。这点我们有门道，当然前题你的域名是com、net、org等国际英文域名，国内域名cn你知道的，管理非常呆板，可能没有什么效果。这是前提!!!知道吧接下来就是………….</p>
<p>当你在域名管理商或其代理获取国际域名转移码受阻，或者要求寄身份证等资料，甚至要你缴纳费用才给转移码的等等玩太极的，你可以直接到ICANN投诉，成功率百分之百，屡试不爽。<br>通过ICANN优点毋庸置疑的，我们无需邮寄任何资料，保护您的隐私，并且整个过程无需缴纳任何费用。可以快速拿到转移码，转移域名，当然前题要注册人邮箱是你的，只要这点就能转移出域名。</p>
<p>方法：到官方投诉网址填写投诉资料，（最好用谷歌浏览器为什么要用你懂得的）投诉填写如下：</p>
<p>1、Your name: 名字，填写域名WHOIS的所有人<br>2、Your organization (if any): 填写域名WHOIS联系人</p>
<p>3、Your email address: 邮箱地址，填写域名WHOIS中的邮箱</p>
<p>4、ur phone number (optional): 电话号码</p>
<p>5、Specific domain name: 要投诉的域名，只能填写一个</p>
<p>6、Please select your issue 写上您将要投诉的问题类型，我们选Transfer Problems ? Auth Codes Locked Domain Fraudulent Transfer Registrar Denied Transfer，表示是域名转移相关的问题。<br>7、在空白处填写一下内容：</p>
<p>Dear ICANN:</p>
<p>I registered my domain <strong>XXXX.com（你的域名）</strong> at （注册商名称） I am not satisfied with their service and I want to transfer my domain to other.</p>
<p>As far as I know transfer of domain name is not required to pay any fees however the company.kept asking me topay that fee or mydomain name will be trapped in their company.</p>
<p> I can’t find any place on their site to get my Auth-Info code. Followed their FAQ, I found they require a paper form to be filled and mailed to their office with a hard copy of my official personal photo ID or/and passport. I feel very uncomfortable about this. I don’t think they has authority to check my personal id and keep a hard copy, it contains lot of my privacy info. I believe this requirement is against both ICANN policy and local law.<br>Please help me getting my Auth-Info code from them. My domain info is listed below:<br>（域名Whois 信息）<br>8、然后就是等待ICANN给你发邮件了，这里有一点需要注意:在投诉的时候填写的邮箱必须是你注册域名的邮箱，或者你先去把你域名资料里面的邮箱修改成你最常用的，这里填一样的就OK了。</p>
<p>9、然后就坐等蛋疼域名注册商给你域名转移码。</p>
<p>10、将域名转移到你信任的注册商。</p>
<p>**最后呢哈哈哈,这个办法百试百灵不行你们都试试看我今天就可以了。因为我今天用了投诉结果注册商把续费的价格给我降到最低了那个价格也可以接受还有投诉方法仅限国际域名提交信息后，大约5天内我就可以收到注册商邮件，如果直接给你转移码，此事就OVER了。如果没有，你可以多投诉几次。<br>**<strong>【ps:需要转移域名的朋友，千万不要被国内那些客服给忽悠了，转移域名本来就是他们的义务，并且免费，要懂得使用工具维护自己的权益!】</strong></p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>基于spring+springmvc+mybatis+mysql制作简单的个人博客</title>
    <url>/766/</url>
    <content><![CDATA[<p>这个应该要停止更新了..打算重构一个防wp的博客程序..因为之前的数据库有点乱了…</p>
<hr>
<p>这两天晚上都在帮之前班长做一个比赛的作品…</p>
<p>emmmm因为我们学校毕业条件之一就是创新学分要满1分…所以才有了帮我班长做一个比赛作品，哎，这也是为了能让他顺利毕业吧…</p>
<hr>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><ul>
<li>2017/12/6 新增了shiro权限</li>
<li>2017/12/13 增加友情链接curd</li>
<li>201712/18?增加注册账号时，发送邮件激活账号功能..</li>
</ul>
<p>源码下载：<a href="https://github.com/jiomer/blogCurd">https://github.com/jiomer/blogCurd</a></p>
<hr>
<p>基于spring+springmvc+mybatis+mysql制作的个人博客(其实我想用maven但是班长电脑上没装…哎)</p>
<p>这个-个人博客主要功能有写博客文章和日记，浏览博客与日记，用户的crud(没有做用户的权限,因为我把shiro移除了以免我班长看不懂不好答辩哈哈哈哈)</p>
<p>这个个人博客用于练手还是不错的…</p>
<h3 id="运用知识点"><a href="#运用知识点" class="headerlink" title="运用知识点"></a>运用知识点</h3><ul>
<li>spring mvc</li>
<li>spring</li>
<li>mybatis</li>
<li>css/js</li>
<li>jquery</li>
<li>PageHelper</li>
<li>javaMail</li>
</ul>
<h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><ul>
<li>Eclipse</li>
<li>Mysql</li>
<li>ssm框架所需要的jar包</li>
<li>ckeditor编辑器</li>
<li>Tomcat服务器</li>
</ul>
<hr>
<p>数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line"></span><br><span class="line">Source Server         : localhost_3306</span><br><span class="line">Source Server Version : 50547</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : blog</span><br><span class="line"></span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50547</span><br><span class="line">File Encoding         : 65001</span><br><span class="line"></span><br><span class="line">Date: 2017-11-15 13:58:03</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for blog</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `blog`;</span><br><span class="line">CREATE TABLE `blog` (</span><br><span class="line">  `blogid` int(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `blogtitle` varchar(50) DEFAULT NULL,</span><br><span class="line">  `article` varchar(10000) DEFAULT NULL,</span><br><span class="line">  `time` varchar(50) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`blogid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for diary</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `diary`;</span><br><span class="line">CREATE TABLE `diary` (</span><br><span class="line">  `diaryid` int(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `diary` varchar(10000) DEFAULT NULL,</span><br><span class="line">  `time` varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`diaryid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `user`;</span><br><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(16) NOT NULL,</span><br><span class="line">  `password` varchar(16) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure>



<p><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/blog1-1024x465.png" alt="img"><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/blog2-1024x482.png" alt="img"><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/blog3-1024x537.png" alt="img"><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/blog4-1024x489.png" alt="img"><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/blog5-1024x477.png" alt="img"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>备案好了</title>
    <url>/414/</url>
    <content><![CDATA[<p><strong>备案历时十六天.</strong></p>
<p><strong>从七月22号左右吧到现在等了要死的节奏。于是八月6号来了短信说备案成功哈哈哈开心死了！！！</strong></p>
<p><strong>好了因为高三了以后可以回很少更新希望你们不要怪我！</strong></p>
<p>备案好了。等到星期六回家再搬家吧现在先开着。不会给撤销吧。现在主机还是HK的</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>备案</tag>
      </tags>
  </entry>
  <entry>
    <title>大一期末，大二准备来了</title>
    <url>/290/</url>
    <content><![CDATA[<p>一转眼，已经准备大一结束</p>
<p>从懵懵懂懂来到大学学校</p>
<p>其实从开始认为高中紧，大学就松了</p>
<p>然而这句话你相信9.527%就好了</p>
<p>大学也是人生中一个重要的阶段</p>
<p>毕竟平胸而论它决定了你下一个打LOL的地方在哪</p>
<p>嗯，再过3/4年以后。</p>
<p>也是决定你下一个LOL的地方</p>
<p>和谁一起再撸过</p>
<p>最后，什么也不重要</p>
<p>重要的是撸的过程不要送！</p>
<p>]]&gt;</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>大冰之《好吗好的》你们值得一看</title>
    <url>/51/</url>
    <content><![CDATA[<p>之前看了大冰的一本，乖，摸摸头的那本书之后。感觉非常的喜欢看这故事类的书。</p>
<p>从张佳佳那几本，从你的全世界路过-到让我留在你身边</p>
<p>这类的书都是睡前的小故事</p>
<p>在上学期看了陪安东尼度过漫长岁月的红橙黄、</p>
<p>到这个学期刚看大冰的好吗好的</p>
<p>不管怎么样，好吗好的这本书中的江湖故事，铺满牵引我踏上归程的乡愁、有回头是岸的浪子，有深沉执着的兄弟，有既做事又做梦还做自己的男人。</p>
<p>虽然他们的故事是生活，但是他们真实存在于这个世界上。用能量强大的小宇宙去冲击着我自己，让我看到那些我永远无法去体会的生活，见识那些可能永远都无法结交的人。他们用行动教会你善意对待世界、对待生活、对待他人，同时也善意地对待自己。</p>
<p>虽然他们走在我的前面，为我指路，为我鼓气，也为我照亮前进的方向。</p>
<p>因此我觉得我不得不推荐这本书！或者我写的不好，但是我就喜欢这类的书！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>故事书</tag>
      </tags>
  </entry>
  <entry>
    <title>大学。</title>
    <url>/450/</url>
    <content><![CDATA[<p>多年过去，再回忆高考，其实本质上没有考的好与差的说法，重要的是所以年轻人在一起，做份试题，然后决定去哪座城市、做什么工作，今后和谁相知，和谁一起旅游，和谁做一辈子。不管故事怎样，结局如何，一切都是美好的。</p>
<p> 高考已过，大学已来！曾经向往的大学生活其实是一种压力！</p>
<p> 让时间倒回四个月，那个还在为高考准备的我，为高考不顾一切的我，最后还是等待最后的大学。然而在高考前鼻炎发作，整个人都是飘飘的，这也许是上天的一种考验。但是不管是自己的问题还是什么的问题，发生了已经发生了，既来之，则安之不是吗？</p>
<p> 三个月前，高考成绩放榜，本以为自己会因为生病考的非常无敌差，但是还刚刚踏过了专A线。恩！请学霸无视我这个学渣。</p>
<p> 如今，本是模具专业的我，转眼已成软件工程专业。曾在多么想快点转到专业，现在是多么的后悔转了专业。大学本该是美好的，而我却是亚历山大，无法想象我以后会怎么就业，拿什么来就业！自己的前途是多么的迷茫，是多么的无阻！虽然刚开始，什么人都有不懂，我记得老师说过：不怕你会不会，只要你努力学习了将来就会成功。然而，我是在迷茫毕业出来能干什么。软件设计出来救赎程序员，但是学习编程是一个非常长远的活。不是说一下两下就成功。再加上现在就业压力是多高！呵呵想想都是醉了！</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>夭折</title>
    <url>/694/</url>
    <content><![CDATA[<p>emmm… 命中注定我是做不出好的wp主题了.. 又一个夭折在我手中。哎 <img src="http://qn.199604.com/typoraImg/20170929185116-1024x540.png"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>好了博客再次重生了</title>
    <url>/322/</url>
    <content><![CDATA[<p>经过这个那个的瞎折腾。博客又回来了。</p>
<p>从404到500页面再到乱乱链接！！！！</p>
<p>我疯了。</p>
<p>好吧现在回来了OK了。</p>
<p>人天生没有会的。</p>
<p>现在慢慢的折腾折腾到OK了。</p>
<p>从中也学到了一些知识。</p>
<p>嗯哈。</p>
<p>以后也我链接过得。</p>
<p>请联系我再链接上去。谢谢</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>好了博客落成</title>
    <url>/319/</url>
    <content><![CDATA[<p>经过几天的努力.原来的<a href="http://www.juntk.com换成了www.199604.com/">www.juntk.com换成了www.199604.com</a></p>
<p>这几天累死了。好吧还是坚持emlog。</p>
<p>好了加油吧</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>好吧,还要4个多小时就生日了。</title>
    <url>/16/</url>
    <content><![CDATA[<p>对自己生日可以说点什么呢&gt;?</p>
<p>好吧还是低调点不搞什么。自己过吧,其实这个那个我几岁生日呢我也不记得了。</p>
<p>嗯哈,我也该谢谢公务员考试吧。本来是明天才放假的,哈哈今天提前双休不错。</p>
<p>还要4个多小时生日,希望自己以后不要怎么多病吧。身体是革命的本钱,嗯哈祝自己生日快乐,两年半后考一个理想的大学。</p>
<p>好了我也不知道说点什么,我要继续去赶作业了。这个星期很忙吧,也要把英语给补回来,理科嘛,既然选了理科就要去拼了。虽然我学文科更好,但是为了自己的理想为了以后。理科是我的出路,我热爱理科.虽然成绩不怎么样好但是我会努力的。</p>
<p>嗯,就写到这里吧。</p>
<p>最后提前祝自己生日快乐。</p>
<p>微博:weibo.com/jiomer</p>
<p>求关注吧。嘎嘎嘎!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>如何做一个幸福的人?</title>
    <url>/337/</url>
    <content><![CDATA[<p>如何做一个幸福的人呢?这是我这个星期的语文作业吧。</p>
<p>这也难到我了，嗯那我也来一个专题:如何做一个幸福的人。</p>
<p>我也说说我的观点吧,幸福不就是一个自我的满足麽?积极、阳光地面对生活中的幸与不幸，相信人间有真情不就是幸福麽?怀着感恩之心，心中有善念，不要记恨或者生气，看开一切，感受大自然不就是一个幸福麽?对自己负责一点，对他人宽容一点。要知道这世界本来就不完美，接受不完美，就会是幸福麽?</p>
<p>其实呢、幸福不就是自己动手然后一点一点的付出换来的吗?我们小时候，幸福是一件实物、长大后，幸福是一种状态、然后，突然有一天，你会发现，幸福既不是实物也不是状态，而是一种领悟。眼光不要太高，欲望不要太多，用心感受生活的点点滴滴，你会明白的所以,每个人的幸福都不远，只要我们相信，我会去创造。幸福不远相信自己</p>
<p><strong>最后以你的生活为记录,写出你的幸福是什么?</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>如何自学Android编程？</title>
    <url>/467/</url>
    <content><![CDATA[<p>文章是转着慕课网微博上的文章写的不错</p>
<p>你们期待的终于来了，我可以算作是Android自学界的鼻祖了，之前自学的故事与分享的知识、经验影响了无数人，如今几年过去了，我经常收到不少人的感谢信，很多当初看我的教程的初学者如今已经在Android开发小有成就，而且让我欣慰的是他们也依然延续我的分享精神，影响更多的人。</p>
<p>如果你现在依然是一个Android初学者，不妨到这里看下我的自学故事：  </p>
<p>如何自学Android编程<br><a href="https://www.zhihu.com/question/26417244">https://www.zhihu.com/question/26417244</a>  </p>
<p>今天废话就不多说，就来给大家推荐一份详细的自学教程，帮助你从入门到进阶到精通。  </p>
<p>准备  </p>
<p>自学之路是一项很苦逼的差事，自学的人很多，但能真正坚持下去的很少，在准备自学Android之前你需要具备以下基本能力能帮助你坚持到最后。  </p>
<p>1、对Android开发、对互联网感兴趣，兴趣是最好的老师，只有发自内心的感兴趣才能真正坚持下去；<br>2、强大的学习能力，既然自学那学习能力肯定是必备，要有很强的求知欲，持续不断的学习能力才有机会走的更远，注意，是持续不断的学习能力；<br>3、解决问题的能力，自学过程中肯定会遇到各种各样的坑，这个时候不要急躁，不要气馁，不要怕耗时间，一步一个脚印去解决问题，这会为你今后走上工作岗位带来极大的优势；<br>4、设定一个目标，比如我当初测试转行开发，自学Android的目标简单直接，因为开发比测试工资高，我转行就是为了多挣钱。我想大部分人的目标应该都跟我同感。  </p>
<p>Java基础  </p>
<p>Android开发是基于Java语言的，所以毫无疑问的是必须要掌握Java基础，如果你完全没有任何Java基础，这步是必须要好好学习的，如果已经有Java基础的，这步可略过。  </p>
<p>对于很多初学者来说入门往往是最难的，如果只看书完全看不下去，也很难理解，所以强烈推荐初学者以书籍结合视频的方式学习Java基础，所以给你推荐：  </p>
<p>《Java语言程序设计》，优点是非常基础，适合初学者，建议只要看到前十四章就ok了，第十二章也可以略过。<br><a href="http://book.douban.com/subject/6529833/">http://book.douban.com/subject/6529833/</a>  </p>
<p>Mars老师的Java4Android视频课程结合学习，便于初学者很好的理解与入门。<br><a href="http://pan.baidu.com/s/1c1beYo4">http://pan.baidu.com/s/1c1beYo4</a>  </p>
<p>如果每天至少坚持学习3-4小时的话，这一阶段差不多花费1–2个月之间都算正常，范围因人以及花费的时间而异。  </p>
<p>Android入门资料  </p>
<p>经过上面的学习相信你已经掌握了Java基础了，是时候开始正式进入Android学习的阶段了。  </p>
<p>Android学习之路 <br>我自己整理的Android开发详细资料，这篇博客影响了无数Android开发者，可谓Android开发必备，某种意义上来说，自学Android有这篇博客足够了。<br><a href="http://t.cn/Rz79nfR">http://t.cn/Rz79nfR</a>  </p>
<p>《第一行代码》<br>郭霖大神的最新力作，全书由浅入深、系统全面地讲解了Android软件开发的方方面面，而且是针对Android 4.0进行讲解的，非常适合Android入门。<br><a href="http://book.douban.com/subject/25942191/">http://book.douban.com/subject/25942191/</a>  </p>
<p>Mars老师的Android开发视频教程<br><a href="http://marschen.com/portal.php">http://marschen.com/portal.php</a>  </p>
<p>极客学院Android开发视频教程<br><a href="http://www.jikexueyuan.com/path/android/">http://www.jikexueyuan.com/path/android/</a>  </p>
<p>慕课网的Android视频教程<br><a href="http://www.imooc.com/course/list?c=android">http://www.imooc.com/course/list?c=android</a>  </p>
<p>至于入门书籍我认为推荐一本适合你的就够了，而且大部分书籍内容大同小异，但是视频教程就就不一定讲解的内容都一样了，大家可自行选择视频教程。  </p>
<p>Android开发工具  </p>
<p>科学上网<br>科学上网可以说是程序员必备技能，身为Android开发者那更得会这项技能，不管你是使用Google也好，还是到Android官网查找资料，下载SDK都必须要翻墙。可以使用goagent也好，修改host，购买vps、vpn等等方式，这个技能不是本文重点，大家可自行搜索去配置。可以告诉大家的是对于新手来说最简单有效的方式是购买VPN，可以节省不少精力，至于哪个vpn比较好用不敢保证，我使用了两年的vpn个人感觉相对较稳定，感兴趣的可以到我博客主页去寻找。  </p>
<p>Android Studio<br>虽然目前的很多学习资料与书籍都是Eclipse为主，但是Google已经明确未来Android会抛弃Eclipse，所以强烈建议大家直接使用AS，学习的初期花点时间熟悉使用，上手很快就可以对照eclipse方面的教程转到AS了。当让我也在AS1.0刚发布的时候就已经出了一个针对新手的Android Studio+Gradle详细教程，是一个系列，帮助你们更快的入门。<br><a href="http://t.cn/RbH8Q3V">http://t.cn/RbH8Q3V</a>  </p>
<p>AndroidDevTools<br>我是强烈建议Android开发者一定要学会科学上网的，但是如果你觉得暂时还不需要接触外面的世界，那么我的一个朋友搭建的网站，可以让你们无须翻墙即可下载使用官方SDK。<br><a href="http://www.androiddevtools.cn/">http://www.androiddevtools.cn/</a>  </p>
<p>模拟器Genymotion<br>首先建议大家能不用模拟器都不要用，模拟器的启动速度简直是龟速，现在市面上安卓手机很便宜，打算做Android开发没个安卓手机真是说不过去。如果你非要用模拟器那就推荐你用Genymotion，目前来说最快的模拟器。具体可以看我下面的博客，最后还是要建议大家不要使用模拟器！！<br><a href="http://t.cn/R4RvAQd">http://t.cn/R4RvAQd</a>  </p>
<p>Google<br>问任何问题之前都要先去搜索引擎查一下，这会训练你的解决问题的能力，而等你以后工作，实际开发中可以知道，有一大半的时间你是在搜索度过的，很多问题都已经是前人遇到并总结的方案。对于新手来说可能百度勉强够用，但是建议一开始就养成使用Google的习惯，百度在娱乐八卦方面确实靠谱，但是技术方面查出来的东西基本千篇一律，有些答案甚至还会起到误导作用，直到有一天我的老大告诉我用Google，我才知道这个世界上原来还有另外一个搜索引擎，自此便成为脑残G粉，所以一定要用Google！一定要用Google！一定要用Google！！！（重要的事说三遍）  </p>
<p>StackOverFlow<br>用Google之后搜索出来的东西还是习惯性的点击中文结果，直到有一天我发现基本每次搜索排名第一的都是这个网站，于是尝试着点进去用我蹩脚的英语阅读，之后真是相见恨晚的感觉啊，上面几乎能搜到你遇到的绝大部分问题，某种程度上来说推荐用Google搜索的原因之一是因为排名靠前的答案基本都在StackOverFlow上。  </p>
<p>GitHub<br>现在是全球最知名的程序员开源社区，程序员几乎人手一个GitHub账号，在上面你可以找到各种各样牛人分享的开源项目，包括Google、Facebook、Twitter等开源的代码，简直是号称进阶必备，某种意义上看大牛的代码是最好的学习进阶方式。  </p>
<p>Android开发资源  </p>
<p>了解这些资源你绝对会接触另一个世界，这些资源大部分都是我圈中好友总结分享的项目，绝对干货！  </p>
<p>Google Android官方教程中文版<br><a href="http://t.cn/RvHtswy">http://t.cn/RvHtswy</a>  </p>
<p>Android 开发最佳实践<br>一些优秀Android开发者总结留下来的经验，了解这些能让你的学习之路事半功倍。<br><a href="http://t.cn/RwgJoHm">http://t.cn/RwgJoHm</a>  </p>
<p>Android开源汇总<br>GitHub上总结的最全的Android各大开源项目，让你大开眼界！<br><a href="http://t.cn/R2LTQkN">http://t.cn/R2LTQkN</a>  </p>
<p>Android Weekly<br>了解最新的Android相关的技术有哪些，时刻了解紧跟技术趋势，建议加入邮箱订阅。<br><a href="http://androidweekly.net/">http://androidweekly.net/</a>  </p>
<p>Android Weekly Cn<br>我一个朋友做的国内版的Android Weekly，更符合国情。<br><a href="http://www.androidweekly.cn/">http://www.androidweekly.cn/</a>  </p>
<p>Android源码解析<br>我的朋友Trinea发起的一个专注于开源项目源码解析及优秀开源项目的分享的网站<br><a href="http://p.codekk.com/">http://p.codekk.com/</a>  </p>
<p>AndroidDeveloper<br>我自己的公众号，算是打个广告吧，作为国内Android界的精神领袖，我经常也会在我的微信公众号上分享一些干货，大多为个人原创，时刻紧跟趋势，并且只分享对你们有用的干货，可以微信公众号搜索googdev关注。  </p>
<p>国内优秀Android开发者的博客  </p>
<p>这里筛选一些有质量的博客给大家，大都是你们的前辈，绝对一线的博客。  </p>
<p>stormzhang的博客<br><a href="http://stormzhang.com/">http://stormzhang.com/</a>  </p>
<p>郭霖的博客<br><a href="http://blog.csdn.net/guolin/_blog">http://blog.csdn.net/guolin\_blog</a>  </p>
<p>Trinea的博客<br><a href="http://www.trinea.cn/">http://www.trinea.cn/</a>  </p>
<p>魏祝林的博客<br><a href="http://blog.csdn.net/android/_tutor">http://blog.csdn.net/android\_tutor</a>  </p>
<p>恺风（Wei）之Android专栏<br><a href="http://blog.csdn.net/column/details/flowingflying02.html">http://blog.csdn.net/column/details/flowingflying02.html</a>  </p>
<p>张鸿洋的博客<br><a href="http://blog.csdn.net/lmj623565791">http://blog.csdn.net/lmj623565791</a>  </p>
<p>张兴业的博客<br><a href="http://blog.csdn.net/xyz/_lmn">http://blog.csdn.net/xyz\_lmn</a>  </p>
<p>更多国内优秀开发者的博客<br><a href="http://t.cn/RPniqXI">http://t.cn/RPniqXI</a>  </p>
<p>国外著名优秀开发者博客<br><a href="http://t.cn/RPni7a0">http://t.cn/RPni7a0</a>  </p>
<p>国内外优秀Andorid团体博客  </p>
<p>Android Developers Blog （Android开发者官方博客，须翻墙）<br><a href="http://android-developers.blogspot.tw/">http://android-developers.blogspot.tw/</a>  </p>
<p>美团点评技术团队<br><a href="http://tech.meituan.com/">http://tech.meituan.com/</a>  </p>
<p>腾讯全端 AlloyTeam 团队 Blog<br><a href="http://www.alloyteam.com/">http://www.alloyteam.com/</a>  </p>
<p>Android进阶书籍  </p>
<p>当你Android开发已经上手之后，突然发现一直进步很慢，处于一个瓶颈了，这个时候你需要这些书籍。  </p>
<p>Thinking In Java<br>Java经典书籍，有中文版的，可能为了学习Android，你只掌握了Java基础，但是远远不够，你需要再重新系统的学习一下Java，这是一本值得反复看的书籍，针对有一定Java基础的人，会让你重新认识下Java。<br><a href="http://book.douban.com/subject/1474824/">http://book.douban.com/subject/1474824/</a>  </p>
<p>Effective Java<br>这是一本实用至上的书，78条建议，满满的干货。每一条都说明了为什么最好这样，Java进阶必备，目前为止看过这本书评价最好的一本。<br><a href="http://book.douban.com/subject/3360807/">http://book.douban.com/subject/3360807/</a>  </p>
<p>App研发录<br>从App架构的角度，重点总结了Android应用开发中常见的实用技巧和疑难问题解决方法，为打造高质量App提供有价值的实践指导，避免你在实际项目中踩坑，读完绝对有收获。<br><a href="http://book.douban.com/subject/26649050/">http://book.douban.com/subject/26649050/</a>  </p>
<p>Android开发艺术探索<br>这是一本Android进阶类书籍，采用理论、源码和实践相结合的方式来阐述高水准的Android应用开发要点，Android开发进阶值得拥有。<br><a href="http://book.douban.com/subject/26599538/">http://book.douban.com/subject/26599538/</a>  </p>
<p>AndroidUI设计  </p>
<p>Material Design<br>在开发一款Android App之前，你需要了解下Android平台的设计规范，这里有Google最新推出的Material Design中文翻译版。<br><a href="http://t.cn/RLrJg33">http://t.cn/RLrJg33</a>  </p>
<p>而且 Google 官方出了一个支持库 Android Design Support Library，具体用法见链接。<br><a href="http://t.cn/R2orZH9">http://t.cn/R2orZH9</a>  </p>
<p>Sketch 3<br>这个工具只推荐给对UI感兴趣的开发者，这是一个专为设计移动端 UI 的设计工具，作为开发者，不用懂那么复杂的 PS 使用，也可以做非常专业设计。<br><a href="https://designcode.io/sketch">https://designcode.io/sketch</a>  </p>
<p>AndroidApp源码推荐  </p>
<p>当你已经做Android开发一段时间，并苦于进入瓶颈，这个时候阅读一些优秀App的源码是最好的学习进阶方式，借鉴一些优秀App源码的设计能获益很大。  </p>
<p>iosched<br>iosched项目是Google I/O的官方app，绝佳的学习项目。<br><a href="https://github.com/google/iosched">https://github.com/google/iosched</a>  </p>
<p>android-UniversalMusicPlayer<br>也是Google官方作品，代码量不大、注释清晰，简单但全功能的音乐播放器。<br><a href="https://github.com/googlesamples/android-UniversalMusicPlayer">https://github.com/googlesamples/android-UniversalMusicPlayer</a>  </p>
<p>android-topeka<br>这个项目是Google前段时间刚发出来，通过这个app，你还可以学到如何设计你app的交互和视觉以更好的和MaterialDesign搭配。<br><a href="https://github.com/googlesamples/android-topeka">https://github.com/googlesamples/android-topeka</a>  </p>
<p>Google的项目有些时候对于初学者有点困难，下面就推荐两个完整的轻量的学习项目。  </p>
<p>9GAG<br>9GAG是我个人的开源练习项目，教你使用Studio、Gradle以及一些流行的开源库快速开发一个不错的Android客户端。<br><a href="https://github.com/stormzhang/9GAG">https://github.com/stormzhang/9GAG</a>  </p>
<p>AnimeTaste<br>代码家开源的一个线上关注动画的一个App，同样适合初学者学习。<br><a href="https://github.com/daimajia/AnimeTaste">https://github.com/daimajia/AnimeTaste</a>  </p>
<p>Android新技术  </p>
<p>你需要了解Android有以下新兴的技术与框架，有些也许还不成熟，但是你应该去了解下，也许就是未来的方向。  </p>
<p>Kotlin<br>作为 Android 领域的 Swift，绝对让你如沐新风。抛弃沉重的 Java 语法，Kotlin 融入了很多现代编程语言的思想，作为开发者，接受新的语言，了解新语言的发展趋势，更有利于开阔你的思路和加深对语言的理解。<br><a href="http://t.cn/R2DK0SL">http://t.cn/R2DK0SL</a>  </p>
<p>React Native<br>Facebook推出的针对移动应用的跨平台解决方案，目前还不成熟，但是由于Facebook推出，光环效应引起不少目光，这是不是未来暂且还没结论，但是有必要了解学习下。<br><a href="http://t.cn/RbHmtOk">http://t.cn/RbHmtOk</a>  </p>
<p>MVP<br>MVP越来越多的被Android社区所讨论，有点是能够让代码更清晰，但同时也会增加很多类，写起来更麻烦，不过对于一些不是很庞大的项目却是非常适合的。这里提供一个最先采用MVP模式的开源项目：<br><a href="https://github.com/pedrovgs/EffectiveAndroidUI">https://github.com/pedrovgs/EffectiveAndroidUI</a>  </p>
<p>MVVM<br>因为官方支持 DataBinding，把 MVVM 直接带到 Android 中。它非常高效的开发效率，让你只关心你的数据和业务，从此数据绑定会更加常见。<br><a href="http://t.cn/RbHmnhE">http://t.cn/RbHmnhE</a>  </p>
<p>插件化<br>一般App上线之后出现bug需要重新提交新版本才能解决，这个就太慢了，由于iOS的审核原因，插件化在iOS开发常见，阿里业务方面这个特别需要，比如双十一出了bug，不能眼睁睁的看着bug出现不管吧，所以阿里系衍生出了一系列热修复的框架，dexposed、AndFix，具体可以见这里详解。<br><a href="http://lirenlong.github.io/hotfix/">http://lirenlong.github.io/hotfix/</a>  </p>
<p>RxJava<br>最近响应式编程框架RxJava越来越受大家待见，RxJava让你异步任务更简洁方便，以我对技术的敏感性认为RxJava可能会越来越普遍，推荐大家学习。这里有一系列详细的资料教你学习。<br><a href="https://github.com/lzyzsd/Awesome-RxJava">https://github.com/lzyzsd/Awesome-RxJava</a>  </p>
<p>当你下定决心，准备前行的时候，剩下的只有坚持了！</p>
]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>Android编程</tag>
      </tags>
  </entry>
  <entry>
    <title>妈妈，我爱你。</title>
    <url>/402/</url>
    <content><![CDATA[<p>#母亲节你必须知道的事#也许视频里的这一切，她不说，你永远不知道???</p>
<p>恩，这就是我们来到世上的门票。祝全天下的妈妈们，母亲节快乐、！永远健健康康，开开心心过好每一天。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>存心.</title>
    <url>/736/</url>
    <content><![CDATA[<p>带上耳机..</p>
<p>迎着这有点干燥的秋风…</p>
<p>渐渐地喜欢独自一人带着这疲惫的身躯…</p>
<p>逛着只剩2个月的校园…</p>
<p>感叹着时间的匆匆…</p>
<p>回忆着过去的往事…</p>
<p>而我的身影也会越来越消极?</p>
<hr>
<p>人生应该就像一段编程…</p>
<p>因为不同的人生经历…</p>
<p>程序也会存在各种的bug…</p>
<p>需要我们不断优化自身算法、除去身边的bug、不断添加函数的过程…</p>
<p>我们刚出生那一刻，上天只给了我们一个程序的入口—-主函数(人生的类)</p>
<p>同时为我们定义了两个自带的方法一个是哭()，以及一个是活着()</p>
<p>而有的人却因为缺少程序入口而夭折…</p>
<p>小时候我们不断的使用哭这一方法，返回值却是js的var型或是php的$</p>
<p>因为我们的哭，会给我们带来各种各样的结果，每个结果，都会对我们产生不同的影响。</p>
<p>每个人都有自己的生活轨迹，每个人，也都有自己独特的方。</p>
<p>有时候，我们会去ctrl+c别人的生活方式，再 ctrl+v 到自己的主体中来，却发现，在别人那运行好好的代码，来到自己身上却存在n个bug…</p>
<p>也难怪，对象都不同，变量又怎么能通用呢</p>
<p>我们不断往自己的主体中添加各种各样的方法，却从不管自身的稳定性。</p>
<p>有时候，并不是知道越多越好</p>
<p>相反，拥有得越少，人生运行得反而更快</p>
<p>因为程序存在这很多种分支，正如人生有很多十字路口…</p>
<p>小学时 if（you are clever）{获得老师赞赏，同学亲近}else{缺少朋友}</p>
<p>高考时刻 ?if（得到好的成绩）{上大学} else{去打工}</p>
<p>当然了，并不是说就一定去打工，只不过这里讨论的是大多数而已</p>
<p>时间一年一年流逝，程序一行一行执行，期间必然会遇到各种各样的问题…</p>
<p>有的人，走偏了，还能回来，而有的人，却进入了个无限递归的死循环</p>
<p>最终以爆栈结束了整个程序，也结束了整个人生。</p>
<p>每个人都有自己的计划，人们用广搜决定了自己的人生，再用深搜去过着每一天</p>
<p>但并不是每个人都是算法高手，有的人深搜能回来，有的人却没能定义好自己的回溯条件。</p>
<p>生活就像boolean，并每道题都能一个true/false的结果，如果返回了false对你的人生也并不是一件坏事。</p>
<p>面对考试，我们为自己定义了一系列封装好的类，里面有考试作弊技巧，或者是自己的所有复习知识点等等，遇到考试时，便直接调用</p>
<p>遇到面试，我们已将面试官要问的各种问题都AI式的准备好了关键词自动回答</p>
<p>我们生活的每一天，仿佛都是在for循环过一天()这样的方法而已，日服一日，年复一年，永远不知道循环什么时候结束，也永远不知道程序什么时候崩溃。</p>
<p>大部分人都认为程序员很难找到对象，却不知道我们每天都得花十几个小时在某个对象身上，毕竟自己new出来的对象，跪着也要把bug找出来</p>
<p>我们就这样一直生活着，直到某一天我们遇到了另一段程序，彼此间互相调用其内部的方法，不分彼此。</p>
<p>为对方提供着自己的interface，但并不是每个interface都是稳定的，或许她会看上别的object，最终离你而去。</p>
<p>并不是每个函数都会抛出exception，也并不是你的每一个决定都会有人提示你是好是坏</p>
<p>最终的结果，也只有你最后执行junit中的@Test方法，实行了单元测试后你才会知道结果是否报错</p>
<p>我们人生不断的运行着，好似每天的任务都规定死了…</p>
<p>学生就是:吃饭，睡觉，学习…</p>
<p>工作者就是:吃饭,睡觉，工作…</p>
<p>吃饭和睡觉这两大方法，我们从我们祖先那继承得倒是挺不错的</p>
<p>不仅仅继承了，还扩展了各式各样的吃法，以及各式各样的睡法。</p>
<p>有少部分人想要强行hack别人的主体，于是乎，便衍生了犯罪</p>
<p>人人都想自己的程序稳定运行，因为这个程序，只有你自己才能好好调试，别人的代码，永远只是适合来参考</p>
<p>我们的吃喝拉撒都是循环着进行的</p>
<p>若某天的突发状况，不正是中断处理程序吗?</p>
<p>有时候，同一时间段，你会进行着各式各样的工作，多个线程的运行，会让你不堪重负，你想删掉其中某个</p>
<p>却发现它们之间有着千丝万缕的关系</p>
<p>但你却不知道，有时候放弃，也是一直用收获。</p>
<p>自己的程序是由自己一步一歩调试运维而来的</p>
<p>自己设计的算法，需要自己的不断剪枝与修改来完善的</p>
<p>适当的回溯，才不会让你陷入死循环，重新回到自己的主体，做回自己。</p>
<p>随着时间的推移，我们越来越少的调用哭泣这一方法</p>
<p>更多的，我们擅长于伪装，谎言，以及猜测</p>
<p>这也许也是人生多姿多彩的地方吧</p>
<p>若人生只是一段程序，我们应该写出自己的curd</p>
<p>若人生只是一段程序，我们更应该自己完善好自己</p>
<p>若人生只是一段程序，我们则要时时警醒自己，防止病毒的入侵，以及深搜的无止境…<img src="http://qn.199604.com/typoraImg/you3.jpg"><img src="http://qn.199604.com/typoraImg/work56.jpg"> </p>
<p>文章修改于人生就像是一段程序</p>
<hr>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>定义Java的方法-回顾</title>
    <url>/934/</url>
    <content><![CDATA[<p>如何定义自己创建的Java方法，这个应该是基础的基础。但是还是复习一下吧。</p>
<p>所谓方法，就是用来解决一类问题的代码的，是一个功能模块。</p>
<p>一般情况下，定义一个方法的语法是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">访问修饰符 返回类型 方法名称([参数类型 变量, ......]) &#123;</span><br><span class="line">    方法体代码;</span><br><span class="line">    [return [返回值];]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中：</p>
<ul>
<li>访问修饰符：方法允许被访问的权限范围， 可以是 public、protected、private 甚至可以省略 ，其中 public 表示该方法可以被其他任何代码调用，protected可同一个包里的子类中被调用，而private 只能在本类被调用。</li>
<li>返回类型：方法返回值的类型，如果方法不返回任何值，则返回值类型指定为 void ；如果方法具有返回值，则需要指定返回值的类型，并且在方法体中使用 return 语句返回值。</li>
<li>方法名：定义的方法的名字，必须使用合法的标识符。</li>
<li>参数：传递给方法的参数列表，参数可以有多个，多个参数间以逗号隔开，每个参数由参数类型和参数名组成，以空格隔开 。</li>
</ul>
<p>根据方法是否带参、是否带返回值，可将方法分为四类：</p>
<ul>
<li>无参无返回值方法</li>
<li>无参带返回值方法</li>
<li>带参无返回值方法</li>
<li>带参带返回值方法</li>
</ul>
<h2 id="范例：定义一个无返回值，无参数的方法"><a href="#范例：定义一个无返回值，无参数的方法" class="headerlink" title="范例：定义一个无返回值，无参数的方法"></a>范例：定义一个无返回值，无参数的方法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class testDemo &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		testDemo demo = new testDemo();</span><br><span class="line">		demo.say();</span><br><span class="line">	&#125;</span><br><span class="line">	//定义的方法</span><br><span class="line">	public void say()&#123;</span><br><span class="line">		System.out.println(&quot;say.....&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="范例：定义一个无返回值，有参数的方法"><a href="#范例：定义一个无返回值，有参数的方法" class="headerlink" title="范例：定义一个无返回值，有参数的方法"></a>范例：定义一个无返回值，有参数的方法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class testDemo &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		testDemo demo = new testDemo();</span><br><span class="line">		demo.say(&quot;say.....&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	//定义的方法</span><br><span class="line">	public void say(String say)&#123;</span><br><span class="line">		System.out.println(say);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="范例：定义一个有返回值，有参数的方法"><a href="#范例：定义一个有返回值，有参数的方法" class="headerlink" title="范例：定义一个有返回值，有参数的方法"></a>范例：定义一个有返回值，有参数的方法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class testDemo &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		testDemo demo = new testDemo();</span><br><span class="line">		String say = demo.say(&quot;say....&quot;);</span><br><span class="line">		System.out.println(say);</span><br><span class="line">	&#125;</span><br><span class="line">	//定义的方法</span><br><span class="line">	public String say(String say)&#123;</span><br><span class="line">		return say;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意，不容忽视的“小陷阱”：</p>
<p>1.当方法的返回类型为 void ，则方法中不能使用 return 返回值，不然会引起报错提示。</p>
<p>2.方法的返回值最多只能有一个，不能返回多个值，不然会引起报错提示。</p>
<p>\3. 方法返回值的类型必须兼容，例如，如果返回值类型为 int ，则不能返回 String 型值。</p>
<p>4.调用带参方法时，必须保证实参的数量、类型、顺序与形参一一对应。</p>
<p>5.方法的参数可以是基本数据类型，如 int、double 等，也可以是引用数据类型，如 String、数组等。</p>
<p>6.当方法参数有多个时，多个参数间以逗号分隔。</p>
<h2 id="Java-中方法的重载"><a href="#Java-中方法的重载" class="headerlink" title="Java 中方法的重载"></a>Java 中方法的重载</h2><p>什么是方法的重载？</p>
<p>如果同一个类中包含了两个或两个以上方法名相同、方法参数的个数、顺序或类型不同的方法，则称为方法的重载，也可称该方法被重载了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class testDemo &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	//无参数</span><br><span class="line">	public void say()&#123;</span><br><span class="line">		System.out.println(&quot;test&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	//一个参数</span><br><span class="line">	public void say(String say)&#123;</span><br><span class="line">		System.out.println(say);</span><br><span class="line">	&#125;</span><br><span class="line">	//两个参数</span><br><span class="line">	public void say(String say,int age)&#123;</span><br><span class="line">		System.out.println(say);</span><br><span class="line">	&#125;</span><br><span class="line">	//参数位置不一样</span><br><span class="line">	public void say(int age,String say)&#123;</span><br><span class="line">		System.out.println(say);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="判断方法重载的依据："><a href="#判断方法重载的依据：" class="headerlink" title="判断方法重载的依据："></a>判断方法重载的依据：</h2><ul>
<li>必须是在同一个类中</li>
<li>方法名相同</li>
<li>方法参数的个数、顺序或类型不同</li>
<li>与方法的修饰符或返回值没有关系</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>实习记录1吧</title>
    <url>/891/</url>
    <content><![CDATA[<p>今天是2018-3-16号了.. 出来实习工作也53天了. 其中天天8点后走占了40天左右了，这个月也天天加班了吧 渐渐的从不会使用echarts,到现在天天和它打交道 昨天去yi动那边开会，已经知道一定有新需求的 但是我听到这个需求我就知道这他妈的是什么需求 简直就是从新开发一个新接口，新查询功能吧 当时让我接手这个系统的时候自己很懵逼，一位同事告诉我 这个系统已经很多人接过手了嗯。说明公司流通性挺高的… 让我一个实习生去充当有贼几把多经验的工程师，人家看不出来？ 人家回复邮件还叫我郭工郭工..emmmm其实我只想说我只是一位实习生，有可能很快就跑的那种….</p>
<hr>
<p>每每踏进公司大楼就有那么一丝的恐惧 今天下午开会，组长和总监说我上一个需求开发，开发时间用了3-4天。 可能在你们眼里，你们有经验会套路开发出来很快…嗯很快.可是在我眼里，没有接触过需要学习需要去理解前辈之前写的代码，再根据需求去改去实现，我知道我不能用实习生这个东西来当挡箭牌,但是希望别2-3个系统或者几个需求直接扔过来…嗯 好吧，希望自己坚持梦想吧,虽然梦想很美好，现实真的很残酷. <img src="http://qn.199604.com/typoraImg/20180316220252.jpg"> 嗯明天又要义务加班了，记录一下吧，加油郭良俊..</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>家和万事兴</title>
    <url>/394/</url>
    <content><![CDATA[<p>每个人的家都不想每天吵吵架的都想心平气和的说说话恩。</p>
<p>昨晚我们家爸妈都吵架了吵了很久很久！</p>
<p>我劝架了，但是没用每次吵架我心里都很难受、或许比我难受的还有爸和妈。可能我爸是集聚了很多年的心里话都说出来了我昨晚不帮谁。无论是对与错我只想我能平平淡淡的过着知足就好了不是吗？</p>
<p>对！妈，或许我们回到家里都是在玩手机玩电脑做作业没有和你说过什么话说你烦但是我叫你看电视剧不要看怎么晚其实是为了你好。你40多岁了我觉得是应该10点过后就要睡觉因为你年纪已经很大了不要一两点才睡觉然后早上又要7点起来上班不够睡眠很影响身体不是吗？</p>
<p>恩。爸或许你是把你心里的话都发泄出来了是的你说了妈妈把钱都拿去买保险了。你自己省下的钱就没。或许你以为是但是钱是可以拿回来的老妈也是为了你好为了我们全家好全家健康恩。</p>
<p>我不是说些什么了。。。。。。。。。。。。。。。。。。。。。。。。。。。。</p>
<p>我不想再提及什么了，我只想平平静静的过知足就好人生就是这样Z</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>对不起。</title>
    <url>/9/</url>
    <content><![CDATA[<p>对不起,对是我不对好没,我是一个不懂的安慰人的SB、一个不会去理解别人需要什么的大傻X</p>
<p>不会给你一些小温暖一些宠你的眼神。</p>
<p>我每次都给你希望,到头来就是失望行了没有。</p>
<p>你就认为所有的错都是我的错吧。</p>
<p>希望大家珍惜对方，女孩要经常理解点男孩，不要只顾自己。男孩不要把所有事都埋在心里要和对方一起分享。有困难一起解决。不要埋在心里，这就是我们的问题吧。</p>
<p>哦，现在我能说什么。哦，我该怎么办。</p>
<p>因为自己的任性、倔强、偏执伤害了我们好了没。亲爱的，对不起！因为让你在期待中一次次的失落。对不起！因为曾经为了别人埋怨你哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈对不起。你生气完了就给我电话吧。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>尼玛的P2P终结者</title>
    <url>/334/</url>
    <content><![CDATA[<p>提起P2P终结者这款软件，或许大家都晓得它可以用来管理局域网的网络限制他人网速的软件。尼玛!我姐也会这套了!!怪不得我经常断网。</p>
<p>哈哈。所以我也在百度找到了那个防范方法。</p>
<p>-———————————————————</p>
<p>其实想要防范他人故意在局域网限制网速的情况，不用arp防火墙照样也可以做到。尤其像终结者仅是对主机单向进行“欺骗”，所以我们只要静态绑定arp记录表就能防御。方法是打开cmd命令行窗口，执行 arp -s 网关ip 网关MAC，示例：arp -s 192.168.1.100 00-a9-00-6f-c0-09 </p>
<p>-————————————————————-</p>
<p>好了,姐对不起了,你不限网速我也不会这样。呵呵呵呵。</p>
<p>好了,头好疼。就写到这里吧。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>学校的比赛。</title>
    <url>/462/</url>
    <content><![CDATA[<p><a href="http://199604.com/content/uploadfile/201512/98221450499161.png"><img src="http://199604.com/content/uploadfile/201512/98221450499161.png" alt="QQ图片20151219122511.png" title="点击查看原图"></a></p>
<p> 如图所示，求大师们教我如何快速利用搜索引擎搜索。</p>
<p> 在机房只能用百度。还不能翻墙日了狗！</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>比赛</tag>
      </tags>
  </entry>
  <entry>
    <title>年初二</title>
    <url>/384/</url>
    <content><![CDATA[<p>过年的气息在每张洋溢着幸福的脸上都弥漫着。哦，过年了，过年了！新的一年在喜庆的灯笼中走来了，在阵阵鞭炮声中走来，在欢声笑语锣鼓齐天中走来。</p>
<p>男女老少都出来玩耍，耀眼的红色沾得一身喜气。街上人山人海，电影院里车水马龙的排队等着买票子看电影，而我呢幸运的看着他们排队买票因为哥已经早早在网上买了年初一的电影票。而过年，是孩子们心中的向往。满桌的零食，满屋子的弟弟妹妹，还有长辈们那包含着关心与温暖的压岁钱。我一边看电视，一边收着满满的利是，感慨道：“要是天天过年就好了！”哇哈哈哈。</p>
<p>但是要陪着老妈子到处去送礼。这可能是中国的习俗吧到处跑亲戚，新年礼物也是在朋友之间是必不可少的，所谓“送去一份礼物，捎去一份心意”嘛。这句话我老妈仔常说！！！</p>
<p>好了我又准备去跑亲戚去了继续收利是虽然少但是也是一番心意吧（ps：其实好过没有吧）</p>
<p>最后献上一首喜庆的歌曲。你们懂得、恭喜发财红包拿来。！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>新年快乐</tag>
      </tags>
  </entry>
  <entry>
    <title>年纪已不小</title>
    <url>/901/</url>
    <content><![CDATA[<p>今天是2018年04月22日 22岁过了2天了,很幸运在周五的时候领导找我谈话…对的,不知不觉三个月过去了。 谢谢这三个月里自己的努力,虽然还是有很多不懂,虽然需求还是做得很慢,虽然技术还是很渣… 但庆幸的是,我能顺利转正,可以拿5k的工资,至少不用再问父母拿钱,还能拿几百块给父母。 我知道在广州生活,5K只是那么的一点点… emmmm好了.一个记录吧..第一次从实习转正有点小激动 <img src="http://qn.199604.com/typoraImg/199604.com_2018-04-22_13-56-20.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>年轻人能为世界做什么</title>
    <url>/470/</url>
    <content><![CDATA[<p>    今天下午看了一个小视频，就超级演说家的演讲的《年轻人能为世界做什么》 是刘媛媛的演讲稿。在这片演讲稿中，年轻人能为世界做什么激情澎湃的阐述了90后的国家责任和人生意义之间的宏观关系。</p>
<p>    接下来是她的演讲稿：</p>
<p>    我是一名法学院的学生，我的每一门课的教授都曾经在他的课堂上讲过这么一句话，他们常常“说法律是这么规定的，但是现实生活中??”现实生活是一种很神奇的生活，在现实生活中那些尊重规则的老实人往往一辈子都默默无闻，反倒是那些弄虚作假的人到最后会名利双收，于是乎像我这样的年轻人就经常有那些看着很有经验的前辈过来拍拍你的肩膀跟你说“年轻人你还不懂。”我想问的是我们年轻人你能为这个世界做什么，总有一天银行行长会是九零后，企业家会是九零后，甚至国家主席都会是九零后，当全社会都被九零后占领的时候，我想问你们九零后们，大家想把这个社会变成什么样。 <br>    我知道不是每一个人他都能够成为那种站在风口浪尖上去把握国家命运的人物，你我都是再普通不过的升斗小民，是这个庞大的社会机器上一颗小小的螺丝钉，读书的时候每天都被父母耳提面命说你干啥你都不要给我耽误学习；毕业的时候到处投简历，凄凄惶惶的等一家企业收留自己；逢年过节被逼婚，结婚买了房子要花自己年轻的时候的最好的二十年来偿还贷款，让每一个年轻人都忙着生存，而没有梦想，没有时间关心政治，没有时间关心环境，没有时间关心国家的命运，还哪有什么精力去为这社会做什么，但是后来我发现还是有一件事情你跟我都可以做到，这件事情就是我们这一代人在我们老去的路上，一定一定不要变坏，不要变成你年轻的时候最痛恨、最厌恶的那种成年人。如果将来你去路边摆摊，你就不要卖地沟油小吃，你不要缺斤短两；你将来开了工厂当了老板，你不要偷工减料，生产一些次品。每一个普通人他在自己普通的岗位上做一个好人是有非常非常严重的意义的，因为我们每一个人生下来都注定会改变世界。 <br>    我是一个学法律的，如果我将来是一个公正严明的法官，那么这个社会就因为多了一个好法官而变好了一点点，我希望大家都记住即使给了你十万个理由让你去作恶，你都要保持自己的操守跟底线，仅仅就因为一个理由，这个理由就是你不是一个禽兽，你是一个人。我更希望我们所有的九零后们，你们都能成为那种难能可贵的年轻人，一辈子都嫉恶如仇，绝不随波逐流，你绝不摧眉折腰，你绝不摧眉折腰，你绝不放弃自己的原则，你绝不绝不绝不失望于人性。所以我亲爱的九零后们，如果将来再是有那些人跟你说“年轻人你不要看不惯，你要适应这个社会。”这时候你就应该像一个真正的勇士一样直面他，你告诉他“我跟你不一样，我不是来适应社会的，我是来改变社会的。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>年轻人</tag>
      </tags>
  </entry>
  <entry>
    <title>广州联通-58元抵消-100M宽带</title>
    <url>/1611/</url>
    <content><![CDATA[<p>最新<del>如果在广州有选择。可以选择其他运营商，在三化地区的联通资源还是算了，我也受够了</del>因为广州三化地区的线路都不是联通自己的。而是承包商<del>服务差、易断网、师傅上门还要收手续费，最主要三化地区联通的承包商你打10010打多了还给你降速</del>行了只能说那么多<del>如果是联通自有资源 安装费和光猫都不会超过300，超出的基本上是三化承包商贼鸡巴恶心。我也找不到相关资费说明在广东联通官网。如果找不到你其实可以扛。看你时间</del></p>
<p>可以看我这个：： <a href="https://199604.com/1622">https://199604.com/1622</a></p>
<hr>
<p>近搬了狗窝~想了下之前给长城这逼弄得我天天心情不好。于是这次直接点自己拉一条网线吧</p>
<p>ps：广州荔湾这边的联通你拉网，基本上安装费+光猫费一共要399，新装不能自备光猫(保修还自有半年–客服说是一年等有时间我需要扛一下客服)，别问为啥，问就是给别第三方公司承包了，你爱装不装，如果要迁移。也要200迁移费，别问为什么，问也是第三方(三线工程–你懂得)。至于为啥要撸联通不撸移动？问？联通的出国流量比电信移动好多了在广州，不信你高峰期试下移动的出国?电信的话最近原因就不说了…~</p>
<h5 id="前提："><a href="#前提：" class="headerlink" title="前提："></a>前提：</h5><p>我的套餐：沃派6.0-月租39，实际是39-20=19(20是之前活动充值50送960)可以撸4年，每个月20G+流量+60分钟通话.</p>
<p>现在办理了58元/月抵消：58-39=19(20赠款算入抵消里面)，所以实际我只需要每个月19元—&gt;现在解决办法是在联通“话费购”回血，基本上这是每个月话8-10块钱(话费购–充值10元话费需要16元)</p>
<p>然后安装+光猫费–&gt;399RMB,这里我安装一年的时间，因为我现在租的地方也是一年合同。因此399/12=33.25元，实际上如果是家庭长期的话，这个就越长越划算了….</p>
<p>最后算下实际了一个月宽带花销：10+33.25=43.25&lt;50（房东垃圾长城宽带月租）</p>
<p>ps：如果想升级200M，需要到联通自有营业厅，带上身份证和本人过去问才能办理，+10块钱可以升级到300M。如果不行，那就说明你不够帅，也别打10010客服电话，没用的。</p>
<p>好了，记录一下这次撸联通-58元抵消送100M宽带的过程：</p>
<p>1.首先联通10010-宽带人工客服</p>
<p>2.说明要开通每月58元抵消送宽带业务</p>
<p>3.告诉客服现住地址</p>
<p>4.等待地方营业厅客服经理回电</p>
<p>成功既有师傅上门安装，那你就准备好你的399RMB吧~</p>
<p>如果想升200M，就去营业厅扯皮一间不行到另外一间，现在天河+南沙的有扯皮成功(8月份)，我自己没去扯，因为我100M够两个傻逼用了。如果不能免费升级200M，说价钱(加10元)升级300m，那就要看你自己觉得是否划算了。好了我要去找客服扯皮了。88<img src="http://qn.199604.com/typoraImg/image-20200823171334554.png" alt="image-20200823171334554"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>宽带</tag>
        <tag>联通</tag>
      </tags>
  </entry>
  <entry>
    <title>广州联通(三化地区)折腾光猫超密</title>
    <url>/1622/</url>
    <content><![CDATA[<p><a href="https://199604.com/1611">https://199604.com/1611</a> 可以看这篇喔</p>
<hr>
<p>事情是这样哒<del>我这边是广州荔湾区西某城中村(三化地区)。 然后遇到下雨刮大风基本上都会断网</del> 投诉几次，客服师傅都让我等<del>于是乎这次我顺着这个口让他把超密给我</del>我说我要做路由桥接<del>然后师傅这边就说上门调试要收三十块上门费。 因此，建议大家如果是广州三化地区的还是不要拉联通的。安装费200，光猫199(强制买)。 经过10010投诉</del>今天师父打电话给我了<del>但是我已经不需要了，反正这个仇我记住了。以后有的机会搞这边的师父。我光猫还在保修期能还敢这样收我钱</del>是不是每次故障让师傅过来都要收我上门费?</p>
<hr>
<p>经过N多方式，找到了光猫路由器的管理密码： 光猫型号：贝尔的wo-27s 广东联通光猫超级密码，管理地址：192.168.1.1/cu.html 帐号CUAdmin 超级密码cuadmin+MAC地址前六位（有大写字母改小写） 不知道是不是全省的贝尔的wo-27s型号的光猫密码都这样。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>宽带</tag>
        <tag>联通</tag>
      </tags>
  </entry>
  <entry>
    <title>开学周</title>
    <url>/255/</url>
    <content><![CDATA[<p>后天，就要开学啦！二十多天，弹指一挥间，我左思右想的：寒假，我要跟你说Bye Bye！</p>
<p>在寒假里，有多么多的欢乐与忧愁啊，我们一起打球，过年放鞭炮、捱夜上网、看电影……这些事，都令我难以忘怀。</p>
<p>其实我这放假前都制定要学什么。但是又把那个计划抛之脑后、每次放假都是这样真心不懂自己怎么活到现在的。</p>
<p>数数手指头时间久已过没有了。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>开学季</title>
    <url>/264/</url>
    <content><![CDATA[<p>新学期，给自己定一个小目标吧-</p>
<hr>
<p><img src="http://qn.199604.com/typoraImg/20170220220744-1024x453.jpg" alt="20170220220744"></p>
<p>先开个小目标就不逃课吧</p>
<p>▼</p>
<p>再每天锻炼-练出胸肌哈哈哈</p>
<p>▼</p>
<p>然后准备实习的地方？</p>
<p>▼</p>
<p>我努力做好每一个课题</p>
<p>▼</p>
<p>毕竟再过几个月也差不多21了吧</p>
<p>▼</p>
<p>该成熟了-</p>
<p>▼</p>
<p>嗯哼 挺快的-也该到了结婚的年龄了</p>
<p>……</p>
<p><img src="http://qn.199604.com/typoraImg/270449871482436442-576x1024.jpg" alt="270449871482436442"></p>
<p><strong>要来就来真的</strong></p>
<p>其实</p>
<p>小目标坚持下去</p>
<p>就是大成就</p>
<p>路在脚下</p>
<p>梦在心中</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>开学季</tag>
      </tags>
  </entry>
  <entry>
    <title>开罗游戏</title>
    <url>/441/</url>
    <content><![CDATA[<p>  开罗游戏公司致力于开发各种像素类模拟经营游戏，但是我更喜欢称它为马赛克公司，因为该公司的游戏画面，都是以大锯齿，类似小方块的图形出现。虽然该公司的游戏画面不追求，但该公司的游戏是非常的受欢迎的。我也玩了好几年了！</p>
<p>  下面我就弄了一些破解版的游戏，对于刚刚开始玩的你们也好研究哈哈哈哈哈哈哈哈哈哈哈哈哈。</p>
<p>  特别提醒这是破解版，如果你们鄙视我，我也没有办法，我就是一个?丝。</p>
<p>  如亲们喜欢正版可以到百度一下搜谢谢合作。</p>
<p>  下面是百度云的下载地址：<a href="http://199604.com/yy/">http://pan.baidu.com/s/1pJl4cxd</a></p>
<p>  密码：st8x</p>
]]></content>
      <categories>
        <category>分享资讯</category>
      </categories>
      <tags>
        <tag>开罗</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>很感动</title>
    <url>/377/</url>
    <content><![CDATA[<p>恩先去洗澡先。今天遇到了快递叔叔很专业使我我很感动。</p>
<p>其实我真的不知道去那里写表扬信,然后就试试在自己的博客写下这个表扬信。</p>
<p>我要感谢清远太平韵达快递叔叔王师傅.他手机号码是15016696016.因为我的快递昨晚就到了。到了下午我不赖烦，然后就给韵达快递打电话问为什么还不发件。然后他是已经在快递员手里、如果6点还没有到就来找他。</p>
<p>果真快递没有到。我就去找他。王师傅很认真，让我坐着他给上面打电话又给快递员打电话，很负责。真的应了韵达快递的口号：通过安全、快捷的服务，传爱心、送温暖、更便利。这使我很感动！！！</p>
<p>其实做快递这行是很辛苦的。中午派件不知道饭吃了我只看到你车上都是一些水和一些小面包或者他们中午也是这样一顿饭吧。</p>
<p>所以王师傅的工作态度让我们肃然起敬。最后祝全国的快递叔叔们能过上一个开心的春节开心每一天。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>心扉</title>
    <url>/353/</url>
    <content><![CDATA[<p>唉唉唉……高中本来就睡得少了。今天还要给宿舍的机油们吵醒了，JJYY的叫，叫我怎么睡下去，老天真的要我今天变一只大大的国宝了吧。</p>
<p>放学回家。虽然家里离学校不是很远，20分钟就到了，在车站下车，路边有很多那些摆摊的走鬼。看了看时间，才12点。因为星期六11点半才放假。</p>
<p>不禁的叹了口气，我只能说生活不容易呀，或者更不易。</p>
<p>出来摆摊的都是大叔大婶、他们大概都下岗了吧。为了自己的家庭自己的孩子他们不得不贪早摸黑、日晒雨淋。还有要整天提心吊胆，提防着城管到来找小贩。虽然清远不像西安那样!!!!</p>
<p>我就不禁想起我的父母，他们为了找工作四处奔波。皱眉都多了很多很多。白发也来访问他们了，年假又黑又瘦，为什么会这样呢？我自己心里很清楚，他们还不是为了我。为了让我的生活可以很好很好。还有让我读书不要想他们那样!!!!</p>
<p>想起母亲节那天，我对母亲的不理不睬，蛮内疚的。不知道为什么，看见她我就很生气，也不知道气什么，就像一个小孩子一样。</p>
<p>好了明天就父亲节了。希望老爸能健健康康,嗯哈</p>
<p>但愿自己以后可以控制自己的情绪，和老爸老妈好好相处!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>心灰意冷。</title>
    <url>/360/</url>
    <content><![CDATA[<p>早已过了童真和幼稚的年代，不该再有迷惑和无知的思想，总在意外中不停的伤害，没有方向和理想，做个判逆或冷血的少年，给人生留下悔恨，让青春负重伤疤，不要让自己快乐，给自己一些绝望或许不再悲伤。</p>
<p>有时候我总告诉自己失去有什么不好，一个人了无牵挂，不会再那么落寞，可是心里再怎么也放不下，总会思念。就像风一样走过不再留念，不是我不够洒脱，只有记忆里才懂得那种独特。</p>
<p>什么是真什么是假，自己的心最清楚。就像一些人需要你的时候就会努力留着，对的或许我也该离开不对吗？呵呵呵也许也许有这么的一天我也会想起很多事情就像今天自己在江边慢慢的踩着单车、自己一个人去看电影。现在微笑比什么都重要，微笑着掩饰心里的痛，微笑着蒙住我的双眼把我遗忘在那角落。哈哈哈哈哈哈哈哈!</p>
<p>be disheartened to me !!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>怀恋那个勇敢十七岁的自己</title>
    <url>/463/</url>
    <content><![CDATA[<p>    怀念那个勇敢十七岁的自己，十七岁是青春洋溢的年轮，更是情窦初开的时节。距离成年一步之遥的Boys and Girls，往往会在此时迎来初恋。这懵懵懂懂的初恋单纯而无邪，即便分离难免，却是稍纵即逝的美好、微小而确实的幸福，那个他或她成为生命里永不凋谢的回忆。</p>
<p>    我怀念我穿过的并不时尚的天蓝校服，骂过全班都会骂的老师，考过这辈子最讨厌的试。牵过最爱人的手。吻过最甜的唇。我记得我们一起坐过得位。一起压过的操场。一起度过的下雨的夜。所有的我都记得。而只是记得。今天我站在一个陌生的城市，而她却在备战高考，我只是怀念，怀念能和你在一起的日子@炸鸡 </p>
<p>   Merry Christmas, my dear @炸鸡</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>那个勇敢十七岁的自己</tag>
      </tags>
  </entry>
  <entry>
    <title>感谢你这一生遇到的五个人</title>
    <url>/434/</url>
    <content><![CDATA[<p> 1、世界上有一个人，和你在一起的时候，总是千万次嘱咐要多穿件衣服，要注意安全，你觉得很烦人，却也觉得很温暖。没钱的时候，他总会说些赚钱不易之类的话来训你，边教训，边塞钱给你。这个人，叫做父母。</p>
<p> 2、世界上有一个人，和你在一起时候，偶尔会和你打架，偶尔会和你斗嘴。他坏道总是抢你点心，总是向父母打小报告，但也总是爱护你比谁都多，你们有最亲密，最亲密的关系。这个人，叫手足。</p>
<p> 3、世界上有一个人，不见面的时候会一直惦记着他，见面时却又脸红心跳，什么话都说不出口。他总是轻易地把你心揪住，让你无法忘怀，也能让你胡思乱想睡不好觉，但你仍然甘之如饴，因为你爱他。他是你最甜蜜，最甜蜜的负荷。这个人，叫做恋人。</p>
<p> 4、世界上有一个人，知道你一些不为人知的小秘密，犯错的时候，他帮着你找理由；暗恋一个人的时候，他帮你传话；和恋人吵架时候，你一定会哭着跑去找他。你很抱歉，你总是麻烦来到时才想到他，但你很庆幸生命中出现了这么好的一个人。也许你们在一起的日子，走得比恋人还要长久。这个人，叫做朋友。 </p>
<p> 5、世界上有一个人，总是在父母保护下成长，在手足关系中定位自己，在恋人呵护中找到真爱，在朋友关心中得到温暖。你知道这些人经过了你的生命，也丰富了你的一生。你谢谢他们带给你的一切，却又总是说不出口。这个人，就是自己。 一直以为幸福在远方，在可以追逐的未来。我双眼保持着眺望，我双耳仔细地聆听，唯恐疏忽错过。后来才发现，那些握过手，唱过歌，流过泪，爱过的人。所谓曾经，就是幸福……这就是人一生中要珍惜的五个人。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>感谢</tag>
        <tag>珍惜</tag>
      </tags>
  </entry>
  <entry>
    <title>我开始回忆了。</title>
    <url>/439/</url>
    <content><![CDATA[<p>  感谢母校三年里教会我如何与人相处共事、</p>
<p>  一转眼，三年一过，从懵懵懂懂的高一新生到如今的高中毕业生。</p>
<p>  我不管高考成绩如何、也不管是否能考上什么好大学。</p>
<p>  班主任说过：人生的旅途并非花团锦簇，坎坷磨难常常使你以伤痕累累来诠释，而生活的热情不能就此冷却，路，还得走下去。</p>
<p>  然而，我也只能用学渣说的话语来回寄，高考不是唯一的出路，但是高考也是打败高富帅的一个途径。</p>
<p>  谢谢清新一中这三年待我我的回忆。</p>
<p>  永远爱你的母校！——清新一中</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>解放了。</tag>
      </tags>
  </entry>
  <entry>
    <title>我,我消失好不好?</title>
    <url>/78/</url>
    <content><![CDATA[<p>我、消失好不好？ 也许真的是我不够成熟？才会有这么幼稚的想法？可我还是想知道、在你们的眼里、我，算什么？ 我不想成为一个多余的一个。 或者、 就算我消失了对你来说也没什么变化？   </p>
<p>总以为自己很坚强，没想到竟脆弱的这么不堪一击。为什么变的如此忧伤？忧伤不该是青春的主旋律、可写出来的文字却是怎么都掩盖不了的忧伤。渐渐习惯了忧伤的情感，直到忧伤把自己淹没。以为笑得大声一点、也许、就不会那么痛了。 可当眼泪掉下来时，才发现 ： 原来、快乐只不过是给伤口找一个笑着流泪的借口。 真心朋友越来越少了、甚至渐渐不知怎样才算是朋友？ 如果可以的话、我真的不想长大。就不会有那么多的烦恼、不必看你们那虚伪的嘴脸、不必看透现实的残酷。 可时间终究留不住天真的想法。习惯了孤单、习惯了寂寞、习惯了有什么事都自己扛时。 才发现、原来、当习惯了一个人时、也会排斥另一个进入我的世界。 只因为不想养成放不开的依赖。 一直以为真心对待一个人就好。可是为一点事情我们就闹成这样。 我努力德想要快乐、可快乐却离我越来越远。  好累、我消失好不好？当个逃兵般不想再面对这一切 … 。。。好好的生活…也许现在的我真的是累了。很累很累～面对一些人。一些事、真的不知道该怎么去面对。怎样去坦白？怎样去诉说！那傻傻的天真,感到超自悲。也不知道自己到底做错了什么。突然间似乎全部人都变了。。。变得让人难以相信、难以相处。拼命去找也找不到原因。真傻。到后来我才发现原来我错了。我傻得太天真了…竟然不知道人总是会变的～每天都烦的要死。累得要死。我也不知道自己是真的开心还是还是难过。。。过份的执着告戒自己要：happy everyday.可最终还是要用眼泪来敷演自己！ 要想活得更精彩就要努力去拼博、用上进去争取…这些我都知道。我都明白。但有的时候真的感到自己很无奈。很无助。面对社会、面对群众、面对全世界… 如果可以。。。我消失好吗? 这样你就能原谅我吗？这样我就不会受那么多的委屈,伤痛~~</p>
<p>好了446我把这篇文章找回来了。我记得我是备份了的。对不起!!!现在你可以再看到了。嗯哈,love you everyday.</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>我需要一台爱疯</title>
    <url>/371/</url>
    <content><![CDATA[<p>不要因为寂寞爱错人，更不要因为爱错人而寂寞一生，尝试信任才能得到幸福。缘分是本书，翻的不经意会错过，读得太认真会泪流。</p>
<p>女人会记得让她笑的男人，男人会记得让他哭的女人，可是女人总是留在让她哭的男人身边，男人却留在让他笑的女人身边。<br>这个世界上最残忍的一句话，不是对不起，也不是我恨你，而是，我们再也回不去。就是这样再简单不过的一句话，生生的将两个原本亲密的人隔为疏离。</p>
<p>没有经历过的人，永远都不会明白，那是怎样的一种切肤之痛最宝贵的东西不是你拥有的物质，而是陪伴在你身边的人。不能强迫别人来爱自己，只能努力让自己成为值得爱的人，其余的事情则靠缘分。</p>
<p>嗯哼最后呢就想吐槽一下。</p>
<p>练了一天的英语口语了、然后腾讯新闻弹出一个新闻框、高考不用再考外语了、当时我很开心、但是看了后面的那句这三年的高考不影响、</p>
<p>其实不考外语有不好也有好、因为我们生活中很多都用不到外语再加上我们的母语都没有学好就去学洋语但是呢，对于一些出国的、在外贸公司工作的那就要学了。嗯哼喜忧掺半吧、</p>
<p>岁月无声需要奋斗。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>岁月无声需要奋斗</tag>
      </tags>
  </entry>
  <entry>
    <title>批量traceroute shell</title>
    <url>/1619/</url>
    <content><![CDATA[<p>创建一个traceroute.sh</p>
<p>代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#方法一：</span><br><span class="line">cat $1|while read IP</span><br><span class="line">do</span><br><span class="line">traceroute -m 10 -n $IP &gt;&gt; data.txt</span><br><span class="line">done</span><br><span class="line">#方法2：</span><br><span class="line">for IP in `cat $1`</span><br><span class="line">do</span><br><span class="line">traceroute -m 10 -n $IP &gt;&gt; data.txt</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>运行sh traceroute.sh ip.csv</p>
<p>记得后面最近一个ip列表文件~</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>traceroute</tag>
      </tags>
  </entry>
  <entry>
    <title>抒发。</title>
    <url>/454/</url>
    <content><![CDATA[<p>    我只是抒发心情。只是想保存一下自己的东西。大家可以不要看。</p>
<p>    大学，一个多么向往的地方。</p>
<p>    2015.10.12，晚，这天是我们班竞选班委的一天。无可否认，班委都许多同学竞争，在同学们热烈竞争的过程中，我一直在犹豫我是否要竞选一个职位呢，这样能锻炼自己的管理能力，一直犹豫、一直犹豫……然而我还是走出去竞选了学委。把自己竞选的理由和目的都说出来了。再最后投票的时候也只是第二名。当时有点失落！！</p>
<p>    2015.10.13，下午，这天上完课后，带班师兄叫班长和我去宿舍有事交代，开始我还以为什么回事会叫上我交代事情呢。嗯当我看到班委名单的时候，心情你们都懂的。既开心又激动嘎嘎嘎！然而这也只是我噩梦的开始！</p>
<p>    2015.10.14，当同学们知道我当了学委，本来我就是新转来的，本来我已经竞选班委能为班级付出，能为班级做点事情主动的和新同学交流就会慢慢熟悉，而这一切都是本来罢了！</p>
<p>    2015.10.15-16.这两天任务本来就很多，然后在群里发了很多通知或者消息，但是群里的回复都是伤人心的，完全都是在弄我，三五个的在排斥，就因为我是一位新人？就可以欺负？这也不是三番四次的问题了，我能容忍一次两次。但是每个人都有一个度！一位容忍的范围，我自己一个为班级搬十箱八箱书也算了，开始我以为我还没有融入他们，毕竟我是新来的，宿舍也不同，军训也没有在一起但是这我还是多虑了！</p>
<p>    恩，最后没有最后学委还是要做。哎</p>
<p>    </p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>大学</tag>
        <tag>抒发</tag>
      </tags>
  </entry>
  <entry>
    <title>挖坑与填坑</title>
    <url>/283/</url>
    <content><![CDATA[<p>大一肆无忌惮的到出去浪,觉得我对这个专业是无法有出路的.于是就迷茫着. 当从一个迷茫中走出来时,回想着,我浪费了多少时间. 基础还不扎实 再到51job看了工作条件 再一次反映了自己的辣鸡 需要的专业技能 自己又懂多少 会用多少 有时候 很想逃避 虽然说在学校学到的知识 出到社会是没啥用处 可是 在大学 你不努力去学 不慢慢的折腾自己 是没有进步 每次学会学一种东西就骄傲自满 但想想 我只是学会了入门的知识 自己的专业是不断地进步 现在学懂了一种语言 不到几年或者十几年 一定淘汰 正比如 现在自己知道ssh ssm 但是企业也在用spring mvc Ajax 嗯 继续去失眠吧 也需要去好好反思落后了多少？时间怎么珍惜？晚安！   <img src="http://qn.199604.com/typoraImg/457374259375662660-576x1024.jpg" alt="457374259375662660"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>捐一块活动</title>
    <url>/446/</url>
    <content><![CDATA[<p>  第一次看到“捐一元献爱心”培训名单后，我心里就在想，难道要每位前来肯德基餐厅的客人都捐一元吗？好像有点不太现实。后来经过短短一小时的培训，我终于理解到“捐一元献爱心”是为贫困山区的儿童献爱心，使他们吃上牛奶和鸡蛋等营养食品。</p>
<p>  活动从7.25-8.9，持续16天。刚好，我就是活动开始第一天，上前台进行劝捐活动。面对每一位客人，我们都在顾客点完餐后，指着餐牌纸，加上一句“先生/小姐，您好，我们这里有一个捐一元，为贫困山区儿童献爱心的活动，您需要参加吗？您先了解一下，我先为您配餐”。配完餐后，还要加上“需要为您加上这一元吗？”若顾客答应，则要回赠“谢谢，这是您的感谢卡，谢谢您的爱心”。</p>
<p>  活动第一天，避免不了客人的冷嘲热讽，质疑声总会存在“你们是不是真的捐给他们？”“我也是山区出来的，不如捐给我吧”“不用了，我天天都捐，何必在你们这里捐？”但……值得高兴的是，热心肠的人总是比白眼的人要多“捐一元是吧，可以”“没问题，剩下的都捐了吧，你把餐给我配好就行了”带着小孩儿的家长们都会作出榜样捐款，并未孩子们解释“我们捐一元是为了让那些贫困山区里的孩子生活的更好，有更多的营养补充阿……</p>
<p>  ”每每听到这些窝心的话语，我总是觉得很开心。经过一次两次三次……百次千次的劝捐，我从刚开始的机械化形式到现在的运用自如，从忍受顾客的不理解到现在安然接受，让我明白，若有心，他便想要了解，否则，只是一句多余的话语。肯德基这项坚持了七八年的“捐一元献爱心”活动，锻炼了我如何与顾客更近距离的交流，无论再忙，再多的客人，我依然在点完餐配完餐后习以为常地说出这一句话。而我的客人们，也很支持我的工作。</p>
<p>  虽然我厌烦了，但当我的客人们毫不犹豫捐出那不起眼的一元时，我是那么的高兴，你一元，我一元，如此循环，，我在不知不觉中帮助了他们，这样他们就可以过上比之前好的日子了。幸福都是在一点一滴中累积的。即使前台劝捐很无奈，很烦闷，容易被顾客们不了解，但是只要想想贫困山区的孩子们很快有牛奶鸡蛋吃，值了！！！接下来最后几天，若我还是前台，我依然会如之前，坚持我的劝捐行动，让孩子们过上幸福，开心的日子。</p>
<p>  最后，请大家在活动期间到KFC捐1块，哪怕是那么的一块钱都好，我在这里为山区的孩子们感谢你们！谢谢！！！！</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>KFC</tag>
        <tag>捐一块</tag>
      </tags>
  </entry>
  <entry>
    <title>搬运工们避免写空指针BUG记录</title>
    <url>/1047/</url>
    <content><![CDATA[<p>自从前几个星期升级了wp，升级之后的编辑器一点儿也不习惯，导致又不想写记录了哎…这不是借口!!!</p>
<hr>
<p>好了，入正题。</p>
<p>首先作为会复制粘贴的搬运工，对写空指针一点也不陌生吧。空指针是我们这些搬运工经常遇到的一个基本异常吧？不服?那我真的没办法。</p>
<p>什么？我自己也不知道空指针是什么?</p>
<p>emmm，我这么解释好了：</p>
<p>当我们定义了一个变量的值为 null 时，在 Java 里面表示一个不存在的空对象，没有实际内容，没有给它分配内存，所以，null 也就是对象成员变量中的默认值。</p>
<p>比如下面的一个例子会不会出现空指针呢?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Object obj = null;`</span><br><span class="line">`String str = obj.toString();</span><br></pre></td></tr></table></figure>

<p>结果是会出现’java.lang.NullPointerException’空指针异常，并且它是属于运行时异常RuntimeException的子类，它不是捕获型的异常，当我们运行程序时才可能报出来，而且会把程序运行给中断。</p>
<p>说了那么多，接下来需要如何避免，或者说我们这些复制粘贴的搬运工日常如何写出空指针的BUG？</p>
<p>1.最基础的字符串比较，常量或固定值放前面。</p>
<p>if(demo.equals(“demoStr”))//出现空指针异常</p>
<p>if(“demoStr”.equals(demo))//这种情形，不出现空指针异常</p>
<p>2.使用JDK8的Optional</p>
<p>Optional类已经成为Java 8类库的一部分,Optional实际上是个容器：它可以保存类型T的值，或者仅仅保存null。Optional提供很多有用的方法，这样我们就不用显式进行空值检测，所以再也不用 != null 来判断了!!有空的话，下次自己码出来怎么用吧。</p>
<p>3.初始化默认值，先给一个无用的默认值。</p>
<p>4.当是返回一个集合的话，默认会是 null，统一规范返回一个空集合。</p>
<p>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public List getAllUserDataList()&#123;</span><br><span class="line"> List list = UserService.getAllUserDataList();</span><br><span class="line"> return list == null ? new ArrayList() : list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>好了，不写了，wp升级之后的编辑器是鸡儿不习惯….先记录四种方式吧..</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>bug</tag>
        <tag>空指针</tag>
      </tags>
  </entry>
  <entry>
    <title>改名为记忆角落</title>
    <url>/409/</url>
    <content><![CDATA[<p> 在舍与不舍中去改变生活，在得与不得中创造人生。我还是一样的我，我的博客依旧存在。</p>
<p> 2014-07-10 21.44.讲小俊の记忆地正式改为记忆角落了，或许这会K掉很多，但是这也标志我进一步成熟了。</p>
<p> 在离别的那一个瞬间，在享受着高中最后一个暑假，在等待着高三的洗礼，在期待着高考的到来。人生要面临着一个有一个的挑战，强者会战胜困难，但弱者也未必会倒下而会爬起来再一次挑战。</p>
<p> 2014.07.09.这是高二的最后一天，一个个熟悉的面孔将来还会是那个熟悉的面孔吗？在相处了一年半的时间里，我们把团结两个字发挥到了淋漓尽致，我也明白班主任为什么会把团结作为我们三班的班歌。或许他是一种体现我们三班团结的象征，更或许是要我们懂得团结。从高一下学期分班排在级的倒数几名。再到级的前三。这样的成绩不让我们骄傲而是告诉我们付出了多少收获也会有多少。高三是一个可怕的专有名词，高三又是一个希望的明灯。高三我们一起奋斗吧不管是否还在一个班不管多少人去了A班B班，不管多少人转学了。我们都要用死的精神去奋斗。</p>
<p> “无高考不人生”这句话是高一新生的时候一个师姐给我说的。但是我心里还有一句话“只要学不死就往死里学”。这两句话是激励我整整两年，每当成绩不好我都会把那两个便签拿出来看着。</p>
<p> 嗯,人生总会有一些不愉快的事情。心想快乐便是快乐，反之，黑暗想你招手。</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>学校生活</tag>
      </tags>
  </entry>
  <entry>
    <title>放监。</title>
    <url>/232/</url>
    <content><![CDATA[<p>考试结束，考生请停笔，请把试卷和答题卡反扣放在桌面上，并两手垂下坐在原位，待监考老师验收答题卡，小号在上，大号在下…万岁！！</p>
<p>下午最后一课生物考完。意味着寒假来了、一个多月的努力希望没有白费，有人常说你付出了不一定会有回报但是你没付出请不要说这句话。因为我体会到了。前些时候我压根不去背单词短语填空根本凭感觉但是呢这次期末考试我不用了。看一眼中文已经知道需要填什么短语上去了。恩这可能就是你付出的努力得到的回报。不要什么都说不会不会不懂不懂。其实你没有去试过没有事实践过怎么知道你不懂。</p>
<p>实践是检验真理的唯一标准这句话你知道吗哈哈哈、好了好了百度一下你就知道了。我该去看飞虎出征了。哈哈哈哈哈</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>放飞梦想</title>
    <url>/400/</url>
    <content><![CDATA[<p>  冬去春来，高三的高考已不期而至了，并在时间的消逝中飘然而走，高三的莘莘学子都在为了自己的目标而努力，拼搏。作为高二学生的我再次写下这个简单但却代表我挚真挚诚的祝福，祝福你们高考成功。</p>
<p>  高考，是一次重要的挑战，或许你有焦虑你有恐惧，也有激动。但我想对你说:”请不要忘记身边所以爱着你的人，我们都是你坚强的后盾。所以呢，在高考的日子里，你要像猪一样能吃能睡，像鼠一个能跑能躲，像猴一样能蹦能跳，最重要的是要像我一样乐观向上哦。哈哈哈！</p>
<p>  十年的寒窗苦读，高中三年所经历的几许风涛骇浪，终于来到了高考，请放飞青春的梦想，接受高考的洗礼。从容的面对高考、从容笑傲考场。努力了就无怨无悔；付出了，就义无返顾；奋斗了，就勇往直前；高考来了，就欣然的面对。相信付出了老天就会给你收获。高考在即，希望你们努力努力在努力。放松放松再放松！愿你的快乐可加，忧愁减到最低。在未来趋于正无穷的日子里。幸福是无限的。我对你的祝福是大于正无穷的。祝你们快乐的复合函数总有最大值的。</p>
<p>  把心愿看作风，把快乐看作帆，把祝福变为船，让心愿的风吹着快乐的帆载着祝福的船驶向即将高考的你们，待我轻轻问候你们一声：“愿你们心想事成，高考顺利，马到成功！</p>
<p>  最后祝愿高三的师兄师姐们高考成功，马上成功，马上实现，马上开心！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>教你如何节约Android设备流量使用</title>
    <url>/444/</url>
    <content><![CDATA[<p>  Android平台的开放是一把双刃剑，在获得更高自由度的同时，用户也必须承受系统当中一些潜在的问题，比如后台流量的消耗。那么怎样才能有效控制Android的流量使用呢?下面这5个小技巧应该可以帮到你。</p>
<p>  1. 使用Chrome流量节省程序</p>
<p> Chrome浏览器的设置菜单中有一个非常实用的“流量节省程序(Data Saver)”功能，它可以让浏览器对接收的所有数据进行压缩，从而起到节省流量的目的。该功能对浏览体验几乎没有任何影响，但节约流量的效果却非常显著。 </p>
<p>  2.禁用不需要的同步选项</p>
<p> 关闭所有不需要的同步选项也是节约流量(以及提升续航)的有效方法之一。在设置应用的“账户”菜单当中，你会看到系统所记录的所有账户和相关的数据同步选项。如果当中有哪些是你不需要的，你可以直接将其关闭。</p>
<p> 3.设置流量限制、限制背景流量消耗、揪出高消耗应用</p>
<p>  Android的流量使用菜单绝对是节约流量的好帮手。你可以在其中设置蜂窝数据的使用限制，并限制应用在后台的流量使用。不过需要注意的是，限制后台流量会导致通知的延迟。<br>   此外，你还可以在其中查看到具体到每款应用的流量消耗，如果有那些应用的流量消耗非常高，但你并不经常使用，那可以索性将其卸载。</p>
<p> 4.限制应用更新</p>
<p>  你肯定不希望自己宝贵的流量被用在应用更新上面，特别是对于那些大型应用来说。因此，你可以进入Google Play商店应用，在设置菜单当中选择“不要自动升级应用”或是“仅通过Wi-Fi自动升级应用”。</p>
<p>  5.使用离线地图</p>
<p>  这个小技巧在你出行时会非常有用。你可以先使用Wi-Fi在谷歌地图当中下载所需的所有地图数据，然后在出门之后进行离线使用。这一操作其实非常简单，你只需在搜索栏中输入自己要去地点，点击搜索结果，拓展地图下方的卡片，点击菜单键，然后再点击“保存离线地图”即可。</p>
]]></content>
      <categories>
        <category>分享资讯</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库 count()函数 效率的问题</title>
    <url>/1341/</url>
    <content><![CDATA[<h4 id="这次笔记是对比count-1-和count-那个效率比较高问题"><a href="#这次笔记是对比count-1-和count-那个效率比较高问题" class="headerlink" title="这次笔记是对比count(1) 和count(*)那个效率比较高问题"></a>这次笔记是对比count(1) 和count(*)那个效率比较高问题</h4><hr>
<p>EXPLAIN： 通过EXPLAIN ANALYZE可以检查规划器评估的准确性</p>
<h5 id="1-count-1-和count"><a href="#1-count-1-和count" class="headerlink" title="1. count(1) 和count(*)"></a>1. count(1) 和count(*)</h5><p>当表的数据量大些时，对表作分析之后，使用count(1)还要比使用count(*)用时多了！ 从执行计划来看，count(1)和count()的效果是一样的。但是在表做过分析之后，count(1)会比count()的用时少些（1w以内数据量），不过差不了多少。</p>
<p>如果count(1)是聚索引,id,那肯定是count(1)快。但是差的很小的。</p>
<p>因为count(),自动会优化指定到那一个字段。所以没必要去count(1)，用count()，sql会帮你完成优化的 因此：count(1)和count(*)基本没有差别！</p>
<hr>
<h5 id="2-count-1-and-count-字段"><a href="#2-count-1-and-count-字段" class="headerlink" title="2.count(1) and count(字段)"></a>2.count(1) and count(字段)</h5><p>两者的主要区别是</p>
<ol>
<li> count(1) 会统计表中的所有的记录数，包含字段为null 的记录。</li>
<li> count(字段) 会统计该字段在表中出现的次数，忽略字段为null 的情况。即不统计字段为null 的记录。</li>
</ol>
<hr>
<h5 id="3-count-和-count-1-和count-列名-区别"><a href="#3-count-和-count-1-和count-列名-区别" class="headerlink" title="3.count(*) 和 count(1)和count(列名)区别"></a>3.count(*) 和 count(1)和count(列名)区别</h5><p>执行效果上：</p>
<p>count(*)包括了所有的列，相当于行数，在统计结果的时候，不会忽略列值为NULL</p>
<p>count(1)包括了忽略所有列，用1代表代码行，在统计结果的时候，不会忽略列值为NULL</p>
<p>count(列名)只包括列名那一列，在统计结果的时候，会忽略列值为空（这里的空不是只空字符串或者0，而是表示null）的计数，即某个字段值为NULL时，不统计。</p>
<p>执行效率上：</p>
<p>列名为主键，count(列名)会比count(1)快</p>
<p>列名不为主键，count(1)会比count(列名)快</p>
<p>如果表多个列并且没有主键，则 count（1） 的执行效率优于 count（*）</p>
<p>如果有主键，则 select count（主键）的执行效率是最优的</p>
<p>如果表只有一个字段，则 select count（*）最优。</p>
<hr>
<h5 id="4-实例分析"><a href="#4-实例分析" class="headerlink" title="4.实例分析"></a>4.实例分析</h5><p>create table counttest(name char(1), age char(2));<br>insert into counttest values (‘a’, ‘14’),(‘a’, ‘15’), (‘a’, ‘15’),(‘b’, NULL), (‘b’, ‘16’),(‘c’, ‘17’),(‘d’, null),(‘e’, ‘’);<br>select * from counttest;<br>select name, count(name), count(1), count(*), count(age), count(distinct(age)) from counttest group by name;</p>
<hr>
<p><img src="http://qn.199604.com/wp-content/uploads/2017/07/zhifubao.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/weixin.png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>count</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>新年快乐</title>
    <url>/238/</url>
    <content><![CDATA[<h1 id="祝您鸡年大吉吧"><a href="#祝您鸡年大吉吧" class="headerlink" title="祝您鸡年大吉吧"></a>祝您鸡年大吉吧</h1><p><img src="http://qn.199604.com/250198350092976608.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>新春快乐！</title>
    <url>/469/</url>
    <content><![CDATA[<p> 今天年初一</p>
<p>我啥也不说</p>
<p>祝大家新年快乐！</p>
<p>也记得给我发个大红包呀</p>
<p>最后：</p>
<p>祝大家猴年：新年大吉大利、百?禁忌、五福??、富?吉祥、??就手、??亨通、步步高升、生意?隆、?成西就、恭喜??!</p>
<p><a href="http://199604.com/content/uploadfile/201602/73dc1454937193.jpg"><img src="http://199604.com/content/uploadfile/201602/73dc1454937193.jpg" alt="1454828550867.jpg" title="点击查看原图"></a></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>新年快乐</tag>
      </tags>
  </entry>
  <entry>
    <title>21</title>
    <url>/504/</url>
    <content><![CDATA[<p>最近感触比较大，想写一篇文章来抒泄泄一下。我并不是那种写文很厉害的人，我甚至不觉得你们会很认真的看下去。只是希望我可以分享出我自己的感受罢了。</p>
<hr>
<p>最近一直想让自己能够生活在忙碌里，甚至想自己一口喘息的机会也不能有。因为这样我才能深入的学习…不能有一丝的松懈！ 是的，在这段时间里，我发泄了世界非常大，我需要多去看看;我也发现我所拥有的技能屈指可数,甚至是无！或者是内心不让我平庸一辈子，而我也不甘止步不前，世界很大我们都需要去学习！ 以前看书，做题，敲代码…出错了都一直在度娘、谷哥<del>，而身边没有一个自己专业的能够让我去倾述的。渐渐的感到这是如此的吃力和无助，而现在有了一群能和我一起装逼的小伙伴，身边有几个前端大牛…同专业的大傻逼</del>还有京东派一起去奋斗的几位小伙伴，身边不断给我经验的可哥！其实我挺想让他快点结婚的~ 嗯,20岁还有不到2小时?已经过去了<del>谢谢这一年给自己挖下的坑</del>自己积累的经验<del>把自己一些坏脾气也改了</del> 最后21岁你好!请对我狠点！因为离开学校的时间也所剩不多了~ <img src="http://qn.199604.com/typoraImg/739567083325876030.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>心情</tag>
      </tags>
  </entry>
  <entry>
    <title>日子</title>
    <url>/445/</url>
    <content><![CDATA[<p>  放假了，感觉整个人都无精打采的，甚至是睡一整天了还是想继续睡下去，无目标可言。</p>
<p>  今天已经是月底了，都到了一年一度的高三学子开学的时候了，每当想起这开学季，也能回想一年前那傻逼的我，小时候懵懵懂懂到现在已经高中毕业，十多年的学习生涯已经快结束了，等待我的是大学的5年生活，有人会问我，大学不是三年或四年吗？咋么有五年呢。</p>
<p>  嗯，小俊今天就告诉你，我读了专本连读。哦也！</p>
<p>  shit,刚刚还有心情吐槽一些东西，可现在又不知道怎么发泄了，不知道是不是我妈又抱了一只小狗回家，弄得心情不太好，最近心里对我妈特别有意见。因为我妈之前已经养了一只狗了现在又养一只，可你多养一只无所谓，但是你也不能把之前的小狗养大了丢下它又养另一只，这样会把我大姑娘的心情低落甚至不吃不睡的！！！！</p>
<p>  然而并没有什么卵用，我妈说了养大就拿来吃的！！！！！！</p>
<p>  呵呵，当我听到这句话的时候，大姑娘可是配了我很长时间的，以前我放假回家第一时间都是它在陪我，而我妈还一心欢喜的和朋友在外边吃饭打麻将，都把我和大姑娘丢在家里，我和小狗是相依为命呢……</p>
<p>  唉！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>狗</tag>
      </tags>
  </entry>
  <entry>
    <title>一碗毒药.</title>
    <url>/609/</url>
    <content><![CDATA[<p>又逢毕业季 又一批亲爱的师兄时间即将离校 可能你刚刚亲历过… 他们自信昂扬 丝毫不怕校园中或者人生中最后的一次答辩 我们不曾为他们加油鼓劲 可转眼间来到了该离别的时候… 所以这碗毒药就送给你们..</p>
<hr>
<h3 id="感恩"><a href="#感恩" class="headerlink" title="感恩"></a>感恩</h3><p>还记得我刚面试职创社的时候咩… 几位师姐要我去门口大喊我是自己是傻逼… 还记得我刚到京东派的时候咩… 那时候啥也不会,给静姬师姐说、运秀师姐说… 那时候我连一台打印机都不会用… 那时候也经常听师姐她们私下去欺负我家的豪哥… 到慢慢的去欺负我们这班小师弟(璇姐是男的).. 哦,是师兄师姐们一次次不厌其烦的讲解… 让我们逐渐的成长,慢慢让我们这班小师弟妹融入这个大家庭中… 当然啦,当我们做的不好的时候,也会受到你们的批评 虽然心里会不好受 但我们都知道 我们正在走你们走过的路 而你们时时刻刻希望我们走得更好，做的更棒… 虽然我现在不读懂你们大学毕业的心情 但一年后我也和你们一样拖着行李离开这个可爱的校园 或许每一个人要走的路都很遥远,但每一个人都会很努力的撑下去。 也许这是你们等待着下一场开幕。等待着你们在前面的旅途 但是,还是要有梦想,万一实现了呢… <img src="http://qn.199604.com/typoraImg/20170624000001-1024x768.jpg"> <img src="http://qn.199604.com/typoraImg/20170624000014-1024x768.jpg"> <img src="http://qn.199604.com/typoraImg/20170624000019-768x1024.jpg"> <img src="http://qn.199604.com/typoraImg/20170624000033-1024x768.jpg"> <img src="http://qn.199604.com/typoraImg/20170624000040-768x1024.jpg"> <img src="http://qn.199604.com/typoraImg/20170624000045-768x1024.jpg"> <img src="http://qn.199604.com/typoraImg/20170624000051.jpg"></p>
<h3 id="留恋"><a href="#留恋" class="headerlink" title="留恋"></a>留恋</h3><p>常言道：一离别，别说日后再聚，可哪知天涯一方，何日才能共举杯? 最后在此，祝福，唯有深深的祝福，送给毕业的你们，祝愿你们鹏程万里。 原谅我这个金牛座的傻逼不会写诗…………………… <img src="http://qn.199604.com/typoraImg/20170624000352-1024x768.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>毕业季</tag>
      </tags>
  </entry>
  <entry>
    <title>晚</title>
    <url>/209/</url>
    <content><![CDATA[<p><img src="http://qn.199604.com/736593221952027652.jpg"></p>
<p><img src="http://qn.199604.com/375611971363640027.jpg"></p>
<hr>
<p>你总说累</p>
<p>因为</p>
<p>希望讨好所有人 渴望理顺所有事 幻想得到所有爱</p>
<p>要知道</p>
<p>看开是个过程 得到需要付出 知足才会快乐</p>
<p>时间如雨</p>
<p>你我雨中行进</p>
<p>撑自己的伞 伴合适的人 到该去的地方</p>
<p>一边失去 一边寻找</p>
<p>未来的路还长 量力而行就好</p>
<p>适逢其会 抑或猝不及防</p>
<p>晴空万里 抑或雷霆万钧</p>
<p>不期而遇 抑或失之交臂</p>
<p>都该接纳</p>
<p>给生命一点缝隙 让阳光洒进来</p>
<p>该来的不会缺席 别再为难自己</p>
<p>晚安</p>
<p>我是履述，温润依旧</p>
<hr>
<p><img src="http://qn.199604.com/33702394685115035.jpg"></p>
<p><img src="http://qn.199604.com/128376293626319989.jpg"></p>
<p><img src="http://qn.199604.com/37517290304952573.jpg"></p>
<p><img src="http://qn.199604.com/839618446559203164.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>景</title>
    <url>/381/</url>
    <content><![CDATA[<p>很多东西，不在的时候总是期盼着，当真正拥有的时候才知道：原来如此空虚。 期盼已久的寒假在早刺晚冷下显得特别难熬。我所期待的寒假之旅也在“全球变暖”的攻势下破灭。  </p>
<p>这几天总是阴阴沉沉，一个人闷在家里，看着窗外的雾霾一片接着一片不厌其烦的往我心里渗透，一声清脆的响声后便消失在急促的心疼中。可他们即使是这样，也很享受那不到一秒的幸福??当雾霾来临的那一刻，人们见证了它的存在。  </p>
<p>中午，雾霾总算没了。我和一个朋友来到江边。我想：这雾霾后的江一定很有韵味吧！我不喜欢雾霾，但我酷爱雾霾后被冲刷的万物，它们是那样纯洁和安静。雾霾后的江堤散发着一股清香，一阵风吹来，很爽很爽！我不喜欢柔风，我喜欢强悍的狂风，喜欢它们狂放不羁的野性，它具有一种向上的张力超越人类思想的、无法触及的，这种张力让人有了生的欲望。而柔风则显得毫无底气，像是一个颤颤巍巍的病人。这风着实让人心旷神怡。  </p>
<p>这风，这雾霾都这么努力的履行自己的职责，我们呢？</p>
<p><img src="http://199604.com/content/uploadfile/201401/780b8e27204868b335c50eca6a68784920140129033836.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>暂停网站?攻击?</title>
    <url>/1091/</url>
    <content><![CDATA[<p>最近这一段时间，已经被阿里提示3次，因过度消耗资源暂时无法访问了？ 但想想我这一个发牢骚的小博客，咋会过度消耗资源? 然后想了下之前阿里有个客服打电话让我上ESC的时候？ 我是不是想到了一些啥？ 不可能的，然后就看了下日志?给人恶意CC？ 突然多了很多奇奇怪怪的URI，强行访问导致的? emmmm，想了下，我还是备份关站吧.刚好博客主机到期还有100天… 开通日： 2015-02-17 21:01:17</p>
<p>到期日： 2019-08-17 23:59:59    100天后到期</p>
<hr>
<p>如果有大佬想包养小弟弟也行，我只是想有个阿里云主机上放着就行…</p>
<p>那些干坏事的老大们，你们尽情，数据我也备份了。你爱怎么折腾都行，我这只是个发牢骚的地方…</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>最后的入侵</title>
    <url>/309/</url>
    <content><![CDATA[<p><strong>一生命是由无数个巧合加上无数次的错误组成的，不相交的路程或许会在某一个时刻变成统一的线路，可惜，结果不一定圆满，故事，才刚刚开始</strong></p>
<p><strong>男孩??请允许我这样称呼这个已经20岁善良而内向的小伙子??一个黑客。黑客也是人，一名怎样的黑客取决于他是怎样的一个人。如 果说因为性格内向和对技术本身的热爱让男孩成了一名黑客，那么男孩的善良则决定了他是一个遵守黑客守则的黑客：他总是会在找到漏洞之后，通知相关的人进行 修补。</strong></p>
<p><strong>是的，提到一个次：善良。在这样的一个时代，这种东西几乎成了一个中性甚至是贬义的词，听到后马上让人想到的是??懦弱或者苍白 ??可我实在找不出更恰当的词语来形容这个男孩，似乎只有善良，才能准确表达出那种印象。就像描述对大海的印象时，最经典的话总是说：“都是水！”</strong></p>
<p><strong>一次，利用一个漏洞他很轻易侵入了一台PC，像往常的做法一样，他在PC的桌面留了一个文本，告诉对方存在的漏洞以及修补方法。不 过，当他过几天再去检查那台PC的时候，发现漏洞依然没有堵，他当初的那个文本也还留在桌面上。惟一的不同是，文本后面有了一段PC主人的回复：“你说的 那种补漏洞的东西是不是一种胶布的品牌啊，我去超市怎么买不到呢？”……男孩笑了。</strong><br><strong>二</strong></p>
<p><strong>男孩入侵的那台PC的主人是一个女孩。</strong></p>
<p><strong>两个人利用电脑桌面上那个文本开始彼此的交流。这该是多么浪漫的一件事情：两 个文本毫不相干的人开始通过一个文本??也仅仅通过一个文本??开始了交流，从陌生到熟悉，甚至有了只属于彼此的一些词语和秘密??在想爱、想被爱的时候 遇到一个同样一个想爱、想被爱的人，爱情就是这么简单的事。</strong></p>
<p><strong>男孩和女孩同样也遇到了这件“简单”的事情，惟一不同的是他们都不曾告诉对方，只是默默。对啊，这本来便是一份柏拉图式爱情，也许本便就是不需要表白，更何况，这是一个内向的男孩和一个天性害羞的女孩。</strong></p>
<p><strong>当那个文本快100K了，女孩问：“如果换了一个人在用我的电脑，在这个文件上留言，你能知道那不是我吗？”</strong></p>
<p><strong>男孩说：“能。只有你才是你，我可以感觉到。”</strong></p>
<p><strong>女孩终于又说：“我发现，我喜欢*了。”</strong></p>
<p><strong>男孩犹豫良久：“我们只是朋友。”</strong></p>
<p><strong>男孩也不知道自己为什么要撒谎，几个声音同时在脑子里回荡??而女孩的问，在经历了风雨后回首看来是那样的明晰！</strong></p>
<p><strong>三</strong></p>
<p><strong>女孩搬家了！而且换了一台电脑，但女孩没有告诉男孩。搬家，换电脑，这本来是一件很平常的事情，但对那个时候的男孩和女孩来说，却意味着失去联络??请不要去责怪女孩，女孩把那个文本拷到了新电脑的桌面上，她以为那样，男孩就还能找到这台电脑，还能继续和她说话。</strong></p>
<p><strong>当连续好几天男孩没有在文本上留言的时候，女孩真的着急了。女孩甚至整天开着电脑，等男孩来，在文本上跟她说话。</strong></p>
<p><strong>可惜……男孩一直没有来……</strong></p>
<p><strong>女孩终于明白她和男孩已经失去了联系，她甚至也去了解安全知识，和其它人不同的是，她是为了让自己的电脑更容易被入侵。她依然每天打天桌面上的文本，并在上面告诉男孩，自己一直在等他。她相信，男孩一定还能找到她的电脑。</strong></p>
<p><strong>男孩发现那个IP段再也扫描不到女孩的电脑了。想起女孩偶然提起过一次不久会搬家，男孩把扫描的IP段扩大到所有可能的范围。他甚 至放弃了他一直恪守的黑客守则，利用了他入侵了的近百台服务器不分日夜地起帮他扫描，他疯狂地要找到女孩。结果是那样的让人难以接受：他失败了！用千万次 努力，也无法重现最初的一次偶然，这不得不让人想起一个字：缘！</strong></p>
<p><strong>男孩意识到女孩换电脑或者重装系统了。他坚信，女孩电脑的桌面一定还保留着，于是他做出来一个比原来的扫描要疯狂几万倍的决定：入侵所有可能的电脑，直到找到女孩的电脑。</strong></p>
<p><strong>四</strong></p>
<p><strong>男孩的毅力让人惊叹，男孩的技术同样让人佩服得无话可说。他甚至写出一个自动入侵电脑并且自动传播的极为高超的程序，并通过搜索桌 面是否有那个文本作为判断是否是女孩的电脑，如果找到则发一封EMAIL回来，并在女孩的电脑开一个后门以便男孩连接。半年后，当男孩从邮箱里面收到一封 由自己程序发回来，报告女孩电脑已经找到的邮件时，然后连上了女孩的电脑。</strong></p>
<p><strong>当他打开那个文本的时候，上帝啊，真的找不出什么词语来描述男孩此刻的心情，男孩不仅看到了女孩一直等待留下的呼喊，更看到了一个冒充自己的人，而女孩一直把他当作自己！生命的美妙和痛苦都来自转折，而这样的转折给男孩的只有一牌空白。</strong></p>
<p><strong>男孩花了很长一段时间终于把他离开后的留言看完，心中的痛苦难以名状。男孩决定离开，因为他不想给女孩带来更多关于真假的困惑，因为他相信：冒充他的人最初也是好心的，更重要的是，他能看出，他们之间已经有感情，尽管彼此也还是没有说??就像最初的男孩和女孩。</strong></p>
<p><strong>通过刷新文本，男孩注意到女孩正在和那人说话。</strong></p>
<p><strong>女孩说：“我，发现，我真的很喜欢你。”于是他迅速刷新文本，想知道那人会怎么回答。一切似乎都在重演半年多前的一幕：良久，那人终于打出几个字“我们只是朋友”,男孩快速的把那几个字删掉，然后写上“我也很喜欢你”，接着迅速保存，断线，离开了女孩的电脑。</strong></p>
<p><strong>男孩久久的盯着屏幕…….此刻的脑海里想着他们…..</strong></p>
<p><strong>男孩曾经错过，他不想让另一个男孩也错过，更不想女孩再一次失望。关于真与假，已经不再重要。</strong></p>
<p><strong>五</strong><br><strong>这是男孩作为黑客的最后一次入侵了，或许这样只是一种仪式，但在这段青涩的初恋面前，男孩把这个仪式进行得像一个虔诚的信徒??超市买不到的胶布或许能再遇上，但是那已经是另外一块胶布，无法比较，因为一一在心中的分量已经改变了</strong></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>最近受的教训有点多...</title>
    <url>/1175/</url>
    <content><![CDATA[<p>前几天笔记本电池突然涨的很厉害，于是乎去华硕售后打算换个电池，谁知道要500多，于是乎就算了吧，然后想了想来都来了，顺便拆了电池吧.. 然后…. 拆完，开机，进不去系统，而是直接进入BIOS，但是那位工程师也懵逼(其实就是技术不行也是业余的)，emmmm，事情到这里了，感觉算了回去重装呗，只要资料还在就行。 然后收费的时候，100大洋的服务费，是的，100块RMB，然后我说我要开发票，它那边还不给我开??现在售后都这样的吗？收了钱不给开发票？ 然后打电话问了华硕客服，客服居然说华硕智汇家是加盟的店，不关他们管，只能和店铺协商？所以说，华硕官网提示什么华硕智汇家(授权待送修点)也只是加盟，所以最好…你们都懂的就不多说了。 好了，现在华硕一生黑，出什么也不香。 垃圾华硕智汇家： 华硕授权代送修点 广州市荔湾区黄沙大道8号西城都荟一层北门149-153号华硕智汇家（地铁1号线黄沙站C出口） <img src="http://qn.199604.com/typoraImg/20190709232539-1024x547.png"> 最后，至于是什么问题引起的原因，我自己也找到的… 去了淘宝买了个电池130块钱，完事… 建议不要拆电池，因为华硕笔记本R556L电池是内置的，但是如果拆了，主板没电了，然后每次开机都会进入BOIS恢复出厂设置，因此就每次都进不去系统。ps:换电池也会开机BOIS恢复出厂设置，所以也需要重置一下BOIS，我的原因就是出在此，也间接说明上次帮我弄得那个技术员技术非常一般 需要设置启动盘: 1.Boot-&gt;Launch CSM-&gt;Enabled 2.Security-&gt;Secure Boot Control-&gt;Disabled 3，如果CSM无法设置，首先设置Secure Boot Control之后保存设置退出bios，然后重新进入设置CSM。 保存重启即可进入系统</p>
<hr>
<p><img src="http://qn.199604.com/wp-content/uploads/2017/07/zhifubao.png"><img src="http://qn.199604.com/wp-content/uploads/2017/07/weixin.png"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>华硕</tag>
      </tags>
  </entry>
  <entry>
    <title>最近计划</title>
    <url>/895/</url>
    <content><![CDATA[<p>最近，老是忘记密码…然后自己灵机一动想写一个java的密码管理系统，基于ssm吧，用springBoot的话，消耗的内存实在是太大了，然后自己又有一个erbi.me的域名闲置，有哪位老板能提供阿里云的主机呢,因为域名在阿里云备案的了，想搭建一下这个密码管理系统。</p>
<hr>
<p>转眼出来工作两个月了，感觉过得很快… 好了今天划水时间到… 计划最近有空就把密码管理系统的页面做出来先把，然后再设计一下底层的CRUD而已，应该很快吧… <img src="http://qn.199604.com/typoraImg/20180323114652-1024x1024.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>密码管理系统</tag>
      </tags>
  </entry>
  <entry>
    <title>朋友。</title>
    <url>/389/</url>
    <content><![CDATA[<p>到底什么是朋友   </p>
<p>朋友 就是能包容对方的人  </p>
<p>无论对方向他开了多大的玩笑 </p>
<p>对他说了什么逆耳的语言</p>
<p> 他都会向对方报以微笑  </p>
<p>最多也只是报以幽默的话语</p>
<p>朋友 就是能帮助对方的人  </p>
<p>如果对方有什么缺点 </p>
<p>他都会给对方指出 </p>
<p>并帮助对方改正缺点<br>朋友 就是能接受对方指点的人  </p>
<p>不管对方会向他提出怎样的缺点</p>
<p> 甚至批评他也会高兴地接受  </p>
<p>并认真地改正缺点 完美自己</p>
<p>朋友 就是会珍惜友谊的人  </p>
<p>他会尊重对方 决不勉强对方  </p>
<p>对方高兴 他也会很开心  </p>
<p>对方伤心 他会安慰对方 决不落井下石 幸灾乐祸 </p>
<p>朋友 就是正直的人  </p>
<p>在邪恶面前他绝对不会畏缩不前 </p>
<p>也绝对不会躲藏 而是会伸张正义，将邪恶压倒</p>
<p>朋友 就是不怕困难的人   </p>
<p>在困难面前他绝对不会害怕 </p>
<p>也绝对不会逃避 而是会勇敢地克服困难。</p>
<p>朋友 就是会保护对方的人  </p>
<p>无论发 生了什么事情  </p>
<p>他都会奋不顾身地挺身而出 为对方付出一切 甚至生命  </p>
<p>有的人认为 只要肯和自己吃喝玩乐的人 就是朋友 其实错了</p>
<p>每个人随着自己在社会中的摸爬滚打 认识的朋友也是方方面面的  </p>
<p>有酒肉朋友 有儿时密友 有挚友 有诤友   </p>
<p>那么什么样的人才能成为真正的朋友呢？每个人有每个人的看法 每个人有每个人的观点   </p>
<p>凡是交朋友都是有益的 关键是看你如何对待朋友   </p>
<p>如果你把朋友看成一种资源 懂得科学的运用朋友之间的关系 这样朋友高兴 自己也开心 </p>
<p>否则是朋友没交好 倒落一身烦恼 <br>在现实生活中不少人都有一帮玩友 也就是吃喝玩乐的朋友   </p>
<p>这种朋友多半是利益上的朋友 没有真正的友谊   </p>
<p>但他们会把快乐及是送与你 和他们交往你会感到生活充满了乐趣 这样的朋友在现实生活中也是不可缺少的呢！<br>最重要的朋友那就是挚友了   </p>
<p>这样的朋友在你生活的方方面面都很关心你   </p>
<p>不能对爱人孩子亲人说的话，可以对挚友讲   </p>
<p>和这样的挚友在一起可以畅所欲言 促膝谈心 在相互的关怀和交流中逐步加深感情   </p>
<p>特别是在艰难困苦中 往往他能给你一份感动 这样的朋友犹如你的臂膀，让你的人生充满希望 充满爱意 充满力量<br>再就是诤友 诤友就是喜欢挑毛病的朋友  </p>
<p>这样的朋友你未必喜欢 也未必深交 但他对你生活起着无足轻重的作用   </p>
<p>他喜欢指出你的不足和行事的不当 而且直言不讳   </p>
<p>这样的朋友让你看见了撕掉伪装后的自己的影子 有时甚至辣得你直掉眼泪 呛得你作声不得   </p>
<p>看起来他是泼了你面子 其实他是把人生得智慧全给你了 这样的朋友真难得   </p>
<p>朋友，是这么一批人，是你快乐时，容易忘掉的人  </p>
<p>是你痛苦时，第一个想去找的人  </p>
<p>是给你帮助，不用说“谢谢”的人  </p>
<p>是惊扰之后，不用心怀愧疚的人  </p>
<p>是对你从不苛求的人  </p>
<p>是你从不用提防的人  </p>
<p> </p>
<p>一首“朋友”献给我们真挚的友情</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>朋友圈大了，朋友却少了。</title>
    <url>/75/</url>
    <content><![CDATA[<p>我不知道你能从你的 微信好友列表里找出几个人 张嘴和他说你的困难不怕吃闭门羹 你有那个自信让他看到你的狼狈和软弱 在我们大大的朋友圈里 到底有几个这样的”真朋友”</p>
<hr>
<p><img src="http://qn.199604.com/2016-10-21.jpg"></p>
<hr>
<p>?有些人说不清在哪里说了再见， 就真的无法再见。</p>
<p>“ 有些朋友你多年未见，你以为你只是失去了一个朋友，其实你是失去了很多的自己。他们带着很多对你的回忆、你的生活轨迹，听他们说说过去，你才更清楚，为何你成为今天的你。”?</p>
<p>在你手机通讯录里有多少个联系人，有几个经常联系，有几个号码可以背出来。微信朋友圈有多少好友，几百上千也不值得大惊小怪，和谁的聊天记录永远置顶，哪几个人一直是星标好友。年纪越大，遇到的人越多，一面之缘留个电话，几次联系加个微信。你有没有发现，我们的朋友圈越来越大，但真正的朋友却少了。</p>
<p>我在社交方面并不擅长，虽然低质量的社交，不如高质量的独处。实际我很不会和人从说 “ 你好 “ 开始认识，总觉得交朋友是个技术活，所以我的朋友数量并不多。经常联系，过年过节回家要出来见面的也就那么几个。<strong>但是我知道，真正的朋友不一定是每天在一起吃吃喝喝的，而是那些见证彼此成长和变化的人。</strong></p>
<p>人越长大，越难交到掏心掏肺的朋友，也越难有耐心从头了解一个人，于是越容易变得将就，也就越难遇到一个合拍的朋友。少了年少时的赤诚与单纯，很难将真心轻易交付。于是友谊的纯度不断下降，对朋友的期待也越来越低。和谁再也不见和谁一句话翻脸都变得很常见。可是，这些并不是我们要的。</p>
<p>生活到处都是机遇，年纪越到选择越多。人生的岔路口那么多，遇见过五光十色的人，而有些人说不清在哪里说了再见，就真的无法再见。而我觉得，陪伴越久的，越难得。</p>
<p>我不知道如果换做是你，你能从你的微信好友列表里找出几个人，张嘴和他说你的困难，不怕吃闭门羹，不怕他知道你的狼狈，你有那个自信让他看到你的软弱。我不知道在我们大大的朋友圈里，有几个这样的 “ 真朋友 “ 。</p>
<p>交朋友是要花费时间精力的，而我们每个人的精力都是有限的。忙着应付一些酒肉朋友，留给真心相待的朋友的时间自然就会变少。</p>
<p><strong>希望你都能分得清哪些人叫做朋友，希望你知道如何保护自己。希望你能对那个好久不见的朋友说一句想念，希望就算朋友不在身边，你也能学会独自面对，默默坚强。朋友圈，不用太大。是真的，就好。</strong></p>
<p><img src="http://qn.199604.com/2016-10-22.jpg"></p>
<p>转-&gt;作者微博：@ 白白白子玉</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>朋友</tag>
      </tags>
  </entry>
  <entry>
    <title>期中考试后的反思。</title>
    <url>/399/</url>
    <content><![CDATA[<p>   随笔——期中考试的反思。</p>
<p>期中考试已成为过去，而成绩是我们最为关注的。在众多科目中，最受关注的是语文，由于这次作文时高中以来第一次见到过的，大家都感觉比较难。因此，作文时拉开距离的唯一途径，但是呢，我这次考试却败在了基础题上，作文虽然也有些跑题偏题，但总体还是不会拉太远。值得警惕的是基础题错误太多了。并且在阅读，做题过程中不够细心，导致语文成绩比较差，并且我发现，虽然天天的有积累成语、字词。但记住的却太少了，微乎及微。而病句题也是我最害怕的，每次总能排除二项，剩下两项，揪心是二选一的节奏又来了，这要靠人品呢。所以在这种情况我还是要浪费很多时间。</p>
<p>至于诗歌鉴赏这些题目中，得分几乎是不可能的是，一直是低分中徘徊，为什么呢？或许是少做或许是读不懂，所以一直没有高分，也找不到突破的方法，经过了这次的期中考试，我针对我的不足做出了如下改变（方法是最重要的）。</p>
<ol>
<li>1、每天坚持积累成语与字词，只求精不求多。  </li>
<li> 2、提高自己的阅读准确率</li>
<li> 3、加强自己的基础训练（重点）</li>
<li> 4、作文素材要积累，作文要做到有话语写。</li>
<li>5、每天晚上保证有半小时时间是复习语文</li>
</ol>
<p>总而言之，尽量提高基础分，稳抓96分，剩下的54分多多益善。！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>期末成绩我能说点什么？</title>
    <url>/355/</url>
    <content><![CDATA[<p>昨晚成绩出来了,差了!!!虽然高一期末只要488分。好吧这个分数我崩毁了但也是意料之中吧</p>
<p>这次考试准备不足是考差的原因?不,是平时就心不在焉!!整天的玩手机上课不听课!!但是这次的英语物理也把我坑了!!</p>
<p>我真的想不出我该骂自己什么!!这个学期我也不知道我自己学英语学到了一些什么&gt;?背单词?背短语&gt;?语法你妈逼我的脑子就是差差我能说我想跳楼有木有!!!!!!!!!</p>
<p>OK,你妈逼这样下去连一个专A都考不上。我老妈整天叫我补习补习/其实我觉得我补习了等于没有补、真的因为英语我就没有兴趣可言不过我也该给自己一个没有后路的后来。</p>
<p>我轻轻地来正如我轻轻的走了!!!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>来一碗毒鸡汤</title>
    <url>/137/</url>
    <content><![CDATA[<p>我的风格你们都懂</p>
<p>3</p>
<p>2</p>
<p>1</p>
<p>毒鸡汤准备开始~</p>
<p>-</p>
<p><img src="http://qn.199604.com/168096097905981562.jpg"></p>
<hr>
<p>人生赢家大概就是这样 又瘦又好看 用自己努力赚来的钱过上精致的生活 脚踏实地让自己闪闪发光 不用理会别人的嫉妒 误会和不谅解</p>
<p><img src="http://qn.199604.com/45835046899037839.jpg"></p>
<p>后来 有人送你三十块一束的玫瑰 三百块一支的口红 三千块一件的大衣 三万块一个的包包 但是你的爱情 是从三块钱一杯的奶茶开始的</p>
<p>想来想去 还是努力工作赚钱最靠谱 不然心情不好时只能买两瓶啤酒一袋鸭爪坐在路边嗷嗷的哭 努力赚钱的话 就能躺在幽美的山中温泉里敷上面膜止住眼泪</p>
<p><img src="http://qn.199604.com/912150524510049580.jpg"></p>
<p>有钱的给你物质 有时间的给你陪伴 有情调的给你浪漫 那些可能都不是爱情 真正完整的模样 应该是 花心的为你专一 爱玩的为你安定 性急的为你等待 爱逃避的为你坚持 骄傲的为你谦卑 因为你去尝试不擅长的事 为了你想去成为一个更值得更好的人 这才是爱情最傻最真实的样子吧</p>
<p><img src="http://qn.199604.com/455388524392073778.jpg"></p>
<p>再有钱的男人也比不上一个知冷知热疼你的男人重要 再多的爱马仕也抵不过每天早晨跑几条街为你买豆浆油条的幸福 再好的甜言蜜语也不如你需要时陪在身边肩并肩的相伴 世界上最奢侈的人是肯花时间陪你的人 对的时间遇上对人 那是扯淡 错的时间遇上对的人这才叫做青春 所以对的人总会遇到 无论在哪里 愿你找到彼此甜蜜 而不用成为彼此负担的那个人</p>
<hr>
<p><img src="http://qn.199604.com/145943816113183955.jpg"></p>
<hr>
<h3 id="最近想了想"><a href="#最近想了想" class="headerlink" title="最近想了想"></a>最近想了想</h3><p>自己还有好像几个辣鸡的域名 基友们快告诉我怎么弄呢?</p>
<ul>
<li>  qyers.com -&gt;这个域名是已经备案了但是好像我还没有啥用处.</li>
<li>  zgrm.club?-&gt;这个域名没打算做什么~</li>
<li>  20120706.com?-&gt;这个是和女友的在一起的日期。</li>
</ul>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>鸡汤</tag>
      </tags>
  </entry>
  <entry>
    <title>查看数据库消耗情况的sql--oralce</title>
    <url>/909/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT a.tablespace_name &quot;表空间名&quot;,</span><br><span class="line">       total / (1024 * 1024 * 1024) 表空间大小G,</span><br><span class="line">       free / (1024 * 1024 * 1024) 表空间剩余大小,</span><br><span class="line">       (total - free) / (1024 * 1024 * 1024) 表空间使用大小,</span><br><span class="line">       ROUND((total - free) / total, 4) * 100 &quot;使用率 %&quot;</span><br><span class="line">  FROM (SELECT tablespace_name, SUM(bytes) free</span><br><span class="line">          FROM DBA_FREE_SPACE</span><br><span class="line">         GROUP BY tablespace_name) a,</span><br><span class="line">       (SELECT tablespace_name, SUM(bytes) total</span><br><span class="line">          FROM DBA_DATA_FILES</span><br><span class="line">         GROUP BY tablespace_name) b</span><br><span class="line">WHERE a.tablespace_name = b.tablespace_name</span><br><span class="line">   --and a.tablespace_name = &#x27;MMDS_DATA&#x27;;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">SELECT SEGMENT_NAME, SUM(BYTES)/1024/1024/1024 GB </span><br><span class="line">FROM USER_SEGMENTS </span><br><span class="line">WHERE TABLESPACE_NAME=&#x27;MMDS_DATA&#x27;</span><br><span class="line">--AND SEGMENT_NAME LIKE &#x27;WDIG%&#x27;</span><br><span class="line">GROUP BY SEGMENT_NAME</span><br><span class="line">ORDER BY GB DESC NULLS LAST</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>校服意识</title>
    <url>/396/</url>
    <content><![CDATA[<p>      校服作为一种学生的身份象征，对于穿着者而言，是一种责任和担当。但如今，对于校服这一具有象征意义的服装，学生的观念开始转变，意识逐渐淡化。<br>　　在这个张扬个性的时代，千篇一律的校服，似乎成为个性成长的约束。但毫无特色的校服无法包裹学生追求独特求异的内心，他们开始忘掉校服的意义，或是在校服上随意涂抹，或签上偶像的大名，或毫不在意绘上喜爱的图集。校服作为一种象征的形象，逐渐在学生内心淡化。不仅如此，由于对校服意识的淡化，几件破旧的被穿得脏乱的校服被弃掷在垃圾桶旁的现象常有出现，穿着校服而不顾形象肆意妄为的“个性”青年穿梭在人群，学生在轻视校服的同时，是否也忘记了自己的本分，忘记自己作为一个学生应有的作为？<br>　　学生对校服的不敬只是一个缩影，更重要的是透过缩影看清这个社会。多少张人民币被肆意涂画，多少个英雄人物的画像或雕像不受敬重而遭到破坏，是彰显个性自由，还是忘记本分、逃避责任？越来越多的人为个性伸张正义，盲目地批判一切规则的约束，从所谓追求自由来掩饰内心对于责任的躲避，恶意地斥责那些维护社会秩序的正常规则。强调本分，强调制约，不是顽固的表现。无规矩不成方圆，缺少了规整的校服的学生必然会逐渐忘掉学习做人的原则；缺少受人尊重、践行规章制度的国家必然会因缺乏脊梁而无法支撑。主张个性，拒绝死板固然是好，是顺应这个张扬的时代的正当想法，但若盲目地追求个性，肆意踩踏原本“神圣”的规矩，必会从追求自我走向丧失自我。<br>　　因此，对于“校服”这类约束自我品德修养的意识决不可淡化。“校服”带来的无限责任感的重量，是我们必须承担之重。不论国家、集体还是个人，都要不断警醒自己，在追着时代前行的同时，切勿忘记身上“校服”的重担，约束自己的行为，规范自己的修行，提升自己的品德。  </p>
<p>　　校服于学生，如规章于国家，必尊之敬之，方能前行。不断强化对于校服的意识，才能使自己的行为配得上身上的校服，这才是一个学生应有的风范，也只有这样，更多的个性魅力才会更好的释放。</p>
<p>-—————————————————————————————</p>
<p>是的这篇作文时广州一模的试题其实呢作为自己作为高中生对校服的涂涂画画是多么的正常但是它又代表着象征着一种责任一种爱国爱校的心。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>欣赏</title>
    <url>/324/</url>
    <content><![CDATA[<p>记得有人曾说：世界上并没有缺少美，而是缺少发现美的眼睛。万事万物，各有其特色，只要你学会欣赏，学会发现美，你就会感觉：风景这边独好！（由名言引入，自然简洁）</p>
<p>因为拥有欣赏的眼光，所以才有了王维“大漠孤烟直，长河落日圆”的雄浑；因为拥有欣赏的眼光，所以才有了王勃“落霞与孤鹜齐飞，秋水共长天一色”的壮美；因为拥有欣赏的眼光，所以才有了陶潜“采菊东篱下，悠然见南山”的恬静…….学会欣赏，便可获悉世间的美景。（简析观点）</p>
<p>学会欣赏，不仅仅是学会欣赏美景，还要学会欣赏周围的人和事。（过渡句，彰显层次，议论文中极为重要。点出“学会欣赏”的内容。）</p>
<p>也许有些人希望成为参天的大树，也许有些人希望成为耀眼的太阳，也许有些人希望成为绚丽的花朵，也许有些人希望成为夺目的星光。这些梦想都那么的美丽而吸引着我们，却也有时会让我们沮丧，有时会让我们自卑，有时会让我们觉得自己一无是处。不妨换一个角度，假若，我们只想成为独一无二的自己呢？ </p>
<p>我们会突然发现，我们可以活得很轻松，可以活得很快乐，因为我们不用为了成为另一个人而苦苦的追寻；我们会突然发现，小草的翠绿，灯光的柔和，因为它们也都在努力展现着自己，没有盲目，没有自卑，有的只是风中的摇曳和夜晚的灿烂。每一个人都可以活得很精彩，很美丽，只要他愿意，让自己成为这世界上的唯一。 </p>
<p>当你遇到狂风暴雨不能出门时，不要抱怨，想想风雨过后天际那条七色彩虹吧；当你感叹冬天的严寒时，想想傲雪挺立的那株腊梅吧；当你遭受失败的打击之时，想想“失败乃成功之母”那句名言吧！事物总是双方面的，这边是坏，那边是则是好，关键是我们用什么眼光去看待它。（谈怎样“学会欣赏”，论述层层深入）</p>
<p>学会欣赏，换个角度思考问题，学会去欣赏事物好的一面。欣赏你的对手，他便是你努力的动力；欣赏你遇到的困难，它就不会再是你的绊脚石，而是你通往成功之路上的一块基石……学会欣赏，你会发现，世界在对你微笑。（进一步探讨“学会欣赏”在学习和生活中的功用）</p>
<p>用欣赏酿造生活，你会发现，生活是美丽的，是具有丰富的内涵的；只要你学会欣赏，你会发现人间多了友善少了仇视，多了帮助少了冷漠……</p>
<p>    用欣赏酿造生活吧!</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>每一个人，心中都养着一个强盗。</title>
    <url>/427/</url>
    <content><![CDATA[<p>  生活中的每一种创伤，对于成长中的我们来说，都是一种成长，生活不会欺骗我们，只有我们自己欺骗自己。????题记</p>
<p>●●　如果生活中，有一个人想把你踩在脚下，不要以为生活错待了你。  </p>
<p>或许，还有十个人想要把你踩在脚下，只是你的强大，让他们没有机会伸出脚来。<br>不要抱怨这个世界弱肉强食，你会逐渐发现，它看起来很残酷，却十分公正。<br>柔弱，有时候能被怜悯和疼惜，只是因为人类还有着道德和善良。  </p>
<p>你可以仰望道德和善良，但不要仰仗它。这个世界，除了自己强大，什么都靠不住。<br>所以，回击刁难的最好方法，不是把踩来的脚踹回去。<br>等你强大了，你会发现，所有的脚失了锐气，没了杀机，它们只会向强者献媚和投降。  </p>
<p>●●　这个世界，没有一个可以藏得住的背后。  </p>
<p>譬如，对着A，在背后说B的种种不是。<br>你以为A是最知己最贴心的人，是最可信赖的“背后”，密不透风，可以为你藏住这些事。<br>即使A当时什么也没说，但在心里一定会觉得，<br>你既然能在他这里出卖别人，也一定会在别人那里出卖了他。<br>我们总是在最信任的人那里，丢掉了信任。<br>一个人最终不被别人信任，<br>首先是自己这里城门四开，最后才一点一点的，在所有人那里土崩瓦解。<br>把是非说给别人，别人可以听到；说给风，天地可以听到；说给自己，良心可以听到。<br>是的，没有一个地方，是可以藏得住的。  </p>
<p>还是什么也不说了吧。说人是非，也必被人说是非。<br>这个世界，最深的背后，在心里。<br>守住心，守住自己，也就堵住了所有的背后。  </p>
<p>●●　放得下，是因为能看得开。  </p>
<p>而看得开，要仰仗于两个方面：一要心足够大，一要阅历足够沧桑。<br>其实阅历沧桑了，心也就大了。  </p>
<p>概括到一点上，就是心要辽阔。心辽阔了，人生才能辽阔。  </p>
<p>放下了，也不是不在乎了，有些东西还要要，有些事情还要坚持。<br>辽阔给予人的意义是，它可以让你看到，执于欲念的疼痛是可以消解的。<br>人生只有可以驰骋的地域大了，前行的方向才会多。  </p>
<p>有时候，所谓的放开，其实就是换一个方向抵达。  </p>
<p>●●　每一个人，心中都养着一个强盗。  </p>
<p>却是一个窝里反的贼，打家劫舍??打自己的家劫自己的舍，自己折腾自己。<br>觉得，这个世界上，一群很好玩的侠客，都跑到了别人那里，<br>落在富人家有侠肝，落在穷人家有义胆，总之，自己家的这个贼是没法比的。  </p>
<p>所有痛苦的人，都是这么想的。  </p>
<p>快乐的人，也不是心里没有强盗。<br>快乐的人总是想，这强盗就要走了，而所有的侠客，都在投靠自己的路上。  </p>
<p>●●　善良敛起来，是冷漠。  </p>
<p>人世的善良，有点像蜗牛的反应。<br>若是你伸手触了它的软体，它就会迅速缩在壳子里，但，还会有探头出来的时候；<br>若是烈日当空暴晒，它就会始终不出来，乃至死。  </p>
<p>可见，善良偶受伤害，也许只是阵痛。<br>但若是整个社会风气，已经容不得善良施行，世界就会冷得一片荒凉。  </p>
<p>问题是，初始的时候，大家觉得，自己不拿出善良来，好像也并不需要别人的善良。<br>但最后会发现，所有的人都活在了风口里，自己已经捂不热自己。<br>多暖的房子，多厚的衣物，也会被尘世冷漠的风，凛冽吹彻。  </p>
<p>●●　看不见的地方最热闹。  </p>
<p>人在看热闹的心理上，更喜欢复杂和隐秘的热闹。<br>若是有好多个版本，就觉得有滋有味。<br>一个热闹，如果简单了，就好比一个曾经极富贵的人突然落魄，门前冷落鞍马稀，没了意思。  </p>
<p>生活枯燥，是因为每天可以一眼望到底。<br>人生枯燥，是因为一辈子可以一眼望到底。<br>枯燥的人，就容易无聊，他们太需要一眼看不到底的热闹。<br>在这些人看来，惟有这些热闹，才能凑足人生的趣味。  </p>
<p>当一个人自己不丰富的时候，就需要外部的世界来丰富。<br>当正事不能成为风景的时候，无聊的事情就会成为风景。  </p>
<p>庸俗是一种病。一件普通的事，会被庸俗的人谣传到热闹，也会被庸俗的人围观出热闹。<br>当然了，这个世界，也应该允许庸俗的人存在，惟如此，才显得纷扰，才显得热闹。</p>
<p>-—————————————————————————————————–</p>
<p>以上的是转载的文章</p>
<p>这篇文章是在一个同学的书上看到的</p>
<p>他不给我看我只能回来看了看过以后真的很激励怎么办</p>
<p>我很无聊快来强奸我吧哈哈哈！！！</p>
<p>校运会我要加油再见</p>
<p>百校联考我要加油再见</p>
<p>麻痹成绩我要上去再见！</p>
<p>以后再也不见！</p>
<p><img src="http://pic.yupoo.com/a952720223/Ed3lzidO/medium.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>心中都养着一个强盗。</tag>
        <tag>每一个人</tag>
      </tags>
  </entry>
  <entry>
    <title>每个男人心中都有一个沈佳宜:那些年,我们一起追的女孩</title>
    <url>/325/</url>
    <content><![CDATA[<p>嗯哈,最近我去追小说了,把那些年,我们一起追的女孩的小说给看完了。哈哈,我也开始发现小说上的秘密了。</p>
<p>对了,那些年,我们一起追的女孩也有电影的不是吗。相信你们都看过了吧,但是令人深思的是,结局并不是如大家所想的那样完美:沈佳宜并没有嫁给柯景腾.而是分手了和一个小胖子一起这不叫坑爹麽。嗯哈!!!!</p>
<p><strong>“我买过车，也买了房子。但从今以后我终于可以说，我买过最贵的东西，是梦想！”任谁都曾有过的年少轻狂，那个班上每个男生都暗恋的漂亮女孩，一堆莫名其妙、荒唐恶搞、胡闹打屁的匆匆日子，然后，青春就悄悄地逝去了。</strong></p>
<p>世间的一切都是不完美的，只有不完美才能给我们带来完美的享受ba!!!!!!!!!!!!!!!!!</p>
<p>上一个鬼图:</p>
<p><img src="http://www.juntk.com/content/uploadfile/201211/0439c1c3c97197431ada7951d8e85e8b20121104022157.jpg"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>每天给自己看一句话---高考加油</title>
    <url>/243/</url>
    <content><![CDATA[<p>1、自己选择的路、跪着也要把它走完。  </p>
<p>2、只做第一个我，不做第二个谁。  </p>
<p>3、只有经历过地狱般的折磨，才有征服天堂的力量。只有流过血的手指才能弹出世间的绝唱。  </p>
<p>4、真正的强者，不是流泪的人，而是含泪奔跑的人。  </p>
<p>5、这个社会是存在不公平的，不要抱怨，因为没有用！人总是在反省中进步的！  </p>
<p>6、原以为“得不到”和“已失去”是最珍贵的，可…原来把握眼前才是最重要的。  </p>
<p>7、用爱生活，你会使自己幸福！用爱工作，你会使很多人幸福！  </p>
<p>8、因为曾经爱过所以不能做敌人，因为曾经伤害过所以不能做朋友！那就做最熟悉的陌生人吧！  </p>
<p>9、叶子的离去，是风的追求，还是树的不挽留！  </p>
<p>10、业精于勤，荒于嬉；行成于思，毁于随。  </p>
<p>11、也许有些人很可恶，有些人很卑鄙。而当我设身为他想象的时候，我才知道：他比我还可怜。所以请原谅所有你见过的人，好人或者坏人。  </p>
<p>12、要替别人着想，但为自己而活。  </p>
<p>13、要努力！！为了你的奥迪我的迪奥。  </p>
<p>14、要懂得珍惜守护身边的每个人，因为前世扭断脖子的回眸，我们才换来今生的相遇。  </p>
<p>15、阳光温热，岁月静好，你还不来，我怎敢老去？  </p>
<p>16、学问之美，在于使人一头雾水；诗歌之美，在于煽动男女出轨；女人之美，在于蠢得无怨无悔；男人之美，在于说谎说得白日见鬼。  </p>
<p>17、幸福是什么？幸福就是你吃鱼，我吃肉，看着别人啃骨头。  </p>
<p>18、心有多大，舞台就有多大。  </p>
<p>19、心有多大，舞台就有多大！只有想不到的，没有做不到的！  </p>
<p>20、相信梦想是价值的源泉，相信眼光决定未来的一切，相信成功的信念比成功本身更重要，相信人生有挫折没有失败，相信生命的质量来自决不妥协的信念。  </p>
<p>21、我走得很慢，但我从不后退！  </p>
<p>22、我真的爱你，闭上眼，以为我能忘记，但流下的眼泪，却没有骗到自己。  </p>
<p>23、我以为我很颓废，今天我才知道，原来我早报废了。  </p>
<p>24、我以神的姿态，闪耀在这美的瞬间。凡人勿扰  </p>
<p>25、我停留在记忆深处，寻找残留的幸福。  </p>
<p>26、我说了所有的慌，你全都相信。简单的我爱你，你却老不信。  </p>
<p>27、我是白领：今天领了薪水，交了房租水电，买了油米泡面，摸了口袋，感叹一声，这个月工资又白领了  </p>
<p>28、我们可以失望，但不能盲目。  </p>
<p>29、我不去想是否能够成功，既然选择了远方，便只顾风雨兼程！  </p>
<p>30、事实上，成功仅代表了你工作的1%，成功是99%失败的结果。   </p>
<p>31、世界上那些最容易的事情中，拖延时间最不费力。   </p>
<p>32、使用双手的是劳工，使用双手和头脑的舵手，使用双手、头脑与心灵的是艺术家，只有合作双手、头脑、心灵再加上双脚的才是推销员。   </p>
<p>33、生命对某些人来说是美丽的，这些人的一生都为某个目标而奋斗。   </p>
<p>34、生活中若没有朋友，就像生活中没有阳光一样。  </p>
<p>35、如果心胸不似海，又怎能有海一样的事业。  </p>
<p>36、如果我们都去做自己能做到的事情，我们真会教自己大吃一惊。   </p>
<p>37、人生没有彩排，每天都是现场直播。  </p>
<p>38、让信念坚持下去，梦想就会实现。??大学生创业杂志《追梦》  </p>
<p>39、穷则思变，差则思勤！没有比人更高的山没有比脚更长的路。  </p>
<p>40、千里之行，始于足下．细节决定成败美丑  </p>
<p>41、努力不一定成功,但放弃一定失败只有学会如何停下来的人，才懂加速。  </p>
<p>42、命运如同手中的掌纹，无论多曲折，终掌握在自己手中。  </p>
<p>43、没有创造的生活不能算生活，只能算活着。  </p>
<p>44、没有比脚更远的路，没有比人更高的山！”  </p>
<p>45、流过泪的眼睛更明亮，滴过血的心灵更坚强！  </p>
<p>46、苦心人天不负,卧薪尝胆,三千越甲可吞吴。有志者事竞成,破釜沉舟,百二秦川终属楚  </p>
<p>47、就在这儿，一定要成功！  </p>
<p>48、既然人生的幕布已经拉开，就一定要积极的演出；既然脚步已经跨出，风雨坎坷也不能退步；既然我已把希望播在这里，就一定要坚持到胜利的谢幕……  </p>
<p>49、怀古而观今，三思而后行人的思想有多深，人就会走多远！  </p>
<p>50、海到无边天作岸，山登绝顶我为峰  </p>
<p>51、古之立大事者，不惟有超世之材，亦必有坚忍不拨之志   </p>
<p>52、得意时淡然,失意时泰然  </p>
<p>53、当世界给草籽重压时，它总会用自己的方法破土而出。  </p>
<p>54、当机会来临时，你已经准备好了。—-哈佛大学机遇永远给有准备的人  </p>
<p>55、带着感恩的心启程，学会爱，爱父母，爱自己，爱朋友，爱他人。  </p>
<p>56、除了放弃尝试以外没有失败！  </p>
<p>57、吃得苦中苦，方为人上人。  </p>
<p>58、不要轻易用过去来衡量生活的幸与不幸！每个人的生命都是可以绽放美丽的～只要你珍惜。  </p>
<p>59、不要给自己的 失败找借口！  </p>
<p>60、宝剑锋从磨砺出,梅花香自苦寒来.今天工作不努力,明天努力找工作生当做人杰，死亦为鬼雄。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>每天要和自己作斗争。</title>
    <url>/303/</url>
    <content><![CDATA[<p>如果说初三是苦的,那么高中生活就是有笑说不出,有苦也能说的出来麽?</p>
<p>每天5点9起床,然后会问自己今天会干些什么？主任说得对,你睡醒了,第一时间会去想什么?不会安排的人永远会比别人落后一大截。</p>
<p>如果说初三的作业是多的话。那么高中的作业不就堆积如山。</p>
<p>如果说初三背书是记忆的，那么高中背书不就是要秒背麽,语文课上一段文言文要2分钟背出来!!!!!!!!!!!!!!!!!!能坑麽。</p>
<p>如果说初三的函数是看不懂的话。那么高中数学函数你妹就是在画图。</p>
<p>如果说初三的英语是天书,那么高中的我也解释了!!!</p>
<p>师姐说过;高中目标不是高考的话,那么你的人生不就白活了麽?</p>
<p>是的，我的人生目标很简单，我希望以自己的实力去拼搏,博出属于自己的舞台,属于自己的高考。虽然看上去像是在天方夜谈一样,但是我相信,如果肯努力,哪怕其中挫折再大都会实现的,有付出才会有回报,做人就要有目标的活着。即使你的目标在别人看来很遥不可及.但是要相信,在这个世界上,没有实现不了的事情,只有不想去实现的心态。  </p>
<p>或许有人会说得不到的东西,大家永远都会继续追随。 追着追着就老了,再回首不堪入目。这句话我很赞同.已经我也试过,但是现实毕竟是现实,所以不得你不相信不是吗?</p>
<p>我不是一副弱不禁风孬种!!!!我要奋发的去拼搏。就是the secret 秘密这本书。心灵励志能帮助许多人重新审视自己的生活和人生身心修行(包括我吧)  </p>
<p>好了越扯越远了。还是班主任给我说的,既来之则安之!!!!!!</p>
<p>多苦也要撑着。先苦后甜谁都会懂,未经过风雨怎么见彩虹呐.</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>毕业快乐...</title>
    <url>/779/</url>
    <content><![CDATA[<p>再也不用逃课了，因为再也没有课上了。</p>
<p>毕业了各位老铁…</p>
<p><img src="http://199604.com/wp-content/uploads/2017/11/IMG_20171118_100618-1024x768.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>没有心情去更新</title>
    <url>/442/</url>
    <content><![CDATA[<p>  最近真他妈的的日狗了的心情 </p>
<p> 不想他妈的去更新博客</p>
<p>感觉日狗的心情</p>
<p>每天7点到KFC打暑期工</p>
<p>6月份工作了8天才赚了500</p>
<p>我只能说我以后不会吃了</p>
<p>那鸡都快过期才运回来</p>
<p>然后我是做厨房的</p>
<p>怎么说呢</p>
<p>那些鸡都是味精鸡</p>
<p>用几十种那些化学物质</p>
<p>各种色素</p>
<p>各种鸡精</p>
<p>……</p>
<p>然后日狗了每天还是三点一式</p>
<p>上班下班吃饭……</p>
<p>日狗了</p>
<p>嗯</p>
<p>大专我来了</p>
<p>高中再见</p>
<p>你麻痹再见</p>
<p>可是我又想回去</p>
<p>…….</p>
<p>妈蛋继续给我去日狗吧</p>
<p>这个暑假我要看很多的书</p>
<p>C+我来了</p>
<p>PHP我也要学会！</p>
<p>噢</p>
<p>这是不是日狗的节奏？</p>
<p>不对</p>
<p>是日猫的节奏</p>
<p>全身上下只有剩下的55.4元</p>
<p>怎么熬到下个月发工资</p>
<p>然后今天上班</p>
<p>上着上着拉了一坨屎</p>
<p>shit</p>
<p>然后请假回去看病</p>
<p>哦尼玛的急性肠胃炎</p>
<p>然后说是那个杭州小笼包的问题</p>
<p>然后我他妈的以后不会再吃了</p>
<p>然后就没有然后了</p>
<p>再见.</p>
<p>……</p>
<p>我要做一个日狗的节奏</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>你妈逼</tag>
      </tags>
  </entry>
  <entry>
    <title>油猴插件实现百度云免客户端下载</title>
    <url>/271/</url>
    <content><![CDATA[<p>大家都知道你不是百度云会员下载文件是贼鸡巴慢,而下载几百M的文件也需要客户端,要知道百度全家桶很难卸载。破解版的百度云客户端也不可以加速了 所以在网上找了一个破解他的方法。就是利用油猴(Tampermonkey)插件+一个自动脚本实现！ 需要用到的浏览器-&gt;谷歌浏览器或者360极速浏览器(我用的是360,因为用谷歌需要fan墙,而很少人有SS或者懂这个) 然后可以去360插件中心,找到(Tampermonkey)这个插件！ <img src="http://qn.199604.com/typoraImg/20170225152036-1024x536.jpg" alt="20170225152036"> 百度找到：greasyfork.org,或者直接输入这个网址<a href="https://greasyfork.org/zh-CN/">https://greasyfork.org/zh-CN/</a> 搜索解决百度云大文件限制 <img src="http://qn.199604.com/typoraImg/20170225152311-1024x543.jpg" alt="20170225152311"> 现在就可以登录到百度云官网下载毛片了 <img src="http://qn.199604.com/typoraImg/20170225152729-1024x494.jpg" alt="20170225152729"> 完美实现！</p>
<p>转载于<a href="https://zhangfupeng.com/">张福鹏</a>博客</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>百度云</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title>\&quot;父亲\&quot;</title>
    <url>/197/</url>
    <content><![CDATA[<p>刚刚又不在意的听了筷子兄弟《父亲》。心里有一种说不出的滋味。</p>
<p>也让我想起如何去学感恩。对父母无谓的感恩。怎么样去理解父母</p>
<p>其实感恩，是一种生活态度，是一个内心独白，是一片肺腑之言，是一份铭心之谢。来自于心理的满足，来自于对人对事的宽容和理解，来自于一种回报他人和社会的良好心态。感恩，能够促进相互信任、相互理解、相互尊重，有利于良好的人际关系的建立。感恩，使人少些抱怨，少些仇恨，少些对抗，多些宽厚，多些友善，多些快乐，使人有积极的人生观，有健康的心态，能够善待他人的误解与错误。拥有一颗感恩的心，才会对生活对人生充满希望，才会理智地面对人生旅途中的一切挫折和不幸，才能从容地面对一切思想上的是是非非，才能带来他人对自己的尊重与感激。感恩，善待了自己，也快乐了自己。</p>
<p>每个人都应该学会“感恩”。当我们呱呱坠地，来到这个世界，什么都还没来得及做的时候，就已经开始享受前人赋予的一切成果了。如果仔细回想，我们应该感谢的还真的有很多：感谢父母对我们的爱??我们有饭吃，有衣穿，有房子住，有床睡，有明亮的灯光和美妙音乐伴随着成长；感谢老师的教育和和培养，让我们增长知识，提升了我们的生存能力；所有帮助支持过我们的亲人和朋友，还有昔日里素不相识的贵人，让我们渡过种种难关；感谢在寂寞时可以倾诉的人……。学会感恩，让生命可以轻装一点，未来才会阳光。所以，让我们带领孩子们一起用自己所能做到的一切去感谢这个世界，用自己力所能及的全部力量来报答这个世界。  </p>
<p>筷子兄弟《父亲》这首歌虽然抒发的情感和唱腔属于平淡的不能再平淡的那种，但这首歌却给了我们不一样的感觉，这种感觉很真实，痛彻心扉的真实，听过到这首歌的朋友会给它一种难以掩饰的又不知道如何抒发的感觉，身临其境，让我们貌似看到了自己的成长历程，看到了一如既往的爸爸，看到了自己小时候骑在爸爸脖子上的撒娇画面，看到了父亲为了维持家计拼命挣钱的场景，或许这种感觉只有我们男人能真正感受的到，听着不知不觉心里就不是滋味不是吗？好了不想说太多太多太多。</p>
<p>最后来一首筷子兄弟《父亲》。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>父亲</tag>
      </tags>
  </entry>
  <entry>
    <title>父亲节</title>
    <url>/407/</url>
    <content><![CDATA[<p>上海立画最新父亲节感人微电影《爱在父亲节 其实很简单》完整版，小时候，父亲托起我们的童年，是我们眼中无所不能的超人。岁月带来成长，却将彼此的距离拉远…影片中的桥段是否让你感同身受，父亲深厚的爱与付出你是否能感知？</p>
<p>爸爸我爱您，父亲节快乐您辛苦了！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>物事人非罢了</title>
    <url>/382/</url>
    <content><![CDATA[<p>我真心不想吐槽什么？前几天为何我能怎么的冲动去续费主机呢为什么呢还有半年的时候能用为什么要续费？我脑子进水了还什么？</p>
<p>就为了前些天帮你找回数据就帮你这一个忙？你他妈也太好骗了吧！</p>
<p>而你他妈的今天问他能否帮你加一个子域名和一个数据库。一问话就是升级空间升级空间才可以这不明白了吗？你妈逼一个人一个面。</p>
<p>不想说太多如果我有钱我还要求你了？还升级我他妈的升级你妈逼。等空间到期了我马上搬走我说道做到这500多天我他妈还会给你讨论滚你妈的蛋蛋。</p>
<p>恩最后我会把我介绍你主机的所以链接包活推介也咔嚓！还有救祝你滚蛋快走！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>主机你妈逼</tag>
      </tags>
  </entry>
  <entry>
    <title>独处</title>
    <url>/58/</url>
    <content><![CDATA[<p>太过炽热的爱总是大胆而自负</p>
<p>我们迫不及待地告诉everybody要携手一生</p>
<p>迫不及待地把对方拉入自己的世界</p>
<p>可太急的结果往往是</p>
<p>两败俱伤</p>
<p><img src="http://qn.199604.com/20161005224558.png"></p>
<hr>
<p><strong>他不联系你不是他有多忙多累，真的只是他不想联系你而已。她说她去洗澡了，洗澡不一定是真的，不想和你说话却是真的。你永远叫不醒一个装睡的人，所以你也永远等不到一个不爱你的人的回复。没有理由，只是你没有那么重要罢了。</strong></p>
<p><strong>你有没有也曾傻里傻气的问过对方这样的话 “ 为什么你不联系我？” ，或者抱着手机望眼欲穿，每一声提示音都刺激着你全身的神经，如果是他的消息就笑吟吟的回复，如果只是其他的推送，又遗憾的放下手机然后继续等待。</strong></p>
<p><strong>而你又有没有失望过，那种从头凉到脚的失望。你看到他在线，你看到他发状态，却不愿意和你说一句话。</strong></p>
<p><strong>你知道他明明没有那么忙却不愿意联系你，而你非要问个明明白白，撞了南墙，才能依依不舍断了最后的幻想。</strong></p>
<p><strong>《隐婚男女》里这样说：” 他叫我等，我愿意。我也没什么要求，再忙的人他心里面也应该留个空位给他的爱人，时间需要分配，爱何尝不是呢。”?爱你的人不一定能时时刻刻的陪着你，但没时间陪你的人一定不爱你。</strong></p>
<p><strong>离开不对的人才会遇见对的人。你的纯真，你的固执，你的一往情深，都该留给懂你的人而不是视而不见的人。</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>独处</tag>
      </tags>
  </entry>
  <entry>
    <title>理由吗？</title>
    <url>/436/</url>
    <content><![CDATA[<p>每天离迟到还有一分钟时 从宿舍或饭堂冲回课室的路上 会看见有很多很多的人一样在路上，或漫不经心 或不紧不慢 或匆匆忙忙。现在的我已不再如上学期一样是最前者 开心的是我是最后者。我会感受到那全世界都在奔跑的感觉 当我背着装着刚晨读完的英语资料和书边看着秒表的跳动边跑的同时我会看见自己一个个的超过别人 当从超过一些很熟悉的平时迟到惯了的人到赶上了走在楼梯上的一些成绩很好的人我会在心里悄悄开出一朵花。 对于高三这个名词，永远都是个传奇。对他愈投入才愈能发现他的意义。 很庆幸自己是愿意去感受凌晨五点半的县中的 还是可以把时间再缩紧一些的 或许剩下的日子里我会活得很狼狈 会成为众人嗤之以鼻的高三狗 可我已不再去在乎别人怎么想怎么说了 就像我们的朋友斯蒂芬.乔布斯所说的那样： “你的生命是有限的，所以不要浪费自己的时间活出别人的人生，不要被教条所束缚，那是别人思考的结果。不要让别人的想法淹没掉你自己内心的声音、想法和感觉。这些东西蕴含了你真正想要成为的什么样的人。其他都是次要的。” 高三下学期是自私得最值得的时候 一切无关紧要的影响自己情绪的事物都不要去搭理 这个说就容易 对于这点我希望能做到80%足够。 做什么事最难？是坚持。 坚持，注定有质疑嘲笑，孤独彷徨，也都无妨。要想做成一件事 必须要有很强烈的意愿。自制力差 不是理由 能拒绝诱惑者方为能者 方法总比困难多。 当有一次离打铃还剩49seconds时我首先认定绝对会迟到了的不如逃课吧 却想到那句还没开始做却先否定了自己时 我抓起书包从饭堂一路狂奔到教学楼五楼时喘气看表刚好铃声响起 我才真正领悟到这句话：不逼自己一把 怎么知道自己有多逼格。 今中午在图书馆看书时 觉得阅览室优雅得就像全世界都静止了一般 真可惜高二时没好好享受。阅览室外廊张贴着的宣传栏只有一句英汉互译的话，那也是爸爸一直的态度：Make full use of your time to learn more knowledge.充分利用你的时间学习更多的知识。感谢爸爸从来不会给巨大压力我 只求尽量学多点知识 从不求结果多精彩 只追求过程更迷人。飞快的过去两周后 我已经习惯我这努力的节奏。但求在最该奋斗的年纪里 我努力过。 今天广州一模成绩一出 突然情绪暴发哭得别提多狼狈了泣涕连连 谢谢有你 突然更加懂高三的意义了 她说风雨中这点痛怕什么 猛想起他教的一句话:who fucking cares! Right.遇到不顺的时候 来一句Who fucking cares!然后继续赶路。</p>
]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>高中</tag>
      </tags>
  </entry>
  <entry>
    <title>生活就是该吃吃该喝喝爱谁上谁去</title>
    <url>/129/</url>
    <content><![CDATA[<p><img src="http://qn.199604.com/190418934597032602.jpg"></p>
<hr>
<p>宿舍： <img src="http://qn.199604.com/741245514371434315.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>无</tag>
      </tags>
  </entry>
  <entry>
    <title>生活就是那样多姿多彩</title>
    <url>/385/</url>
    <content><![CDATA[<p>无论做什么事情，都有好的和负的一面，所以这个世界上没有十全十美的东西，我们所能够做的就是从容一点、知足就好。</p>
<p>心情烦躁的时候，喜欢打开音乐，聆听一些来自酷狗的音乐，独自地去感受那些曲子传来的哭诉。无论是邋遢或者干净的曲子，还是热闹忧伤的音乐，相信每个人用心去感受，体会的东西自是不同的，所以无论如何，做每一件事情，我觉得用心很重要。</p>
<p>最后也许还能在网上看到你的消息,也许我唱的歌还存在你的手机,也许我爱你埋在心底变成秘密??《不再联系》 送给我爱过，但是不会再联系的人。</p>
<p>这就是我今天的心情嗯。年初三了、</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>新年快乐</tag>
      </tags>
  </entry>
  <entry>
    <title>痛苦并快乐着</title>
    <url>/336/</url>
    <content><![CDATA[<p> 黑白琴键上一双纤细的手弹奏出高高低低的音，有时直上云霄，无比高亢；有时又跌入低谷，极其黯然。高亢的音调和低沉的音调交相奏响出一首绝唱。  </p>
<p> 跌跌宕宕，起起伏伏，这犹如人生。只有低音与高音的糅合才得以谱写出震撼人心的乐曲；只有光明和阴影的辉映，才看得见最美丽的风景；只有悲苦和欢喜的交织，生命才会有更绚丽的色彩。  </p>
<p> 缺憾与完美的交织，造就别有风味的人生。一个人若只是在安定中度过一生，诸事一帆风顺，平淡安然，那么这必定也是一个无趣的人生。人生在世，我们应该活得精彩，活出韵味，活出境界。弘一法师临终之际，道“悲欢交集”。悲欢从来都是人生的两岸。杨绛在“五七干校”时，被安排去打扫厕所，她将厕所中的每一跟拉水绳都擦得干干净净，不懈怠，亦不悲哀。她在回忆这段日子时说：“我相信，乌云总会有金边的。”杨绛九十高龄时，当钱钟书和钱瑗相继离她而去，她饱含着深情，回顾了三个人的家庭生活，作了《我们仨》，有欢喜，亦有悲酸，此书在台湾连续几个月名列畅销榜榜首。“五七干校”的辛酸和“《我们仨》”的真挚，让我们看到了一个完整的杨绛，不以物喜，不以己悲。痛苦和欢乐、顺境和逆境，造就了一个伟大卓越的杨绛，折射出杨绛的人生之美。  </p>
<p> 假如每天的生活都异常平静，如平静的湖面，如死水激不起一点波澜，那么生活会是怎样的黯然啊！人生的壮美就在波澜起伏中展现。就如那蹦极，高高升起，既而又重重摔下，这是一种怎样的迂回啊！正是平淡之中孕育着躁动，寂然之中交织着奋起，平凡之中藏匿着神奇，这生活才是充满乐趣和活力的啊！  </p>
<p> “如果当时没有留下这些图画，我是否也将渐渐遗忘，那段不愿再回忆起的日子呢？看着这些作品，我回想起那段陷入绝望，又重燃希望的错乱生活……如今，惊恐消退了，悲伤不见了，而那段低潮的人生，只留下淡淡愁思，又寂寞又美好。”正如陈逸飞写的那样，如果不是因为多年前的一场病，他经历过一段充满恐惧的暗淡岁月，他又怎会对生命有如此深刻的感受？当暗流退去，越来越远，曾经的苦难、曾经的周折，都萦绕上了淡淡的美感。“拣尽寒枝不肯栖，飘渺孤鸿影”中的苏轼不美吗？那是寂寥之美，那是空旷之美，此美一点也不弱于北宋王朝国君和太后对苏轼的夸赞形成的光环之美；“问君能有几多愁？恰似一江春水向东流”中的李煜不美吗，他得以流传千古，恰不是因为他的贵族血统，不是因为他的风流倜傥。是“阶下囚”的身份，是落魄的国君身份将李煜在历史中记载。  </p>
<p> 人生就像一条河流，快乐和悲伤是河流的两岸；人生犹如一幅的画卷，冷色和暖色的交织才成就画的璀璨夺目；人生就如一支乐曲，快慢缓急，才涤荡出震撼人心的音符。  </p>
<p> 痛苦并快乐着的人生，才是真正的人生，也就是真正意义上的完美人生。</p>
<p>(此文通过<a href="http://www.juntk.com/">emlog自动发布插件</a>发布)</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>真不知道要写点什么- -</title>
    <url>/304/</url>
    <content><![CDATA[<p>今天天气好晴朗,处处好风光啊好风光~</p>
<p>破电脑,蓝屏又断网!!!!!</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>离别</title>
    <url>/70/</url>
    <content><![CDATA[<p><strong>我 们 只 是 芸 芸 众 生 里 一 个 平 凡 的 存 在</strong></p>
<p><strong>我 们 软 弱 我 们 哭 泣</strong></p>
<p><strong>我 们 害 怕 失 去</strong></p>
<p><strong>但 那 不 是 因 为 我 们 胆 小 或 者 懦 弱</strong></p>
<p><strong>而 是 我 们 不 愿 面 对</strong></p>
<p><strong>深 爱 的 人 终 将 离 去</strong></p>
<p><img src="http://qn.199604.com/0.gif"></p>
<hr>
<p>两个血肉相连的亲人，没有一句告别，就永久地离散了。其实我们一直知道生老病死是自然的规律，人老了，死的那一天总会到来，可当我们长大后渐渐地发现身边的父母双鬓斑白，一天天老去，就越发害怕失去他们。</p>
<p>当我们费劲千辛万苦来到这个世上，并不是为了成为谁，随波逐流沦落成一个没有 “ 自我 “ 的复制品，然后庸庸碌碌过千篇一律的人生。我们单枪匹马的在这个社会中摸爬滚打，我们卖力工作拼命赶路，可我们却忘记了另外的一些无比重要的东西。</p>
<p>我们长大和成功的速度，永远赶不上亲人老去的速度，死亡也终将会带走他们。然而有些人，即使已经走了很多年，那些离别和绝望的伤痛，也已经发不出声音来了，但我们还是会害怕失去他们的陪伴。</p>
<p>迪亚娜夫人说：” 不害怕痛苦的人是坚强的，不害怕死亡的人更坚强。”我们不是害怕苦难，也不是害怕死亡，我们害怕的是阴阳两隔的思念和那种至亲被割裂的痛苦。</p>
<p>为什么人越长大越害怕失去？因为失去了就不会再拥有了，所以越长大就越是小心翼翼，顾虑重重，每一次作出选择和让步都瞻前顾后，每一次背井离乡都频频回头，每一次的放弃也不再那样义无反顾。成长的代价，不是带走了我们的青涩，而是带走了我们曾经一往无前的勇气和魄力，因为是大人了，所以很多事情不敢了。</p>
<p>或许，我们真的可以飞黄腾达，每天锦衣玉食，打扮得光鲜亮丽，可父母却依然粗茶淡饭，朴素的生活着。而他们也在一天天，一年年，慢慢的变老。” 越长大越害怕失去，于是才懂得了珍惜，珍惜那些对自己而言至关重要的人和事。” 我们对死亡的恐惧，是因为害怕那些一直默默陪在身边的彼此深爱的人，还没等到我们初露锋芒有所作为，他们就已提前离开，甚至，来不及作最后的告别。</p>
<p>“ 超过了一定年龄，所谓人生，就是一个不断丧失的过程。对你的人生宝贵的东西，会一个接一个，像梳子豁了齿一样，从你手中滑落下去。取而代之落入你手中的，全是些不值一提地伪劣品。”</p>
<p>我们只是芸芸众生里一个平凡的存在，我们软弱，我们害怕失去，我们只希望我们爱的人能无灾无难健健康康地活着。所以，从现在开始，别再对身边的人说 “ 等 “ 。</p>
<p>“ 爸妈，等我不忙了，我就回去看你们 “ 、 “ 等将来我有钱了，就带你去周游世界 “ 。他们为我们终其一生，等到头发花白，等到的不应该只是一个充满未知的答案。</p>
<p>有的人鱼跃龙门一举成功，有的人未必可以一路坦途事事顺意。但孝顺和回报，是和我们的成败无关的东西。因为我们谁也无法预知明天和死亡哪一个先来，很多人和事情一等可能就是永远，再后悔也来不及。</p>
<p><img src="http://qn.199604.com/640.jpg"></p>
<hr>
<p><strong>接下来欣赏一下广州版的小幸运吧</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>离别</tag>
      </tags>
  </entry>
  <entry>
    <title>移动小one易统计定时打卡(python)</title>
    <url>/1654/</url>
    <content><![CDATA[<h5 id="1-电脑端登录易统计官网获取token"><a href="#1-电脑端登录易统计官网获取token" class="headerlink" title="1.电脑端登录易统计官网获取token"></a>1.电脑端登录易统计官网获取token</h5><p>通过几个账号不间断测试，判断出每个用户都有固定的且不变的一个token值。但需要每周手机登录一次，至于为什么我还真的不知道~</p>
<p>登录官网：<a href="https://www.ioteams.com/ncov/#/login%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE">https://www.ioteams.com/ncov/#/login，如下图</a></p>
<p>输入对应账号(手机号码)</p>
<p><img src="http://qn.199604.com/typoraImg/image-20210227193607099.png" alt="image-20210227193607099"></p>
<p>登录后，F12打开浏览器开发调试工具，点击Network(网络)，之后刷新一下页面，找到ncov,点击，选择cookie,再找到对应ncov-access-token-h5的值，如下红框：</p>
<p><img src="http://qn.199604.com/typoraImg/image-20210227194044032.png" alt="image-20210227194044032"></p>
<h5 id="2-修改python代码对应的值"><a href="#2-修改python代码对应的值" class="headerlink" title="2.修改python代码对应的值"></a>2.修改python代码对应的值</h5><p>修改的值如下：</p>
<ol>
<li>ncov-access-token值为步骤一获取的</li>
<li>address的地址数据，可通过点击 立即上报/重新上报按钮 获取上一次签到信息：</li>
</ol>
<p><img src="http://qn.199604.com/typoraImg/image-20210227195207888.png" alt="image-20210227195207888"></p>
<p><img src="http://qn.199604.com/typoraImg/image-20210227195132798.png" alt="image-20210227195132798"></p>
<p>返回数据只需要获取address下的数据补充即可，如下：</p>
<p><img src="http://qn.199604.com/typoraImg/image-20210227195503629.png" alt="image-20210227195503629"></p>
<h6 id="最后代码如下："><a href="#最后代码如下：" class="headerlink" title="最后代码如下："></a>最后代码如下：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#接口header</span><br><span class="line">headers = &#123;</span><br><span class="line">    &quot;Content-Type&quot;: &quot;application/json;charset=utf-8&quot;,</span><br><span class="line">    &quot;Connection&quot;: &quot;keep-alive&quot;,</span><br><span class="line">    &quot;Host&quot;: &quot;www.ioteams.com&quot;,</span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74&quot;,</span><br><span class="line">    &quot;ncov-access-token&quot;: &quot;&quot;,#用户token是唯一且不变的，获取方法见上文。</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#打卡信息</span><br><span class="line">data = &#123;</span><br><span class="line">    &quot;address&quot;: &#123;</span><br><span class="line">        &quot;province&quot;: &quot;440000&quot;,#省份代码</span><br><span class="line">        &quot;city&quot;: &quot;440100&quot;,#市区代码</span><br><span class="line">        &quot;county&quot;: &quot;440113&quot;,#县级代码</span><br><span class="line">        &quot;autoFetch&quot;: True,</span><br><span class="line">        &quot;lng&quot;: &quot;113.3896&quot;,#填写当前地区经度</span><br><span class="line">        &quot;lat&quot;: &quot;22.9709&quot;#填写当前地区纬度</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;at_home&quot;: True,</span><br><span class="line">    &quot;contacted&quot;: False,</span><br><span class="line">    &quot;custom&quot;: &#123;</span><br><span class="line">        &quot;dzmgi&quot;: &quot;在家远程办公&quot;,</span><br><span class="line">        &quot;egdtb&quot;: &quot;否&quot;,</span><br><span class="line">        &quot;fykat&quot;: &quot;否&quot;,</span><br><span class="line">        &quot;otqdu&quot;: &quot;否&quot;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    # &quot;family_suspected&quot;: False,</span><br><span class="line">    # &quot;family_confirmed&quot;: False,</span><br><span class="line">    &quot;fever&quot;: False,#是否发热</span><br><span class="line">    &quot;infected&quot;: False,#是否感染</span><br><span class="line">    &quot;self_suspected&quot;: False,</span><br><span class="line">    &quot;self_confirmed&quot;: False,</span><br><span class="line">    &quot;description&quot;: &quot;&quot;</span><br><span class="line">    # &quot;contacted_beijing&quot;:False,</span><br><span class="line">    # &quot;passed_beijing&quot;:False,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_login():</span><br><span class="line">    random_sleep()</span><br><span class="line">    link = &#x27;https://www.ioteams.com/ncov/#/index&#x27;</span><br><span class="line">    try:</span><br><span class="line">        req = requests.get(link, headers=headers)</span><br><span class="line">        print(req.content)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取当前日报id</span><br><span class="line">def get_dailyCode():</span><br><span class="line">    link = &#x27;https://www.ioteams.com/ncov/api/users/dailyReport&#x27;</span><br><span class="line">    # link = &#x27;https://www.ioteams.com/ncov/api/companies/default/question&#x27;</span><br><span class="line">    # link = &#x27;https://www.ioteams.com/ncov/api/statistical/latest&#x27;</span><br><span class="line">    try:</span><br><span class="line">        # req = requests.get(link, headers=headers)</span><br><span class="line">        req = requests.post(link, headers=headers, data=json.dumps(data))</span><br><span class="line">        response = req.json()</span><br><span class="line">        print(req.json())</span><br><span class="line">        user_id = response[&#x27;data&#x27;][&#x27;data&#x27;][&#x27;_id&#x27;]</span><br><span class="line">        print(user_id)</span><br><span class="line">        return user_id</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 打卡</span><br><span class="line">def report_health():</span><br><span class="line">    get_login()</span><br><span class="line">    user_id = get_dailyCode()</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    url = &#x27;https://www.ioteams.com/ncov/api/users/dailyReports/&#123;&#125;&#x27;</span><br><span class="line">    req = requests.put(url.format(user_id), headers=headers, data=json.dumps(data))</span><br><span class="line">    print(req)</span><br><span class="line">    print(req.json())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def random_sleep():</span><br><span class="line">    sleep_time = random.randint(200, 1000)</span><br><span class="line">    print(sleep_time)</span><br><span class="line">    time.sleep(sleep_time)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    report_health()</span><br><span class="line">    # get_dailyCode()</span><br></pre></td></tr></table></figure>

<h6 id="3-每日定时执行"><a href="#3-每日定时执行" class="headerlink" title="3.每日定时执行"></a>3.每日定时执行</h6><p>通过自己Linux服务器每日定时执行即可：</p>
<p>我是直接crontab 每天0点10分定时执行的…..</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 0 * * * python /data/glj/oneSign.py &gt; log.log</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pyhton</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>易统计</tag>
      </tags>
  </entry>
  <entry>
    <title>算是一天了吧</title>
    <url>/6/</url>
    <content><![CDATA[<p>明天就是我老爸的生日吧。嗯哈我也把我那节省下来的几十块买了一个蛋糕吧。虽然是79块很贵但是我舍得吧嗯哈。</p>
<p>这个博客可能是最后一天了吧或者是最后的一个星期。</p>
<p>嗯哈,你们说得对。我不会写博客写到一个乱七八糟的不是一个博客。</p>
<p>@黎奸雄。你也说得对我博客的文章就是纯采集。cril+c—ctrl+v。嗯我一直就是好了。</p>
<p>谢谢博客陪了我快2年了。虽然从一个德国的免空到TK+赞助的空间。再到juntk.com.再到这个。嗯哈不管是成功还是失败不管是开心还是失意我总会到心情写到博客虽然数据每一次都丢失我还是坚持了吧。嗯谢谢你给了我希望总是在我每一次失败以后鼓励我让我发泄让我重回梦想的舞台让我一次又一次的爬起来。</p>
<p>嗯好了我词穷了!!!!!!</p>
<p>最后还是祝老爸生日快乐明天虽然我要上学但是蛋糕我叫姐去拿的。祝你开开心心健健康康就好了</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>算是心情?</title>
    <url>/760/</url>
    <content><![CDATA[<p>想了很久 也不知道自己的答案和选择是什么 <img src="http://qn.199604.com/typoraImg/20171106200520.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>给高中生的忠告，或许不是真理</title>
    <url>/332/</url>
    <content><![CDATA[<p>给高中生的忠告，或许不是真理，但是足够你用三年。</p>
<p>如果觉得太长的话，极力推荐几条，一定要看的~绝对没坏处</p>
<p>        1.   3.  4.  5.  7.  8.  9. 12.  15.  19.  21.  27.  59.  68.  70.  73</p>
<p>　  1.进入高中，你的所有过去对于他们来说是一张白纸，这是你最好的重新塑造自己形象的时候。</p>
<p>　　2.高中可能有真实的爱情，但只是可能。很多时候他们是因为别人都谈恋爱而羡慕或者别的原因而在一起。</p>
<p>　　3.你在高中有很多意外用钱的地方。为了你的家人和你自己的前途，永远别乱花钱。</p>
<p>　　4.你高中的朋友很可能就是你将来事业的一部分。他们会帮助你。但是你也应该让自己有能够帮助他们的实力，所以，你要努力。</p>
<p>　　5.很多事情当你再回忆时会发现其实没什么。所以，不管你当时多么生气愤怒或者别的，都告诉自己不必这样。</p>
<p>　　6.学习，永远不要忘记。如果你学习失败了，你就什么也不是，当然，也不排除意外，但问题是，你会是那个意外吗？</p>
<p>　　7.别说脏话，你应该知道习惯的力量。你随便的一个字或者几个字会让你在别人心中的形象大打折扣。</p>
<p>　　8.好好利用在公共场合说话的机会，展示或者锻炼。</p>
<p>　　9.别为你自己和别人下定论，这非常重要。你所看到听到的可能只是一面。</p>
<p>　　10.如果你发现很久了你一直是一个人去食堂吃饭或者去上自习，别在意，高中里一个人是正常的。</p>
<p>　　11.很多事情别人通知你了，要说谢谢，没有通知你，不要责怪，因为那些事情你其实应该自己弄清楚。</p>
<p>　　12.”我请你吃饭”之类的话永远不要乱说。</p>
<p>　　13.尊严是最重要的，但在高中里，要懂得利用这个空间锻炼自己，让自己的尊严有足够大的承受力。除了你自己，没人会为你保留它。社会是一个最喜欢打碎人的尊严的地方。</p>
<p>　　14.高中是亚社会，当你上了高年级后，要让自己有大人的形象，大一的孩子看到你，你要能让他们感觉到你是他们的学长，你很成熟。</p>
<p>　　15.你有足够的理由佩服每天早起的人，不信的话，你去做，做到后会发现有很多人在佩服你呢。</p>
<p>　　16.经常给家里打个电话。</p>
<p>　　17.你可以有喝醉的时候，但是你要明白和真正的朋友一醉才能让伤心事休，否则，你只会是别人的谈资和笑柄。</p>
<p>　　18.如果你三年内很少去图书馆的话，你就等于自己浪费了一大笔的财富。</p>
<p>　　19.不论男人还是女人，如果在高中里还把容貌当做重要的东西而过分重视的话，可能不会吃亏，但是早晚会吃亏。</p>
<p>　　20.新学期如果你接新生的话，当被问到学校怎么样之类的问题时，你要记住你不但是这个学校的一分子，你更要给学弟学妹带来信心，你走过大一，你应该知道那时候对学长的信任多深。</p>
<p>　　21.别迷恋网络游戏。千万别。永远别。</p>
<p>　　22.“我爱你”。别对很多人说这句话，在高中里，希望你只对一个人说，这是尊重你爱的人，更是尊重你自己的感情。</p>
<p>　　23.在高中里，你有足够的空间承受失败和打击，因此，你真的应该找找自信和自傲的区别，可以用一辈子的。</p>
<p>　　24.如果你的个性让很多人对你敬而远之，那么你的个性是失败的，个性的成功在于能吸引，而不是能排斥。</p>
<p>　　25.如果把上课不睡觉当做一种锻炼并且你做到了，那么，你将会很强。</p>
<p>　　26.学生会的主席之类的干部，如果你尊重他们，告诉你自己那是因为他们是你的学长而不是因为他们是你的上级。</p>
<p>　　27.别怕丢人，那是一种成功的尝试，不要笑话那些上台丢人的人。</p>
<p>　　28.从绝望中寻找希望，人生终将辉煌。</p>
<p>　　29.如果你不抽烟的话，你的精力将会比抽烟的时候好。</p>
<p>　　30.你的确要学会有心计，但是永远记住，要胜利的唯一的方法永远只是:实力。</p>
<p>　　31.面对不公平的东西，不要抱怨，你不如去努力奋斗，争取你自己最合适的公平。</p>
<p>　　32.人生百态，不要对新的看不惯的东西生气，无所谓的，比如说恋人同居问题，这和我们很多人无关。</p>
<p>　　33.记住:为自己设定一个远大的人生目标，并终生为之奋斗。</p>
<p>　　34.在高中里就开始训练自己的冷静力，这是一种能力，有大事时，能安静并能快速想出办法的人，很厉害。</p>
<p>　　35.高中的竞争范围是所有的高中生，所以，你知道是否敢放松学习。</p>
<p>　　36.大了，成熟了，稳重了，但是这和激情不矛盾，一种对工作和学习的冲击力及持久力会让你有特殊的魅力。</p>
<p>　　37.记住，即便你是学生会主席，如果你的四级没过，没有毕业证，仍然不会有单位想要你。单位需要的是工作的人而不是当官的人。</p>
<p>　　38.永远不要嘲笑你的教师单调，因为有一天现实会让你为这种愚蠢付出代价。</p>
<p>　　39.不要幻想自己能成为招聘会上的宠儿，很快你就会明白:百分之七十的初中生都可以上高中。</p>
<p>　　40.英语一定要学好。</p>
<p>　　41.你可以看不惯一些东西，但是你应该学会接受，如果你没法改变那一切的话。</p>
<p>　　42.对陌生人，或者把对方当做一张白纸，或者把对方当做你的朋友，总之别当做敌人，即使你听到再多的关于他(她)的不好的传闻。</p>
<p>　　43.爱你的人，不管你接不接受，你都应该感谢对方。</p>
<p>　　44.每个星期一定要抽时间出来锻炼身体的。好处多多。</p>
<p>　　45.如果有人嫉妒你，你可以把他从竞争者之列删除了。怀嫉妒之心者，难成大事。</p>
<p>　　46.别去争论，人不可能赢得争论，可以说，争论所提及的话题都是不值得去争论的。</p>
<p>　　47.成功的方法多种多样，别不接受你看不惯的方法。</p>
<p>　　48.男人，你长得可以不帅，但你这个人必须帅，而且，那才是真正的帅。(当然，女人也是同样的道理)所以，不必在穿着打扮上花太多心思。</p>
<p>　　49.别以为在学生会你能得到你曾经想要的。工作的热情很可能因为你所看到的所经历的一些事而改变。</p>
<p>　　50.文或武，你总要有一样。样样通样样松都是禁忌。样样通几样更通方是境界。</p>
<p>　　51.还能冲动，表明你还对生活有激情，总是冲动，表明你还不懂生活。</p>
<p>　　52.如果你不能拥有，那么告诉自己别忘记??如果你能承受那伤痛的话。</p>
<p>　　53.虽然班级的概念在高中并不明显，但是也别忘记，你的同学你的朋友。</p>
<p>　　54.准备考研，早点比晚点好。</p>
<p>　　55.别抱怨四级六级，那是证明你能力的很好的东西。</p>
<p>　　56.要有精英意识，考虑一下，高中的人了，迷恋武侠和言情，已经没有任何意义。</p>
<p>　　57.莫过于耿直，莫过于圆滑。外圆内方是一种视野，视野决定着境界。</p>
<p>　　58.高中的手机是否应该用只有自己有答案。</p>
<p>　　59.永远别渴望做个谁都不得罪的人，在反对和支持声中自己做出决定才精彩。</p>
<p>　　60.要有魄力，即使是失败，也不要让自己的人生平庸。</p>
<p>　　61.喜欢一个人，就勇敢地告诉他或者她。高中是学习的地方，但是我理解爱情的力量。</p>
<p>　　62.应该相信一句话:没有不可能的事情！只要去做。现在我们是学生，十年后呢？</p>
<p>　　63.不要总想是否能成功，既然选择，便当风雨兼程。</p>
<p>　　64.后悔，它是一种耗费精神的情绪，后悔是比损失更大的损失，比错误更大的错误。所以不要后悔。</p>
<p>　　65.我们确实活得艰难，要承受种种外部的压力，更要面对自己内心的困惑。在苦苦挣扎中，如果有人向你投以理解的目光，你会感到一种生命的暖意，或许仅有短暂的一瞥，便足以使我感奋不已。</p>
<p>　　66.每个人都有潜在的能量，只是很容易被习惯所掩盖，被时间所迷离，被惰性所消磨。</p>
<p>　　67.相信时间的力量，可以冲淡很多东西。</p>
<p>　　68.记住:目光要深远。你的目光看多远你就能走多远。</p>
<p>　　69.人生有很多次如果，但是，没有一次“但是”。</p>
<p>　　70.永远不要瞧不起高中里的贫困生。</p>
<p>　　71.在高中时代看看学校的招聘会吧，你会感觉到一种前途的危机。全是人，全是人，全是人……</p>
<p>　　72.越大，我们就会发现对与错越是那么不明显，这不是错，这是事实，而且无法改变。</p>
<p>　　73.记住结交每一个值得结交的朋友。</p>
<p>　　74.无聊的时候，别忘记朋友。朋友无聊的时候，别忘记你是他们的朋友。</p>
<p>　　75.如果你没有珍惜高中这三年，你一定会抱憾终生。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>网址前面显示小图标</title>
    <url>/345/</url>
    <content><![CDATA[<p>哈哈哈,今天再来一个基础的怕自己以后忘记!!!</p>
<p>如果网站的网址前面没有一个小图标的话那就跟我学学吧。</p>
<p>这小图标英文名字为favicon，中文就是网站图标。</p>
<p>其实很简单的</p>
<p><strong>1.可以用iconworkshop软件来设计或者现在网上很多设计ICO的图标,百度”图标的格式为ICO”像素为16X16。设计好后放在网站空间根目录下；</strong></p>
<p><strong>2.找到网页源代码的head部分，并在head部分插入下面这句代码，注意href里的地址是你存放ico图标的地址，根据你网站上存放的位置来写。</strong></p>
<p><strong>&lt;link rel=”shortcut icon” type=”image/x-icon” href=”<a href="http://www.199604.com/favicon.ico%E2%80%9D">http://www.199604.com/favicon.ico”</a> media=”screen” /&gt;</strong></p>
<p><strong>然后刷新看效果。是不是很简单。哈哈哈好吧就好这里了。效果请看本站的也行!!</strong></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>羊年--happy new year</title>
    <url>/430/</url>
    <content><![CDATA[<p>记忆角落恭贺全国人民的朋友、华人华侨：</p>
<p>除夕您团聚香甜</p>
<p>初一您喜庆新春</p>
<p>初二您福贵满堂</p>
<p>初三您福慧双增</p>
<p>初四您大吉大利</p>
<p>初五您满载而归</p>
<p>初六您春风满面</p>
<p>初七您节日快乐</p>
<p>初八您福禄寿存</p>
<p>初九您如意吉祥</p>
<p>初十您万事亨通</p>
<p>十一您一帆风顺</p>
<p>十二您吉星高照</p>
<p>十三您合家和乐</p>
<p>十四您身心安康</p>
<p>元宵您爱情甜蜜</p>
<p>提前抱拳给大家拜年 </p>
<p>记得给我送红包呀！支付宝（<a href="mailto:&#x61;&#x39;&#x35;&#50;&#55;&#50;&#x30;&#50;&#50;&#x33;&#64;&#118;&#x69;&#x70;&#46;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;">&#x61;&#x39;&#x35;&#50;&#55;&#50;&#x30;&#50;&#50;&#x33;&#64;&#118;&#x69;&#x70;&#46;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;</a>）</p>
<p><img src="http://img.taopic.com/uploads/allimg/130610/235099-13061015562271.jpg"></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>新年快乐</tag>
        <tag>羊年</tag>
      </tags>
  </entry>
  <entry>
    <title>美好的事情将要发生。</title>
    <url>/391/</url>
    <content><![CDATA[<p>你们看到这个主题就知道我这次要说啥了。</p>
<p>美好的事情将要发生。这周美好的事情真的发生了、各种千元8核手机，小米你为何怎么吊你爸妈知道吗？</p>
<p>虽然这对国人来说是一件好事、但是我觉得对国内的手机厂商真是个悲伤的事。</p>
<p>各种手机商把自己的面都拉低了！</p>
<p>先是酷派然后是天语然后红米然后华为然后联想、乐蛙、谷峰、北斗、美莱士、中兴、华硕、天语TCL、欧盛等等的手机商！</p>
<p>或许这个时候IT人士此时的心情是sad.</p>
<p>而联发科呢可能是我为什么会研制出这个给中国做山寨！</p>
<p>我只想说这只是华为为了对抗小米而做出的应战为何其他厂商也要参战呢。或许这也该要问问小米了。</p>
<p>最后我就吐槽一下小米吧。</p>
<p>“永远相信美好的事情即将发生”，这句英文翻译连标点符号都没有注上的拗口文案的诡异点在于：<br>（1）永远有多远？红米手机到了明年估计都成渣了吧，如何永远？谈永远的企业，基本上都是土鳖。<br>（2）“美好的事情即将发生”，这是不是说，美好的事情之前从没有发生过？红米手机的用户，需要这么悲惨吗？<br>（3）“即将”是多久？你们动辄几秒钟就“抢”完了几十万台，如果“美好的事情”一个月、两个月、三个月都没有发生，用户是否有被欺骗的嫌疑？</p>
<p>雷军就是挖了一个大坑，一个红米把大部分国内厂商拉下了水，可惜雷军根本不在乎产品本身，手机卖多少钱无所谓，只要不赔就行，能赚钱就更好了，最重要的是赚到关注，雷军真正在乎的是整个大战略，小米是互联网公司，而不是简单的硬件公司。小米只是简单的虚晃一枪所有的厂商都不淡定了，而小米最重要的部分被他们所忽视，正在拼命的壮大！</p>
<p>还是那句话、手机性价比高对我们是好事但是对国内的手机商的做大做强就是一件噩梦。  </p>
<p>以上都是我的个人说法。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>老天在磨练我。</title>
    <url>/335/</url>
    <content><![CDATA[<p>在这两个星期内,我坚持到了。头很疼,全身都热。也坚持在学校奋斗,但是现在已经不行了。</p>
<p>今天去医院做了一个CT。700+.</p>
<p>哈哈哈CT结果是：左侧上颌窦，筛窦，蝶窦炎并左侧鼻息肉形成。下鼻甲肥厚。</p>
<p>哈哈哈,明天就去医院了哈哈哈</p>
<p>又要请一个星期假,我的功课我的作业我的知识!!!!你妹你妹,我的成绩不就会查了吗&gt;?我需要努力知道吗？</p>
<p>好吧我也不知道说什么好,老天你就继续的磨练我吧。我可以顶,</p>
<p>嗯哈,做手术的钱多少我也不知道。哈哈哈,这不就给我爸妈一个压力了ma?</p>
<p>好吧我说什么好呢</p>
<p>哈哈哈哈哈哈哈哈哈哈,我只能笑了</p>
<p>我需要努力知道吗？</p>
<p>好吧。没了goodbey.</p>
<p><img src="http://qn.199604.com/typoraImg/6a5bbb61jw1e3wcss8l6wj20cs0g73z4.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>老父亲挂号见医生儿子：就想让你歇会!</title>
    <url>/468/</url>
    <content><![CDATA[<p>近日一段根据真事拍的视频火了。</p>
<p>北大人民医院急诊医生迟骋的父亲从济南来看他，发现夜班诊室排长队，就挂了号。</p>
<p>排到时，迟医生习惯性地问：“您怎么不舒服？”听到的却是熟悉的声音：“儿子，我没不舒服，就是想让你歇会，喝口水。”</p>
<p>新年快到了，不管你过忙。</p>
<p>请打一个电话给父母。</p>
<p>常回家看看父母。</p>
<p>以前不觉得父母的重要。</p>
<p>渐渐长大后。</p>
<p>才懂得珍惜和父母在一起的时光。</p>
<p>最后，提前和大家拜个早年。</p>
<p>新年快乐！红包拿来！！{smile:1}{smile:1}</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>抒发</tag>
      </tags>
  </entry>
  <entry>
    <title>聆听岁月</title>
    <url>/351/</url>
    <content><![CDATA[<p>岁月如酒，落叶知秋。蓦然回首，醇意甚浓。</p>
<p>十七个春夏秋冬，匆匆地向我走来。十七岁的我已经成长了。再也不像以前那样雅气了。对于过去的欢乐时光，是多么的童真、无邪，没有一丝丝的烦恼。虽然我不想长大，但是没有人永远长不大，毕竟人总是会长起来、会成熟。</p>
<p>对于过去的我，我只能怀念。</p>
<p>小学的我充满活力，看似携带这软弱外表的我，里面却装着无数的珍宝。包括聪明、好动、重情义，甚至还要一颗好奇心和雄心壮举。那时候，我们三五成群，效仿桃园结义。有福同享有难同当就成了我们的友谊月老。我们都有着一样的雄心壮举。大江东去；浪涛惊千古风流人物呀……正因为有这些古诗，才使我们有共同的话题，有着共同的理想。岁月不饶人，短短的七年，转眼间过去了，你我都为了自己的理想前进，纵然有着万分不舍，但还是相相告别了。时间一直冲淡着我们的友谊，即使这样我们的心还有月老的红线相连。</p>
<p>初中的我，面对新的同学，新的朋友竟然感到害羞，不敢主动与他们交朋友、与他们交谈。只是一味的埋头苦读。直到初三，我很有缘分地进入了一个快乐、积极的班级。他们都很聪明、很可爱、更有一颗颗理想上高中的心。面对他们的热情，我勇敢地伸出了双手。很快地，我就融入了这个温馨的大家庭。我们九十四班的口号就是“人难我难我不畏难，人易我易我不粗心。”每当这口号响起的时候，我们都有一阵的感触。那一年，我们一起学习，我们一起唱歌、一起度过美好的时光、一起度过了体育加试……还记得我们的化学老师吗？由于他的原因，才让我酷爱化学。每逢晚上，当他坐班时，他都会跟我聊天，勉励我，让我感到心暖又紧张!!!还记得我们中考之前，我们早上六点前集体回到课室一起奋斗吗？还记得我们晚上晚自习下课了还在课室奋斗然后在后面拿汽水盖踢下足球吗？……这些我都历历在目。</p>
<p>现在的我已经长大了。不再贪玩了。也不再放纵自己了，我常对自己说:“人生能有几个想这样的青春，可为自己的目标，真真正正地去努力一回是义无反顾的。”</p>
<p>拼搏最美的格言”不在于天长地久，只在于曾经拥有。”</p>
<p><img src="http://qn.199604.com/typoraImg/alt6615735.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>岁月</tag>
      </tags>
  </entry>
  <entry>
    <title>致20岁的自己</title>
    <url>/476/</url>
    <content><![CDATA[<p>嗯哼  不知不觉中</p>
<p>20岁大门已经敞开</p>
<p>说实话，我不知道该以什么心情去接待这由一变成二</p>
<p>这也不仅仅是时间的改变 </p>
<p>更多的是内心的转折与彷徨</p>
<p>回想19岁的时候</p>
<p>认识很多很多同学，朋友，小伙伴</p>
<p>在大学中相遇了三个傻逼舍友</p>
<p>加入了职创社</p>
<p>和小伙伴们一起努力的成长、学习</p>
<p>也在可哥这个大益友中学到了如何做人做事</p>
<p>也去努力的挣钱养自己</p>
<p>试着去让自己能多经历点</p>
<p>试着让自己能多变得成熟</p>
<p>虽然经历了的事情不算多</p>
<p>但是我可以从自己的一些错误中学到很多</p>
<p>比如会从中得到什么</p>
<p>如何去做</p>
<p>从中你是得利还是得弊</p>
<p>嗯我也明白了做人需要大度</p>
<p>需要换位思考，因为每个人也会有他的难处</p>
<p>毕竟学会理解他人</p>
<p>也能获得更加宽阔的空间去让自己遨游在顺畅的环境中</p>
<p>嗯，无论未来如何</p>
<p>我都希望我自己能带着最初的勇气与坚持</p>
<p>做下去 ，少做错事多成长</p>
<p>最后，我想说，郭良俊，二十岁快乐！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>致20岁的自己</tag>
      </tags>
  </entry>
  <entry>
    <title>致敬科比&amp;96黄金一代</title>
    <url>/465/</url>
    <content><![CDATA[<p>nba2015-2016赛季已经过半</p>
<p>科比的最后一个赛季也已过半</p>
<p>一代传奇的谢幕</p>
<p>不管你爱不爱他(科比)</p>
<p>但他是真的陪伴着我们的一代</p>
<p>以前老爸曾说乔丹是他的偶像</p>
<p>而我以后我能对我儿子说</p>
<p>科比，曾是我的偶像</p>
<p>科比选择赛季结束后退役</p>
<p>他的比赛也是看一场少一场了</p>
<p>他年轻的时候我们见证过他的辉煌</p>
<p>现在他要谢幕了</p>
<p>我们依然会陪伴他</p>
<p>多少人曾爱慕你年轻时的容颜</p>
<p>可知谁愿承受岁月无情的变迁</p>
<p>谢谢您们陪我们一起成长，老家伙再见！</p>
<p>以下两个MV送给科比&amp;96黄金一代的老家伙们！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>96黄金一代</tag>
        <tag>科比</tag>
      </tags>
  </entry>
  <entry>
    <title>致电京东客服有感</title>
    <url>/123/</url>
    <content><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><strong>前言</strong>：</h3><p>如果我博客无法访问了</p>
<p>请想我，因为我是冒着给京东D/CC我的风险去吐槽！</p>
<hr>
<p>从六月份到现在</p>
<p>我京东账号基本是全部卷是无法去领取的</p>
<p>于是去找京东客服</p>
<p>不管是在线客服，电话的VIP专属客服</p>
<p>压根就是给你的答复是概率性、多尝试、不行就给你留个工作邮箱….</p>
<p>尼玛，你真的很气，留了工作邮箱也就算了</p>
<p>说还是领取不到就发邮件过去</p>
<p>我一共发了5件！</p>
<p>没有一件是回复我的</p>
<p>您至少回复收到，等待处理吧！</p>
<p>但是这种还是不会太过气</p>
<p>最气的莫过于</p>
<p>致电京东客服，客服转到专员</p>
<p>专员直接慢慢的一句一句的磨掉你的火气</p>
<p>慢慢的浪费你的电话费（我已经浪费了不下50块的话费）</p>
<p>最后京东那边还是找不到根源</p>
<p>又不承认我的号已经给黑了（拉黑）</p>
<p>死活都说是概率性问题</p>
<p>尼玛！半年多的事情都是概率性的问题</p>
<p>然后那个客服就给我说让我去换个号去尝试如果可以</p>
<p>那么就是系统的问题，这NM就是傻逼？</p>
<p>我特么可以用50个号都能领取的号</p>
<p>就现有的号不可以</p>
<p>好了最后我是这样去总结</p>
<hr>
<p>大概意思是说明情况</p>
<p>你就说领不到券，正常的合法权益受到影响，</p>
<p>很多商品是2000-100或者150的，</p>
<p>对于你买东西能便宜不少，为啥不争取，等等这些吧，</p>
<p>你千万别和客服和高级专员墨迹，你去联系让他们给你转技术部负责。</p>
<p>或者直接让他给你发你在京东账号内部的信息！</p>
<p>这个的话给你预约。最后记得记住专员工号！</p>
<p>因为有可能给你说技术部那边正常。</p>
<p>这样子的话可以去投诉了！</p>
<p>12315投诉或者到21CN聚投诉吧！</p>
<hr>
<p>下面是来自知乎-</p>
<p><img src="http://qn.199604.com/jd1.jpg"><img src="http://qn.199604.com/jd2.jpg"><img src="http://qn.199604.com/jd3.jpg"><img src="http://qn.199604.com/jd4.jpg"><img src="http://qn.199604.com/jd5.jpg"></p>
<p>现在黑号洗白的唯一办法就是拨打01012315，然后工作人员会登记你的投诉要求，你的联系手机号，最后直接说不要走绿色解决通道，直接通过高新区的工商分局和京东联系，北京高新经济产业区工商局的人会先打你手机号，然后京东客服打你手机，只有这个京东客服来电才有可能帮你洗白，不过有可能几天，帐号又可能黑掉 ！ 你直接拨打京东客服电话或找在线客服，就算升级到客户关怀部主管，永远也不会帮你解决！ 我几个钻石全给黑了，大部分券都不领取 京东有个叫做“京东卫士”的销售风险防护系统，其将京东顾客根据购物风险指数 分10个等级，其中5<del>10级为高风险用户（黑号）。 其中 5</del>9级为高风险(低利润)用户：可简称为 淡黑、初级黑、中级黑、高级黑及黝黝黑 10级为恶意用户：可简称为 乌漆嘛糟黑 高风险等级用户的判定主要根据下述用户行为分析准则： 1.多地点下单，比如，北京、西安、沈阳、上海、广州什么的(防止代下)。 同一个地方下多地址，多电话订单好像没事。 2.有拒收行为，大家电一次拒收即成立 3.有拆单行为 4.使用小额京卷大量自提秒杀商品(好像是3单，就算大量了。下同) 5.每天登陆帐号 您没看错，这也算一条。 6.大量领卷，又不使用 7.历史上使用过3个及以上增值税开票信息 8.无理纠缠在线客服、电话客服 （无理的解释权归京东所有，比如你非要客服修改配 送日期，即算无理） 9.图书、电器等一单下多个(比如图书每种5本以上、电视好像一个订单里面超过2个） 用来防止经销商进货 10.频繁取消订单 11.大量自提满足免费配送条件的订单（同类商品越多，等级越高） 12.短时间(比如三个月)内购买多个同类高值商品(比如多个iphone、多个电视、多个笔 记本等) 13.和超过5个帐号使用同样的收货信息，如果订单商品雷同就应提高风险等级。 恩，没错。意思是总是找人下单自己也会被黑。 14.大量使用礼品卡下单（比如您一年消费4万块，95%以上使用礼品卡结算） 15.积分*10+京豆数 1、京东内网订单页面，输入订单号后会跳出下单商品以及下单人的相关信息，在账户名称的右边会有一个带颜色的正方形小框，绿色为无风险或低风险客户，红色为最高风险级别（通常由于赔付率过高导致）。同时该页面可以操作拉入黑名单（前段时间实测拉入此黑名单后只是不能下货到付款订单，货到付款选项会直接不可用）。若是无法领券，非绿色标识用户一般就不能领了，抢购更是如此。若标识为橙色或红色，则无法进行京东APP签到领京豆。（会提示“现在人数过多，待会儿再来吧”） 2、京东客服在查看追踪事件的页面可看到用户等级，也是在客户账户的右边，若是D，则说明为D类用户，此类用户通常为赔付超2000的用户（恶意索赔用户）。也就是在这里，能够看到用户的毛利率信息以及被加入至哪个黑名单（赔付黑名单、售后黑名单、风控黑名单……） 3、售后查询页面，可查看到用户的魔镜信用、用户属性标识（普通客户/重要客户）、售后服务信用值以及是否售后黑名单。<br><br>京东在成都有个部门专门负责D类用户的问题，叫做“风险客户服务部”。在宿迁有个专门受理投诉需求非常强烈的部门，叫做“关键用户组”，隶属于客户关怀部。 很多客服确实是不知道客户账号处于黑名单中的，他们判断客户是否在所谓的黑名单中的方法就是看“用户有效性”，但这个没什么用处，黑名单客户也是显示有效的，不能作为判断依据。</p>
<hr>
<p>作者：Magic蛋蛋 链接：<a href="http://199604.com/">https://www.zhihu.com/question/26437925/answer/129219749</a> 来源：知乎 著作权归作者所有，转载请联系作者获得授权。 我主观臆测京东的的确确是有风控系统（黑号），至于有些人说的风控各种等级我不清楚，我毕竟不是京东的员工。 我的账号问题是 1.领不了任何京东的自营优惠券（pc端/手机端/微信端） 2.不能参加活动（比如中秋的时候有个嫦娥奔月的优惠券活动，我的账号是领不到券的，我太太的账号可以领取2次） 3.手机端签到京豆需要拼图。 4.我的账户看某件可以用品类优惠券或者京东活动优惠券的商品时在标题下是看不到优惠券领取提示的，我太太账户正常。 先交代下过程，我在今年上半年在京东买过一台手机，之后第二天用了无理由退款。因为我大多网购是在某猫购买的，所以当时并没有发现账号的异常。（后来黑号寻找原因，怀疑是这次退货，当然这也是我的猜测） 之后在8月的时候上京东买东西发现了领不了任何自营优惠券，故就上了我太太的账号，领了优惠券（当时多点了几张面额都能领）。 然后就感觉到有问题，随后百度一下，发现很多人都有类似的问题。 再然后本着无聊和好奇的心态连续试了几天都不能领。同时用了我太太和我朋友的账号都是没有问题，可以领取任何自营券。 随后致电京东客服，京东客服做出了解释为:京东的优惠券都是随机性的，不保证每个用户可以领取。我表示不接受这个说法，客服说会和上级反应之后有专员回我电话。 至此展开了为期一个半月，一共13通电话的里程。 当中无数扯皮，为了简化我说下我的主要诉求和态度。 1.我不接受京东提出的几率解释，几率的意思应该是等同于概率也叫或然率。简单来说应该是呈现为不可预测。但是我的账号是每一天100%不能领取任何自营券。这种状态我认为是规律。 2.基于第一点，我要求京东做出合理解释。 （京东方坚持第一种解释） 3.京东无法做出合理解释的情况下，我要求京东提供邮件或公司地址，我们双方一起来客观记录我的账号领券的状况，让第三方来评估这种状态到底是几率还是规律。 （京东不肯接受我的方案） 4.基于第三点，因为京东不肯接受，但是又无法证明这是概率，所以我坚持认为这是规律。既然领券是程序上的事情，程序是死的，所以我主观臆测我的账号无非两种情况。第一我的账户被动出现了问题。第二京东主动把的账号进行了类似于风控的操作。 （后期电话京东已经不用几率来做解释，就说已经帮我查过，我的账号没有问题，让我过几天再尝试） 5.基于第四点，如果京东不承认存在风控系统，那就是我账号有问题，那么京东应该跟我道歉并解决问题。 （这里不得不说下，京东每一次回电速度都很快，平均3天给我一个电话，态度也不错，但是大多数的客服都是机械回答，态度好也不解决任何问题，其中只有两位客服是说正常话的， 他们也承认的确是有问题） 最后我多次表明我的态度，只要京东不解决我的问题，我不会不了了之。 九月末其中一位说正常话的客服和我沟通后表示模拟了我的账号帮我领取了一张优惠券，并用肯定的语气向我保证我的账号没有问题了。 当时试了下的确好了。但是大约4天后又不行了。于是又是电话沟通。 在10月中旬客服打给我的第13个电话后，我再试了下可以领取所有的京东的自营券了。也能参加活动。签到不用拼图。总之一切正常变成了所谓的大白号。 我不知道京东是被我坚持的态度感动了，还是查了我的状态，认为我不是恶意客户。又或者觉得我无休止的盯着他们太麻烦了。总之还是解决了。这一会到现在我的账户都是正常的。应该是彻底解决了。 下面是我的感受，我肯定认为当时我的账户是有问题的，京东解释的几率明眼人一看就知道不合理不是事实。至于最后我的账户正常了，但是最早的问题到底是因为客观系统问题，还是京东主观造成（风控/黑号）。相信大家也是了然于心。 因为我现在可以算半个无业游民，所以有大把时间和京东撕逼。我不在乎10元20元的优惠券，但是我在乎别人能有而我不能有，这种不公平且不公开的待遇。 当然京东最后如果不帮我解决，我也会坚持，但是也拿京东没什么办法。当时我也没抱有希望。只希望京东能够明说:我就把你拉黑了，怎么滴了？ 我也就不计较了。跟无赖有什么好计较的？就看不惯有些人看上去人摸人样背地里却是些鸡鸣狗盗之徒。 最后说下京东有风控系统无可厚非，我也认为非常有必要，毕竟有些恶意的顾客，黄牛，还是很多的。系统误伤也正常，但是我就退了货而已，给我感觉就是玩不起还要玩。当然我退货黑我也没有问题，你就直说我是低利润客户或者有风险客户限制我领优惠券。就好比你们的金牌账户/钻石账户享受不一样的待遇，大家可以接受。 再申明下本人网购多年某猫上消费xx万，京东也有3到4万，用过无理由退款的只有2次，从来不给差评。我不认为我是恶意客户，至于是不是低利润客户，我不在乎，大家见仁见智。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>京东</tag>
        <tag>狗东</tag>
      </tags>
  </entry>
  <entry>
    <title>致高三</title>
    <url>/281/</url>
    <content><![CDATA[<p>刚才看新闻,记者问高三的学生考完了什么感想,他们都很兴奋地说解放了！如果我是他们我也会觉得解放了,正如我中考完的那时候一样。可是我高中了才发现那是另一个起点。以前的英语老师跟我们说过,她的大学生活比高三还苦,起得比高三早,睡得比高三晚,整天泡在图书馆里,我们以为的结束其实是开始。我想,高三的师兄师姐以后便会知道,“你以为你逃离了的是地狱,其实是天堂。“ 比如我的初中生活。我初中那时觉得高中好酷,不会被大人说是小孩子,觉得高中生好高大上,真想直接跳到高中读啊。那时候的日子好像过得很漫长,初一初二都是玩过去的。然后就到初三了。初三有体育训练,各种各样的考试,可是我都坚持下来了,从来没有过的坚持。为了我爱的那个男生。后来我考上了理想的这所学校,可是我却开始无止境地怀恋初三的日子。怀恋那时候奋笔疾书的自己,就算是最不擅长的拉韧带也不放弃的自己,很团结很融洽的班级,还有体育加试那种紧张兴奋的心情。到现在为止,初三是我最怀恋的一年,没有之一。  </p>
<p>只要是高三有奋斗努力过的师兄师姐们,多年后肯定会怀恋澎湃的那一年。反正我认为是这样的。所以呢,我希望准高三的同学要加把劲啦,别辜负了自己的青春。  </p>
<p>小俊捞逼小高考人品大爆发啦哈哈哈我相信你可以的<br>第一次写博有些些紧张<del>谢谢你看完</del>(???)/~晚安</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>苦尽甘来</title>
    <url>/375/</url>
    <content><![CDATA[<p>2013最后一个小时了。恩我和她又吵架了或许这跨年还是要自己一个人过了。嗯哼还是不说了说说别的吧。</p>
<p>生活,就好像一个万花筒,有酸.甜.苦.辣许多往事.</p>
<p>人与人之间为什么会有这样的区别.”为什么要分等级.”有钱人就可以上好的学校,吃好的,穿好的,用好的等等.”而我们不富裕的子弟却恰恰相反.”为什么啊……为什么啊?</p>
<p>为什么,因为你事一个傻逼,是的,人生生活是没有的比较的,你越比较你就越觉得忏悔,越觉得自己很没有面子越觉得你TMD为什么投胎不回投.那都是你自己没有运气而已如果换做你是他们,你也不必比他们差甚至比他们好也说不定.</p>
<p>好了好了不说了</p>
<p>2013-2014跨年吧.伤我的人??努力原谅你,我伤的人……想?对不起 爱我的人……真心谢谢你,我爱的人……一直祝福你,陪我的人……永?感激你,心累了～休息休息,人累了～放松放松,失去的不再回来,回来的更加珍惜[爱心]2014过去吧.好的来.坏的滚.</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>菜鸟的shell-删除5天前的文件</title>
    <url>/1017/</url>
    <content><![CDATA[<p>因为需求原因，要每天定时去删除指定目录下超过5天的文件。</p>
<p>刚开始我想用java，因为本职就是写java的，但是梳理了一下，卧槽java写删除文件居然要那么多(主要是懒)…..</p>
<p>于是乎，想到了shell，emmm，这问题来了，自己又不会，也没有学过shell，辣鸡学校出来的大专鸡那也只能自己厚着脸，自己去写，花了一下午百度+实践初成品的代码思路：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">location=&quot;/home/update/*&quot;</span><br><span class="line">find $location -type f -mtime+1 | xargs rm -rf</span><br><span class="line">find $location -type d -mtime+1 | xargs rm -rf</span><br></pre></td></tr></table></figure>

<p>ps:<br>location 是设置查找的目录<br>–mtime +30 是设置时间为30天前<br>-type f 这周查找的类型为文件<br>-type d 这周查找的类型为文件夹<br>N分钟前 -mini +N</p>
<p><img src="http://qn.199604.com/typoraImg/83b1e927e9c042569606e63e71a89ed3.png" alt="img"></p>
<p>然后测试运行也遇到几个问题…</p>
<p>首先就是你在window 上写shell脚本的话，然后上传到linux运行，会报错的–&gt;”-bash: ./test.sh: /bin/sh^M: bad interpreter: No such file or directory”</p>
<p>度娘解决的办法是运行一下这个命令：<code>#sed -i &#39;s/\r$//&#39; test.sh</code></p>
<p>或者vi 脚本，底行模式，输入 <code>set fileformat=unix</code></p>
<p>具体为什么出现这个错误的话，问题其实很简单，写java也会经常遇到的。</p>
<p>因为在windows下编写shell脚本回车符是\n\r，而linux下的回车符是\n，所以在linux下运行脚本的时候，需要修改下脚本的的编码格式。</p>
<p>然后就是自己遇到一个傻吊问题，可能写java习惯了 a = b，等于之间有空格，shell脚本也不认..</p>
<p>最后修改的代码如下，也感谢我公司shell大神的指导，也让自己入门了shell，哈哈哈哈哈哈….</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">FILE_DRI=&#x27;/home/update/&#x27;</span><br><span class="line"></span><br><span class="line">#在/home/update/目录中查找更改时间在5日以前的文件并删除它们：</span><br><span class="line"># find /home/update/ -type f  -mtime +5 -exec rm &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">for file_pwd in $(find $FILE_DRI -type f -mtime +5);</span><br><span class="line">do</span><br><span class="line"> file_size=$(du -sh $file_pwd | awk &#x27;&#123;print $1&#125;&#x27;)</span><br><span class="line"> rm -rf $file_pwd &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"> if [ ! -f &quot;$file_pwd&quot; ]; then</span><br><span class="line">	 rm_date=`date +&quot;%F %T&quot;`</span><br><span class="line">	 echo &quot;$rm_date | $file_pwd | $file_size 已删除&quot;  &gt;&gt; /home/rm.log</span><br><span class="line"> else </span><br><span class="line">    rm_date=`date +&quot;%F %T&quot;`</span><br><span class="line">	echo &quot;$rm_date | $file_pwd | $file_size 删除失败 &quot; &gt;&gt; /home/rm.log</span><br><span class="line"> fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>菜鸟的入门shell..记录撸码完毕…</p>
<p>如果需要让他定时的话，linux有自带的定时命令吧?好像是叫crontab定时执行任务命令。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>Linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>要知足也要不满足</title>
    <url>/340/</url>
    <content><![CDATA[<p> 面对成绩，不满足让自己更加充满斗志。 “不想当将军的士兵不是好士兵。”拿破仑的话告诉我们，不满足是成功的前提。爱迪生用智慧点亮世界，袁隆平用汗水使饥饿远离，贝多芬用血泪感动世界。是什么让他们取得如此辉煌的成绩？是不满足。</p>
<p>有人说，不要老想着你没有什么，而要想到你拥有什么；也有人说，不要去想着你拥有什么，要想到你没有什么。细细想来，确实如此。当你失去的时候，不要耿耿于怀，懊恼不已，不如享受自己已有的，也许会轻松许多。</p>
<p>当你已拥有了自己渴望的东西，回顾一下，是否失去了什么，还欠缺什么，切忌不思进取。</p>
<p>面对苦难，知足让自己更加愉悦地去克服它。知足常乐，知足，苦难的止痛剂。</p>
<p>双腿瘫痪，终身只能与轮椅相伴，史铁生终究只是个普通的人。他不是神，有过迷惘，想过轻生，但他终究是战胜了自己。尽管自己不能像刘易斯那样在赛场上跨过鲜红的终点线，但自己还有头脑，还可以畅所欲言。他把自己的所思所感，化作一泓沁人心脾的清泉，浸润着世人那干渴的心灵。正因为知足，他乐观地面对苦难，从容地面对死亡。如果当初他屈服于苦难，不懂知足，又何来今天。</p>
<p>“如果这一生不幸，我希望有来生，如果这一生是幸福的，我今生已是满足的了。”是啊，没有高官厚禄，但我有怡然自得、无拘无束，没有健全的身躯，但我有灵活的大脑。知足让自己活得更潇洒。然而，面对苦难要知足，却不代表凡事都安于现状，不思进取。锐意进取，不满足于一点小小成就，才可能绽放人生的光芒。</p>
<p>同样的起步，却有不同的终点，原因在于取得成绩时的态度，沾沾自喜终究止步不前。明确目标，更加不懈地为之奋斗，才可能达到成功的彼岸。</p>
<p>面对成绩，不满足让自己更加充满斗志。  “不想当将军的士兵不是好士兵。”拿破仑的话告诉我们，不满足是成功的前提。爱迪生用智慧点亮世界，袁隆平用汗水使饥饿远离，贝多芬用血泪感动世界。是什么让他们取得如此辉煌的成绩？是不满足。不满足让爱迪生实验几千次仍不言弃；不满足让袁隆平田间挥汗，几十年如一日；不满足让贝多芬失聪后仍不舍不弃。</p>
<p>知足，让伤痛化为力量；不满足，让平庸蜕变为伟大。知足却不满足，让人生的麦田收获迷人的黄金。</p>
<p>所以每个人都要知道,知足了也需要有不满足的心,还要几年就高考了对这个心情是高一分班的第一个星期，说很开心是假的。难免会有一个不舍的心情，因为看到新的同学新的班主任新的科任老师。但是也是一种新交朋友的机会也是新机遇!!!</p>
<p>知足吧努力吧三年高中虽然很多得失。但有目标有方向就不会觉得孤单因为战胜的敌人就是自己!!!</p>
<p><strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足<strong><strong>知足</strong></strong>知足****知足</strong></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>解决failed to push some refs to git</title>
    <url>/679/</url>
    <content><![CDATA[<p>新手使用git 遇到第一个小问题做的小笔记</p>
<hr>
<p>在使用git 对源代码进行push到gitHub时可能会出错，信息如下 </p>
<p><img src="http://qn.199604.com/typoraImg/git20170920002403.png"> </p>
<p>出现错误的主要原因是github中的README.md文件不在本地仓库的代码目录中 可以通过如下命令进行代码合并</p>
<p>【注：pull=fetch+merge] <code>git pull --rebase origin master</code> 执行上面代码后可以看到本地代码库中多了README.md文件</p>
<p> 然后再执行语句?<code>git push -u origin master</code>即可完成代码上传到github</p>
<p><img src="http://qn.199604.com/typoraImg/git2-20170920002651.png"></p>
<hr>
<p>还有一种可能就是github上的版本与本地版本冲突(或者是不一样) 很经常我们在本地git init 之后没有 git pull -f –all 然后就git add .?导致github上的版本里有readme文件和本地版本冲突。 也很容易造成?failed to push some refs to git 谷歌上说的是使用?<code>git push -u origin master -f?</code> 勾选强制覆盖已有的分支(可能会丢失改动)，即强制上传文件到github..</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Launch CSM - 设置U盘启动</title>
    <url>/456/</url>
    <content><![CDATA[<p>    <strong>解决Launch CSM - 设置U盘启动 - 华硕笔记本专用</strong></p>
<p> <strong>最近在学校不知道为什么老碰到使用华硕笔记本的同学，老是说用U盘不能装系统。U盘制作成启动盘之后，调整启动项里面并没有u盘，也就是说无法进入U启动盘维护系统！然后我回宿舍也试了下用U盘重装自己的华硕手提是否也是出现这种情况，结果你们都是知道的。现在很多新出厂的手提都在BIOS里面设置锁住了，不管是用U盘、硬盘还是光碟都不行重装系统！！（奸商）</strong></p>
<p> <strong>于是我就弄了一个小小的教程出来看看咯。网友们自己看！</strong></p>
<p> <strong>大家都知道，进入启动盘的方法有两种，华硕快速启动键是esc，很多同学在使用快速启动键之后找不到u盘启动项，进入bios调整，同样看不到u盘，如同下图这样：</strong></p>
<p> <strong><a href="http://199604.com/content/uploadfile/201510/76571445564240.png"><img src="http://199604.com/content/uploadfile/201510/76571445564240.png" alt="201506091057264141433818646.png" title="点击查看原图"></a></strong> </p>
<p> **该如何更改呢！  </p>
<p>    第一步，找到 Hard Drive BBS Priorities  更改硬盘驱动器启动优先级设置,，进入之后，更改boot option #1为你的u盘！**</p>
<p> <strong><a href="http://199604.com/content/uploadfile/201510/fb5c1445564312.png"><img src="http://199604.com/content/uploadfile/201510/fb5c1445564312.png" alt="点击查看原图" title="点击查看原图"></a></strong> </p>
<p> **第二步：f10保存之后，重启电脑，然再次按快速启动键，就可以看到u盘了！  </p>
<p>    另外，如果出现以下uefi启动现象，请调整为兼容模式或者使用uefi版本制作启动盘！  </p>
<p>    uefi版本制作方法点我快速转到。  </p>
<p>    调整兼容模式方法如下：**</p>
<p> <strong><a href="http://199604.com/content/uploadfile/201510/10fb1445564397.png"><img src="http://199604.com/content/uploadfile/201510/10fb1445564397.png" alt="点击查看原图" title="点击查看原图"></a></strong> </p>
<p> **按照错误提示，进入Security选项，找到Secure Boot Control选项，将其设置为Disabled ，在回到boot界面，将launch csm设置为enable就能解决问题！  </p>
<p>    调整完成之后界面如下:**</p>
<p> <strong><a href="http://199604.com/content/uploadfile/201510/09dd1445564403.png"><img src="http://199604.com/content/uploadfile/201510/09dd1445564403.png" alt="4.png" title="点击查看原图"></a></strong></p>
]]></content>
      <categories>
        <category>分享资讯</category>
      </categories>
      <tags>
        <tag>U盘启动</tag>
        <tag>华硕手提</tag>
      </tags>
  </entry>
  <entry>
    <title>警惕假冒“京东金融”注销的电话--&gt;在校类京东账户团伙诈骗</title>
    <url>/1575/</url>
    <content><![CDATA[<p>今天中午1点半左右接到了一个电话，对方开口直接你是不是谁谁谁的，说是不是在河源职业技术学院毕业的….说了一圈都说对了，然后我就继续往下听了，他说根据国家相关规定，不让学生贷校园贷，说我17年开通了京东金融(我14年的时候已经开了)，并且说我分期了一台宝马X1，现在还没有还..(我当场懵逼了，我他妈17年能分期宝马X1，我现在还打工？)，然后我有装着一直再听，又说现在系统升级整改，能帮我注销账号然后又说出了我身份证信息，不注销账号会上征信?会影响以后贷款啥的..啪啦啪啦的一堆，现在骗子的手段都那么低的吗？都2020年还私人电话？人家京东金融都有对应电话哥… 电话我也录音了，但录音有我身份证信息就不放出来了….16211721966这个电话居然是北京电信？迷呀迷… 然后看了一波知乎和B站都基本上都是这几年毕业学生居多，呵呵相关部门真好呀~ <a href="https://www.bilibili.com/video/av540128477/">https://www.bilibili.com/video/av540128477/</a> <a href="https://www.bilibili.com/video/BV1DE41157Qv?from=search&amp;seid=17629184298394615220">https://www.bilibili.com/video/BV1DE41157Qv?from=search&amp;seid=17629184298394615220</a> <img src="http://199604.com/wp-content/uploads/2020/05/20200530155151-492x1024.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>认证Kerberos踩过的坑-kinit认证失败</title>
    <url>/1146/</url>
    <content><![CDATA[<p>小白记录吧…因为自己之前可以搞过，最近弄了kafka消费的东西，程序消费失败，看了报错日志是认证过期，然后手动认证。</p>
<p>于是乎就有了… kinit -kt 认证的时候 直接报错： <code>kinit: Clock skew too great while getting initial credentials </code></p>
<p>然后查看了linux的时间相差有点大–&gt;客户端与认证服务器的时间差距太大，将客户端与认证服务器的时间同步即可。 </p>
<p>题外话：<a href="https://www.jianshu.com/p/69e6a2e7c648">Kerberos命令使用</a></p>
<p> <img src="http://qn.199604.com/typoraImg/20180801232922.jpg"></p>
]]></content>
      <categories>
        <category>啥折腾</category>
      </categories>
      <tags>
        <tag>Kerberos</tag>
        <tag>kinit</tag>
        <tag>klist</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一下最近很火的用一行代码实现网页变灰</title>
    <url>/1433/</url>
    <content><![CDATA[<p>2020 年 4 月 4 日，星期六，清明节。基本上你看到的主流网站都变灰白了(虽然我的也是…)，大家可以看到全站的内容都变成灰色了，包括按钮、图片等等。这时候我们可能会好奇这是怎么做到的呢？</p>
<p>有人会以为所有的内容都统一换了一个 CSS 样式，图片也全换成灰色的了，按钮等样式也统一换成了灰色样式。</p>
<p>但你想想这个成本也太高了，而且万一某个控件忘记加灰色样式了岂不是太突兀了。</p>
<p>其实，解决方案很简单，只需要几行代码就能搞定了。</p>
<p>直接css:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">-webkit-filter: grayscale(100%);</span><br><span class="line">filter:progid:DXImageTransform.Microsoft.BasicImage(graysale=1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也是用的这个 CSS 样式，其内容为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    -webkit-filter: grayscale(100%);</span><br><span class="line">    -moz-filter: grayscale(100%);</span><br><span class="line">    -ms-filter: grayscale(100%);</span><br><span class="line">    -o-filter: grayscale(100%);</span><br><span class="line">    filter: grayscale(100%);</span><br><span class="line">    filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个实现看起来兼容性会更好一些,所以通过一个全局的 CSS 样式就能将整个网站变成灰色效果。</p>
<p>从上面css样式代码中看到有个样式名叫做 filter，于是搜下 MDN 的官方介绍。</p>
<p>其链接为：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter">https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter</a> 大家不妨可以进去学习一下。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>记录下最近最火的JAVA格式化时间用了YYYY-MM-dd问题</title>
    <url>/1362/</url>
    <content><![CDATA[<p>最近很多人说格式化时间用到了”YYYY-MM-dd”基本上都给测试提了BUG</p>
<p>下面就记录一下吧：</p>
<p>JDK测试版本为1.8</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm:ss&quot;);</span><br><span class="line">            Date newDate1 = format.parse(&quot;2019-12-31 23:59:59&quot;);</span><br><span class="line">            System.out.println(newDate1);</span><br><span class="line"></span><br><span class="line">            SimpleDateFormat format2 = new SimpleDateFormat(&quot;YYYY-MM-dd hh:mm:ss&quot;);</span><br><span class="line">            Date newDate2 = format2.parse(&quot;2019-12-31 23:59:59&quot;);</span><br><span class="line">            System.out.println(newDate2);</span><br><span class="line"></span><br><span class="line">            SimpleDateFormat format3 = new SimpleDateFormat(&quot;YYYY-MM-DD hh:mm:ss&quot;);</span><br><span class="line">            Date newDate3 = format3.parse(&quot;2020-01-01 23:59:59&quot;);</span><br><span class="line">            System.out.println(newDate3);</span><br><span class="line">        &#125; catch (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<p>Tue Dec 31 23:59:59 CST 2019<br>Sun Dec 30 23:59:59 CST 2018<br>Sun Dec 29 23:59:59 CST 2019 </p>
<p>从上述可以看出来使用”YYYY-MM-DD”格式化时间出现了错误！</p>
<p>问题原因出在哪里?</p>
<p>YYYY 是 week-based-year，现在就已经 2020 年了，yyyy 还是 2019 年！</p>
<p>YYYY 表示：当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，那么这周就算入下一年。</p>
<p>所以最后开发中还是用yyyy-MM-dd来做日期格式化，其它的就不要用了！呜呜~~~</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>记录双11</title>
    <url>/135/</url>
    <content><![CDATA[<p>你们见过凌晨四点的太阳吗？</p>
<p><img src="http://qn.199604.com/760720603553687988.jpg"></p>
<p>怎么我发了一个月亮（尴尬）</p>
<hr>
<p>今年是我第二年面对京东的双11</p>
<p>从我记忆中</p>
<p>以前的双11都是光棍男/女的节日</p>
<p>但是给马云爸爸弄了一个双11购物节</p>
<p>这次的双11还好是在周六、日</p>
<p>不然面对着一天不准时到货，比以前多了几倍的单量</p>
<p>我是会疯的（虽然已经疯了）</p>
<p>说着说着好像我想起了一些事情</p>
<p>昨天在广东这边京东的物流车撞气罐车</p>
<p>京东物流车的两位司机当场死亡</p>
<p>然而京东的货完好无损的在哪里</p>
<p>其实我从一开始就不明白为什么京东自营的物流车自加固了货仓</p>
<p>对驾驶室一点也没有加固？</p>
<p>再者，为什么会出这样的事故我想你们也会懂！</p>
<p>面对两条生命去换来你那些211准时达</p>
<p>嗯，向死者默哀2分钟</p>
<p><img src="http://qn.199604.com/528626266731359465.jpg"></p>
<hr>
<p>我们再来说下配送员吧</p>
<p>你们知道京东配送员生活咋样吗</p>
<p>双11/不，是从11月开始</p>
<p>每个站点几乎是要开始早早起床去接货了</p>
<p>一天也可能只睡几小时</p>
<p>每天送8-10小时</p>
<p>但是他们都是辛苦钱</p>
<p>每个月还挣的不多</p>
<p>因为送一单才2-5元</p>
<p>但是一次投诉罚200元，到达3次直接走人</p>
<p>网页差评率到达2%就扣2000元</p>
<p>所以对京东普通的配送员是无法承受送货超时和客户投诉的后果</p>
<p>一次投诉意味着丢掉半月辛苦钱</p>
<p>如果送货流程完成不严谨</p>
<p>那么这个月就可能是白干</p>
<p>希望大家能面对面解决的问题，尽量不要投诉/差评</p>
<hr>
<p><img src="http://qn.199604.com/60389317375466934.jpg"></p>
<p><img src="http://qn.199604.com/394844099444254765.jpg"></p>
<p><img src="http://qn.199604.com/278265061733337367.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>双11</tag>
        <tag>双十一</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列–Docker小笔记(辣鸡搬砖工从入门到放弃吧)</title>
    <url>/1303/</url>
    <content><![CDATA[<p>脑子不好使<del>那就记录下来吧</del>辣鸡搬砖工从入门到放弃的小笔记(今天天气很好，但我海投的简历也没反应没邀约才是最尴尬的~)</p>
<hr>
<p>这个入门要入门学习docker，我觉得这本书不错–&gt;docker技术入门与实战(第三版)，微信读书上有</p>
<h3 id="CentOS-Docker-安装"><a href="#CentOS-Docker-安装" class="headerlink" title="CentOS Docker 安装"></a>CentOS Docker 安装</h3><p>可以在任何操作系统上安装Docker，无论是Mac，Windows，Linux还是任何云服务器。Docker 引擎在Linux发行版上运行。但自己虚拟机上就只有centos。</p>
<p>但是安装之前呢好像书上也说过有条件</p>
<p>1.它仅适用于64位Linux安装，注意：是64位的Linux系统。</p>
<p>uname -m</p>
<p>2.它需要Linux内核版本3.10或更高版本。</p>
<p>uname -r</p>
<p>符合上面要求之后呢：yum install docker 安装即可~</p>
<p>安装完后呢：docker -v 可以查看版本</p>
<p>启动docker<br>systemctl start docker<br>停止docker<br>systemctl stop docker</p>
<p>查看防火墙状态<br>service firewalld status<br>关闭防火墙<br>service firewalld stop</p>
<h3 id="Docker自己常用命令和操作"><a href="#Docker自己常用命令和操作" class="headerlink" title="Docker自己常用命令和操作"></a>Docker自己常用命令和操作</h3><p>1.检索</p>
<p>docker search 关键字 例如:docker search redis</p>
<p>2.拉取</p>
<p>docker pull 镜像名:ta (:tag是可选的，tag表示标签，多为软件的版本，默认是latest)</p>
<p>docker search redis</p>
<p>3.列表</p>
<p>docker images 查看所有本地镜像</p>
<p>4.删除</p>
<p>docker rmi image-id(image-name) (-f :强制删除)</p>
<p>5.运行docker镜像</p>
<p>docker run -d image-name</p>
<p>6.查看最近的运行容器</p>
<p>docker ps -l(-l 它用于显示最新的可用容器.)</p>
<p>7.查看所有正在运行的容器</p>
<p>docker ps -a (-a 它用于显示所有可用的容器.)</p>
<p>8.停止运行容器</p>
<p>docker stop id (id为Docker分配给容器的id)</p>
<hr>
<p>操作常用命令<br>docker images 显示本地已有镜像；<br>docker info 显示docker系统信息；<br>docker commit -m -a 提交更新后的镜像；<br>docker build 通过Dockerfile来构建镜像；<br>docker import 本地导入镜像；<br>docker search 查找仓库中镜像；<br>docker push 将镜像推送到仓库；<br>docker pull 将仓库中镜像下载到本地；<br>docker save -o mysql_5.6.tar mysql:5.6 导出镜像到本地；<br>docker load &lt; mysql_5.6.tar 载入镜像；<br>docker rmi 移除镜像；<br>docker attach 运行中容器的stdin，进行命令执行的动作；<br>docker history 显示镜像的历史；</p>
<hr>
<p>容器常用命令</p>
<p>docker run 新建并启动容器</p>
<p>-d 容器运行在后台，此时不能使用–rm选项<br>-i -t 和容器进行交互式操作<br>–name 命名容器，没有该参数Docker deamon会生产UUID来标识<br>–cidfile 将容器ID输入到指定文件中<br>–add-host 添加一行到/etc/hosts<br>–mac-address 设置MAC地址<br>–dns 覆盖容器DNS设置<br>–rm 退出容器时自动清除数据<br>-m 调整容器的内存使用<br>-c 调整容器的CPU优先级<br>-e 设定环境变量<br>–expose 运行时暴露端口，不创建和宿主机的映射<br>-p 创建映射规则，将一个或者一组端口从容器里绑定到宿主机上,可多次使用<br>ip:hostPort:containerPort<br>ip::containerPort<br>hostPort:containerPort<br>containerPort<br>-P 将Dockfile中暴露的端口映射动态映射到宿主机<br>–link 容器互联 –link name:alias<br>-v 创建数据卷挂载到容器，一次run中可多次使用<br>可覆盖Dockfile参数<br>CMD<br>ENTRYPOINT<br>EXPOSE<br>ENV<br>VOLUME<br>USER<br>WORKDIR</p>
<p>docker stop 停止运行中容器<br>docker stop $(docker ps -qa) 停止所有运行中的容器<br>docker restart 重启容器<br>docker ps -a 查看所有容器<br>docker rm 移除处于终止状态的容器<br>docker rm $(docker ps -qa)` 移除处于终止状态的容器<br>docker logs 从容器中去日志<br>docker diff 列出容器中被改变的文件或者目录<br>docker top 显示运行容器的进程信息<br>docker cp 从容器中拷贝文件或者目录到本地<br>docker inspect 查看容器详细信息</p>
<hr>
<p>一个入门tomcat安装小步骤吧：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、搜索镜像</span><br><span class="line">docker search tomcat</span><br><span class="line">2、拉取镜像</span><br><span class="line">docker pull tomcat</span><br><span class="line">3、根据镜像启动容器 </span><br><span class="line">docker run --name mytomcat ‐d tomcat:latest</span><br><span class="line">4、docker ps </span><br><span class="line">查看运行中的容器</span><br><span class="line">5、停止运行中的容器</span><br><span class="line">docker stop 容器的id</span><br><span class="line">6、查看所有的容器</span><br><span class="line">docker ps ‐a</span><br><span class="line">7、启动容器</span><br><span class="line">docker start 容器id</span><br><span class="line">8、删除一个容器 </span><br><span class="line">docker rm 容器id</span><br><span class="line">9、启动一个做了端口映射的tomcat</span><br><span class="line">[root@localhost~]#docker run ‐d ‐p 8888:8080 tomcat</span><br><span class="line">‐d：后台运行</span><br><span class="line">‐p:将主机的端口映射到容器的一个端口 主机端口:容器内部的端口</span><br><span class="line">10、linux的防火墙</span><br><span class="line">service firewalld status；查看防火墙状态</span><br><span class="line">service firewalld stop：关闭防火墙</span><br><span class="line">11、查看容器的日志</span><br><span class="line">docker logs container‐name(container‐id)</span><br><span class="line">12.启动pgsql</span><br><span class="line">docker run --name postgres1 -e POSTGRES_PASSWORD=guoliangjun -p 5432:5432 -d postgres:9.6</span><br><span class="line">更多命令参看</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/docker/</span><br><span class="line">https://www.runoob.com/docker/docker-command-manual.html(Docker 命令大全)</span><br><span class="line">https://www.yiibai.com/docker/docker-useful-commands.html#article-start(Docker常用命令)</span><br><span class="line">https://www.yiibai.com/docker/image.html(docker image命令)</span><br><span class="line">https://www.yiibai.com/docker/docker-container.html(docker container命令)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Java IO的File类</title>
    <url>/1264/</url>
    <content><![CDATA[<h2 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h2><p>File类是java.io包下代表与平台无关的文件和目录，也就是说，如果希望在程序中操作文件和目录，都可以通过File类来完成。值得指出的是，不管是文件还是目录都是使用File来操作的，File能新建、删除、重命名文件和目录，File不能访问文件内容本身。如果需要访问文件内容本身，则需要使用输入/输出流。</p>
<p>File类共提供了三个不同的构造函数:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.File (String pathname) &amp;nbsp;&amp;nbsp;</span><br><span class="line">例:File f1 = new File(&quot;test1.txt&quot;); //创建文件对象f1,f1所指的文件是在当前目录下创建的test1.txt</span><br><span class="line">2.File (String parent,String child)</span><br><span class="line">例:File f2 = new &amp;nbsp;File(&quot;D:\\testDir2&quot;,&quot;test2.txt&quot;) ;//注意：D:\\testDir2目录事先必须存在，否则异常</span><br><span class="line">3.File(File parent, String child)</span><br><span class="line">例:</span><br><span class="line">String fileName = &quot;D:&quot;+File.separator+&quot;testDir3&quot;+File.separator;</span><br><span class="line">File f3 = new File(fileName);</span><br><span class="line">if(!f3.exists()&amp;&amp;f3.isDirectory())&#123;</span><br><span class="line">	f3.mkdir();</span><br><span class="line">&#125;</span><br><span class="line">File f4 = new File(f3, &quot;test3.txt&quot;);</span><br><span class="line">if(!f4.exists()&amp;&amp;!f4.isFile())&#123;// 如果文件不存在,创建文件</span><br><span class="line">	try &#123;</span><br><span class="line">		f4.createNewFile();</span><br><span class="line">	&#125; catch (IOException e) &#123;</span><br><span class="line">		// TODO Auto-generated catch block</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(f4.toString());//D:\testDir3\test3.txt</span><br></pre></td></tr></table></figure>

<h3 id="文件分隔符"><a href="#文件分隔符" class="headerlink" title="文件分隔符"></a>文件分隔符</h3><p>注意：我们知道，各个平台之间的路径分隔符是不一样的。所以为了屏蔽各个平台之间的分隔符差异就使用JDK 为我们提供的字段。</p>
<p>ps：Windows在路径名中使用反斜杠（\）作为名称分隔符，而UNIX使用正斜杠（/）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--windows输出</span><br><span class="line">System.out.println(File.separator);//输出 \  --是用来分隔同一个路径字符串中的目录的</span><br><span class="line">System.out.println(File.pathSeparator);//输出 ; --是分隔连续多个路径字符串的分隔符</span><br></pre></td></tr></table></figure>

<p>创建File对象成功后，可以使用以下列表中的方法操作文件。</p>
<p><img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/io-file20190828153851.png" alt="img"></p>
<p>(表格从菜鸟教程复制：<a href="https://www.runoob.com/java/java-file.html">https://www.runoob.com/java/java-file.html</a>)</p>
<p>看到懵逼了?方法是不是有点多？其实我自己工作一年多来常用就这几个：</p>
<h3 id="1-创建方法："><a href="#1-创建方法：" class="headerlink" title="1.创建方法："></a>1.创建方法：</h3><p>1.boolean createNewFile() 不存在返回true 存在返回false<br>2.boolean mkdir() 创建目录，如果上一级目录不存在，则会创建失败<br>3.boolean mkdirs() 创建多级目录，如果上一级目录不存在也会自动创建</p>
<h3 id="2-删除方法："><a href="#2-删除方法：" class="headerlink" title="2.删除方法："></a>2.删除方法：</h3><p>1.boolean delete() 删除文件或目录，如果是删除目录，则目录下必须为空才能删除，不然报异常<br>2.boolean deleteOnExit() 文件使用完成后删除</p>
<h3 id="3-判定方法"><a href="#3-判定方法" class="headerlink" title="3.判定方法:"></a>3.判定方法:</h3><p>1.boolean canExecute()判断文件是否可执行<br>2.boolean canRead()判断文件是否可读<br>3.boolean canWrite() 判断文件是否可写<br>4.boolean exists() 判断文件或目录是否存在<br>5.boolean isDirectory() 判断此路径是否为一个目录<br>6.boolean isFile()　　判断是否为一个文件<br>7.boolean isHidden()　　判断是否为隐藏文件<br>8.boolean isAbsolute()判断是否是绝对路径 文件不存在也能判断</p>
<h3 id="4-获取方法："><a href="#4-获取方法：" class="headerlink" title="4.获取方法："></a>4.获取方法：</h3><p>1.String getName() 获取此路径表示的文件或目录名称<br>2.String getPath() 将此路径名转换为路径名字符串<br>3.String getAbsolutePath() 返回此抽象路径名的绝对形式<br>4.String getParent()//如果没有父目录返回null<br>5.long lastModified()//获取最后一次修改的时间–&gt;毫秒值，如果需要看年月日时分秒的话，需要创建日历类?然后通过日历类的set方法把值传进去，就可以获取具体yyyymmdd之类的啦<br>6.long length() 返回由此抽象路径名表示的文件的长度。<br>7.boolean renameTo(File f) 重命名由此抽象路径名表示的文件。<br>8.File[] liseRoots()//获取机器盘符<br>9.String[] list() 返回一个字符串数组，命名由此抽象路径名表示的目录中的文件和目录。<br>10.String[] list(FilenameFilter filter) 返回一个字符串数组，命名由此抽象路径名表示的目录中满足指定过滤器的文件和目录</p>
<p>最最最后就是一个小例子吧<del>喷下以后回来看的垃圾郭良俊,好好看哈</del></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * File文件工具类</span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class FileUtil &#123;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 获取本地文件夹下所有的文件</span><br><span class="line">	 * isAddDirectory 是否加载子目录下的文件</span><br><span class="line">	 * @param filepath 文件夹路径</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static List&lt;String&gt; getListNames(String filepath,boolean isAddDirectory)&#123;</span><br><span class="line">		List&lt;String&gt; listName = new ArrayList&lt;String&gt;();  </span><br><span class="line">		File baseFile= new File(filepath);  </span><br><span class="line">		if (baseFile.isFile() || !baseFile.exists()) &#123;</span><br><span class="line">            return listName;</span><br><span class="line">        &#125;</span><br><span class="line">		File[] files = baseFile.listFiles();</span><br><span class="line">		for (File file : files) &#123;</span><br><span class="line">            if (file.isDirectory()) &#123;</span><br><span class="line">                if(isAddDirectory)&#123;</span><br><span class="line">                	listName.add(file.getName());</span><br><span class="line">                &#125;</span><br><span class="line">                listName.addAll(getListNames(file.getAbsolutePath(),isAddDirectory));</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">            	listName.add(file.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">		return listName;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 文件处理前重命名(以扩展名替换的形式)</span><br><span class="line">	 * @param srcFile 需要重命名的文件</span><br><span class="line">	 * @param tar 重命名目标字符串</span><br><span class="line">	 * @param rep 替换字符串</span><br><span class="line">	 * @return 重命名后文件</span><br><span class="line">	 */</span><br><span class="line">	public static File rename(File srcFile, String tar, String rep) &#123;</span><br><span class="line">		String perMatchFileName =  srcFile.getPath().replace(tar, rep);</span><br><span class="line">		File newNameFile = new File(perMatchFileName);</span><br><span class="line">		srcFile.renameTo(newNameFile);</span><br><span class="line">		return newNameFile;</span><br><span class="line">	&#125;</span><br><span class="line">	public static String reFileName(String oldName, String tar, String rep) &#123;</span><br><span class="line">		String newNameFile =  oldName.replace(tar, rep);</span><br><span class="line">		return newNameFile;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 删除文件</span><br><span class="line">	 * @param file</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static boolean delFile(File file)&#123;</span><br><span class="line">//		File file=new File(filePath+File.separator+fileName);</span><br><span class="line">		if(file.exists()&amp;&amp;file.isFile())&#123;</span><br><span class="line">			return file.delete();</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>File</tag>
        <tag>io</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Java IO的字符输入输出流</title>
    <url>/1287/</url>
    <content><![CDATA[<p>新的一周开始了<del>但是我还是失业中</del></p>
<hr>
<p>字符输入输出基础流：Reader、Writer</p>
<p><img src="http://qn.199604.com/typoraImg/iostream2xx.png" alt="img"></p>
<p>但是呢，比较常用的两个字节流FileWriter和FileReader，下面我也主要自己写下这两个操作类吧~</p>
<h3 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h3><p>FileWriter可以通过下面几种构造方法创建需要的对象</p>
<p>1.给出了 File 对象的情况</p>
<p>FileWriter(File file)</p>
<p>FileWriter(File file,boolean append)//如果 append 参数为 true，则将字节写入文件末尾处，相当于追加信息。如果 append 参数为 false, 则写入文件开始处</p>
<p>2.给出文件名的情况</p>
<p>FileWriter(String fileName)</p>
<p>FileWriter(String fileName, boolean append)</p>
<h3 id="FileWriter例子"><a href="#FileWriter例子" class="headerlink" title="FileWriter例子"></a>FileWriter例子</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String destFile = &quot;D:&quot;+File.separator+&quot;destfile.txt&quot;;</span><br><span class="line">        try(Writer writer = new FileWriter(destFile))&#123;</span><br><span class="line">            writer.write(&quot;glj&quot;);</span><br><span class="line">            writer.flush();</span><br><span class="line">            //使用try-with-resources优雅关闭资源(https://199604.com/1241)</span><br><span class="line">            //writer.close();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h3 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h3><p>FileReader可以通过下面几种构造方法创建需要的对象</p>
<p>1.给出了 File 对象的情况</p>
<p>FileReader(File file)</p>
<p>2.给出文件名的情况</p>
<p>FileReader(String fileName)</p>
<h3 id="FileReader例子"><a href="#FileReader例子" class="headerlink" title="FileReader例子"></a>FileReader例子</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String destFile = &quot;D:&quot;+File.separator+&quot;destfile.txt&quot;;</span><br><span class="line">        try(Reader reader = new FileReader(destFile))&#123;</span><br><span class="line">            int num = 0;</span><br><span class="line">            int i = 0;</span><br><span class="line">            while ((num = reader.read())!= -1)&#123;</span><br><span class="line">                System.out.print((char)num + &quot;\t&quot;);</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;总共读取了&quot;+i+&quot;个字符&quot;);</span><br><span class="line">            //使用try-with-resources优雅关闭资源(https://199604.com/1241)</span><br><span class="line">            //reader.close();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>io</tag>
        <tag>FileReader</tag>
        <tag>FileWriter</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Java IO的字节输入输出流</title>
    <url>/1276/</url>
    <content><![CDATA[<p>上一篇我自己写过java io 流的基础–分类：字节流和字符流。 那么这篇就先写字节流吧<del>（为了水多点文章没办法</del>）</p>
<hr>
<p>字节输入输出基础流：InputStream、OutputSteam</p>
<p><img src="http://qn.199604.com/typoraImg/iostream2xx.png" alt="img"></p>
<p>但是呢，比较常用的两个字节流FileInputStream和FileOutputStream</p>
<h3 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h3><p>该流用于从文件读取数据，它的对象可以用关键字new来创建。</p>
<p>有多种构造方法可用来创建对象。</p>
<p>可以使用字符串类型的文件名来创建一个输入流对象来读取文件：</p>
<p>InputStream f = new FileInputStream(“D:/io/glj”);</p>
<p>也可以使用一个文件对象来创建一个输入流对象来读取文件。我们首先得使用File()方法来创建一个文件对象：<br>File f = new File(“D:/io/glj”);<br>InputStream ips= new FileInputStream(f);</p>
<p>创建了InputStream对象，就可以使用下面的方法:</p>
<p><img src="http://qn.199604.com/typoraImg/io_20190830000102.png" alt="img"></p>
<h3 id="FileOutputStream"><a href="#FileOutputStream" class="headerlink" title="FileOutputStream"></a>FileOutputStream</h3><p>该类用来创建一个文件并向文件中写数据。</p>
<p>如果该流在打开文件进行输出前，目标文件不存在，那么该流会创建该文件。</p>
<p>有两个构造方法可以用来创建FileOutputStream 对象。</p>
<p>使用字符串类型的文件名来创建一个输出流对象：</p>
<p>OutputStream f = new FileOutputStream(“C:/io/glj”);</p>
<p>也可以使用一个文件对象来创建一个输出流来写文件。我们首先得使用File()方法来创建一个文件对象：</p>
<p>File f = new File(“C:/io/glj”);<br>OutputStream ops = new FileOutputStream(f);</p>
<p>同理：创建了OutputStream对象，也就可以使用下面的方法：</p>
<p><img src="http://qn.199604.com/typoraImg/io2_20190830000704.png" alt="img"></p>
<h3 id="FileOutputStream例子吧"><a href="#FileOutputStream例子吧" class="headerlink" title="FileOutputStream例子吧~"></a>FileOutputStream例子吧~</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String destFile = &quot;D:&quot;+File.separator+&quot;destfile.txt&quot;;</span><br><span class="line">        String lineSeparator = System.getProperty(&quot;line.separator&quot;);</span><br><span class="line">        String line = &quot;g&quot;;</span><br><span class="line">        String line2 = &quot;l&quot;;</span><br><span class="line">        String line3 = &quot;j&quot;;</span><br><span class="line">        try(FileOutputStream fos = new FileOutputStream(destFile))&#123;</span><br><span class="line">            fos.write(line.getBytes());</span><br><span class="line">            fos.write(lineSeparator.getBytes());</span><br><span class="line"></span><br><span class="line">            fos.write(line2.getBytes());</span><br><span class="line">            fos.write(lineSeparator.getBytes());</span><br><span class="line"></span><br><span class="line">            fos.write(line3.getBytes());</span><br><span class="line">            //刷新输出流</span><br><span class="line">            fos.flush();</span><br><span class="line">            System.out.println(&quot;文件已经写入完成。地址：&quot;+new File(destFile).getAbsolutePath());</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>



<h3 id="FileInputStream例子吧"><a href="#FileInputStream例子吧" class="headerlink" title="FileInputStream例子吧~"></a>FileInputStream例子吧~</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String destFile = &quot;D:&quot;+File.separator+&quot;destfile.txt&quot;;</span><br><span class="line">        try(FileInputStream fis = new FileInputStream(destFile))&#123;</span><br><span class="line">            int size =  fis.available() ;</span><br><span class="line">            //根据输入流中的字节数创建byte数组</span><br><span class="line">            byte[] array = new byte[size];</span><br><span class="line">            //把数据读取到数组中</span><br><span class="line">            fis.read( array ) ;</span><br><span class="line">            String result = new String(array);</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>io</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Java IO的流基础</title>
    <url>/1268/</url>
    <content><![CDATA[<p>Java IO 是一套Java用来读写数据（输入和输出）的API。大部分程序都要处理一些输入，并由输入产生一些输出。Java为此提供了<code>java.io</code>包，主要涉及文件，网络数据流，内存缓冲等的输入输出。</p>
<p>Java IO中的一个核心概念是<strong>流</strong>（Stream）</p>
<p>从外部（包括磁盘文件、键盘、网络套接字）读入到内存(程序)中的数据序列称为<strong>输入流。</strong></p>
<p><img src="http://qn.199604.com/typoraImg/oi-in-20190828232004.png" alt="img"></p>
<p>从内存(程序)写入到外部设备的数据序列称为<strong>输出流</strong>。</p>
<p><img src="http://qn.199604.com/typoraImg/oi-out-20190828232039.png" alt="img"></p>
<p>流中的数据既可以是未经加工的原始二进制数据，也可以是经一定编码处理后符合某种格式规定的特定数据。因此Java中的流分为两种：<br>字节流：数据流中最小的数据单元是字节，多用于读取或书写二进制数据;<br>字符流：数据流中最小的数据单元是字符， Java中的字符是Unicode编码，一个字符占用两个字节;</p>
<table>
<thead>
<tr>
<th></th>
<th>字节流</th>
<th>字符流</th>
</tr>
</thead>
<tbody><tr>
<td>输出流</td>
<td>OutputStream</td>
<td>Writer</td>
</tr>
<tr>
<td>输入流</td>
<td>InputStream</td>
<td>Reader</td>
</tr>
</tbody></table>
<p>表格的为Java IO流中的四大基流。<br>这四大基流都是抽象类，其他流都是继承于这四大基流的。</p>
<p>下图是一个描述输入流和输出流的类层次图：</p>
<p><img src="http://qn.199604.com/typoraImg/iostream2xx.png" alt="img"></p>
<p>我明天才继续总结字符流和字节流的用法吧<del>需要睡觉了</del></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>io流</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Java IO的缓存输入输出流(高效流)</title>
    <url>/1289/</url>
    <content><![CDATA[<p>在之前我自己也mark了字节和字符的流，但是呢读取数据量比较大时，速度是8是会有点慢？影响到你郭良俊自己的脾气呢?</p>
<p>好了<del>那就在内存/不怕被坑情况下自己弄一下呗</del>好了马记录起~</p>
<p>缓冲流，根据流的分类:字节缓冲流和字符缓冲流。目的可能提高IO流的读写速度，至于利弊嘛–&gt;出门右拐–&gt;百度/谷歌走起~</p>
<p>字节缓冲流：BufferedInputStream、BufferedOutputStream</p>
<p>字符缓冲流：BufferedReader、BufferedWriter</p>
<p>它们的内部都包含了一个缓冲区，通过缓冲区读写，就可以提高了IO流的读写速度，做到缓存的作用~</p>
<h3 id="字节缓冲流例子"><a href="#字节缓冲流例子" class="headerlink" title="字节缓冲流例子"></a>字节缓冲流例子</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String destFile = &quot;D:&quot;+File.separator+&quot;destfile.txt&quot;;</span><br><span class="line">        String lineSeparator = System.getProperty(&quot;line.separator&quot;);</span><br><span class="line">        //字节缓冲输出流</span><br><span class="line">        try(FileOutputStream fos = new FileOutputStream(destFile,true);</span><br><span class="line">            BufferedOutputStream bos = new BufferedOutputStream(fos)) &#123;</span><br><span class="line">            bos.write(lineSeparator.getBytes());</span><br><span class="line">            bos.write(&quot;hello FileOutputStream&quot;.getBytes());</span><br><span class="line">            //使用try-with-resources优雅关闭资源(https://199604.com/1241)</span><br><span class="line">            //bos.close();</span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        //字节缓冲输入流</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            FileInputStream fis = new FileInputStream(destFile);</span><br><span class="line">            BufferedInputStream bis = new BufferedInputStream(fis);</span><br><span class="line">            byte[] buffer = new byte[1024];</span><br><span class="line">            int len = -1;</span><br><span class="line">            while ((len = bis.read(buffer))!=-1)&#123;</span><br><span class="line">                System.out.println(new String(buffer,0,len));</span><br><span class="line">            &#125;</span><br><span class="line">            fis.close();</span><br><span class="line">            bis.close();</span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;catch (IOException e1)&#123;</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h3 id="字符缓冲流例子"><a href="#字符缓冲流例子" class="headerlink" title="字符缓冲流例子"></a>字符缓冲流例子</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">string destFile = &quot;D:&quot;+File.separator+&quot;destfile.txt&quot;;</span><br><span class="line">        String lineSeparator = System.getProperty(&quot;line.separator&quot;);</span><br><span class="line">        //字符输出流</span><br><span class="line">        try(BufferedWriter out = new BufferedWriter(new FileWriter(destFile,true)))&#123;</span><br><span class="line">            out.write(&quot;郭大傻?&quot;);</span><br><span class="line">            out.write(lineSeparator);</span><br><span class="line">            out.write(&quot;结束~&quot;);</span><br><span class="line">            //使用try-with-resources优雅关闭资源(https://199604.com/1241)</span><br><span class="line">            //out.close();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        //字符输入流</span><br><span class="line">        try(BufferedReader in = new BufferedReader(new FileReader(destFile))) &#123;</span><br><span class="line">            String line = null;</span><br><span class="line">            while ((line= in.readLine())!=null)&#123;</span><br><span class="line">                System.out.println(line);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>io</tag>
        <tag>BufferedInputStream</tag>
        <tag>BufferedOutputStream</tag>
        <tag>BufferedReader</tag>
        <tag>BufferedWriter</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Nginx自己的基本操作</title>
    <url>/1259/</url>
    <content><![CDATA[<p>Nginx记忆的笔记怕忘记<del>另外出售erbi.me域名</del>有需要的吗?</p>
<hr>
<h2 id="基本的操作"><a href="#基本的操作" class="headerlink" title="基本的操作"></a>基本的操作</h2><p>启动、停止nginx<br>cd /usr/local/nginx/sbin/<br>启动<br>./nginx<br>加载制定配置文件<br>./nginx -c xxx.conf(参数-c 指定配置文件路径，如果不加-c参数，Nginx会默认加载其安装目录的conf子目录的nginx.conf文件)<br>测试Nginx配置是否正确<br>./nginx -t<br>nginx服务停止<br>./nginx -s stop //kill -9 pid<br>./nginx -s quit</p>
<p>优雅重启<br>./nginx -s reload<br>查看nginx的进程号<br>ps -ef | grep nginx<br>杀死<br>killall -9 nginx</p>
<h2 id="虚拟主机配置"><a href="#虚拟主机配置" class="headerlink" title="虚拟主机配置"></a>虚拟主机配置</h2><p>首先下面是一个最简单的虚拟主机配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">	server&#123;</span><br><span class="line">		listen 80;</span><br><span class="line">		server_name _ *;</span><br><span class="line">		access_log logs/server_name.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/htdosc_servername;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，和apche一样，可以配置多种类型虚拟主机：</p>
<p>1.基于IP的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">	server&#123;</span><br><span class="line">		#监听的ip和端口</span><br><span class="line">		listen 192.168.1.88:80;</span><br><span class="line">		#主机名称</span><br><span class="line">		server_name 192.168.1.88;</span><br><span class="line">		#访问的日志存放路径</span><br><span class="line">		access_log logs/server1.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/server1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">		#监听的ip和端口</span><br><span class="line">		listen 192.168.1.89:80;</span><br><span class="line">		#主机名称</span><br><span class="line">		server_name 192.168.1.89;</span><br><span class="line">		#访问的日志存放路径</span><br><span class="line">		access_log logs/server2.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/server2;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">		#监听的ip和端口</span><br><span class="line">		listen 192.168.1.90:80;</span><br><span class="line">		#主机名称</span><br><span class="line">		server_name 192.168.1.90;</span><br><span class="line">		#访问的日志存放路径</span><br><span class="line">		access_log logs/server3.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/server3;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.基于域名的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">	server&#123;</span><br><span class="line">		#监听的ip和端口</span><br><span class="line">		listen 80;</span><br><span class="line">		#主机名称</span><br><span class="line">		server_name 199604.com;</span><br><span class="line">		#访问的日志存放路径</span><br><span class="line">		access_log logs/199604.com.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/199604.com;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">		#监听的ip和端口</span><br><span class="line">		listen 80;</span><br><span class="line">		#主机名称</span><br><span class="line">		server_name guoliangjun.com;</span><br><span class="line">		#访问的日志存放路径</span><br><span class="line">		access_log logs/guoliangjun.com.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/guoliangjun.com;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">		#监听的ip和端口</span><br><span class="line">		listen 80;</span><br><span class="line">		#主机名称</span><br><span class="line">		server_name erbi.me;</span><br><span class="line">		#访问的日志存放路径</span><br><span class="line">		access_log logs/erbi.me.access.log  combined;</span><br><span class="line">		location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/erbi.me;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.基于端口的</p>
<p>端口就是把监听的端口更改一下就OK了</p>
<h2 id="日志定时切割"><a href="#日志定时切割" class="headerlink" title="日志定时切割"></a>日志定时切割</h2><p>首先需要认识一下 access_log的语法：</p>
<p>access_log path[format [buffer=size|off]]</p>
<p>acess_log off;关闭日志</p>
<p>如果需要使用默认的combined格式记录日志：</p>
<p>access_log /logs/guoliangjun.com.access.log;</p>
<p>或者</p>
<p>access_log /logs/guoliangjun.com.access.log combined;</p>
<p>认识access_log参数之后，那么就是解释一下Nginx是不支持像Apache一样使用cronolog来轮转日志，但是可以手动/自动（定时shell）采用实现日志文件日期的切割</p>
<p>先手动：</p>
<p>mv /data/logs/access.log /data/logs/20190824.log<br>kill -USR1 Nginx主进程号(kill -USR1 <code>cat /usr/local/nginx/logs/nginx.pid</code>)<br>Nginx主进程号我们是可以用cat pid文件获取到进程号哒~</p>
<p>后shell定时执行：</p>
<p>设置一个定时任务，每天凌晨00:00开始备份昨天的日志，然后重新开启一个新的日志文件。具体实现如下：</p>
<p>vi nginx_logbak.sh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">YESTERDAY=$(date -d &quot;yesterday&quot; +&quot;%Y-%m-%d&quot;)</span><br><span class="line"> </span><br><span class="line">LOGPATH=/usr/local/nginx/logs/</span><br><span class="line"> </span><br><span class="line">PID=$&#123;LOGPATH&#125;nginx.pid</span><br><span class="line"> </span><br><span class="line">mv $&#123;LOGPATH&#125;access.log $&#123;LOGPATH&#125;access-$&#123;YESTERDAY&#125;.log</span><br><span class="line"> </span><br><span class="line">mv $&#123;LOGPATH&#125;error.log $&#123;LOGPATH&#125;error-$&#123;YESTERDAY&#125;.log</span><br><span class="line"></span><br><span class="line">kill -USR1 `cat $&#123;PID&#125;`</span><br></pre></td></tr></table></figure>

<p>变更shell脚本为可执行文件，并将脚本设置为定时任务启动脚本，放入crontab中。</p>
<p>chmod +x nginx_logbak.sh</p>
<p>crontab -e<br>0 0 * * * /bin/bash /usr/local/nginx/logs/nginx_logbak.sh</p>
<h2 id="Nginx自动列目录配置"><a href="#Nginx自动列目录配置" class="headerlink" title="Nginx自动列目录配置"></a>Nginx自动列目录配置</h2><p>有时候打开一个页面自动会显示列目录，但前提可能需要指定的index页面不存在才行，我们只需要加载autoindex即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">			index index.html;</span><br><span class="line">			root /data0/htdocs/htdosc_servername;</span><br><span class="line">			autoindex on;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>



<h2 id="负载均衡的http-upstream"><a href="#负载均衡的http-upstream" class="headerlink" title="负载均衡的http upstream"></a>负载均衡的http upstream</h2><p>upstream主要提供了简单方法来实现在轮询和客户端IP之间的后端服务器负载均衡，也可以对服务器进行监控检查，简单例子如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes 1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    upstream myip&#123;</span><br><span class="line">		server 121.42.102.97 weight=2;</span><br><span class="line">		server 111.161.64.40 max_fails=3 fail_timeout=30s;</span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">		listen 80;</span><br><span class="line">		location / &#123;</span><br><span class="line">			proxy_pass http://myip;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列-Spring Boot 注解</title>
    <url>/1262/</url>
    <content><![CDATA[<p>裸辞需要勇气<del>裸辞一时爽,一直裸辞一直爽? 已经快两个月没有找到工作了开心吧</del></p>
<hr>
<h2 id="1-注解-annotations-列表"><a href="#1-注解-annotations-列表" class="headerlink" title="1.注解(annotations)列表"></a>1.注解(annotations)列表</h2><p>@SpringBootApplication：包含了@ComponentScan、@Configuration和@EnableAutoConfiguration注解。</p>
<p>其中@ComponentScan让spring Boot扫描到Configuration类并把它加入到程序上下文。 </p>
<p>@Configuration 等同于spring的XML配置文件；使用Java代码可以检查类型安全。</p>
<p> @EnableAutoConfiguration 自动配置 </p>
<p>@ComponentScan 组件扫描，可自动发现和装配一些Bean。</p>
<p> @Component可配合CommandLineRunner使用，在程序启动后执行一些基础任务。</p>
<p> @RestController注解是@Controller和@ResponseBody的合集,表示这是个控制器bean,并且是将函数的返回值直 接填入HTTP响应体中,是REST风格的控制器。 </p>
<p>@Autowired自动导入。</p>
<p> @PathVariable获取参数。 </p>
<p>@JsonBackReference解决嵌套外链问题。 </p>
<p>@RepositoryRestResourcepublic配合spring-boot-starter-data-rest使用。</p>
<h2 id="2-注解-annotations-详解"><a href="#2-注解-annotations-详解" class="headerlink" title="2.注解(annotations)详解"></a>2.注解(annotations)详解</h2><p>@SpringBootApplication：申明让spring boot自动给程序进行必要的配置，这个配置等同于：@Configuration ，@EnableAutoConfiguration 和 @ComponentScan 三个配置。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myproject; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span> <span class="comment">// same as @Configuration @EnableAutoConfiguration @ComponentScan </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">SpringApplication.run(Application.class, args); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@ResponseBody：表示该方法的返回结果直接写入HTTP response body中，一般在异步获取数据时使用，用于构建RESTful的api。在使用@RequestMapping后，返回值通常解析为跳转路径，加上@responsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中。比如异步获取json数据，加上@responsebody后，会直接返回json数据。该注解一般会配合@RequestMapping一起使用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(“/test”) </span><br><span class="line">@ResponseBody </span><br><span class="line">public String test()&#123; </span><br><span class="line">return ”ok”; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@Controller：用于定义控制器类，在spring 项目中由控制器负责将用户发来的URL请求转发到对应的服务接口（service层），一般这个注解在类中，通常方法需要配合注解@RequestMapping。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Controller </span><br><span class="line">@RequestMapping(“/demoInfo”) </span><br><span class="line">publicclass DemoController &#123; </span><br><span class="line">@Autowired </span><br><span class="line">private DemoInfoService demoInfoService;</span><br><span class="line"></span><br><span class="line">@RequestMapping(&quot;/hello&quot;)</span><br><span class="line">public String hello(Map&lt;String,Object&gt; map)&#123;</span><br><span class="line">   System.out.println(&quot;DemoController.hello()&quot;);</span><br><span class="line">   map.put(&quot;hello&quot;,&quot;from TemplateController.helloHtml&quot;);</span><br><span class="line">   //会使用hello.html或者hello.ftl模板进行渲染显示.</span><br><span class="line">   return &quot;hello&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@RestController：用于标注控制层组件(如struts中的action)，@ResponseBody和@Controller的合集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.demo.web;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping; </span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">@RestController </span><br><span class="line">@RequestMapping(“/demoInfo2”) </span><br><span class="line">publicclass DemoController2 &#123;</span><br><span class="line"></span><br><span class="line">@RequestMapping(&quot;/test&quot;)</span><br><span class="line">public String test()&#123;</span><br><span class="line">   return &quot;ok&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@RequestMapping：提供路由信息，负责URL到Controller中的具体函数的映射。</p>
<p> @EnableAutoConfiguration：Spring Boot自动配置（auto-configuration）：尝试根据你添加的jar依赖自动配置你的Spring应用。例如，如果你的classpath下存在HSQLDB，并且你没有手动配置任何数据库连接beans，那么我们将自动配置一个内存型（in-memory）数据库”。你可以将@EnableAutoConfiguration或者@SpringBootApplication注解添加到一个@Configuration类上来选择自动配置。如果发现应用了你不想要的特定自动配置类，你可以使用@EnableAutoConfiguration注解的排除属性来禁用它们。 @ComponentScan：表示将该类自动发现扫描组件。个人理解相当于，如果扫描到有@Component、@Controller、@Service等这些注解的类，并注册为Bean，可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。如果没有配置的话，Spring Boot会扫描启动类所在包下以及子包下的使用了@Service,@Repository等注解的类。</p>
<p> @Configuration：相当于传统的xml配置文件，如果有些第三方库需要用到xml文件，建议仍然通过@Configuration类作为项目的配置主类——可以使用@ImportResource注解加载xml配置文件。 </p>
<p>@Import：用来导入其他配置类 </p>
<p>@ImportResource：用来加载xml配置文件。</p>
<p> @Autowired：自动导入依赖的bean </p>
<p>@Service：一般用于修饰service层的组件</p>
<p> @Repository：使用@Repository注解可以确保DAO或者repositories提供异常转译，这个注解修饰的DAO或者repositories类会被ComponetScan发现并配置，同时也不需要为它们提供XML配置项。 </p>
<p>@Bean：用@Bean标注方法等价于XML中配置的bean。</p>
<p> @Value：注入Spring boot application.properties配置的属性的值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Value(value = &quot;$&#123;user.userName&#125;&quot;)</span><br><span class="line">//@Value(&quot;$&#123;user.userName&#125;&quot;)</span><br><span class="line">private String userName;</span><br><span class="line">可以看得value注解的使用方式：@Value(value = “$&#123;user.userName&#125;”)，</span><br><span class="line">这个时候就会把配置文件里的user.userName的值赋值给变量userName</span><br></pre></td></tr></table></figure>

<p>@Inject：等价于默认的@Autowired，只是没有required属性；</p>
<p> @Component：泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。 @Bean:相当于XML中的,放在方法的上面，而不是类，意思是产生一个bean,并交给spring管理。</p>
<p> @Resource(name=”name”,type=”type”)：没有括号内内容的话，默认byName。与@Autowired干类似的事。 </p>
<p>@AutoWired：自动导入依赖的bean。byType方式。把配置好的Bean拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。当加上（required=false）时，就算找不到bean也不报错。</p>
<p> @Qualifier：当有多个同一类型的Bean时，可以用@Qualifier(“name”)来指定。与@Autowired配合使用。</p>
<p>@Qualifier限定描述符除了能根据名字进行注入，但能进行更细粒度的控制如何选择候选者，具体使用方式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Autowired </span><br><span class="line">@Qualifier(value = “demoInfoService”) </span><br><span class="line">private DemoInfoService demoInfoService;</span><br></pre></td></tr></table></figure>



<h2 id="3-JPA注解"><a href="#3-JPA注解" class="headerlink" title="3.JPA注解"></a>3.JPA注解</h2><p>@Entity：@Table(name=”“)：表明这是一个实体类。一般用于jpa这两个注解一般一块使用，但是如果表名和实体类名相同的话，@Table可以省略</p>
<p>@MappedSuperClass:用在确定是父类的entity上。父类的属性子类可以继承。</p>
<p>@NoRepositoryBean:一般用作父类的repository，有这个注解，spring不会去实例化该repository。</p>
<p>@Column：如果字段名与列名相同，则可以省略。</p>
<p>@Id：表示该属性为主键。</p>
<p>@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = “repair_seq”)：表示主键生成策略是sequence（可以为Auto、IDENTITY、native等，Auto表示可在多个数据库间切换），指定sequence的名字是repair_seq。</p>
<p>@SequenceGeneretor(name = “repair_seq”, sequenceName = “seq_repair”, allocationSize = 1)：name为sequence的名称，以便使用，sequenceName为数据库的sequence名称，两个名称可以一致。</p>
<p>@Transient：表示该属性并非一个到数据库表的字段的映射,ORM框架将忽略该属性。如果一个属性并非数据库表的字段映射,就务必将其标示为@Transient,否则,ORM框架默认其注解为@Basic。@Basic(fetch=FetchType.LAZY)：标记可以指定实体属性的加载方式</p>
<p>@JsonIgnore：作用是json序列化时将Java bean中的一些属性忽略掉,序列化和反序列化都受影响。</p>
<p>@JoinColumn（name=”loginId”）:一对一：本表中指向另一个表的外键。一对多：另一个表指向本表的外键。</p>
<p>@OneToOne、@OneToMany、@ManyToOne：对应hibernate配置文件中的一对一，一对多，多对一。</p>
<h2 id="4-spring-mvc相关注解"><a href="#4-spring-mvc相关注解" class="headerlink" title="4.spring mvc相关注解"></a>4.spring mvc相关注解</h2><p>@RequestMapping：@RequestMapping(“/path”)表示该控制器处理所有“/path”的URL请求。RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。<br>用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。</p>
<p>该注解有六个属性：<br>params:指定request中必须包含某些参数值是，才让该方法处理。<br>headers:指定request中必须包含某些指定的header值，才能让该方法处理请求。<br>value:指定请求的实际地址，指定的地址可以是URI Template 模式<br>method:指定请求的method类型， GET、POST、PUT、DELETE等<br>consumes:指定处理请求的提交内容类型（Content-Type），如application/json,text/html;<br>produces:指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回。</p>
<p>@RequestParam：用在方法的参数前面</p>
<p>url请求：<a href="http://localhost:8080/findUser?username=glj">http://localhost:8080/findUser?username=glj</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(value=&quot;/findUser&quot;, method = RequestMethod.GET)</span><br><span class="line">    public String findUser(@RequestParam(value=&quot;username&quot;,defaultValue=&quot;glj&quot;) String userName)&#123;</span><br><span class="line">        System.out.println(&quot;username: &quot; + userName);</span><br><span class="line">        return &quot;hello&quot;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>上述代码会将请求中的username参数的值赋给userName变量。等价于：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(value=&quot;/findUser&quot;, method = RequestMethod.GET)</span><br><span class="line">    public String findUser(HttpServletRequest request)&#123;</span><br><span class="line">String username = request.getParameter(&quot;username&quot;);</span><br><span class="line">        System.out.println(&quot;username: &quot; + username);</span><br><span class="line">        return &quot;hello&quot;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>@PathVariable:路径变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;/user/get/mac/&#123;macAddress&#125;&quot;) </span><br><span class="line">public String getByMacAddress(@PathVariable String macAddress)&#123; </span><br><span class="line">//do something; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://199604.com/1254">https://199604.com/1254</a> –&gt;Spring MVC常用注解</p>
<h2 id="5-全局异常处理"><a href="#5-全局异常处理" class="headerlink" title="5.全局异常处理"></a>5.全局异常处理</h2><p>@ControllerAdvice：包含@Component。可以被扫描到。统一处理异常。 @ExceptionHandler（Exception.class）：用在方法上面表示遇到这个异常就执行以下方法。</p>
<hr>
<p>转载：<a href="https://www.cnblogs.com/tanwei81/p/6814022.html">https://www.cnblogs.com/tanwei81/p/6814022.html</a> 作者： <a href="https://home.cnblogs.com/u/tanwei81/">tanwei81</a> </p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列–Spring Boot之addviewController</title>
    <url>/1295/</url>
    <content><![CDATA[<p>今天又是没找到工作的一天呀~</p>
<hr>
<p>今天要记录的addviewController，我觉得挺有意义的吧~ 因为在项目开发过程中，时常会涉及页面跳转问题，而这个页面跳转不需要或者没有任何业务逻辑处理的过程，只是单纯的路由跳转过程或者是点击一个按钮跳转到另一个页面。 例如下面例子：</p>
<pre><code>@RequestMapping(&quot;/hello&quot;)
public String hello()&#123;
    return &quot;hello&quot;;
&#125;
</code></pre>
<p>但是呢，你不可能每个Controller都写这样的代码去跳转吧~这样的话不就很多类似的代码咩？</p>
<p>所以Spring Boot(spring mvc)中的提供了：</p>
<p>①implements WebMvcConfigurer（官方推荐）</p>
<p>②extends WebMvcConfigurationSupport</p>
<p>ps:有一些比较早出的书籍会说是继承WebMvcConfigurerAdapter，但是在spring 5或者spring boot 2.0之后已经给上面两种方法取代。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class MyWebMvcConfig implements WebMvcConfigurer &#123;</span><br><span class="line">  //省略</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class MyWebMvcConfig extends WebMvcConfigurationSupport &#123;</span><br><span class="line">  //省略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果用idea ,直接快捷键alt+insert，出现有 Override methods(快捷键为:ctrl+o)/implement methods(快捷键为:ctrl+i)就有所有方法了~</p>
<hr>
<p>下面方法同等第一个例子~</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class MyWebMvcConfig implements WebMvcConfigurer &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void addViewControllers(ViewControllerRegistry registry) &#123;</span><br><span class="line">        registry.addViewController(&quot;/hello&quot;).setViewName(&quot;/hello&quot;);</span><br><span class="line">        //可以添加更多</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>spring boot</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列–Spring Boot之拦截器addInterceptors</title>
    <url>/1307/</url>
    <content><![CDATA[<p>啦<del>嘿</del>呦<del>又是美好的一天呀</del>九月份第6篇还行吧（九月还差3篇啦~那就水够啦）</p>
<hr>
<p>拦截器在我们项目中经常会用到哒~</p>
<p>那我先讲如何用吧(也是怕自己忘记)</p>
<p>用一个简单的登录拦截例子步骤吧：</p>
<p>1.创建我们自己的拦截器类并实现 HandlerInterceptor 接口</p>
<p>2.实现WebMvcConfigurer接口中的addInterceptors方法把自定义的拦截器类添加进来即可</p>
<p>ps:Spring boot 1.x是继承WebMvcConfigurerAdapter，等下会说到，但下面会是以spring boot 2.x为例子。</p>
<p>自定义拦截器代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.componemt;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2019/9/8</span><br><span class="line"> * Time: 23:21</span><br><span class="line"> */</span><br><span class="line">public class LoginHandlerInterceptor implements HandlerInterceptor &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123;</span><br><span class="line">        Object user = request.getSession().getAttribute(&quot;loginUser&quot;);</span><br><span class="line">        if(user == null)&#123;</span><br><span class="line">            //未登陆，返回登陆页面</span><br><span class="line">            request.setAttribute(&quot;msg&quot;,&quot;没有权限请先登陆&quot;);</span><br><span class="line">            request.getRequestDispatcher(&quot;/index.html&quot;).forward(request,response);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //已登陆，放行请求</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的代码就是判定session是否存在，存在则放行(辣鸡例子而已)</p>
<p>实现WebMvcConfigurer接口中的addInterceptors方法把自定义的拦截器类添加进来代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.glj.config;</span><br><span class="line"></span><br><span class="line">import com.glj.componemt.LoginHandlerInterceptor;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.web.servlet.LocaleResolver;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: GuoLiangJun</span><br><span class="line"> * Date: 2019/09/04</span><br><span class="line"> * Time: 16:51</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class MyWebMvcConfig implements WebMvcConfigurer &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 添加拦截器</span><br><span class="line">     * @param registry</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</span><br><span class="line">        InterceptorRegistration interceptorRegistration = registry.addInterceptor(new LoginHandlerInterceptor());</span><br><span class="line">        interceptorRegistration.excludePathPatterns(&quot;/asserts/**&quot;,&quot;/error/**&quot;,&quot;/index.html&quot;,&quot;/&quot;,&quot;/user/login&quot;);</span><br><span class="line">        interceptorRegistration.addPathPatterns(&quot;/**&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中addPathPatterns(“/**”)对所有请求都拦截，但是(excludePathPatterns)排除了一些连接请求的拦截。</p>
<p>spring 1.x之前的话，添加拦截器是不需要考虑静态资源目录，因为拦截器是不会拦截的。</p>
<p>而spring 2.x后呢，你会发现静态资源访问不到的。所以需要在excludePathPatterns上排除uri连接。</p>
<p>如果是大本科，英语厉害去spring看文档，我垃圾大专狗只能谷歌翻译+doc了~</p>
<p>也可参考：<a href="https://my.oschina.net/dengfuwei/blog/1795346">https://my.oschina.net/dengfuwei/blog/1795346</a></p>
<p>好了以上写的都是扯淡的别信，88~</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>spring boot</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>记忆系列--Spring MVC常用注解</title>
    <url>/1254/</url>
    <content><![CDATA[<p>埋坑系列，上周学nginx从入门到放弃，也很快忘记，所以打算弄点自己的快速记忆系列~</p>
<hr>
<p>1.@Controller 用于标注控制层，Spring MVC会自动扫描标注了这个注解的类。</p>
<p> 2.@RestController 用于标注控制层(如struts中的action)，@ResponseBody和@Controller的合集。</p>
<p> 3.@RequestMapping 请求路径映射，可以标注类，也可以是方法，可以指定请求类型，默认不指定为全部接收。而：GetMapping PostMapping PutMapping.. *Mapping的是Spring4.3加入的新注解，表示特定的请求类型路径映射，而不需要写RequestMethod来指定请求类型。 </p>
<p>4.@RequestParam 放在参数前，表示只能接收参数a=b格式的数据，即 <code>Content-Type</code>为 <code>application/x-www-form-urlencoded</code>类型的内容。 </p>
<p>5.@RequestBody 放在参数前，表示参数从request body中获取，而不是从地址栏获取，所以这肯定是接收一个POST请求的非a=b格式的数据，即 <code>Content-Type</code>不为 <code>application/x-www-form-urlencoded</code>类型的内容。</p>
<p> 6.@ResponseBody 放在方法上或者返回类型前，表示此方法返回的数据放在response body里面，而不是跳转页面。一般用于ajax请求，返回json数据。</p>
<p> 7.@PathVariable 路径绑定变量，用于绑定restful路径上的变量。</p>
<p> 8.@RequestHeader 放在方法参数前，用来获取request header中的参数值。</p>
<p> 9.@CookieValue 放在方法参数前，用来获取request header cookie中的参数值。</p>
<hr>
<p>@RequestBody和@ResponseBody是我经常弄混的.. @ResponseBody是作用在方法上的，@ResponseBody 表示该方法的返回结果直接写入 HTTP response body 中，一般在异步获取数据时使用【也就是AJAX】，在使用 @RequestMapping后，返回值通常解析为跳转路径，但是加上 @ResponseBody 后返回结果不会被解析为跳转路径，而是直接写入 HTTP response body 中。 </p>
<p>比如异步获取 json 数据，加上 @ResponseBody 后，会直接返回 json 数据。@RequestBody 将 HTTP 请求正文插入方法中，使用适合的 HttpMessageConverter 将请求体写入某个对象。</p>
<p> @RequestBody是作用在形参列表上，用于将前台发送过来固定格式的数据【xml 格式或者 json等】</p>
<p>封装为对应的 JavaBean 对象，封装时使用到的一个对象是系统默认配置的 HttpMessageConverter进行解析，然后封装到形参上。 具体以后自己少用了有忘记的话–&gt;</p>
<p><a href="https://www.cnblogs.com/xiangkejin/p/9016498.html">https://www.cnblogs.com/xiangkejin/p/9016498.html</a> </p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>记面试怂的一笔~</title>
    <url>/1247/</url>
    <content><![CDATA[<p>最近面试了两次，都是已失败告终~</p>
<p>算了一下，加上最近的两次面试，我人生也就一共3次面试~</p>
<p>最近的面试，第一关笔记感觉还行~</p>
<p>但面试官一坐下来，我全身就开始紧张了?妈呀，手舞足蹈那样子阿~</p>
<p>然后自我介绍，本来这个才是重点的<del>谁知道，哎，说话都抖嘴了，说了没几句就想不到了</del>大脑全是空白，更不要说面试官问我的问题了？</p>
<p>想了想，面试官说session你怎么理解，我操，我紧张到session时什么卧槽！！！(回想自己当时是不是傻子！！！！！！！！！！！)</p>
<p>然后面试官看了自己emmm，又问servlet是什么(然后自己就乱七八招就开始BB了?现在又回想，是真的想杀了自己……)</p>
<p>嗯。我？能不能自信点？</p>
<p>emmmm，下次能不能自信点阿郭良俊呜呜呜呜呜呜呜呜呜呜呜呜~<img src="%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20171106200520.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>说点什么好呢。</title>
    <url>/348/</url>
    <content><![CDATA[<p>今天开学。我说点什么好呢?时间啊不要那么快阿。三星期的假期就没有了尼玛坑爹!!!</p>
<p>好吧我看到学校第一感觉就是我要走人不解释。</p>
<p>好吧,还是慢慢的挨过这把。慢慢就好了。加油你行的嗯哈上学去了!!!</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>说说怎样给家里除螨</title>
    <url>/443/</url>
    <content><![CDATA[<p>  随着人们物质生活水平的提高，一种特殊的除螨吸尘器开始进入中国家庭。说其特殊，因为其并不是用来吸地板的，而是用来吸沙发、床单、被子等与人体直接接触的家居用品的，下面就来为大家介绍下其工作原理。</p>
<p>  <strong>什么是螨虫</strong><br>  在介绍除螨吸尘器之前先说说什么是螨虫。螨虫属于节肢动物门蛛形纲蜱螨亚纲动物，身长只有0.1-0.5毫米大小，肉眼不可见，成虫有4对足，一对触须，无翅和触角，身体结构有别于昆虫。虫体分为颚体和躯体，颚体由口器和颚基组成，躯体分为足体和末体。螨康躯体和足上有许多毛，有的毛还非常长。前端有口器，食性多样，如头皮屑等。<br>  螨虫广泛分布于居室的阴暗角落、地毯、床垫、枕头、沙发、毛绒玩具、毛毯、窗帘、柔软布制品、衣物、被褥、坐垫等处，即使在定期认真吸过尘的地毯上，每平方米也大约有1000-10000只螨。如果气候湿润温和又能找到人体皮屑作为食粮，螨虫就会迅速繁衍。一个人每天脱落1-1.5克皮屑，足够使100万只尘螨吃饱。<br>  螨虫的尸体、分泌物和排泄物都是过敏源，随着时间的推移它们分裂成极小微粒，与灰尘结合，会使人出现过敏性皮炎、湿疹、过敏性结膜炎、过敏性鼻炎、支气管哮喘等过敏性疾病，危害人体健康。</p>
<p>  <strong>怎样除去螨虫</strong><br>  由于螨虫的外貌看上去十分的恶心，使得人类常对其产生恐惧和害怕的心理，其实大可不必担忧，其实螨虫是与人类共生的一种微小生物，每个人身上都有螨虫，人类与螨虫共生的历史相当的久远，从有人类开始遍已经存在了。由于室内环境的复杂，普通家庭是无法将螨虫彻底消灭干净的，所以为保护家人的健康，重点是去除室内的灰尘及螨虫的尸体、分泌物和排泄物等，以隔离过敏原。<br>  具体方法是：用吸尘器等去除家里的灰尘，如果条件允许，选择有效的空气净化器以过滤掉空气中的过敏原。保持房间的通风，因为60%以下的空气湿度可使螨虫和霉菌难以生存。尽可能减少卧室内容易聚集灰尘的物品，如沉重的窗帘、织物桌布、开放式书架等。<br>  由于螨虫在卧室里的主要藏身之处是床垫和被褥，且人每天都有几个小时在床上度过，因此时刻保持床上用品的清洁是很重要的。人们常说：“三月不晒被，螨虫陪你睡。”所以一定要用洗衣机勤洗勤晒被褥，螨虫怕光，将洗好的被褥在太阳光下曝晒几个钟头可以将螨虫杀死。对于被芯，也要常拍打掸去里面的灰尘。此外还要保持皮肤清洁，常洗澡，衣服也要保持清洁。</p>
<p> <strong>什么是除螨吸尘器</strong><br>  可能由于工作繁忙的缘故，家庭当中并没有时间来进行常洗常晒被褥的工作。好不容易到了周末，可能天公又不作美，所以这时候需要借助工具的帮助。由于科技的进步，人类研制出一种更便捷的除螨方式，那就是除螨吸尘器。除螨吸尘器使用四种方式来除去家里的过敏原，即拍打、旋转刷头、吸尘和紫外线。<br>  除螨吸尘器都内置强力拍打器，用每分钟几千次的频率模拟人用工具拍打被褥的动作，将内部灰尘拍打出来。拍打出来的灰尘、毛发、头屑等脏物将被高速旋转的刷头刷入，再通过强大吸力吸入吸尘器的尘仓当中。最后，再通过紫外线模拟太阳光，直接破坏微生物机体细胞，使螨虫、细菌、霉菌丧失生存及繁殖力。此外，除螨吸尘器一般都有HEPA滤网，以过滤微小粒子过敏原。<br>  最早市面上的除螨吸尘器品牌都来自韩国，其价格从1000多到几千人民币不等；现在也有国产品牌出现，其价格相对韩国品牌更加的实惠。此外也有普通吸尘器号称带有除螨功能，但其大部分并不提供拍打和紫外线功能，请消费者小心鉴别。</p>
]]></content>
      <categories>
        <category>分享资讯</category>
      </categories>
      <tags>
        <tag>除螨</tag>
      </tags>
  </entry>
  <entry>
    <title>请不要把钱转到京东小金库</title>
    <url>/466/</url>
    <content><![CDATA[<p> 不多说还是入正题，有什么多余的钱都不要把钱转到京东小金库，有进没出的一个坑爹金融机构。用邮政把钱存进去，存多少都是白送给京东了，根本就取不出来。打了客服也解决不了，真心不知道京东在搞什么的。这次把钱弄出来再也不碰京东小金库，纯粹就是个坑！</p>
<p> 其次，如果你需要换卡，这个也是压根的就是坑爹！之前因为银行卡给小狗狗咬坏了，我就换卡了，钱就提现不了了，我就打电话给他们客服，他们说3-5个工作日帮我弄好，问题是我8.30就打电话给他们了，到这个大一一个学期过去，屁都没有一个，这就是京东的效率？这就是所谓的为人民百姓谋福利？自己存进去的钱，要回来就像是要饭那样打电话给客服然后客服这边一点理由那边一点理由？然后就拖拖拖？被京东客服踢皮球一样搞得都醉了，按要求材料提供无数次了，今天这个说材料OK，然后没有下文，明天那个说不可以重新提供；京东客服就是逗傻子玩，问客服你们京东金融注册的全名是什么，客服都不告诉你，怕你找监管部门投诉，拿着京东无奈！</p>
<p> 我现在已经对京东是失望极了，大家都不要相信京东那些金融的东西都是在套钱。</p>
<p> 所以，请不要把钱转到京东小金库！this is 忠告！不信自己百度一下或者到京东的贴吧看看吐槽有多么的严重！</p>
]]></content>
      <categories>
        <category>分享资讯</category>
      </categories>
      <tags>
        <tag>京东</tag>
        <tag>京东小金库</tag>
      </tags>
  </entry>
  <entry>
    <title>越长大越孤单了</title>
    <url>/321/</url>
    <content><![CDATA[<p><em>童年不缺少玩伴 吃零食看动画片玩弹珠 天天被父母揪着回家 跟小伙伴吵架 赌气说“我不跟你玩了”但过不了多久又和好如初 长大后社交活动丰富了 交际圈广泛了 朋友也多了 可像童年那种不计较得失的纯洁友情却没有了 能谈心的更是难寻 于是自己变得沉默寡言 不会再过多吐露心事 人呀 真是越长大越孤单了</em></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>还有几天吧</title>
    <url>/4/</url>
    <content><![CDATA[<p>距离空间过期还要3天吧。</p>
<p>嗯哈,不想说太多,这里星期上了9天的课然后要空位置出来给师兄师姐们高考、我在这里祝你们高考成功。</p>
<p>好了不废话了。</p>
<p>等下就去找找一些免费空间去顶着吧。</p>
<p>下午累死了搬了一下午东西。然后又要逼公车回家各种炒蛋。</p>
<p>不说了睡觉去，</p>
<p>最后我也友情的弄一些内链</p>
<p>需要的就留下你们的网站名字吧。</p>
<p>格式：</p>
<p>网站名：</p>
<p>域名：</p>
<p>博客优先吧。说明是内链!!<img src="http://199604.com/link.html" alt="http://199604.com/link.html"> 好了想要的就留言吧。我去睡觉醒了就找找空间搬家了哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>这个月最后一篇</title>
    <url>/179/</url>
    <content><![CDATA[<p><img src="http://qn.199604.com/875700081676818913.jpg"></p>
<p><strong>照片是大图，请尽量使用电脑浏览器观看！</strong></p>
<p>out.print(datetime)-&gt;o，今天校运会所以不用上课，又睡到12点多,醒来看了看日期,距离这阿里云2年空间还有2个月，这也意味距离我注销备案、网站搬家也快了，毕竟这几个月花的钱已经把我塌了。不要问我钱花去哪里了,你问一个男人这个问题就像问人爱不爱钱那么庸俗…….好像跑题了耶,不理了话题结束。</p>
<hr>
<p><img src="http://qn.199604.com/536572072553877194.jpg"></p>
<p>冷了几天，放几张辣鸡照片吧,因为图片就像每一个人，毕竟每个人都是孤独发光的星体，包括至亲、爱人、朋友，一起构成了我们的星系。</p>
<p>然而星辰会陨落，轨道会迁移，或许再也见不到你。但是我会记得，你的光芒温暖过我的眼睛。而我，也曾闪耀在你的夜空里。</p>
<p><img src="http://qn.199604.com/709586363464813831.jpg"></p>
<p>在这样的冬天里，我们可以看一部剧或者看部电影再或者就去约炮都是不错的选择，听听暖心的歌、约约炮友去看下电影，生活很美好，如果不顺心了记得告诉自己一切都会好的。愿这个冬天你能收获点滴温暖。 <img src="http://qn.199604.com/377077617707721294.jpg"></p>
<p><img src="http://qn.199604.com/519763328482434141.jpg"></p>
<p>愿生活里有热汤和甜食，背包里有纸，笔，书。书里故事如迷宫，迷宫通向海。沟通使误解消除，善意如星辰。枝头常有喜鹊歇脚，目明心亮。走很远的路回家，混沌中生出新的自己。</p>
<p><img src="http://qn.199604.com/QQ%E5%9B%BE%E7%89%8720161129161750.jpg"></p>
<p>祝福师兄师姐们：毕业快乐，前途无限，事业有成、在人生道路上有所成就.</p>
<p><img src="http://qn.199604.com/QQ%E5%9B%BE%E7%89%8720161129161920.jpg"></p>
<p>所有的希望都能如愿，所有的梦想都能实现，所有的等候都能出现，所有的付出都能兑现！</p>
<p><img src="http://qn.199604.com/QQ%E5%9B%BE%E7%89%8720161129162012.jpg"></p>
<p>我们这也变成了老油条了，努力泡妞吧单身的小伙伴不要像可哥那么花心。</p>
<p><img src="http://qn.199604.com/127078833844944259.jpg"></p>
<h2 id="最后来一个中英语句：文章结束–End-of-article"><a href="#最后来一个中英语句：文章结束–End-of-article" class="headerlink" title="最后来一个中英语句：文章结束–End of article."></a>最后来一个中英语句：文章结束–End of article.</h2><p><img src="http://qn.199604.com/58096045293522145.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>毕业</tag>
      </tags>
  </entry>
  <entry>
    <title>这就是我这就是我的博客</title>
    <url>/356/</url>
    <content><![CDATA[<p>暑假的天气就是这样的怪.上午还很晒的太阳。一阵乌云就把那向往着美好的阳光给灭了!!</p>
<p>每个人都会有希望。但是今天的心情让我很难过,我不知老天在背后帮我挡了多少劫难。我也很感谢老天能在我绝望的时候给我温暖。</p>
<p>不过的是我这个人以往的堕落真的。做过后才后悔!后悔已经来不及了.然后就想让天来救救我。</p>
<p>今天我就是一个扫把星、什么事情都会发生在我身上。</p>
<p>所以我每天都很黑很背很难受</p>
<p>所以我也想死。</p>
<p>所以我就不出声</p>
<p>所以我就关在房间里</p>
<p>所以我就自己去打球</p>
<p>所以所以一万个所以。</p>
<p>然后我就变了一个人。</p>
<p>只会藏在心中。</p>
<p>嗯哈,老天你这次也救救我吧。</p>
<p>嗯!</p>
<p>ha</p>
<p>bey!!!!</p>
<p>最后我已经把搜索什么的都给关了。我只想自己写自己的博客、或许我这个博客不吸引人没有什么给人留恋的。但是这就是我这就是我的博客</p>
<p>谢谢!!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>连接不上SFTP报java.security.NoSuchAlgorithmException: Algorithm DH not available错误</title>
    <url>/1030/</url>
    <content><![CDATA[<p>今天在在本地连接linux虚拟机测试代码时，遇到了<code>java.security.NoSuchAlgorithmException: Algorithm DH not available</code>的错误。 </p>
<p>原因： DH算法无效。 网上的解决办法为：</p>
<ol>
<li>修改java.security文件(我自己觉得不推荐，因为机器不是你的呢?) JDK路径\jre\lib\security\java.security</li>
</ol>
<p>security.provider.11=org.bouncycastle.jce.provider.BouncyCastleProvider</p>
<h1 id="前面的数字依次增加"><a href="#前面的数字依次增加" class="headerlink" title="前面的数字依次增加"></a>前面的数字依次增加</h1><p>2.使用bcprov-jdk16包,将bcprov-jdk16-145.jar 放入 本机 jre/lib/ext 下 即可(试过无效)</p>
<hr>
<p>我的解决办法是从jdk7切换到jdk8,可能是版本算法不一样(且我项目是用jdk7，但是系统环境jdk8？) 具体可以到下面链接看下咯</p>
<p><a href="https://stackoverflow.com/questions/28611956/getting-nosuchalgorithmexception-when-creating-a-directory-on-sftp-server-via-js">https://stackoverflow.com/questions/28611956/getting-nosuchalgorithmexception-when-creating-a-directory-on-sftp-server-via-js</a> <a href="https://stackoverflow.com/questions/52545555/nosuchalgorithmexception-dh-keypairgenerator-not-available-on-camel-ftp">https://stackoverflow.com/questions/52545555/nosuchalgorithmexception-dh-keypairgenerator-not-available-on-camel-ftp</a></p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
  </entry>
  <entry>
    <title>迷茫期</title>
    <url>/111/</url>
    <content><![CDATA[<p>  <img src="http://qn.199604.com/327426207195914573.jpg"></p>
<p>身在迷茫期~</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>迷茫期</tag>
      </tags>
  </entry>
  <entry>
    <title>酸碱平-dds生物电-河北华林公司and厚德祖康传销</title>
    <url>/512/</url>
    <content><![CDATA[<p>今晚，我收到我姐给我发过来的一条短信，说我老妈子准备给骗人传销<del>！ 想想我老妈这种人应该也是给他身边的那个朋友给骗的</del>不料还真的是~现在我就一一的公布 还是那句广东话：捂熟捂食（不是熟人不骗） 这篇文章,如果我是侵犯了这两家公司的，可以报警抓我。但是连一个百度都那么多负面消息的公司，那么还有什么理由不让我写这篇文章</p>
<hr>
<p>以下是什么酸碱平，DDS生物电，河北华林XX公司 是传销，鉴定无误。已经咨询过专业人士：【任何获得直销牌照，却不经营商务部批准的产品的直销公司，都是挂羊头卖狗肉！双线经营都是传销！】手动加亮！ 这几天妈妈被忽悠过去了，而且已经买了什么DDS酸碱平理疗仪。 痛定思痛，查了很多资料来反驳这个公司，现在基本已经说服自己的妈妈，妈妈也在和我商量中，如何能退钱。 1.首先我们来看看这个华林酸碱平公司，据说已经取得了商务部直销执照。 <a href="http://zxgl.mofcom.gov.cn/front/index">http://zxgl.mofcom.gov.cn/front/index</a> 这是商务部可以查询到 进入商务部直销行业信息管理系统，找到了华林酸碱平。 <img src="http://qn.199604.com/typoraImg/1-1024x259.png"> 点击查看他的信息 <img src="http://qn.199604.com/typoraImg/21-1024x505.png"> 然后我们看到，它被批准的直销产品是8种化妆品 根本就没有什么DDS平衡仪！或者是它强力推销的什么平衡泥膏或者精油！虽然它已取得直销执照，但是它现在所销售的根本不是它所申请的直销产品，就是挂羊头卖狗肉！ 2.如果上面还不能说服你身边被陷入华林酸碱平的人，那么请看下面。 华林酸碱平称：“酸性体质是百病之源。 利用<strong>生物电</strong>来打通人体经脉，激活细胞，治疗各种慢性病。生物电技术不同于日常的直流电和交流电，它是在电源的作用下，通过调动操作者自身的生物电，然后再作用于受试者的新技术。它不同于现在市场上现有的电疗仪、 治疗仪等，是区别于它们的，在它们之上的一个质的变化。这种生物电是将人体调理之后发出的新的生物电能量，这种生物电能量与酸碱平作用相结合，使物理、化学作用相得益彰，且经皮肤吸收，是一种新产品，有特色的科技产品。” 他这里偷换了生物电的概念。我们人体中是存在着生物电。<a href="https://link.zhihu.com/?target=http://baike.baidu.com/view/35142.htm">生物电_百度百科</a> 我们可以看到：<strong>“生物的<a href="https://link.zhihu.com/?target=http://baike.baidu.com/subview/60813/9176645.htm">器官</a>、<a href="https://link.zhihu.com/?target=http://baike.baidu.com/subview/46944/5892744.htm">组织</a>和细<a href="https://link.zhihu.com/?target=http://baike.baidu.com/view/130680.htm">胞</a>在生命活动过程中发生的<a href="https://link.zhihu.com/?target=http://baike.baidu.com/view/81246.htm">电位</a>和<a href="https://link.zhihu.com/?target=http://baike.baidu.com/view/744185.htm">极性</a>变化。”</strong> ”这种电位与快速的神经细胞兴奋活动不同，也可能是一种由代谢活动所引起的或与<a href="https://link.zhihu.com/?target=http://baike.baidu.com/view/213009.htm">神经胶质细胞</a>活动有关的生物电化学现象。“ 注意，生物电是存在在我们身体中的一种化学现象，而且生物电的电流非常非常的小。是生物细胞在新陈代谢中产生的现象，利用电源去调动生物电这个说法太没根据了吧，人体里又不是埋的电线……你说调动就调动。我个人认为 这是利用静电来刺激细胞，但是DDS这种产品能够保证直接输入的电流完全对人体没害吗？如果电流过大，杀死的不仅仅是病变的细胞，极有可能杀死白细胞。 可以参考 这个 @钟文的答案：<a href="https://www.zhihu.com/question/26468944/answer/66774226">生物电理疗有副作用吗？ - 钟文的回答</a> 也可以参考<a href="https://www.zhihu.com/question/31532685">酸碱平生物电dds能够治病吗？常期使用对人体有没有伤害？ - 医学</a> <img src="http://qn.199604.com/typoraImg/f4b4b21e1344efea8551a9c907cf6132_b.jpg"> 3.还有在华林酸碱平它的申请直销声明中写道： <img src="http://qn.199604.com/typoraImg/138a4519a4f8bb5cf4b66011edb4d1b5_b-576x1024.jpg"> <strong>严禁团队计酬。</strong> 然而他们现在的做法不就是啪啪啪打脸吗？呵呵呵。 写到这里，便是我说服家人的整个过程，毕竟我并不是学医的，只是在常识方面尽量找到他们的漏洞。虽然家人已经被我的逻辑说服，但是他仍然存在着疑惑，为什么他在用那些机器时，是有作用的。而且效用比较明显。 这也是我想进一步去求证的。 希望有专业人士能够给出一个明确的定义，关于生物电疗法的科普，到底什么是对身体有利的，是否有副作用。 <img src="http://qn.199604.com/typoraImg/799506193828994068-1024x576.jpg"> 这个是2014-2016年中国非法传销公司的名单大全 <img src="http://qn.199604.com/typoraImg/0401211225.png"> 这是一种三无产品，未经国家医监部门的安全认证，这个公司就是借着直销的名义搞变相传销，并且这种仪器对人体有潜在的健康安全隐患，导致后期某些器官致癌，使人体自身的平衡系统失调；这种疗法仅能对某些皮肤表面、失眠等证有稍许的效果，但不能根治。请不要相信他们夸大的宣传，更不要轻易使用！请大家看下面这个科普就明白了。为了你的家庭及亲友，请远离传销！ 最后他们买的什么鬼DDS就是一个普通的按摩器！  </p>
<p>以上部分转载<a href="https://www.zhihu.com/question/24470929">知乎</a></p>
<hr>
<p>以下是厚德祖康的传销 还是那句话先来一个商务部的直销牌照看产品先 <img src="http://qn.199604.com/typoraImg/1491050746806_47-1024x406.png"> 这个更加的不靠谱了，直接连挂羊头卖狗肉的机会都没有。所以剩下他怎么吹水我会不会相信？连一个牌照都没有的什么鬼科技公司生产的精油。呵呵 <img src="http://qn.199604.com/typoraImg/20170401212247.png"> 最后,我差点忘了一个经典的对话： 她说去培训的时候，有人心脏病发，然后通过她们的那些按摩手法，然后就救活了。 我一听就知道是演员啦。连我姐这个美丽天使都不相信。 你们还有什么能相信的？ 好了希望不要给身边的那些传销给骗了！ 看好家里的父母 不要给那些进了传销的朋友骗了，因为他们骗一个进去，佣金多少你们自己都知道。 这种害人害己的活我们不要！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>传销</tag>
      </tags>
  </entry>
  <entry>
    <title>除夕。</title>
    <url>/383/</url>
    <content><![CDATA[<p>除夕的是农历一年中的最后一天，也就是说过了这一天明天就是第二年了。所以孩子们记得十一点五十九分时把作业拿出来过了十二点自豪的喊出“我有做两年的作业。”</p>
<p>今天是除夕，但你能感觉到这是新年了吗？除了还是全家围在一起吃团圆饭、坐在一起谈笑风生、一起看春晚。剩下的还有什么？以前的童真没有了取而代之的是现代的东西：手机、电脑、电视。以前吃完团圆饭后一大群小孩围在一起烧鞭炮、玩烟花。围成便是烟花爆竹的世界。但这个世界已经不存在了新年的气氛也没有了，这或许是现代的新年吧想平常一个样。老家人常说开开心心便是新年高高兴兴便是生活。</p>
<p>除夕之夜，希望我们能贴对联、挂年画、放焰火、看春晚，尽管是忙了一点，但称得上是继承中国的传统吧。</p>
<p>最后祝全中国的大孩子、小孩子and全世界的人们都新年快乐、万事如意、财源滚滚来。嘻嘻也能新年红包拿来！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
        <tag>新年快乐</tag>
      </tags>
  </entry>
  <entry>
    <title>随身WiFi变无线网卡!!</title>
    <url>/388/</url>
    <content><![CDATA[<p><strong>现在随身WIFI多了去了、比如百度的小度wifi、360的、腾讯的、小米的五花八门。使得这一功能得到迅速的推广与普及。</strong></p>
<p><strong>虚拟AP对于无线网卡来说是一个很基本的功能，几乎所有USB无线网卡和带无线网卡的笔记本都支持这一功能，并且这一功能已经由来已久，并不是什么新鲜产物。</strong></p>
<p><strong>下面我用360随身WIFI来做一个小教程、把它变成无线网卡连接WIFI。哈哈哈哈哈怎么便宜的无线网卡是不是很心动呢！ps:需要买的自己去京东买小弟弟没有不能提供给你们啊。</strong></p>
<p><strong>一、要想使用360随身WiFi的无线网卡.先不要将360随身WiFi连接电脑，也不要安装360随身WiFi的官方驱动，我们需要安装设备的纯驱动。</strong></p>
<p><strong>ps:如果电脑上有360安全卫士的也要他退出。</strong></p>
<p><strong>二、360随身WiFi2代采用Ralink雷凌无线芯片，所以我们使用Ralink雷凌的驱动程序来驱动360随身WiFi。</strong></p>
<p><strong><strong>Ralink雷凌的驱动程序下载地址：<a href="http://pan.baidu.com/s/1kTt4BcV">http://pan.baidu.com/s/1kTt4BcV</a>      （我提供的原厂驱动如果怕有毒请到官网下载）</strong></strong></p>
<p><strong><strong>三、安装驱动，注意：安装的时候只选择安装驱动就可以。其他不用理他哈哈哈、</strong></strong></p>
<p><strong><strong>四、安装完成，出来了一个无线网卡了，是不是？（不出来把USB拔开在插进去）</strong></strong></p>
<p><a href="http://199604.com/content/uploadfile/201402/83301393132537.png"><img src="http://199604.com/content/uploadfile/201402/83301393132537.png" alt="点击查看原图" title="点击查看原图"><strong>有图有真相。</strong></a></p>
<p><strong>如果你还想把它变成无线路由的话可以去下载一个猎豹免费WIFI。然后就可以共享了是不是很特别。</strong></p>
<p><strong>如果您想卸载就在设备管理器里面→找到网络适配器→ 里面的USB无线网卡→ 右键→卸载。会自动卸载USB无线网卡的驱动，完成后自动重启。<br>重启后，跟你第一次使用一样，你插入的360随身wifi会自动被360安全卫士自动识别安装驱动。（家里有360安全卫士的前提） 如果没有就到wifi.360.cn下载驱动安装。</strong></p>
<p><strong>在我使用过程中360随身WiFi的稳定性表现还不错，上网浏览网页、玩游戏、看标清高清视频、中小文件下载都正常。<br>遇到过一次掉线的情况，那是下载了一个2K14的安装包掉过一个然后我下载5G的电影都没有断了所以稳定就摆在那里（其实腾讯的那个随身WIFI渣渣的）嘘小声点不要给人听到不然说我亲360.</strong></p>
<p><strong>好了周末到了我也去上学了good bey了各位亲们。</strong></p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>雨中随感</title>
    <url>/344/</url>
    <content><![CDATA[<p>“漠漠清寒上小楼，晓阴无赖似穷秋。”</p>
<p>　　天意阴霾，无边丝雨，细细密密，交织缠绵，在这初夏的天里，竟下起了密密小雨，天凉微寒，真像极了清秋。真是“一夕骄阳转作霖，梦回凉冷润衣襟。”</p>
<p>　　一把雨伞，一个人，一条雨巷，慢慢走，任雨水落地水花溅湿衣裳，竟升起些许惆怅，只怪这无边的丝雨，连绵不断正像极了细致入微、隐隐约约的思愁，我想是很久没下雨的缘故罢？一时阴雨袭来竟无端生出这些感情来。昔日这繁华，喧嚣的小巷只剩下了我一个路人–我喜欢在雨中漫步。巷口稀稀落落排列着几对行人，大都行迹匆匆，我便疑惑他们为什么那么匆忙？烟雨迷蒙，是怎样美好的意境啊。他们匆匆而过岂不错过了这美丽的景色？</p>
<p>　　思绪飘起，却被汽车鸣笛惊散，把我无情的从陶醉中拉出来，哎！汽车飞驰而过，高楼林立突兀…这现代化的产物与这美好的意境多么的格格不入。</p>
<p>　　我不禁羡慕起江南来。江南的春，“日出江花红胜火，春来江水绿如蓝。”江南的夏，“露卧一丛莲叶畔，芙蓉香细水风凉。”江南的烟雨，“南朝死百八十寺，多少楼台烟雨中”我想这烟雨算是江南标志了罢，山色空蒙，水汽氤氲，细雨如丝，晃若仙境。我喜欢江南，真恨不得自己是江南人了。好一个“小桥，流水，人家”，流水款款，小桥横立，再几处人家，炊烟袅袅……江南就是这样一幅水墨画，清新淡雅，无需绚丽颜色的铺陈，只消淡淡几笔，足以美不胜收了。江南的魅力绝不止这烟雨迷蒙罢了，“小楼一夜听风雨，深巷明朝卖杏花。”对，还有江南的小楼，“宝帘闲挂小银钩”在我私下对江南的印象里江南的小楼都是这样的罢，楼台之上几扇窗，几处宝帘闲挂，窗外流水潺潺，杨柳依依，楼中伊人独倚，淡淡胭脂淡淡愁。楼旁雨巷深深，几把油纸伞几个未归人，青石板路连绵延伸，我想江南是见惯了雨的。烟雨中的江南才是最美的江南。</p>
<p>　　“春未老，风细雨斜斜。</p>
<p>　　试上超然台上看，</p>
<p>　　半壕春水一城花。</p>
<p>　　烟雨暗千家。”</p>
<p>　　望江南！</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>青春，是一场远行</title>
    <url>/458/</url>
    <content><![CDATA[<p>青春，是一场远行，一旦出发就回不了头。在这场青春的旅行中，我们每个人的起点都不同，而我们每个人的终点也不一样。有些人总在前进中徘徊，在徘徊中等待，最后他们的终点还是开始的起点。有些人从不做无谓的祈祷，更倾向于华丽的跌倒，屡战屡败，屡败屡战，不断达到预设的终点，每到一个终点，又是另一个新的起点，他们终到达向往的彼岸。<br>  <br>时光走得太匆忙，我们终究跟不上岁月的步伐。是否你还在以青春为借口，肆意挥洒自己的美好年华？请记住你的青春之旅已经开始了，而你也已经回不去了。如果你一直这样放纵下去，那么这场远行，你注定会错过更多的风景。  </p>
<p>青春的我们都有梦，少年，带着心中最初的梦想上路吧！不要害怕前方会有什么荆棘妨碍你进行；也不要担心自己是否可以坚持到最后。是勇者，你就拿起手中的利剑披荆斩棘；是勇者，你就坚定内心的选择勇往直前。在这个花一般的年龄，就应该像花一样地绽放。宁愿在追逐路上无数次跌倒，哪怕最终只剩下坚强的躯壳，也不愿就这样被现实简简单单击倒。既然选择了远方，又何惧路途遥远？只顾着风雨兼程，终有达到彼岸时。  </p>
<p>青春是什么？青春就是你每天早上醒来发现自己脸上还有青春痘，然后还可以骄傲地对自己说：我还有青春痘，我不能停止奋斗！  </p>
<p>如果你是一个想登上最高峰的勇士，那么你注定是第一个被雨淋的人。如果你是第一个走在前面的梦想者，那么最先受到冲击的人就会是你。梦想，不只是说说而已。害怕了吗？动摇了吗？就这样轻言放弃了吗？就这样软弱退缩了吗？你一旦放弃，之前一切的努力都会是白费；你一旦退缩，就意味着你会像弱者一样度过余生。年轻时，切勿空有一腔热血，而忘记在青春路上狂奔。  </p>
<p>不要去抱怨生活的不堪，也不要去吐糟自己的怀才不遇。上帝从来都是公平的，你之所以一直抱怨，是因为你只看到了自己的困难，却没有看到别人的痛苦；而你所谓的怀才不遇，也不过是你妄想不劳而获的借口。如果世界上真的存在“运气”这一奇迹，那么它肯定是努力的另一个名字。  </p>
<p>年轻时，你不让自己多吃一点苦，多扛一点累，那么以后你有什么能力驾驭一切呢？  </p>
<p>如果你是一个爱睡懒觉的人，你又怎么有资格苛求清晨的第一束阳光照到你的笑脸呢？  </p>
<p>不要在最能吃苦的年纪，选择了安逸。也不要在最有活力的年华，放弃了奋斗。这样自暴自弃的你，不仅配不起自己最初的梦想，更辜负了所有帮助过你的人。  </p>
<p>前行的钟声已经响起，不要再耽搁行程了，背好你的青春梦想，继续踏上旅途吧！一路上还有许多风雨要淋漓你，还有许多坎坷要考验你，还有许多荆棘要磨砺你，从容不迫，坚定信心，勇敢地走在旅途上，让自己一路开花，那么，你就是这场青春之旅的强者了。  </p>
<p>青春，是一场远行，既然开始出发了，就不要停下来。只要坚持往前走，你终会走成属于你自己的亮丽风景。</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>是一场远行</tag>
        <tag>青春</tag>
      </tags>
  </entry>
  <entry>
    <title>静态加载类和动态加载类</title>
    <url>/529/</url>
    <content><![CDATA[<p>1、new 出来的都是静态加载类，一招出错，全盘皆输。 如</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Office</span></span>&#123;</span><br><span class="line">  <span class="function">pulbic <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(Stirng\[\] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;Word&quot;</span>.equals(args\[<span class="number">0</span>\]))&#123;</span><br><span class="line">      Word w = <span class="keyword">new</span> Word();</span><br><span class="line">      w.start();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>new 对象 都是静态加载的类，在编译时就需要全部加载需要用到的类，不管你用不用到… 所以你需要有Word的类… 需要解决就要用到动态加载类.. 2、动态加载类 如何动态加载类呢 我们可以通过类类型，创建该类的对象 如先创建一个接口，让他的类去实现这个接口从而实现动态加载</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OfficeAble</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OfficeBetter</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String\[\] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class c = Class.forName(args\[<span class="number">0</span>\]);</span><br><span class="line">OfficeAble oa = (OfficeAble) c.newInstance();</span><br><span class="line">oa.start();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Word</span> <span class="keyword">implements</span> <span class="title">OfficeAble</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以以后需要加载什么类，我们都可以去创建一个这个类类型去动态加载….</p>
<p><code>Class c = Class.forName(args\[0\]);OfficeAble oa = (OfficeAble)c.newInstance();</code>//OfficeAble定义的功能类型接口**</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>java反射</tag>
      </tags>
  </entry>
  <entry>
    <title>面试没进..</title>
    <url>/782/</url>
    <content><![CDATA[<p>第一次一整套的面试没有过,其实也有点不快吧.但也有自身的不足…希望能找到更好的吧</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>高一再见。</title>
    <url>/354/</url>
    <content><![CDATA[<p>刚在空间无意的看了一条说说“尊敬的用户，您好，您的`高一生活`套餐以不足十天。且无法进行续费，请酌情使用。”</p>
<p>可以说,初中我毕业一年了,高一我开始一年了,再见老朋友,你好新朋友我知道现在说有点晚了,但是正因为迟来的礼貌,我才要说,老朋友你现在还好吗?我们一年没有见面了,你想我吗?你还把我当朋友吗?…… hey,原谅我的弱智吧,其实我说我想你们,想那么2的你们!!!</p>
<p>每个人的手中都不约而同的握紧了钢笔,一刻也不停地在那题海中写写画画。我美好的高一生活就在这样一个如此繁忙如此充实的学习氛围中走向了完结,永远的变成了回忆。也对,我已经是一名准高二的学生了吧,(想起也开心了!!!)</p>
<p>正如徐志摩曾说’’轻轻的我走了,正如我轻轻的来,挥一挥衣袖,不带走一片云彩.”可是在面对我高一的生活时,我却没有办法像他一样潇洒的专属,毕竟,我的太多太多私人life都给了我的高一。</p>
<p>高压力的学习生活和越来越真实的成绩让我敢于面对挑战。生活中的挫折与困难如影随行。大考失名、小考失利。终于开始懂得级长曾说过的话“即使努力也不一定成功,但要想成功一定要努力。”</p>
<p>只是有些美中不足的是自己并没有为高一的生活写下完美的句号。如果时间可以再来一次,我不敢说我能做到多完美,但我一定会竭尽所有努力。</p>
<p>好了我也不想再去吐槽高一了,怀念的东西真的很多很多。但是相信自己才是最重要的。</p>
<p>高二,在前方等着我在向我招手!!!我马上就要来了很快,因为你不会寂寞!!!</p>
<p>高一再见。are you ready?</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>高三加油。高考加油！</title>
    <url>/405/</url>
    <content><![CDATA[<p>校训：崇德尚文，争做考神，一中学子，德智全能！！！</p>
<p>粤语：高考无悔，高三加油。进取一中人，高分又高能，完爆全岭南，乜都?得弹！</p>
<p>  在这些字一个个在你的耳朵里洪亮的闪过ing。你顿时会觉得无比的激动。是的今天我们学校向高三的师兄师姐们打气加油！</p>
<p> 六月，另外一个起点，你们的青春开始奔跑，高三的师兄师姐们，完爆高考！我们是你们坚强的后盾!</p>
<p>学校交给我们！你们上吧！大爱一中！高考必胜！</p>
<p>@大爱清远：</p>
<p>6.4清新一中：大方阵式喊楼！整齐&amp;彩旗，老师校长好可爱！学弟学妹好齐心！主页君好鸡冻！你鸡冻吗？2014清新区第一中学“惊艳”喊楼??大阵仗！</p>
<p>@自己：</p>
<p>崇德尚文，争做考神。一中学子，德智全能”，高一高二的师弟师妹们，用他们最洪亮的声音，对即将高考的师兄师姐们喊出了他们的祝福。“进取一中人，高分又高能。完爆全岭南，乜都?得弹！”一字一句都是这么的振奋人心，师兄师姐们拍烂手掌表示衷心感谢师弟师妹们。</p>
<p>随后我们高一高二师弟师妹与高三的师兄师姐们同唱《海阔天空》，一边在挥舞着我们的班旗，场面真的很温馨~感动了在场所有的人。</p>
<p>高三的师兄师姐，两天之后你们便要上“战场”了，整顿好你们的心态，丢下不该带的包袱，轻装上阵，完胜高考！！！向着你们的大学梦向前冲吧，别忘了你们说的：我要上大学！！ </p>
<p> —致2014届高考的师兄师姐</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>高三开学一个月。</title>
    <url>/419/</url>
    <content><![CDATA[<p>高三开学已经一个月了，九月三、四号开始月考，可还是感觉什么都不会。</p>
<p>这一个月里时间过得很充实。</p>
<p>这一个月里我过得很快乐。</p>
<p>这一个月里我过得很有劲。</p>
<p>虽然我成绩不好。</p>
<p>数学开学摸底周测才考了60多分。</p>
<p>有时候就完全丧失了信心觉得我补不回来了。</p>
<p>坚持了三个星期我又松下来了 。</p>
<p>上课刷微博心里却有个声音要我去学习。</p>
<p>很纠结。</p>
<p>我很烦恼 。</p>
<p>骂醒我吧！！！！！！！！！！</p>
<p> 我还想考很好很好的大学呢 。</p>
<p>可现在看来！！！！！ </p>
<p>唉。</p>
<p>朋友们骂醒我吧。</p>
<p>考了大学的朋友骂醒我吧。</p>
<p>我需要动力。</p>
<p>I need us.</p>
<p>-—————————————————————-</p>
<p>以下是用了20分钟拍女生宿舍的过眼云烟。</p>
<p>恩我是傻逼</p>
<p>不对请叫我雷锋。</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>学校生活</tag>
      </tags>
  </entry>
  <entry>
    <title>高三快来了，你准备好了吗？</title>
    <url>/392/</url>
    <content><![CDATA[<p>高二也快过半了，这也意味着高二的结束也快了更意味着高三快来了，你准备好了吗？</p>
<p>高三的学习生活节奏不比高二，他是整个高中阶段的冲刺时刻，开学之后是否能适应还是一个谜、虽然现在的我对高三既是一种期待又是一种恐惧。可以说我现在已经是一位准高三的学生了。</p>
<p>一年前的九月份我刚刚迈进高中的时候，在开学典礼那位宣读开学激励语的师姐说过一句话：”无高考不人生，无高三不完美。“可以这样说，高三，是我们从上学开始以来接受的最大的一次挑战和磨砺，大浪淘沙，你能坚持到今天最起码能说明你的信心和毅力！继续坚持，才能催生更美丽的花朵。</p>
<p>每次放学都看到师兄师姐们在哪里备考我们走路时慢慢的走而他们是快马加鞭的跑！高二生活和高三的是无法媲美的！不对，应该是无法比较！所以说我们要吃苦，因为我知道高三是很辛苦，虽然我已经经历过中考的洗礼而高考可是中考的10倍。嗯俗话都说要为人上人，必吃苦中苦。</p>
<p>不说了我这边打雷很犀利！。</p>
<p>最后，“逼”自己一把，毕竟，值得拼搏的高三，只有一次，它将在我的青春，留下最深刻的烙印。无高考不人生，无高三不完美！！！！！！！！</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jiom</tag>
        <tag>人生</tag>
        <tag>内心</tag>
        <tag>感受</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>高三最后的寒假。</title>
    <url>/433/</url>
    <content><![CDATA[<p>  当看到自己成绩的那天，你是否会激动不已。是自己考得有多好，还是考到烂死了，其实都是因为自己的努力终究没有白费，得到了一定的回报。</p>
<p>  在很多时候在自己努力过后，无数次得到的却仍是那不起眼的成绩，心里都充满了失望，无奈？而我已经快要绝望的地步了。但是这几天或许是数学老师常说的一个质的提高。每一次考试都不能全身心投入复习中，以为什么都懂了似的，可是到头来自己什么也不懂，所以每次考试都会出现各种的心理压力。正如向级长给我说过的：在失败中成长，在成功中找经验。是的吧，这也为什么我会如此喜欢听美英的歌曲吧。我又想起我在微博上看到的话：成绩这种东西，不是说你努力了就能一飞冲天的，所以当你有梦想在荆棘里片体鳞伤时，当你在现实中摔得头破血流时，请不要沮丧，不要失望。这句话我很喜欢我一直在考试中写上，也希望这句话能够激励别人。也越会激励我自己！！</p>
<p> 你是否有过当你成绩提升了100分时，你的心情会是咋样？你会不会大声的宣泄，把自己这几个月的辛苦通通的发泄掉。</p>
<p> 嗯最后这也是我总结的，可能其他人也是一样的吧：学习之前，你有没有制定计划，告诉自己今天我要学到什么；背下来什么；掌握什么能力。没有目标的努力，没有计划的奋斗，都只是作秀而已。 嗯既来之则安之………….你的生活，和别人看你的生活，是否是一样的；那些所谓的努力时光，是真的头脑风暴了，还是，只是看起来很努力而已。</p>
<p> 我无法再续前缘，奋斗吧骚年！</p>
]]></content>
      <categories>
        <category>学校生活</category>
      </categories>
      <tags>
        <tag>寒假</tag>
        <tag>成绩</tag>
        <tag>高三</tag>
      </tags>
  </entry>
  <entry>
    <title>高中函数12种求法</title>
    <url>/323/</url>
    <content><![CDATA[<p>一．观察法<br> 通过对函数定义域、性质的观察，结合函数的解析式，求得函数的值域。<br> 例1求函数y=3+√(2－3x) 的值域。<br> 点拨：根据算术平方根的性质，先求出√(2－3x) 的值域。<br> 解：由算术平方根的性质，知√(2－3x)≥0，<br> 故3+√(2－3x)≥3。<br> ∴函数的知域为  .<br> 点评：算术平方根具有双重非负性，即：（1）被开方数的非负性，（2）值的非负性。<br> 本题通过直接观察算术平方根的性质而获解，这种方法对于一类函数的值域的求法，简捷明了，不失为一种巧法。<br> 练习：求函数y=[x](0≤x≤5)的值域。（答案：值域为：｛0，1，2，3，4，5｝）<br> 二．反函数法<br> 当函数的反函数存在时，则其反函数的定义域就是原函数的值域。<br> 例2求函数y=(x+1)/(x+2)的值域。<br> 点拨：先求出原函数的反函数，再求出其定义域。<br> 解：显然函数y=(x+1)/(x+2)的反函数为:x=(1－2y)/（y－1）,其定义域为y≠1的实数,故函数y的值域为｛y?y≠1,y∈R｝。<br> 点评：利用反函数法求原函数的定义域的前提条件是原函数存在反函数。这种方法体现逆向思维的思想，是数学解题的重要方法之一。<br> 练习：求函数y=(10x+10-x)/(10x－10-x)的值域。（答案：函数的值域为｛y?y&lt;－1或y&gt;1｝）<br> 三．配方法<br> 当所给函数是二次函数或可化为二次函数的复合函数时,可以利用配方法求函数值域<br> 例3：求函数y=√(－x2+x+2)的值域。<br> 点拨：将被开方数配方成完全平方数，利用二次函数的最值求。<br> 解：由－x2+x+2≥0,可知函数的定义域为x∈[－1，2]。此时－x2+x+2=－（x－1/2）2＋9/4∈[0，9/4]<br> ∴0≤√－x2+x+2≤3/2,函数的值域是[0,3/2]<br> 点评：求函数的值域不但要重视对应关系的应用,而且要特别注意定义域对值域的制约作用。配方法是数学的一种重要的思想方法。<br> 练习：求函数y=2x－5＋√15－4x的值域.(答案:值域为{y?y≤3})<br> 四．判别式法<br> 若可化为关于某变量的二次方程的分式函数或无理函数,可用判别式法求函数的值域。<br> 例4求函数y=(2x2－2x+3)/(x2－x+1)的值域。<br> 点拨：将原函数转化为自变量的二次方程，应用二次方程根的判别式，从而确定出原函数的值域。<br> 解：将上式化为（y－2）x2－(y－2)x+(y-3)=0         （＊）<br> 当y≠2时,由Δ=(y－2)2－4（y－2）x+(y－3)≥0，解得：2＜x≤10/3<br> 当y=2时,方程(＊)无解。∴函数的值域为2＜y≤10/3。<br> 点评：把函数关系化为二次方程F(x,y)=0，由于方程有实数解，故其判别式为非负数，可求得函数的值域。常适应于形如y=(ax2+bx+c)/(dx2+ex+f)及y=ax+b±√(cx2+dx+e)的函数。<br> 练习：求函数y=1/(2x2－3x+1)的值域。（答案：值域为y≤－8或y&gt;0）。<br> 五．最值法<br> 对于闭区间[a,b]上的连续函数y=f(x),可求出y=f(x)在区间[a,b]内的极值,并与边界值f(a).f(b)作比较,求出函数的最值,可得到函数y的值域。<br> 例5已知(2x2-x-3)/(3x2+x+1)≤0,且满足x+y=1,求函数z=xy+3x的值域。<br> 点拨：根据已知条件求出自变量x的取值范围，将目标函数消元、配方，可求出函数的值域。<br> 解：∵3x2+x+1＞0，上述分式不等式与不等式2x2-x-3≤0同解，解之得－1≤x≤3/2，又x+y=1，将y=1-x代入z=xy+3x中，得z=-x2+4x(-1≤x≤3/2),<br> ∴z=-(x-2)2+4且x∈[-1,3/2],函数z在区间[-1,3/2]上连续，故只需比较边界的大小。<br> 当x=-1时，z=－5；当x=3/2时，z=15/4。<br> ∴函数z的值域为｛z?－5≤z≤15/4｝。<br> 点评：本题是将函数的值域问题转化为函数的最值。对开区间，若存在最值，也可通过求出最值而获得函数的值域。<br> 练习：若√x为实数，则函数y=x2+3x-5的值域为               （  ）<br> A．（－∞，＋∞）  B．[－7，＋∞]  C．[0，＋∞）  D．[－5，＋∞）<br> （答案：D）。<br> 六．图象法<br> 通过观察函数的图象，运用数形结合的方法得到函数的值域。<br> 例6求函数y=?x+1?+√(x-2)2 的值域。<br> 点拨：根据绝对值的意义，去掉符号后转化为分段函数，作出其图象。<br> 解：原函数化为 －2x+1  (x≤1)<br> y= 3 (-1&lt;x≤2)<br> 2x-1(x&gt;2)<br> 它的图象如图所示。<br> 显然函数值y≥3,所以，函数值域[3，＋∞]。<br> 点评：分段函数应注意函数的端点。利用函数的图象<br>求函数的值域，体现数形结合的思想。是解决问题的重要方法。<br> 求函数值域的方法较多，还适应通过不等式法、函数的单调性、换元法等方法求函数的值域。<br> 七．单调法<br> 利用函数在给定的区间上的单调递增或单调递减求值域。<br> 例1求函数y=4x－√1-3x(x≤1/3)的值域。<br> 点拨：由已知的函数是复合函数，即g(x)= －√1-3x,y=f(x)+g(x)，其定义域为x≤1/3，在此区间内分别讨论函数的增减性，从而确定函数的值域。<br> 解：设f(x)=4x,g(x)= －√1-3x ,(x≤1/3),易知它们在定义域内为增函数，从而y=f(x)+g(x)= 4x－√1-3x<br>在定义域为x≤1/3上也为增函数，而且y≤f(1/3)+g(1/3)=4/3,因此，所求的函数值域为｛yy≤4/3｝。<br> 点评：利用单调性求函数的值域，是在函数给定的区间上，或求出函数隐含的区间，结合函数的增减性，求出其函数在区间端点的函数值，进而可确定函数的值域。<br> 练习：求函数y=3+√4-x  的值域。(答案：｛yy≥3｝)<br> 八．换元法<br> 以新变量代替函数式中的某些量，使函数转化为以新变量为自变量的函数形式，进而求出值域。<br> 例2求函数y=x-3+√2x+1 的值域。<br> 点拨：通过换元将原函数转化为某个变量的二次函数，利用二次函数的最值，确定原函数的值域。<br> 解：设t=√2x+1 （t≥0）,则<br> x=1/2(t2-1)。<br> 于是  y=1/2(t2-1)-3+t=1/2(t+1)2-4≥1/2-4=-7/2.<br> 所以，原函数的值域为｛yy≥－7/2｝。<br> 点评：将无理函数或二次型的函数转化为二次函数，通过求出二次函数的最值，从而确定出原函数的值域。这种解题的方法体现换元、化归的思想方法。它的应用十分广泛。<br> 练习：求函数y=√x-1 ?x的值域。（答案：｛yy≤－3/4｝<br> 九．构造法<br> 根据函数的结构特征，赋予几何图形，数形结合。<br> 例3求函数y=√x2+4x+5+√x2-4x+8 的值域。<br> 点拨：将原函数变形，构造平面图形，由几何知识，确定出函数的值域。<br> 解：原函数变形为f(x)=√(x+2)2+1+√(2-x)2+22<br> 作一个长为4、宽为3的矩形ABCD，再切割成12个单位<br>正方形。设HK=x,则ek=2-x,KF=2+x,AK=√(2-x)2+22 ,<br>KC=√(x+2)2+1 。<br> 由三角形三边关系知，AK+KC≥AC=5。当A、K、C三点共<br>线时取等号。<br> ∴原函数的知域为｛yy≥5｝。<br> 点评：对于形如函数y=√x2+a ±√(c-x)2+b(a,b,c均为正数)，均可通过构造几何图形，由几何的性质，直观明了、方便简捷。这是数形结合思想的体现。  </p>
<p> 练习：求函数y=√x2+9 +√(5-x)2+4的值域。（答案：｛yy≥5√2｝）<br> 十．比例法<br> 对于一类含条件的函数的值域的求法，可将条件转化为比例式，代入目标函数，进而求出原函数的值域。<br> 例4已知x,y∈R，且3x-4y-5=0,求函数z=x2+y2的值域。<br> 点拨：将条件方程3x-4y-5=0转化为比例式，设置参数，代入原函数。<br> 解：由3x-4y-5=0变形得，(x3)/4=(y-1)/3=k(k为参数)<br> ∴x=3+4k,y=1+3k,<br> ∴z=x2+y2=(3+4k)2+(14+3k)2=(5k+3)2+1。<br> 当k=－3/5时，x=3/5,y=－4/5时，zmin=1。<br> 函数的值域为｛zz≥1｝.<br> 点评：本题是多元函数关系，一般含有约束条件，将条件转化为比例式，通过设参数，可将原函数转化为单函数的形式，这种解题方法体现诸多思想方法，具有一定的创新意识。<br> 练习：已知x,y∈R，且满足4x-y=0,求函数f(x,y)=2x2-y的值域。（答案：｛f(x,y)f(x,y)≥1｝）<br> 十一．利用多项式的除法<br> 例5求函数y=(3x+2)/(x+1)的值域。<br> 点拨：将原分式函数，利用长除法转化为一个整式与一个分式之和。<br> 解：y=(3x+2)/(x+1)=3－1/(x+1)。<br> ∵1/(x+1)≠0，故y≠3。<br> ∴函数y的值域为y≠3的一切实数。<br> 点评：对于形如y=(ax+b)/(cx+d)的形式的函数均可利用这种方法。<br> 练习：求函数y=(x2-1)/(x-1)(x≠1)的值域。（答案：y≠2）<br> 十二．不等式法<br> 例6求函数Y=3x/(3x+1)的值域。<br> 点拨：先求出原函数的反函数，根据自变量的取值范围，构造不等式。<br> 解：易求得原函数的反函数为y=log3[x/(1-x)],<br> 由对数函数的定义知  x/(1-x)＞0<br> 1-x≠0<br> 解得，0＜x&lt;1。<br> ∴函数的值域（0，1）。<br> 点评：考查函数自变量的取值范围构造不等式（组）或构造重要不等式，求出函数定义域，进而求值域。不等式法是重要的解题工具，它的应用非常广泛。是数学解题的方法之一。<br>以下供练习选用：求下列函数的值域<br>1．Y=√(15－4x)+2x-5；（｛yy≤3｝）<br>2．Y=2x/(2x－1)。  （y&gt;1或y&lt;0）<br>注意变量哦</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>高考中化学学科的8个易错点。</title>
    <url>/416/</url>
    <content><![CDATA[<p>距离高考还有301天！！！！！！</p>
<p> 易错点1 忽视相似概念之间的区别与联系 易错分析：在复习原子结构的有关概念时，一定要区别相对原子质量、质量数等概念，如易忽视相对原子质量是根据同位素的质量数计算的，相对原子质量与质量数不同，不能用相对原子质量代替质量数计算质子数或中子数。还有要区分同位素、同素异形体等概念。</p>
<p> 易错点2 热化学基本概念与热化学方程式不能融合 </p>
<p>易错分析：书写热化学方程式时要注意以下四点：</p>
<p>（1）看是否为表示“燃烧热、中和热等概念”的热化学方程式，表示燃烧热的热化学方程式限制可燃物为1mol,产物为稳定氧化物，也就是燃烧热对产物状态的限制。</p>
<p>（2）化学计量数与燃烧热成正比例关系。</p>
<p>（3）一般省略化学反应条件。</p>
<p>（4）化学计量数特指“物质的量”,可以时分数。</p>
<p> 易错点3 化学反应基础不牢，不会辨析离子能否大量共存</p>
<p> 易错分析：解答离子共存问题要抓住以下两个要点：</p>
<p>（1）颜色问题，要记住一些典型离子的颜色。</p>
<p>（2）离子不能大量共存的几个主要原因，特别是溶液的酸碱性问题和氧化还原性问题是很容易出错的。</p>
<p> 易错点4 不能熟练掌握溶液中的电荷守恒 </p>
<p>易错分析：“电荷守恒“在定性实验与定量推断结合类试题中的主要应用有：（1）确定未知离子：已知部分离子的物质的量或物质的量浓度，确认其中一种未知离子。解题时先写出电荷守恒关系式，再根据所缺的电荷确定离子种类（阴离子或阳离子）。</p>
<p>（2）确定已知离子存在：给出n种离子可能存在，能确定（n-1）种离子一定存在，且给出其物质的量，判断最后一种离子是否存在。要列出电荷守恒式，代入数据判断，若已知离子已满足电荷守恒关系式，则最后一种离子不存在；若已知离子不满足电荷守恒关系式，则最后一种离子一定存在。</p>
<p>（3）任何溶液中的阴离子和阳离子同时存在，否则溶液不能呈电中性。</p>
<p> 易错点5 机械运用原理，忽视多条件变化 易错分析：对于可逆反应中多因素的变化，可以采用假设法分析平衡移动的结果。以改变体系的压强为例，先假设平衡不移动，只考虑压强变化所引起的容器体积的变化，是否使物质的浓度发生变化，若物质的浓度发生变化，则化学平衡会发生移动。若物质的浓度不发生变化，则化学平衡不发生移动。</p>
<p> 易错点6 不清楚电解原理，导致产物成分判断错误 易错分析：理解电解原理并熟悉掌握阴、阳离子的放电顺序是解答此类易错题的关键。在电解时，如果氢离子和氢氧根离子在电极上的放电往往会导致电极附近的溶液中氢离子和氢氧根离子的浓度关系发生变化，导致产物不同，进而会引起电极附近溶液的pH发生变化。 </p>
<p>易错点7 机械类比元素性质 易错分析：在运用元素周期律时，推断元素性质既要关注元素的共性，又要关注元素的个性，不能机械类比元素性质。同主族元素中族首元素的性质与其他元素的性质差别较大。例如氟的性质与氯、溴、碘的性质差别较大。锂的一些性质不同于钠、钾的性质。同主族元素，相邻元素性质相似程度大些，例如氮、磷、砷，砷的性质与磷的相似程度大些。</p>
<p> 易错点8 推断元素缺乏整体思维能力 易错分析：有关元素周期表的知识点只集中在以下几个方面：</p>
<p>一是根据原子结构的一些数量关系以及元素及其化合物的性质确定元素在周期表中的位置，从而可以确定该元素的其他性质或元素的名称等。</p>
<p>二是从元素在周期中的位置推断元素性质或进行几种元素的性质或结构特点的比较。三是确定“指定的几种元素形成的化合物的化学式。根据元素周期表推断化合物的方法：定位置，推价态，想可能，比性质。</p>
]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>高中学习。</tag>
      </tags>
  </entry>
  <entry>
    <title>鼻塞很难受-</title>
    <url>/194/</url>
    <content><![CDATA[<p>来自一位刚刚鼻子通了的智障 </p>
<p><img src="http://qn.199604.com/548823056358561216.jpg"></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>鼻塞</tag>
      </tags>
  </entry>
  <entry>
    <title>龙票捂洗等呀。</title>
    <url>/233/</url>
    <content><![CDATA[<p>龙票捂洗等呀。如果你们看过飞虎出征那部电影的话你们就知道这句话的含义了。</p>
<p>今天我就遇到了。今天去银行存钱进网银、到我了然后来了一个VIP。卧槽，那个人说我是VIP。你只是普通号你等等吧。卧槽这是什么态度什么质量我果断说我要投诉他这样的态度我那个去了。</p>
<p>话说回来,最近想弄一个学习的论坛想找一个免费的空间暂住过度用一下都没有、那么我只好自己去找了找了找呵呵、算了就算倒霉吧因为我人生就那么的倒霉哎哎。</p>
<p>还是去弄一个简要版的论坛儿吧、</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令大全</title>
    <url>/1745/</url>
    <content><![CDATA[<h5 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a><strong>系统信息</strong></h5><p>arch 显示机器的处理器架构(1)<br>uname -m 显示机器的处理器架构(2)<br>uname -r 显示正在使用的内核版本<br>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)<br>hdparm -i /dev/hda 罗列一个磁盘的架构特性<br>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作<br>cat /proc/cpuinfo 显示CPU info的信息<br>cat /proc/interrupts 显示中断<br>cat /proc/meminfo 校验内存使用<br>cat /proc/swaps 显示哪些swap被使用<br>cat /proc/version 显示内核的版本<br>cat /proc/net/dev 显示网络适配器及统计<br>cat /proc/mounts 显示已加载的文件系统<br>lspci -tv 罗列 PCI 设备<br>lsusb -tv 显示 USB 设备<br>date 显示系统日期<br>cal 2007 显示2007年的日历表<br>date 041217002007.00 设置日期和时间 - 月日时分年.秒<br>clock -w 将时间修改保存到 BIOS</p>
<span id="more"></span>

<h5 id="关机-系统的关机、重启以及登出"><a href="#关机-系统的关机、重启以及登出" class="headerlink" title="关机 (系统的关机、重启以及登出 )"></a><strong>关机 (系统的关机、重启以及登出 )</strong></h5><p>shutdown -h now 关闭系统(1)<br>init 0 关闭系统(2)<br>telinit 0 关闭系统(3)<br>shutdown -h hours:minutes &amp; 按预定时间关闭系统<br>shutdown -c 取消按预定时间关闭系统<br>shutdown -r now 重启(1)<br>reboot 重启(2)<br>logout 注销</p>
<h5 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a><strong>文件和目录</strong></h5><p>cd /home 进入 ‘/ home’ 目录’<br>cd .. 返回上一级目录<br>cd ../.. 返回上两级目录<br>cd 进入个人的主目录<br>cd ~user1 进入个人的主目录<br>cd - 返回上次所在的目录<br>pwd 显示工作路径<br>ls 查看目录中的文件<br>ls -F 查看目录中的文件<br>ls -l 显示文件和目录的详细资料<br>ls -a 显示隐藏文件<br>ls <em>[0-9]</em> 显示包含数字的文件名和目录名<br>tree 显示文件和目录由根目录开始的树形结构(1)<br>lstree 显示文件和目录由根目录开始的树形结构(2)<br>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’<br>mkdir dir1 dir2 同时创建两个目录<br>mkdir -p /tmp/dir1/dir2 创建一个目录树<br>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’<br>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>rm -rf dir1 dir2 同时删除两个目录及它们的内容<br>mv dir1 new_dir 重命名/移动 一个目录<br>cp file1 file2 复制一个文件<br>cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>cp -a dir1 dir2 复制一个目录<br>ln -s file1 lnk1 创建一个指向文件或目录的软链接<br>ln file1 lnk1 创建一个指向文件或目录的物理链接<br>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)<br>file file1 outputs the mime type of the file as text<br>iconv -l 列出已知的编码</p>
<h5 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a><strong>文件搜索</strong></h5><p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>find / -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备<br>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令<br>whereis halt 显示一个二进制文件、源码或man的位置<br>which halt 显示一个二进制文件或可执行文件的完整路径</p>
<h5 id="挂载一个文件系统"><a href="#挂载一个文件系统" class="headerlink" title="挂载一个文件系统"></a><strong>挂载一个文件系统</strong></h5><p>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在<br>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出<br>fuser -km /mnt/hda2 当设备繁忙时强制卸载<br>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用<br>mount /dev/fd0 /mnt/floppy 挂载一个软盘<br>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom<br>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件<br>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统<br>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享</p>
<h5 id="磁盘空间"><a href="#磁盘空间" class="headerlink" title="磁盘空间"></a><strong>磁盘空间</strong></h5><p>df -h 显示已经挂载的分区列表<br>ls -lSr |more 以尺寸大小排列文件和目录<br>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’<br>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小<br>rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)<br>dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)</p>
<h5 id="用户和群组"><a href="#用户和群组" class="headerlink" title="用户和群组"></a><strong>用户和群组</strong></h5><p>groupadd group_name 创建一个新用户组<br>groupdel group_name 删除一个用户组<br>groupmod -n new_group_name old_group_name 重命名一个用户组<br>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户<br>useradd user1 创建一个新用户<br>userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录)<br>usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性<br>passwd 修改口令<br>passwd user1 修改一个用户的口令 (只允许root执行)<br>chage -E 2005-12-31 user1 设置用户口令的失效期限<br>pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户<br>grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组<br>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组</p>
<h5 id="文件的权限-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的权限-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a><strong>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong></h5><p>ls -lh 显示权限<br>ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示<br>chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限<br>chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限<br>chown user1 file1 改变一个文件的所有人属性<br>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性<br>chgrp group1 file1 改变文件的群组<br>chown user1:group1 file1 改变一个文件的所有人和群组属性<br>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件<br>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限<br>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位<br>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的<br>chmod g-s /home/public 禁用一个目录的 SGID 位<br>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件<br>chmod o-t /home/public 禁用一个目录的 STIKY 位</p>
<h5 id="文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a><strong>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong></h5><p>chattr +a file1 只允许以追加方式读写文件<br>chattr +c file1 允许这个文件能被内核自动压缩/解压<br>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件<br>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接<br>chattr +s file1 允许一个文件被安全地删除<br>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘<br>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件<br>lsattr 显示特殊的属性</p>
<h5 id="打包和压缩文件"><a href="#打包和压缩文件" class="headerlink" title="打包和压缩文件"></a><strong>打包和压缩文件</strong></h5><p>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件<br>bzip2 file1 压缩一个叫做 ‘file1’ 的文件<br>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件<br>gzip file1 压缩一个叫做 ‘file1’的文件<br>gzip -9 file1 最大程度压缩<br>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包<br>rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’<br>rar x file1.rar 解压rar包<br>unrar x file1.rar 解压rar包<br>tar -cvf archive.tar file1 创建一个非压缩的 tarball<br>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件<br>tar -tf archive.tar 显示一个包中的内容<br>tar -xvf archive.tar 释放一个包<br>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下<br>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包<br>tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包<br>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包<br>tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包<br>zip file1.zip file1 创建一个zip格式的压缩包<br>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包<br>unzip file1.zip 解压一个zip格式压缩包</p>
<h5 id="RPM-包-（Fedora-Redhat及类似系统）"><a href="#RPM-包-（Fedora-Redhat及类似系统）" class="headerlink" title="RPM 包 - （Fedora, Redhat及类似系统）"></a><strong>RPM 包 - （Fedora, Redhat及类似系统）</strong></h5><p>rpm -ivh package.rpm 安装一个rpm包<br>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告<br>rpm -U package.rpm 更新一个rpm包但不改变其配置文件<br>rpm -F package.rpm 更新一个确定已经安装的rpm包<br>rpm -e package_name.rpm 删除一个rpm包<br>rpm -qa 显示系统中所有已经安装的rpm包<br>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包<br>rpm -qi package_name 获取一个已安装包的特殊信息<br>rpm -qg “System Environment/Daemons” 显示一个组件的rpm包<br>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表<br>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表<br>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表<br>rpm -q package_name –whatprovides 显示一个rpm包所占的体积<br>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l<br>rpm -q package_name –changelog 显示一个rpm包的修改历史<br>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供<br>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表<br>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书<br>rpm –checksig package.rpm 确认一个rpm包的完整性<br>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性<br>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间<br>rpm -Va 检查系统中所有已安装的rpm包- 小心使用<br>rpm -Vp package.rpm 确认一个rpm包还未安装<br>rpm2cpio package.rpm | cpio –extract –make-directories <em>bin</em> 从一个rpm包运行可执行文件<br>rpm -ivh /usr/src/redhat/RPMS/arch/package.rpm 从一个rpm源码安装一个构建好的包<br>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包</p>
<h5 id="YUM-软件包升级器-（Fedora-RedHat及类似系统）"><a href="#YUM-软件包升级器-（Fedora-RedHat及类似系统）" class="headerlink" title="YUM 软件包升级器 - （Fedora, RedHat及类似系统）"></a><strong>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</strong></h5><p>yum install package_name 下载并安装一个rpm包<br>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>yum update package_name 更新一个rpm包<br>yum remove package_name 删除一个rpm包<br>yum list 列出当前系统中安装的所有包<br>yum search package_name 在rpm仓库中搜寻软件包<br>yum clean packages 清理rpm缓存删除下载的包<br>yum clean headers 删除所有头文件<br>yum clean all 删除所有缓存的包和头文件</p>
<h5 id="DEB-包-Debian-Ubuntu-以及类似系统"><a href="#DEB-包-Debian-Ubuntu-以及类似系统" class="headerlink" title="DEB 包 (Debian, Ubuntu 以及类似系统)"></a><strong>DEB 包 (Debian, Ubuntu 以及类似系统)</strong></h5><p>dpkg -i package.deb 安装/更新一个 deb 包<br>dpkg -r package_name 从系统删除一个 deb 包<br>dpkg -l 显示系统中所有已经安装的 deb 包<br>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包<br>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息<br>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表<br>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表<br>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供</p>
<h5 id="APT-软件工具-Debian-Ubuntu-以及类似系统"><a href="#APT-软件工具-Debian-Ubuntu-以及类似系统" class="headerlink" title="APT 软件工具 (Debian, Ubuntu 以及类似系统)"></a><strong>APT 软件工具 (Debian, Ubuntu 以及类似系统)</strong></h5><p>apt-get install package_name 安装/更新一个 deb 包<br>apt-cdrom install package_name 从光盘安装/更新一个 deb 包<br>apt-get update 升级列表中的软件包<br>apt-get upgrade 升级所有已安装的软件<br>apt-get remove package_name 从系统删除一个deb包<br>apt-get check 确认依赖的软件仓库正确<br>apt-get clean 从下载的软件包中清理缓存<br>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称</p>
<h5 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a><strong>查看文件内容</strong></h5><p>cat file1 从第一个字节开始正向查看文件的内容<br>tac file1 从最后一行开始反向查看一个文件的内容<br>more file1 查看一个长文件的内容<br>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作<br>head -2 file1 查看一个文件的前两行<br>tail -2 file1 查看一个文件的最后两行<br>tail -f /var/log/messages 实时查看被添加到一个文件中的内容</p>
<h5 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a><strong>文本处理</strong></h5><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中<br>grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug”<br>grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇<br>grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行<br>grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug”<br>sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2”<br>sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行<br>sed ‘/ *#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行<br>echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容<br>sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行<br>sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行<br>sed -e ‘s/ <em>$//‘ example.txt 删除每一行最后的空白字符<br>sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部<br>sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容<br>sed -n ‘5p;5q’ example.txt 查看第5行<br>sed -e ‘s/00</em>/0/g’ example.txt 用单个零替换多个零<br>cat -n file1 标示文件的行数<br>cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行<br>echo a b c | awk ‘{print $1}’ 查看一行第一栏<br>echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏<br>paste file1 file2 合并两个文件或两栏的内容<br>paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分<br>sort file1 file2 排序两个文件的内容<br>sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份)<br>sort file1 file2 | uniq -u 删除交集，留下其他的行<br>sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)<br>comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容<br>comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容<br>comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分</p>
<h5 id="字符设置和文件格式转换"><a href="#字符设置和文件格式转换" class="headerlink" title="字符设置和文件格式转换"></a><strong>字符设置和文件格式转换</strong></h5><p>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX<br>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS<br>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html<br>recode -l | more 显示所有允许的转换格式</p>
<h5 id="文件系统分析"><a href="#文件系统分析" class="headerlink" title="文件系统分析"></a><strong>文件系统分析</strong></h5><p>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块<br>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性<br>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性<br>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性<br>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性</p>
<h5 id="初始化一个文件系统"><a href="#初始化一个文件系统" class="headerlink" title="初始化一个文件系统"></a><strong>初始化一个文件系统</strong></h5><p>mkfs /dev/hda1 在hda1分区创建一个文件系统<br>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统<br>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统<br>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统<br>fdformat -n /dev/fd0 格式化一个软盘<br>mkswap /dev/hda3 创建一个swap文件系统</p>
<h5 id="SWAP文件系统"><a href="#SWAP文件系统" class="headerlink" title="SWAP文件系统"></a><strong>SWAP文件系统</strong></h5><p>mkswap /dev/hda3 创建一个swap文件系统<br>swapon /dev/hda3 启用一个新的swap文件系统<br>swapon /dev/hda2 /dev/hdb3 启用两个swap分区</p>
<h5 id="网络-（以太网和WIFI无线）"><a href="#网络-（以太网和WIFI无线）" class="headerlink" title="网络 - （以太网和WIFI无线）"></a><strong>网络 - （以太网和WIFI无线</strong>）</h5><p>ifconfig eth0 显示一个以太网卡的配置<br>ifup eth0 启用一个 ‘eth0’ 网络设备<br>ifdown eth0 禁用一个 ‘eth0’ 网络设备<br>ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址<br>ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing)<br>dhclient eth0 以dhcp模式启用 ‘eth0’<br>route -n show routing table<br>route add -net 0/0 gw IP_Gateway configura default gateway<br>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>clickhouse部署记录手札</title>
    <url>/1725/</url>
    <content><![CDATA[<h1 id="12实例-15node多实例集群部署方案"><a href="#12实例-15node多实例集群部署方案" class="headerlink" title="12实例*15node多实例集群部署方案"></a>12实例*15node多实例集群部署方案</h1><h4 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h4><table>
<thead>
<tr>
<th align="center">ip</th>
<th>host</th>
</tr>
</thead>
<tbody><tr>
<td align="center">10.209.18.201</td>
<td>pod3-mmp1-a-13</td>
</tr>
<tr>
<td align="center">10.209.18.202</td>
<td>pod3-mmp1-a-14</td>
</tr>
<tr>
<td align="center">10.209.18.205</td>
<td>pod3-mmp1-a-18</td>
</tr>
<tr>
<td align="center">10.209.18.208</td>
<td>pod3-mmp1-a-39</td>
</tr>
<tr>
<td align="center">10.209.18.21</td>
<td>pod3-mmp1-e-26</td>
</tr>
<tr>
<td align="center">10.209.18.212</td>
<td>pod3-mmp1-a-32</td>
</tr>
<tr>
<td align="center">10.209.18.219</td>
<td>pod3-mmp1-a-21</td>
</tr>
<tr>
<td align="center">10.209.18.22</td>
<td>pod3-mmp1-e-6</td>
</tr>
<tr>
<td align="center">10.209.18.23</td>
<td>pod3-mmp1-d-4</td>
</tr>
<tr>
<td align="center">10.209.18.24</td>
<td>pod3-mmp1-e-17</td>
</tr>
<tr>
<td align="center">10.209.18.25</td>
<td>pod3-mmp1-d-12</td>
</tr>
<tr>
<td align="center">10.209.18.26</td>
<td>pod3-mmp1-e-7</td>
</tr>
<tr>
<td align="center">10.209.18.27</td>
<td>pod3-mmp1-d-28</td>
</tr>
<tr>
<td align="center">10.209.18.28</td>
<td>pod3-mmp1-d-29</td>
</tr>
<tr>
<td align="center">10.209.18.29</td>
<td>pod3-mmp1-e-22</td>
</tr>
</tbody></table>
<p><strong>依赖</strong> zk三台:</p>
<ul>
<li>  10.209.18.201</li>
<li>  10.209.18.202</li>
<li>  10.209.18.205</li>
</ul>
<p>  <strong>安装包</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm包 https://github.com/ClickHouse/ClickHouse/</span></span><br><span class="line">chmod <span class="number">755</span> /data0/software/clickhouse/*</span><br><span class="line"></span><br><span class="line">clickho<span class="built_in">use-client</span><span class="literal">-21</span>.<span class="number">1.2</span>.<span class="number">15</span><span class="literal">-2</span>.noarch.rpm</span><br><span class="line">clickho<span class="built_in">use-server</span><span class="literal">-21</span>.<span class="number">1.2</span>.<span class="number">15</span><span class="literal">-2</span>.noarch.rpm</span><br><span class="line">clickho<span class="built_in">use-common</span><span class="literal">-static</span><span class="literal">-21</span>.<span class="number">1.2</span>.<span class="number">15</span><span class="literal">-2</span>.x86_64.rpm</span><br><span class="line">clickho<span class="built_in">use-common</span><span class="literal">-static</span><span class="literal">-dbg</span><span class="literal">-21</span>.<span class="number">1.2</span>.<span class="number">15</span><span class="literal">-2</span>.x86_64.rpm</span><br><span class="line"></span><br><span class="line">yum <span class="literal">-y</span> install expect</span><br><span class="line">yum install <span class="literal">-y</span> perl perl<span class="literal">-devel</span> autoconf libaio</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包路径</span></span><br><span class="line">/data0/software/clickhouse/</span><br><span class="line"><span class="comment"># 数据路径</span></span><br><span class="line">/data0/clickhouse_data</span><br><span class="line"><span class="comment"># 配置文件路径</span></span><br><span class="line">/data0/software/clickhouse/config</span><br><span class="line"><span class="comment"># 日志路径</span></span><br><span class="line">/data0/clickhouse_data/logs/</span><br></pre></td></tr></table></figure>

<p> </p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">rpm -ivh /data0/software/clickhouse/clickhouse-common-static-21.1.2.15-2.x86_64.rpm</span><br><span class="line">rpm -ivh /data0/software/clickhouse/clickhouse-common-static-dbg-21.1.2.15-2.x86_64.rpm</span><br><span class="line">rpm -ivh /data0/software/clickhouse/clickhouse-server-21.1.2.15-2.noarch.rpm</span><br><span class="line">rpm -ivh /data0/software/clickhouse/clickhouse-client-21.1.2.15-2.noarch.rpm</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置文件</span></span><br><span class="line">/data0/software/clickhouse/config/config_node0.xml~config_node11.xml</span><br><span class="line">/data0/software/clickhouse/config/metrika_node0.xml~metrika_node11.xml</span><br><span class="line">/data0/software/clickhouse/config/user.xml</span><br></pre></td></tr></table></figure>

<p> </p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> config.xml 端口改动</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 9000 tcp</span></span><br><span class="line">netstat -ntlpgrep 9001</span><br><span class="line">netstat -ntlpgrep 9002</span><br><span class="line">netstat -ntlpgrep 9003</span><br><span class="line">netstat -ntlpgrep 9004</span><br><span class="line">netstat -ntlpgrep 9005</span><br><span class="line">netstat -ntlpgrep 9006</span><br><span class="line">netstat -ntlpgrep 9007</span><br><span class="line">netstat -ntlpgrep 9008</span><br><span class="line">netstat -ntlpgrep 9009</span><br><span class="line">netstat -ntlpgrep 9010</span><br><span class="line">netstat -ntlpgrep 9011</span><br><span class="line">netstat -ntlpgrep 9012</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 9004 interserver_http</span></span><br><span class="line">netstat -ntlpgrep 9021</span><br><span class="line">netstat -ntlpgrep 9022</span><br><span class="line">netstat -ntlpgrep 9023</span><br><span class="line">netstat -ntlpgrep 9024</span><br><span class="line">netstat -ntlpgrep 9025</span><br><span class="line">netstat -ntlpgrep 9026</span><br><span class="line">netstat -ntlpgrep 9027</span><br><span class="line">netstat -ntlpgrep 9028</span><br><span class="line">netstat -ntlpgrep 9029</span><br><span class="line">netstat -ntlpgrep 9030</span><br><span class="line">netstat -ntlpgrep 9031</span><br><span class="line">netstat -ntlpgrep 9032</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 8123 http</span></span><br><span class="line">netstat -ntlpgrep 8121</span><br><span class="line">netstat -ntlpgrep 8122</span><br><span class="line">netstat -ntlpgrep 8123</span><br><span class="line">netstat -ntlpgrep 8124</span><br><span class="line">netstat -ntlpgrep 8125</span><br><span class="line">netstat -ntlpgrep 8126</span><br><span class="line">netstat -ntlpgrep 8127</span><br><span class="line">netstat -ntlpgrep 8128</span><br><span class="line">netstat -ntlpgrep 8129</span><br><span class="line">netstat -ntlpgrep 8130</span><br><span class="line">netstat -ntlpgrep 8131</span><br><span class="line">netstat -ntlpgrep 8132</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 9363 prometheus</span></span><br><span class="line">netstat -ntlpgrep 9361</span><br><span class="line">netstat -ntlpgrep 9362</span><br><span class="line">netstat -ntlpgrep 9363</span><br><span class="line">netstat -ntlpgrep 9364</span><br><span class="line">netstat -ntlpgrep 9365</span><br><span class="line">netstat -ntlpgrep 9366</span><br><span class="line">netstat -ntlpgrep 9367</span><br><span class="line">netstat -ntlpgrep 9368</span><br><span class="line">netstat -ntlpgrep 9369</span><br><span class="line">netstat -ntlpgrep 9370</span><br><span class="line">netstat -ntlpgrep 9371</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 所有节点执行 创建数据目录 配置文件目录 所有的配置文件和日志在一个目录</span> </span><br><span class="line">mkdir -p /data0/clickhouse_data</span><br><span class="line">mkdir -p /data1/clickhouse_data</span><br><span class="line">mkdir -p /data2/clickhouse_data</span><br><span class="line">mkdir -p /data3/clickhouse_data</span><br><span class="line">mkdir -p /data4/clickhouse_data</span><br><span class="line">mkdir -p /data5/clickhouse_data</span><br><span class="line">mkdir -p /data6/clickhouse_data</span><br><span class="line">mkdir -p /data7/clickhouse_data</span><br><span class="line">mkdir -p /data8/clickhouse_data</span><br><span class="line">mkdir -p /data9/clickhouse_data</span><br><span class="line">mkdir -p /data10/clickhouse_data</span><br><span class="line">mkdir -p /data11/clickhouse_data</span><br><span class="line"></span><br><span class="line">mkdir -p /data0/software/clickhouse/config</span><br><span class="line"></span><br><span class="line">cp /etc/clickhouse-server/users.xml /data0/software/clickhouse/config/</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 复制改名配置文件</span></span><br><span class="line">cp /etc/clickhouse-server/config.xml /data0/software/clickhouse/config/</span><br><span class="line">cp config.xml config_node0.xml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改node0【修改不做记录，详见下个代码块配置文件】  并复制其他实例的配置文件</span></span><br><span class="line">cp config_node0.xml config_node1.xml</span><br><span class="line">cp config_node0.xml config_node2.xml</span><br><span class="line">cp config_node0.xml config_node3.xml</span><br><span class="line">cp config_node0.xml config_node4.xml</span><br><span class="line">cp config_node0.xml config_node5.xml</span><br><span class="line">cp config_node0.xml config_node6.xml</span><br><span class="line">cp config_node0.xml config_node7.xml</span><br><span class="line">cp config_node0.xml config_node8.xml</span><br><span class="line">cp config_node0.xml config_node9.xml</span><br><span class="line">cp config_node0.xml config_node10.xml</span><br><span class="line">cp config_node0.xml config_node11.xml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改路径</span></span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data1/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data2/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data3/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data4/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data5/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data6/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data7/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data8/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data9/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data10/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:/data0/clickhouse_data:/data11/clickhouse_data:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改端口</span></span><br><span class="line">sed -i &quot;s:8121:8122:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:8121:8123:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:8121:8124:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:8121:8125:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:8121:8126:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:8121:8127:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:8121:8128:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:8121:8129:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:8121:8130:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:8121:8131:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:8121:8132:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br><span class="line"></span><br><span class="line">sed -i &quot;s:9001:9002:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:9001:9003:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:9001:9004:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:9001:9005:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:9001:9006:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:9001:9007:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:9001:9008:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:9001:9009:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:9001:9010:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:9001:9011:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:9001:9012:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br><span class="line"></span><br><span class="line">sed -i &quot;s:9021:9022:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:9021:9023:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:9021:9024:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:9021:9025:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:9021:9026:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:9021:9027:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:9021:9028:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:9021:9029:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:9021:9030:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:9021:9031:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:9021:9032:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br><span class="line"></span><br><span class="line">sed -i &quot;s:node0:node1:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:node0:node2:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:node0:node3:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:node0:node4:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:node0:node5:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:node0:node6:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:node0:node7:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:node0:node8:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:node0:node9:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:node0:node10:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:node0:node11:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br><span class="line"></span><br><span class="line">sed -i &quot;s:9361:9362:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:9361:9363:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:9361:9364:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:9361:9365:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:9361:9366:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:9361:9367:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:9361:9368:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:9361:9369:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:9361:9370:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:9361:9371:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:9361:9372:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- config_node0.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yandex</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>trace<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log</span>&gt;</span>/data0/clickhouse_data/logs/clickhouse-node0.log<span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">errorlog</span>&gt;</span>/data0/clickhouse_data/logs/clickhouse-data0.err.log<span class="tag">&lt;/<span class="name">errorlog</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">size</span>&gt;</span>1000M<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">count</span>&gt;</span>10<span class="tag">&lt;/<span class="name">count</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--本地节点信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">http_port</span>&gt;</span>8121<span class="tag">&lt;/<span class="name">http_port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tcp_port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">tcp_port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interserver_http_port</span>&gt;</span>9021<span class="tag">&lt;/<span class="name">interserver_http_port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interserver_http_host</span>&gt;</span>pod3-mmp1-a-13<span class="tag">&lt;/<span class="name">interserver_http_host</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--本机域名或IP--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--本地配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listen_host</span>&gt;</span>0.0.0.0<span class="tag">&lt;/<span class="name">listen_host</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_connections</span>&gt;</span>2048<span class="tag">&lt;/<span class="name">max_connections</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;receive_timeout&gt;800&lt;/receive_timeout&gt;</span></span><br><span class="line"><span class="comment">             &lt;send_timeout&gt;800&lt;/send_timeout&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">keep_alive_timeout</span>&gt;</span>3<span class="tag">&lt;/<span class="name">keep_alive_timeout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--     &lt;grpc&gt;</span></span><br><span class="line"><span class="comment">                 &lt;enable_ssl&gt;false&lt;/enable_ssl&gt;</span></span><br><span class="line"><span class="comment">        &lt;ssl_cert_file&gt;/path/to/ssl_cert_file&lt;/ssl_cert_file&gt;</span></span><br><span class="line"><span class="comment">        &lt;ssl_key_file&gt;/path/to/ssl_key_file&lt;/ssl_key_file&gt;</span></span><br><span class="line"><span class="comment">        &lt;ssl_require_client_auth&gt;false&lt;/ssl_require_client_auth&gt;</span></span><br><span class="line"><span class="comment">        &lt;ssl_ca_cert_file&gt;/path/to/ssl_ca_cert_file&lt;/ssl_ca_cert_file&gt;</span></span><br><span class="line"><span class="comment">        &lt;compression&gt;deflate&lt;/compression&gt;</span></span><br><span class="line"><span class="comment">        &lt;compression_level&gt;medium&lt;/compression_level&gt;</span></span><br><span class="line"><span class="comment">        &lt;max_send_message_size&gt;-1&lt;/max_send_message_size&gt;</span></span><br><span class="line"><span class="comment">        &lt;max_receive_message_size&gt;-1&lt;/max_receive_message_size&gt;</span></span><br><span class="line"><span class="comment">        &lt;verbose_logs&gt;false&lt;/verbose_logs&gt;</span></span><br><span class="line"><span class="comment">    &lt;/grpc&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">openSSL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">certificateFile</span>&gt;</span>/data0/clickhouse_data/server.crt<span class="tag">&lt;/<span class="name">certificateFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">privateKeyFile</span>&gt;</span>/data0/clickhouse_data/server.key<span class="tag">&lt;/<span class="name">privateKeyFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dhParamsFile</span>&gt;</span>/data0/clickhouse_data/dhparam.pem<span class="tag">&lt;/<span class="name">dhParamsFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">verificationMode</span>&gt;</span>none<span class="tag">&lt;/<span class="name">verificationMode</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">loadDefaultCAFile</span>&gt;</span>true<span class="tag">&lt;/<span class="name">loadDefaultCAFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">cacheSessions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">cacheSessions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">disableProtocols</span>&gt;</span>sslv2,sslv3<span class="tag">&lt;/<span class="name">disableProtocols</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">preferServerCiphers</span>&gt;</span>true<span class="tag">&lt;/<span class="name">preferServerCiphers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">client</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">loadDefaultCAFile</span>&gt;</span>true<span class="tag">&lt;/<span class="name">loadDefaultCAFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">cacheSessions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">cacheSessions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">disableProtocols</span>&gt;</span>sslv2,sslv3<span class="tag">&lt;/<span class="name">disableProtocols</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">preferServerCiphers</span>&gt;</span>true<span class="tag">&lt;/<span class="name">preferServerCiphers</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">invalidCertificateHandler</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>RejectCertificateHandler<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">invalidCertificateHandler</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">client</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">openSSL</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_concurrent_queries</span>&gt;</span>100<span class="tag">&lt;/<span class="name">max_concurrent_queries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_server_memory_usage</span>&gt;</span>0<span class="tag">&lt;/<span class="name">max_server_memory_usage</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_thread_pool_size</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">max_thread_pool_size</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_server_memory_usage_to_ram_ratio</span>&gt;</span>0.9<span class="tag">&lt;/<span class="name">max_server_memory_usage_to_ram_ratio</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">total_memory_profiler_step</span>&gt;</span>4194304<span class="tag">&lt;/<span class="name">total_memory_profiler_step</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">total_memory_tracker_sample_probability</span>&gt;</span>0<span class="tag">&lt;/<span class="name">total_memory_tracker_sample_probability</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uncompressed_cache_size</span>&gt;</span>8589934592<span class="tag">&lt;/<span class="name">uncompressed_cache_size</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mark_cache_size</span>&gt;</span>5368709120<span class="tag">&lt;/<span class="name">mark_cache_size</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/data0/clickhouse_data/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tmp_path</span>&gt;</span>/data0/clickhouse_data/tmp/<span class="tag">&lt;/<span class="name">tmp_path</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;users_config&gt;/data/clickhouse/node1/users.xml&lt;/users_config&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user_files_path</span>&gt;</span>/data0/clickhouse_data/user_files/<span class="tag">&lt;/<span class="name">user_files_path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ldap_servers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ldap_servers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user_directories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">users_xml</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span>&gt;</span>users.xml<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">users_xml</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">local_directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span>&gt;</span>/data0/clickhouse_data/access/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">local_directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user_directories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">default_profile</span>&gt;</span>default<span class="tag">&lt;/<span class="name">default_profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default_database</span>&gt;</span>default<span class="tag">&lt;/<span class="name">default_database</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Perform mlockall after startup to lower first queries latency</span></span><br><span class="line"><span class="comment">                   and to prevent clickhouse executable from being paged out under high IO load.</span></span><br><span class="line"><span class="comment">         Enabling this option is recommended but will lead to increased startup time for up to a few seconds.</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mlock_executable</span>&gt;</span>true<span class="tag">&lt;/<span class="name">mlock_executable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap_executable</span>&gt;</span>false<span class="tag">&lt;/<span class="name">remap_executable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--集群相关配置 对应metrika文件的标签名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remote_servers</span> <span class="attr">incl</span>=<span class="string">&quot;clickhouse_remote_servers&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">zookeeper</span> <span class="attr">incl</span>=<span class="string">&quot;zookeeper-servers&quot;</span> <span class="attr">optional</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">macros</span> <span class="attr">incl</span>=<span class="string">&quot;macros&quot;</span> <span class="attr">optional</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include_from</span>&gt;</span>/data0/software/clickhouse/config/metrika_node0.xml<span class="tag">&lt;/<span class="name">include_from</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">builtin_dictionaries_reload_interval</span>&gt;</span>3600<span class="tag">&lt;/<span class="name">builtin_dictionaries_reload_interval</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_session_timeout</span>&gt;</span>3600<span class="tag">&lt;/<span class="name">max_session_timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default_session_timeout</span>&gt;</span>300<span class="tag">&lt;/<span class="name">default_session_timeout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">query_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>query_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">partition_by</span>&gt;</span>toMonday(event_date)<span class="tag">&lt;/<span class="name">partition_by</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>7500<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">query_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">trace_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>trace_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">partition_by</span>&gt;</span>toYYYYMM(event_date)<span class="tag">&lt;/<span class="name">partition_by</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>7500<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trace_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">query_thread_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>query_thread_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">partition_by</span>&gt;</span>toMonday(event_date)<span class="tag">&lt;/<span class="name">partition_by</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>7500<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">query_thread_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">metric_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>metric_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>7500<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collect_interval_milliseconds</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">collect_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">metric_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">asynchronous_metric_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>asynchronous_metric_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>60000<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">asynchronous_metric_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">opentelemetry_span_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">engine</span>&gt;</span></span><br><span class="line">            engine MergeTree</span><br><span class="line">            partition by toYYYYMM(finish_date)</span><br><span class="line">            order by (finish_date, finish_time_us, trace_id)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">engine</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>opentelemetry_span_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>7500<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">opentelemetry_span_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">crash_log</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">database</span>&gt;</span>system<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span>crash_log<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">partition_by</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flush_interval_milliseconds</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">flush_interval_milliseconds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">crash_log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dictionaries_config</span>&gt;</span>*_dictionary.xml<span class="tag">&lt;/<span class="name">dictionaries_config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">distributed_ddl</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Path in ZooKeeper to queue with DDL queries --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span>&gt;</span>/clickhouse/task_queue/ddl<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">distributed_ddl</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">graphite_rollup_example</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">regexp</span>&gt;</span>click_cost<span class="tag">&lt;/<span class="name">regexp</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">function</span>&gt;</span>any<span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">retention</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">age</span>&gt;</span>0<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">precision</span>&gt;</span>3600<span class="tag">&lt;/<span class="name">precision</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">retention</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">retention</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">age</span>&gt;</span>86400<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">precision</span>&gt;</span>60<span class="tag">&lt;/<span class="name">precision</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">retention</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">default</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">function</span>&gt;</span>max<span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">retention</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">age</span>&gt;</span>0<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">precision</span>&gt;</span>60<span class="tag">&lt;/<span class="name">precision</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">retention</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">retention</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">age</span>&gt;</span>3600<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">precision</span>&gt;</span>300<span class="tag">&lt;/<span class="name">precision</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">retention</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">retention</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">age</span>&gt;</span>86400<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">precision</span>&gt;</span>3600<span class="tag">&lt;/<span class="name">precision</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">retention</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">default</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">graphite_rollup_example</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">format_schema_path</span>&gt;</span>/data0/clickhouse_data/format_schemas/<span class="tag">&lt;/<span class="name">format_schema_path</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">query_masking_rules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>hide encrypt/decrypt arguments<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">regexp</span>&gt;</span>((?:aes_)?(?:encryptdecrypt)(?:_mysql)?)\s*\(\s*(?:&#x27;(?:\\&#x27;.)+&#x27;.*?)\s*\)<span class="tag">&lt;/<span class="name">regexp</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">replace</span>&gt;</span>\1(???)<span class="tag">&lt;/<span class="name">replace</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">query_masking_rules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;merge_tree&gt;</span></span><br><span class="line"><span class="comment">                 &lt;parts_to_delay_insert&gt;300&lt;/parts_to_delay_insert&gt;</span></span><br><span class="line"><span class="comment">        &lt;parts_to_throw_insert&gt;600&lt;/parts_to_throw_insert&gt;</span></span><br><span class="line"><span class="comment">        &lt;max_delay_to_insert&gt;2&lt;/max_delay_to_insert&gt;</span></span><br><span class="line"><span class="comment">    &lt;/merge_tree&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">merge_tree</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">max_suspicious_broken_parts</span>&gt;</span>5<span class="tag">&lt;/<span class="name">max_suspicious_broken_parts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">merge_tree</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 不限制drop表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_table_size_to_drop</span>&gt;</span>0<span class="tag">&lt;/<span class="name">max_table_size_to_drop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">max_partition_size_to_drop</span>&gt;</span>0<span class="tag">&lt;/<span class="name">max_partition_size_to_drop</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">send_crash_reports</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">anonymize</span>&gt;</span>false<span class="tag">&lt;/<span class="name">anonymize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">endpoint</span>&gt;</span>https://6f33034cfe684dd7a3ab9875e57b1c8d@o388870.ingest.sentry.io/5226277<span class="tag">&lt;/<span class="name">endpoint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">send_crash_reports</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">prometheus</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">endpoint</span>&gt;</span>/metrics<span class="tag">&lt;/<span class="name">endpoint</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>9361<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">metrics</span>&gt;</span>true<span class="tag">&lt;/<span class="name">metrics</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">events</span>&gt;</span>true<span class="tag">&lt;/<span class="name">events</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">asynchronous_metrics</span>&gt;</span>true<span class="tag">&lt;/<span class="name">asynchronous_metrics</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">status_info</span>&gt;</span>true<span class="tag">&lt;/<span class="name">status_info</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">prometheus</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">timezone</span>&gt;</span>Asia/Shanghai<span class="tag">&lt;/<span class="name">timezone</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yandex</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 由于sed -i 修改了日志目录,重新把日志目录改回来</span></span><br><span class="line">sed -i &quot;s:/data1/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node1.xml</span><br><span class="line">sed -i &quot;s:/data2/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node2.xml</span><br><span class="line">sed -i &quot;s:/data3/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node3.xml</span><br><span class="line">sed -i &quot;s:/data4/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node4.xml</span><br><span class="line">sed -i &quot;s:/data5/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node5.xml</span><br><span class="line">sed -i &quot;s:/data6/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node6.xml</span><br><span class="line">sed -i &quot;s:/data7/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node7.xml</span><br><span class="line">sed -i &quot;s:/data8/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node8.xml</span><br><span class="line">sed -i &quot;s:/data9/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node9.xml</span><br><span class="line">sed -i &quot;s:/data10/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node10.xml</span><br><span class="line">sed -i &quot;s:/data11/clickhouse_data/logs:/data0/clickhouse_data/logs:g&quot; /data0/software/clickhouse/config/config_node11.xml</span><br></pre></td></tr></table></figure>

<p> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置文件改完后 scp到其他节点 由于met文件是本地改好上传的，此处将config文件放入config-dir 然后scp</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> WY<span class="comment">#cluster@2021</span></span></span><br><span class="line">scp -rp config-dir root@pod3-mmp1-a-14:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-a-18:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-a-39:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-e-26:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-a-32:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-a-21:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-e-6:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-d-4:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-e-17:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-d-12:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-e-7:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-d-28:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-d-29:/data0/software/clickhouse/config/</span><br><span class="line">scp -rp config-dir root@pod3-mmp1-e-22:/data0/software/clickhouse/config/</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 给每个节点更改host</span></span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-a-14:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-a-18:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-a-39:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-e-26:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-a-32:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-a-21:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-e-6:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-d-4:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-e-17:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-d-12:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-e-7:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-d-28:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-d-29:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br><span class="line">sed -i &quot;s:pod3-mmp1-a-13:pod3-mmp1-e-22:g&quot; /data0/software/clickhouse/config/config-dir/*</span><br></pre></td></tr></table></figure>

<p>   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 操作所有窗口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑启动脚本</span></span><br><span class="line">vim /data0/software/clickhouse/start.sh</span><br><span class="line"></span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node0.xml --pid-file=/data0/software/clickhouse/config/config_node0.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node1.xml --pid-file=/data0/software/clickhouse/config/config_node1.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node2.xml --pid-file=/data0/software/clickhouse/config/config_node2.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node3.xml --pid-file=/data0/software/clickhouse/config/config_node3.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node4.xml --pid-file=/data0/software/clickhouse/config/config_node4.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node5.xml --pid-file=/data0/software/clickhouse/config/config_node5.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node6.xml --pid-file=/data0/software/clickhouse/config/config_node6.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node7.xml --pid-file=/data0/software/clickhouse/config/config_node7.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node8.xml --pid-file=/data0/software/clickhouse/config/config_node8.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node9.xml --pid-file=/data0/software/clickhouse/config/config_node9.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node10.xml --pid-file=/data0/software/clickhouse/config/config_node10.pid &amp;</span><br><span class="line">nohup /usr/bin/clickhouse-server -C=/data0/software/clickhouse/config/config_node11.xml --pid-file=/data0/software/clickhouse/config/config_node11.pid &amp;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存退出</span></span><br><span class="line">chmod +x /data0/software/clickhouse/start.sh</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">/data0/software/clickhouse/start.sh</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查 应当有看门狗和程序server俩服务 加上ps供25个</span></span><br><span class="line">ps -efgrep click</span><br><span class="line">ps -efgrep clickwc -l</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证客户端</span></span><br><span class="line">clickhouse-client --host pod3-mmp1-a-13 --port 9001</span><br><span class="line">select * from system.clusters;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建集群表要指定集群名 集群名为metr*文件中的标签名ch_cluster_all</span></span><br><span class="line">create database jikewang on cluster perftest_3shards_1replicas;</span><br><span class="line">CREATE TABLE log_test ON CLUSTER perftest_3shards_1replicas</span><br><span class="line">(</span><br><span class="line">    `ts` DateTime,</span><br><span class="line">    `uid` String,</span><br><span class="line">    `biz` String</span><br><span class="line">)</span><br><span class="line">ENGINE = ReplicatedMergeTree(&#x27;/clickhouse/tables/&#123;shard&#125;/log_test&#x27;, &#x27;&#123;replica&#125;&#x27;)</span><br><span class="line">PARTITION BY toYYYYMMDD(ts)</span><br><span class="line">ORDER BY ts;</span><br></pre></td></tr></table></figure>

<p>  <strong>参考文档:</strong> <a href="https://zhuanlan.zhihu.com/p/161444526">ClickHouse最佳实战之Clickhouse服务配置文件config.xml详解</a> <a href="https://blog.csdn.net/ashic/article/details/105901792">ClickHouse集群多实例部署</a> <a href="https://www.jianshu.com/p/22a4687c422a">ClickHouse 多实例环境安装</a></p>
]]></content>
      <categories>
        <category>clickhouse</category>
      </categories>
      <tags>
        <tag>clickhouse</tag>
        <tag>CH</tag>
      </tags>
  </entry>
  <entry>
    <title>GP&amp;CDH安装部署系列-CDH安装</title>
    <url>/1583/</url>
    <content><![CDATA[<p>GP&amp;CDH安装部署系列-CDH5.16.1安装</p>
<h4 id="安装文件"><a href="#安装文件" class="headerlink" title="安装文件"></a>安装文件</h4><p>文件都放到/home/tools/</p>
<ul>
<li>  jdk-8u131-linux-x64.rpm</li>
<li>  MySQL-5.6.31-1.linux_glibc2.5.x86_64.rpm-bundle.tar</li>
<li>  mysql-connector-java-5.1.36-bin.jar</li>
<li>  cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz</li>
<li>  CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel</li>
<li>  CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel.sha(.sha1)</li>
<li>  manifest.json</li>
</ul>
<h4 id="centos7为最小化安装，再安装-CDH前必须先安装如下程序包：-会有报错-每台都要执行"><a href="#centos7为最小化安装，再安装-CDH前必须先安装如下程序包：-会有报错-每台都要执行" class="headerlink" title="centos7为最小化安装，再安装 CDH前必须先安装如下程序包：(会有报错~每台都要执行)"></a>centos7为最小化安装，再安装 CDH前必须先安装如下程序包：(会有报错~每台都要执行)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install chkconfig python bind-utils psmisc libxslt zlib sqlite fuse fuse-libs RedHat-lsb cyrus-sasl-plain cyrus-sasl-gssapi autoconf -y</span><br></pre></td></tr></table></figure>

<p> </p>
<h4 id="安装jdk（每台都需安装）"><a href="#安装jdk（每台都需安装）" class="headerlink" title="安装jdk（每台都需安装）"></a>安装jdk（每台都需安装）</h4><h5 id="master主服务器执行文件传输到sdw"><a href="#master主服务器执行文件传输到sdw" class="headerlink" title="master主服务器执行文件传输到sdw"></a>master主服务器执行文件传输到sdw</h5><p>[root@mdw96 tools]# scp -r jdk-8u131-linux-x64.rpm <a href="mailto:&#114;&#111;&#111;&#116;&#64;&#49;&#48;&#x2e;&#50;&#x32;&#x37;&#46;&#49;&#x37;&#x2e;&#x39;&#55;">&#114;&#111;&#111;&#116;&#64;&#49;&#48;&#x2e;&#50;&#x32;&#x37;&#46;&#49;&#x37;&#x2e;&#x39;&#55;</a>:/home/tools/ …..(省略)</p>
<h5 id="查找安装过的java包"><a href="#查找安装过的java包" class="headerlink" title="查找安装过的java包"></a>查找安装过的java包</h5><p>rpm -qa grep java</p>
<blockquote>
<p>如果查出来有 运行 rpm -e –nodeps 查出来的包名（将已安装java全部卸载）</p>
</blockquote>
<h5 id="安装java-rpm包-每台机器执行"><a href="#安装java-rpm包-每台机器执行" class="headerlink" title="安装java rpm包(每台机器执行)"></a>安装java rpm包(每台机器执行)</h5><p>rpm -ivh jdk-8u131-linux-x64.rpm</p>
<h5 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h5><p>java -version or which java</p>
<h4 id="离线安装mysql5-6-31（只在mdw上安装）"><a href="#离线安装mysql5-6-31（只在mdw上安装）" class="headerlink" title="离线安装mysql5_6_31（只在mdw上安装）"></a>离线安装mysql5_6_31（只在mdw上安装）</h4><p> </p>
<h5 id="解压mysql-tar包"><a href="#解压mysql-tar包" class="headerlink" title="解压mysql tar包"></a>解压mysql tar包</h5><p>[root@mdw96 data]# cd tools/ [root@mdw96 data]# tar -xf MySQL-5.6.31-1.linux_glibc2.5.x86_64.rpm-bundle.tar [root@mdw96 tools]# ls</p>
<ul>
<li>  MySQL-devel-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
<li>  MySQL-shared-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
<li>  MySQL-5.6.31-1.linux_glibc2.5.x86_64.rpm-bundle.tar</li>
<li>  MySQL-embedded-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
<li>  MySQL-shared-compat-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
<li>  MySQL-client-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
<li>  MySQL-server-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
<li>  MySQL-test-5.6.31-1.linux_glibc2.5.x86_64.rpm</li>
</ul>
<h5 id="查找已经安装的卸载"><a href="#查找已经安装的卸载" class="headerlink" title="查找已经安装的卸载"></a>查找已经安装的卸载</h5><p>rpm -qa grep <strong>mysql</strong> rpm -qa grep <strong>mariadb</strong></p>
<blockquote>
<p>如果查出来有 运行 rpm -e –nodeps 查出来的包名（将已安装mysql全部卸载）</p>
</blockquote>
<h5 id="安装mysql-rpm包"><a href="#安装mysql-rpm包" class="headerlink" title="安装mysql rpm包"></a>安装mysql rpm包</h5><p>rpm -ivh MySQL-server-5.6.31-1.linux_glibc2.5.x86_64.rpm</p>
<h5 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h5><p>service mysql start 安装mysql 客户端 rpm -ivh MySQL-client-5.6.31-1.linux_glibc2.5.x86_64.rpm rpm -ivh MySQL-devel-5.6.31-1.linux_glibc2.5.x86_64.rpm rpm -ivh MySQL-embedded-5.6.31-1.linux_glibc2.5.x86_64.rpm rpm -ivh MySQL-shared-5.6.31-1.linux_glibc2.5.x86_64.rpm rpm -ivh MySQL-shared-compat-5.6.31-1.linux_glibc2.5.x86_64.rpm rpm -ivh MySQL-test-5.6.31-1.linux_glibc2.5.x86_64.rpm</p>
<h5 id="安装完成，记住原始密码"><a href="#安装完成，记住原始密码" class="headerlink" title="安装完成，记住原始密码.."></a>安装完成，记住原始密码..</h5><p>cat /root/.mysql_secret</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># The random password set for the root user at Sat Apr 1 19:37:12 2020 (local time): </span><br><span class="line">Cpb43u6T_D2qmg9M</span><br></pre></td></tr></table></figure>

<h5 id="登录mysql-修改密码并授权"><a href="#登录mysql-修改密码并授权" class="headerlink" title="登录mysql 修改密码并授权"></a>登录mysql 修改密码并授权</h5><p>mysql -u root -p mysql Enter password: Cpb43u6T_D2qmg9M 设置mysql权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; SET PASSWORD = PASSWORD(&#x27;Sdcmcc@139.com&#x27;);</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to root@&#x27;%&#x27; identified by &#x27;Sdcmcc@139.com&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to root@&#x27;127.0.0.1&#x27; identified by &#x27;Sdcmcc@139.com&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to root@&#x27;localhost&#x27; identified by &#x27;Sdcmcc@139.com&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to root@&#x27;mdw132&#x27; identified by &#x27;Sdcmcc@139.com&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all privileges on *.* to &#x27;root&#x27;@&#x27;mdw132&#x27; identified by &#x27;Sdcmcc@139.com&#x27; with grant option;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit</span><br><span class="line">Bye</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="测试是否修改成功"><a href="#测试是否修改成功" class="headerlink" title="测试是否修改成功"></a>测试是否修改成功</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@mdw96 tools]# mysql -u root -p</span><br><span class="line">Enter password: Sdcmcc@139.com</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">-&gt; ;</span><br><span class="line">+--------------------+</span><br><span class="line"> Database </span><br><span class="line">+--------------------+</span><br><span class="line"> information_schema </span><br><span class="line"> mysql </span><br><span class="line"> performance_schema </span><br><span class="line"> test </span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure>

<h4 id="安装CDH（只在mdw上安装）"><a href="#安装CDH（只在mdw上安装）" class="headerlink" title="安装CDH（只在mdw上安装）"></a>安装CDH（只在mdw上安装）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@mdw96 opt]# cd /home/tools/CDH-5.16.1-1.cdh5.16.1.p0.3</span><br><span class="line"></span><br><span class="line">[root@mdw96]#cp cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz /opt</span><br><span class="line"></span><br><span class="line">[root@mdw96 tools]# cp mysql-connector-java-5.1.36-bin.jar /opt</span><br><span class="line"></span><br><span class="line">[root@mdw96 tools]# cd /opt</span><br><span class="line"></span><br><span class="line">[root@mdw96 opt]# tar -xf cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">[root@mdw96 opt]# ls</span><br><span class="line"></span><br><span class="line">[root@mdw96 opt]# cp mysql-connector-java-5.1.36-bin.jar /opt/cm-5.16.1/share/cmf/lib/ </span><br></pre></td></tr></table></figure>

<h5 id="修改config-ini的server-host值"><a href="#修改config-ini的server-host值" class="headerlink" title="修改config.ini的server_host值"></a>修改config.ini的server_host值</h5><p>注意修改：server_host为实际主机名 <img src="http://qn.199604.com/typoraImg/image-20200608234422115.png" alt="image-20200608234422115"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@mdw96 opt]# cd /home/tools/ </span><br><span class="line"></span><br><span class="line">[root@mdw96 tools]# cd CDH-5.16.1-1.cdh5.16.1.p0.3/</span><br><span class="line"></span><br><span class="line">[root@mdw96 CDH-5.16.1-1.cdh5.16.1.p0.3]# cp CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel /opt/cloudera/parcel-repo/ </span><br><span class="line"></span><br><span class="line">[root@mdw96 CDH-5.16.1-1.cdh5.16.1.p0.3]# cp CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel.sha /opt/cloudera/parcel-repo/ </span><br><span class="line"></span><br><span class="line">[root@mdw96 CDH-5.16.1-1.cdh5.16.1.p0.3]# cp manifest.json /opt/cloudera/parcel-repo/</span><br><span class="line"></span><br><span class="line">[root@mdw96 CDH-5.16.1-1.cdh5.16.1.p0.3]# cd /opt/cloudera/parcel-repo/ </span><br><span class="line"></span><br><span class="line">[root@mdw96 parcel-repo]# ls</span><br><span class="line"></span><br><span class="line">CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel  </span><br><span class="line">CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel.sha  </span><br><span class="line">manifest.json </span><br></pre></td></tr></table></figure>

<blockquote>
<p>当CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel.sha的后缀是.sha1,需要改成.sha，不然到时候安装CDH还是会去下载文件…这是一个坑</p>
</blockquote>
<h5 id="在每台机器执行"><a href="#在每台机器执行" class="headerlink" title="在每台机器执行"></a>在每台机器执行</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd --system --home=/opt/cm-5.16.1/run/cloudera-scm-server/ --no-create-home --shell=/bin/false --comment &quot;Cloudera SCM User&quot; cloudera-scm</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如是重装的CDH，需要到Mysql把cm数据库删除，第一次安装则忽略。</p>
</blockquote>
<h5 id="在master上执行"><a href="#在master上执行" class="headerlink" title="在master上执行"></a>在master上执行</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@mdw96 opt]# /opt/cm-5.16.1/share/cmf/schema/scm_prepare_database.sh mysql cm -hlocalhost -uroot -pSdcmcc@139.com --scm-host localhost scm scm scm </span><br></pre></td></tr></table></figure>

<h5 id="复制master机器的-opt-cm-5-16-1-到sdw机器"><a href="#复制master机器的-opt-cm-5-16-1-到sdw机器" class="headerlink" title="复制master机器的 /opt/cm-5.16.1 到sdw机器"></a><strong>复制master机器的 /opt/cm-5.16.1 到sdw机器</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -rp /opt/cm-5.16.1 root@sdw97:/opt/</span><br><span class="line">scp -rp /opt/cm-5.16.1 root@sdw98:/opt/</span><br><span class="line">scp -rp /opt/cm-5.16.1 root@sdw99:/opt/</span><br><span class="line">....</span><br></pre></td></tr></table></figure>

<h4 id="开启服务前需要进行如下修改-每台机器上执行"><a href="#开启服务前需要进行如下修改-每台机器上执行" class="headerlink" title="开启服务前需要进行如下修改(每台机器上执行)"></a>开启服务前需要进行如下修改(每台机器上执行)</h4><h5 id="将-swappness修改为0，尽量不使用交换分区："><a href="#将-swappness修改为0，尽量不使用交换分区：" class="headerlink" title="将 swappness修改为0，尽量不使用交换分区："></a>将 swappness修改为0，尽量不使用交换分区：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 0 &gt; /proc/sys/vm/swappiness</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf &lt;&lt;END</span><br><span class="line">vm.swappiness=0</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">cat &gt;&gt; /etc/rc.local &lt;&lt;END</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<h4 id="开启-停止服务："><a href="#开启-停止服务：" class="headerlink" title="开启/停止服务："></a>开启/停止服务：</h4><h5 id="1-master上开启服务"><a href="#1-master上开启服务" class="headerlink" title="1. master上开启服务"></a>1. master上开启服务</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/opt/cm-5.16.1/etc/init.d/cloudera-scm-server start</span><br><span class="line"></span><br><span class="line">/opt/cm-5.16.1/etc/init.d/cloudera-scm-agent start</span><br></pre></td></tr></table></figure>

<h5 id="2-segment上开启服务"><a href="#2-segment上开启服务" class="headerlink" title="2. segment上开启服务"></a>2. segment上开启服务</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/opt/cm-5.16.1/etc/init.d/cloudera-scm-agent start</span><br></pre></td></tr></table></figure>

<p>同理关闭start–&gt;stop ps拓展：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">停止CDH就是开启的相反步骤</span><br><span class="line">1.先停止Cluster集群服务</span><br><span class="line">2.停止CM服务</span><br><span class="line">3.在各个节点上停止Agent</span><br><span class="line">sudo /opt/cm-5.16.1/etc/init.d/cloudera-scm-agent stop</span><br><span class="line">4.在主节点上停止Server</span><br><span class="line">sudo /opt/cm-5.16.1/etc/init.d/cloudera-scm-server stop</span><br></pre></td></tr></table></figure>

<h4 id="web页面配置"><a href="#web页面配置" class="headerlink" title="web页面配置"></a>web页面配置</h4><p>如下图： master ip:7180/cmf 默认用户名密码：admin/admin 下面图片可能有点混乱因为几个省的服务器图片截图…噗</p>
<h6 id="打开页面效果图"><a href="#打开页面效果图" class="headerlink" title="打开页面效果图"></a>打开页面效果图</h6><p><img src="http://qn.199604.com/typoraImg/image-20200608235546681.png" alt="image-20200608235546681"></p>
<h6 id="集群机器效果图"><a href="#集群机器效果图" class="headerlink" title="集群机器效果图"></a>集群机器效果图</h6><p><img src="http://qn.199604.com/typoraImg/image-20200608235701183.png" alt="image-20200608235701183"></p>
<h6 id="集群开始安装"><a href="#集群开始安装" class="headerlink" title="集群开始安装"></a>集群开始安装</h6><p><img src="http://qn.199604.com/typoraImg/image-20200608235719643.png" alt="image-20200608235719643"></p>
<h6 id="集群安装中"><a href="#集群安装中" class="headerlink" title="集群安装中"></a>集群安装中</h6><p><img src="http://qn.199604.com/typoraImg/image-20200608235819492.png" alt="image-20200608235819492"> <img src="http://qn.199604.com/typoraImg/image-20200608235833493.png" alt="image-20200608235833493"></p>
<h6 id="parcel安装完成后反馈"><a href="#parcel安装完成后反馈" class="headerlink" title="parcel安装完成后反馈"></a>parcel安装完成后反馈</h6><p><img src="http://qn.199604.com/typoraImg/image-20200608235900122.png" alt="image-20200608235900122"></p>
<h6 id="选择自定义安装服务！！！！！"><a href="#选择自定义安装服务！！！！！" class="headerlink" title="选择自定义安装服务！！！！！"></a>选择自定义安装服务！！！！！</h6><p>新的版本没有mapreduce 注意不要选择hive <img src="http://qn.199604.com/typoraImg/image-20200608235941595.png" alt="image-20200608235941595"> 旧版： <img src="http://qn.199604.com/typoraImg/image-20200609000006139.png" alt="image-20200609000006139"> 基本默认—&gt;zookeeper修改为节点服务器,至少再添加2台机器 新： <img src="http://qn.199604.com/typoraImg/image-20200609000036880.png" alt="image-20200609000036880"> <strong>新：</strong> <img src="http://qn.199604.com/typoraImg/image-20200609000100297.png" alt="image-20200609000100297"> 旧： <img src="http://qn.199604.com/typoraImg/image-20200609000107248.png" alt="image-20200609000107248"></p>
<h6 id="集群设置安装"><a href="#集群设置安装" class="headerlink" title="集群设置安装"></a>集群设置安装</h6><p><img src="http://qn.199604.com/typoraImg/image-20200609000230972.png" alt="image-20200609000230972"> <img src="http://qn.199604.com/typoraImg/image-20200609000236010.png" alt="image-20200609000236010"> <img src="http://qn.199604.com/typoraImg/image-20200609000240213.png" alt="image-20200609000240213"> <img src="http://qn.199604.com/typoraImg/image-20200609000243863.png" alt="image-20200609000243863"> <img src="http://qn.199604.com/typoraImg/image-20200609000248159.png" alt="image-20200609000248159"> <img src="http://qn.199604.com/typoraImg/image-20200609000254430.png" alt="image-20200609000254430"> 基本保持默—&gt;但是zookeepr修改个大点的文件夹,如：/data/zookeepr</p>
<h6 id="集群初始化"><a href="#集群初始化" class="headerlink" title="集群初始化"></a>集群初始化</h6><p><img src="http://qn.199604.com/typoraImg/image-20200609000326024.png" alt="image-20200609000326024"> <img src="http://qn.199604.com/typoraImg/image-20200609000333156.png" alt="image-20200609000333156"> <img src="http://qn.199604.com/typoraImg/image-20200609000340048.png" alt="image-20200609000340048"> ps:</p>
<blockquote>
<p>屏蔽时钟告警 安装完成后，主页面会有红色告警，主要为时钟告警，可需通过web页面登录：master服务器 ip:7180 在主页面上端菜单选择主机 -&gt; 配置 -&gt; 搜索“时钟” -&gt; 修改告警提示为“从不”</p>
</blockquote>
<p><img src="http://qn.199604.com/typoraImg/image-20200609000432335.png" alt="image-20200609000432335"></p>
<h5 id="添加hive服务"><a href="#添加hive服务" class="headerlink" title="添加hive服务"></a>添加hive服务</h5><p>先做一个软连接： ln -s /opt/cm-5.16.1/share/cmf/lib/mysql-connector-java-5.1.36-bin.jar /usr/share/java/mysql-connector-java.jar ps： 如果没有/usr/share/java文件夹，需要mkdir /usr/share/java</p>
<h6 id="连接mysql数据库执行"><a href="#连接mysql数据库执行" class="headerlink" title="连接mysql数据库执行"></a>连接mysql数据库执行</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@mdw96 tools]# mysql -u root -p</span><br><span class="line"></span><br><span class="line">Enter password: Sdcmcc@139.com</span><br><span class="line">//在mysql创建hive数据库</span><br><span class="line">create database hive;</span><br><span class="line">use hive;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="装hive"><a href="#装hive" class="headerlink" title="装hive"></a>装hive</h6><p><img src="http://qn.199604.com/typoraImg/image-20200609000701009.png" alt="image-20200609000701009"> <img src="http://qn.199604.com/typoraImg/image-20200609000708323.png" alt="image-20200609000708323"> <img src="http://qn.199604.com/typoraImg/image-20200609000716188.png" alt="image-20200609000716188"> <img src="http://qn.199604.com/typoraImg/image-20200609000724766.png" alt="image-20200609000724766"> <img src="http://qn.199604.com/typoraImg/image-20200609000732728.png" alt="image-20200609000732728"> <img src="http://qn.199604.com/typoraImg/image-20200609000736427.png" alt="image-20200609000736427"> <img src="http://qn.199604.com/typoraImg/image-20200609000741513.png" alt="image-20200609000741513"> 基本默认安装 路径选一个大点的盘(文件夹) 安装成功后连接mysql数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">Sdcmcc@139.com</span><br></pre></td></tr></table></figure>

<h6 id="修改hive数据库配置："><a href="#修改hive数据库配置：" class="headerlink" title="修改hive数据库配置："></a>修改hive数据库配置：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use hive;</span><br><span class="line">alter table SERDE_PARAMS modify column PARAM_VALUE varchar(60000);</span><br><span class="line">desc SERDE_PARAMS;</span><br><span class="line">flush privileges;</span><br><span class="line">show tables;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="修改mysql配置"><a href="#修改mysql配置" class="headerlink" title="修改mysql配置"></a>修改mysql配置</h6><p>[root@mdw96 java]# vi /usr/my.cnf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># For advice on how to change settings please see</span><br><span class="line"># http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">//修改的内容</span><br><span class="line">port = 3306</span><br><span class="line">socket = /var/lib/mysql/mysql.sock</span><br><span class="line">character-set-server=utf8</span><br><span class="line">max_connections = 2000</span><br><span class="line">max_connect_errors = 2000</span><br><span class="line"></span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size = 128M</span><br><span class="line"></span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line"></span><br><span class="line"># These are commonly set, remove the # and set as required.</span><br><span class="line"># basedir = .....</span><br><span class="line"># datadir = .....</span><br><span class="line"># port = .....</span><br><span class="line"># server_id = .....</span><br><span class="line"># socket = .....</span><br><span class="line"></span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size = 128M</span><br><span class="line"># sort_buffer_size = 2M</span><br><span class="line"># read_rnd_buffer_size = 2M</span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="保存文件-重启mysql"><a href="#保存文件-重启mysql" class="headerlink" title="保存文件 重启mysql"></a>保存文件 重启mysql</h6><p>systemctl restart mysql</p>
<h6 id="最后一步："><a href="#最后一步：" class="headerlink" title="最后一步："></a><strong>最后一步：</strong></h6><p>切换到GP主服务器—mdw96： # 切换到gpadmin用户 su gpadmin #执行：（标黄请注意，如第一个标黄表示CDH是5.X的cdh5,6.X则是cdh6,同理第二个标黄也是版本号） gpconfig -c gp_hadoop_target_version -v “cdh5” gpconfig -c gp_hadoop_home -v “‘/opt/cloudera/parcels/CDH-5.16.1-1.cdh5.16.1.p0.3 /lib/hadoop/client’”</p>
<h6 id="最最最后就是性能测试"><a href="#最最最后就是性能测试" class="headerlink" title="最最最后就是性能测试"></a>最最最后就是性能测试</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive</span><br><span class="line">create table date_test1(id int,name string);</span><br><span class="line">insert into date_test1 values(1,&#x27;wjian&#x27;);</span><br><span class="line"></span><br><span class="line">hdfs dfs -ls hdfs://10.214.138.132:8020/user/hive/warehouse/date_test1/</span><br><span class="line"></span><br><span class="line">drop EXTERNAL table hdfs_test;</span><br><span class="line">create EXTERNAL table hdfs_test(id int,name varchar(32))</span><br><span class="line">location (&#x27;gphdfs://10.214.138.132:8020/user/hive/warehouse/date_test1/*&#x27;)</span><br><span class="line">format &#x27;TEXT&#x27; (DELIMITER &#x27;\001&#x27;)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">select * from hdfs_test</span><br><span class="line"></span><br><span class="line">hdfs dfs -ls hdfs://10.227.17.96:8020/data1/hive/warehouse/date_test1/</span><br><span class="line">hdfs dfs -ls hdfs:// 10.227.17.96:8020/data1/hive/warehouse/pm_lte_eutrancellfdd_hour_inner/</span><br><span class="line"></span><br><span class="line">drop EXTERNAL table hdfs_test;</span><br><span class="line">create EXTERNAL table hdfs_test(id int,name varchar(32))</span><br><span class="line">location (&#x27;gphdfs://10.227.17.96:8020/data1/hive/warehouse/date_test1/*&#x27;)</span><br><span class="line">format &#x27;TEXT&#x27; (DELIMITER &#x27;\001&#x27;)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">select * from hdfs_test</span><br><span class="line"></span><br><span class="line">hdfs dfs -ls hdfs://10.224.230.171:8020/home/hive/warehouse/date_test1/</span><br><span class="line"></span><br><span class="line">drop EXTERNAL table hdfs_test;</span><br><span class="line">create EXTERNAL table hdfs_test(id int,name varchar(32))</span><br><span class="line">location (&#x27;gphdfs://10.224.230.171:8020/home/hive/warehouse/date_test1/*&#x27;)</span><br><span class="line">format &#x27;TEXT&#x27; (DELIMITER &#x27;\001&#x27;);</span><br><span class="line"></span><br><span class="line">select * from hdfs_test</span><br></pre></td></tr></table></figure>

<h4 id="遇到问题："><a href="#遇到问题：" class="headerlink" title="遇到问题："></a>遇到问题：</h4><h5 id="1-HDFS-dfs-permissions-去掉对勾，不然需要验证权限才能进行插入…"><a href="#1-HDFS-dfs-permissions-去掉对勾，不然需要验证权限才能进行插入…" class="headerlink" title="1.HDFS dfs.permissions 去掉对勾，不然需要验证权限才能进行插入…"></a>1.HDFS dfs.permissions 去掉对勾，不然需要验证权限才能进行插入…</h5><p><img src="http://qn.199604.com/typoraImg/image-20200609001249552.png" alt="image-20200609001249552"></p>
<h5 id="2-如果是旧机器需要看看是否已经安装了cloudera和CDH"><a href="#2-如果是旧机器需要看看是否已经安装了cloudera和CDH" class="headerlink" title="2.如果是旧机器需要看看是否已经安装了cloudera和CDH"></a><strong>2.如果是旧机器需要看看是否已经安装了cloudera和CDH</strong></h5><p><strong><a href="https://blog.csdn.net/wulantian/article/details/42706777/">https://blog.csdn.net/wulantian/article/details/42706777/</a></strong> 这是CDH5的卸载步骤</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">删除：</span><br><span class="line">卸载挂载：</span><br><span class="line">umount /opt/cm-5.16.1/run/cloudera-scm-agent/process</span><br><span class="line"></span><br><span class="line">#执行查找一下cloudera文件</span><br><span class="line">find / -name cloudera*</span><br><span class="line"></span><br><span class="line">#查看 /var/lib文件夹遗留的文件</span><br><span class="line"># cd /var/lib</span><br><span class="line">rm -rf cloudera*</span><br><span class="line">rm -rf hadoop*</span><br><span class="line">rm -rf hbase</span><br><span class="line">rm -rf hive</span><br><span class="line">rm -rf zookeeper</span><br><span class="line">rm -rf solr</span><br><span class="line">rm -rf oozie</span><br><span class="line">rm -rf sqoop*</span><br><span class="line"></span><br><span class="line">#查看 /var/run文件夹遗留的文件</span><br><span class="line">cd /var/run  </span><br><span class="line">rm -rf cloudera*</span><br><span class="line">rm -rf hadoop*</span><br><span class="line">rm -rf hdfs*</span><br><span class="line">rm -rf hive</span><br><span class="line">rm -rf hadoop*</span><br><span class="line"></span><br><span class="line">#查看 /opt文件夹遗留的文件</span><br><span class="line">cd /opt/</span><br><span class="line">rm -rf clouder* </span><br><span class="line"></span><br><span class="line">#查看 /var/log文件夹遗留的文件</span><br><span class="line">cd /var/log</span><br><span class="line">rm -rf hadoop* </span><br><span class="line">rm -rf zookeeper* </span><br><span class="line">rm -rf hbase* </span><br><span class="line">rm -rf hive* </span><br><span class="line">rm -rf hdfs </span><br><span class="line">rm -rf mapred </span><br><span class="line">rm -rf yarn </span><br><span class="line">rm -rf sqoop* </span><br><span class="line">rm -rf oozie</span><br><span class="line"></span><br><span class="line">#查看 /etc文件夹遗留的文件</span><br><span class="line">cd /etc/</span><br><span class="line">rm -rf hadoop* </span><br><span class="line">rm -rf zookeeper* </span><br><span class="line">rm -rf hive* </span><br><span class="line">rm -rf hue </span><br><span class="line">rm -rf impala </span><br><span class="line">rm -rf sqoop* </span><br><span class="line">rm -rf oozie </span><br><span class="line">rm -rf hbase* </span><br><span class="line">rm -rf hcatalog</span><br><span class="line"></span><br><span class="line">#查看 /usr/bin文件夹遗留的文件</span><br><span class="line">cd /usr/bin/</span><br><span class="line">rm -rf hadoop* </span><br><span class="line">rm -rf zookeeper* </span><br><span class="line">rm -rf hbase* </span><br><span class="line">rm -rf hive* </span><br><span class="line">rm -rf hdfs </span><br><span class="line">rm -rf mapred </span><br><span class="line">rm -rf yarn </span><br><span class="line">rm -rf sqoop* </span><br><span class="line">rm -rf oozie </span><br><span class="line"></span><br><span class="line">#查找是否存在遗留未删除的</span><br><span class="line">find / -name hadoop*</span><br><span class="line">默认知打开程序的信息和配置 : </span><br><span class="line">/etc/alternatives</span><br><span class="line">rm -rf hadoop* </span><br><span class="line">rm -rf zookeeper* </span><br><span class="line">rm -rf hbase* </span><br><span class="line">rm -rf hive* </span><br><span class="line">rm -rf hdfs </span><br><span class="line">rm -rf mapred </span><br><span class="line">rm -rf yarn </span><br><span class="line">rm -rf sqoop* </span><br><span class="line">rm -rf oozie </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/var/lib/alternatives</span><br><span class="line">rm -rf hadoop* </span><br><span class="line">rm -rf zookeeper* </span><br><span class="line">rm -rf hbase* </span><br><span class="line">rm -rf hive* </span><br><span class="line">rm -rf hdfs </span><br><span class="line">rm -rf mapred </span><br><span class="line">rm -rf yarn </span><br><span class="line">rm -rf sqoop* </span><br><span class="line">rm -rf oozi</span><br><span class="line"></span><br><span class="line">find / -name hadoop*</span><br><span class="line"></span><br><span class="line">删除账号</span><br><span class="line">userdel -r cloudera-scm</span><br><span class="line"></span><br><span class="line">进入mysql数据库 删除cm数据库</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="3-ProtocolError-lt-ProtocolError-for-127-0-0-1-RPC2-401-Unauthor"><a href="#3-ProtocolError-lt-ProtocolError-for-127-0-0-1-RPC2-401-Unauthor" class="headerlink" title="3.ProtocolError: &lt;ProtocolError for 127.0.0.1/RPC2: 401 Unauthor."></a>3.ProtocolError: &lt;ProtocolError for 127.0.0.1/RPC2: 401 Unauthor.</h5><p>安装cloudera-manager-agent报错 查看/var/log/cloudera-scm-agent.log</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">报错</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">File &quot;/usr/lib64/cmf/agent/build/env/lib/python2.7/site-packages/cmf-5.16.1-py2.7.egg/cmf/agent.py&quot;, line 2270, in connect_to_new_superviso</span><br><span class="line">self.get_supervisor_process_info()</span><br><span class="line">File &quot;/usr/lib64/cmf/agent/build/env/lib/python2.7/site-packages/cmf-5.16.1-py2.7.egg/cmf/agent.py&quot;, line 2290, in get_supervisor_process_i</span><br><span class="line">self.identifier = self.supervisor_client.supervisor.getIdentification()</span><br><span class="line">File &quot;/usr/lib64/python2.7/xmlrpclib.py&quot;, line 1233, in __call__</span><br><span class="line">return self.__send(self.__name, args)</span><br><span class="line">File &quot;/usr/lib64/python2.7/xmlrpclib.py&quot;, line 1587, in __request</span><br><span class="line">verbose=self.__verbose</span><br><span class="line">File &quot;/usr/lib64/cmf/agent/build/env/lib/python2.7/site-packages/supervisor-3.0-py2.7.egg/supervisor/xmlrpc.py&quot;, line 470, in request</span><br><span class="line">&#x27;&#x27; )</span><br><span class="line">ProtocolError: &lt;ProtocolError for 127.0.0.1/RPC2: 401 Unauthorized&gt;</span><br><span class="line">[01/Dec/2018 20:23:29 +0000] 30267 MainThread agent ERROR Failed to connect to newly launched supervisor. Agent will exit</span><br><span class="line">[01/Dec/2018 20:23:29 +0000] 30267 MainThread agent INFO Stopping agent...</span><br><span class="line">[01/Dec/2018 20:23:29 +0000] 30267 MainThread agent INFO No extant cgroups; unmounting any cgroup roots</span><br><span class="line">[01/Dec/2018 20:23:29 +0000] 30267 Dummy-1 daemonize WARNING Stopping daemon.</span><br></pre></td></tr></table></figure>

<p>解决办法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dip001 ~]# ps -ef  grep supervisord</span><br><span class="line">root 24491 1 0 11月30 ? 00:00:34 /usr/lib64/cmf/agent/build/env/bin/python /usr/lib64/cmf/agent/build/env/bin/supervisord</span><br><span class="line">root 30335 30312 0 20:27 pts/0 00:00:00 grep --color=auto supervisord</span><br><span class="line"></span><br><span class="line">[root@dip001 ~]# kill -9 24491</span><br><span class="line">[root@dip001 ~]# ps -ef  grep supervisord</span><br><span class="line">root 30338 30312 0 20:27 pts/0 00:00:00 grep --color=auto supervisord</span><br></pre></td></tr></table></figure>

<h5 id="4-Cloudera-Manager集群报警，堆转储目录-tmp-或日志目录-var-log-可用空间小于-5-0-吉字节"><a href="#4-Cloudera-Manager集群报警，堆转储目录-tmp-或日志目录-var-log-可用空间小于-5-0-吉字节" class="headerlink" title="4.Cloudera Manager集群报警，堆转储目录/tmp 或日志目录/var/log 可用空间小于 5.0 吉字节"></a>4.Cloudera Manager集群报警，堆转储目录/tmp 或日志目录/var/log 可用空间小于 5.0 吉字节</h5><p>在Cloudera Manager上收到报警信息如下： <img src="http://qn.199604.com/typoraImg/2018031217272740.png" alt="img"> 解决办法 1.检查目标主机的磁盘使用情况 登陆到目标主机后，切换路径到根目录，运行 df -h 得知是日志盘文件盘过小，更改选择比较大一些的文件挂载 修改集群中hive、yarn、spark的配置，搜索包含/var、/tmp或/yarn的配置项，以下以Hive为例： <img src="http://qn.199604.com/typoraImg/20180312174849108.png" alt="img"> 在上述路径前添加/home（因为/home所在的磁盘空间较大） <img src="http://qn.199604.com/typoraImg/20180312174946224.png" alt="img"> 保存配置重启集群即可。</p>
]]></content>
      <categories>
        <category>linux总结</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CDH</tag>
        <tag>GP</tag>
      </tags>
  </entry>
  <entry>
    <title>GreenPlum删除节点</title>
    <url>/1647/</url>
    <content><![CDATA[<h4 id="查看数据库当前状态"><a href="#查看数据库当前状态" class="headerlink" title="查看数据库当前状态"></a>查看数据库当前状态</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gpadmin@jtnew59 ~]$ gpstate </span><br></pre></td></tr></table></figure>

<h4 id="关闭当前数据库"><a href="#关闭当前数据库" class="headerlink" title="关闭当前数据库"></a>关闭当前数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gpadmin@jtnew59 greenplum]$ gpstop -M fast</span><br></pre></td></tr></table></figure>

<h4 id="以管理模式启动数据库"><a href="#以管理模式启动数据库" class="headerlink" title="以管理模式启动数据库"></a>以管理模式启动数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gpadmin@jtnew59 greenplum]$ gpstart -m</span><br></pre></td></tr></table></figure>

<h4 id="登录管理数据库并且获得修改权限"><a href="#登录管理数据库并且获得修改权限" class="headerlink" title="登录管理数据库并且获得修改权限"></a>登录管理数据库并且获得修改权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入utility</span><br><span class="line">PGOPTIONS=&quot;-c gp_session_role=utility&quot; psql -d postgres</span><br><span class="line"></span><br><span class="line">#获得修改权限</span><br><span class="line">set allow_system_table_mods=&#x27;dml&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="查看部分表信息"><a href="#查看部分表信息" class="headerlink" title="查看部分表信息"></a>查看部分表信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# select * from gp_segment_configuration order by 1;</span><br><span class="line"> dbid  content  role  preferred_role  mode  status  port   hostname    address   replication_port  san_mounts </span><br><span class="line">------+---------+------+----------------+------+--------+-------+-----------+-----------+------------------+------------</span><br><span class="line">    1       -1  p     p               s     u        5432  huaxing00  huaxing00                    </span><br><span class="line">    2        0  p     p               c     u       40000  huaxing00  huaxing00             41000  </span><br><span class="line">    3        1  p     p               c     u       40001  huaxing00  huaxing00             41001  </span><br><span class="line">    4        2  p     p               c     u       40002  huaxing00  huaxing00             41002  </span><br><span class="line">    5        3  p     p               c     u       40003  huaxing00  huaxing00             41003  </span><br><span class="line">    6        4  p     p               c     u       40004  huaxing00  huaxing00             41004  </span><br><span class="line">    7        5  p     p               c     u       40005  huaxing00  huaxing00             41005  </span><br><span class="line">    8        6  m     p               s     d       40000  huaxing01  huaxing01             41000  </span><br><span class="line">    9        7  m     p               s     d       40001  huaxing01  huaxing01             41001  </span><br><span class="line">   10        8  m     p               s     d       40002  huaxing01  huaxing01             41002  </span><br><span class="line">   11        9  m     p               s     d       40003  huaxing01  huaxing01             41003  </span><br><span class="line">   12       10  m     p               s     d       40004  huaxing01  huaxing01             41004  </span><br><span class="line">   13       11  m     p               s     d       40005  huaxing01  huaxing01             41005  </span><br><span class="line">   14       12  p     p               s     u       40000  huaxing02  huaxing02             41000  </span><br><span class="line">   15       13  p     p               s     u       40001  huaxing02  huaxing02             41001  </span><br><span class="line">   16       14  p     p               s     u       40002  huaxing02  huaxing02             41002  </span><br><span class="line">   17       15  p     p               s     u       40003  huaxing02  huaxing02             41003  </span><br><span class="line">   18       16  p     p               s     u       40004  huaxing02  huaxing02             41004  </span><br><span class="line">   19       17  p     p               s     u       40005  huaxing02  huaxing02             41005  </span><br><span class="line">   20       18  p     p               s     u       40000  huaxing03  huaxing03             41000  </span><br><span class="line">   21       19  p     p               s     u       40001  huaxing03  huaxing03             41001  </span><br><span class="line">   22       20  p     p               s     u       40002  huaxing03  huaxing03             41002  </span><br><span class="line">   23       21  p     p               s     u       40003  huaxing03  huaxing03             41003  </span><br><span class="line">   24       22  p     p               s     u       40004  huaxing03  huaxing03             41004  </span><br><span class="line">   25       23  p     p               s     u       40005  huaxing03  huaxing03             41005  </span><br><span class="line">   26       24  p     p               s     u       40000  huaxing04  huaxing04             41000  </span><br><span class="line">   27       25  p     p               s     u       40001  huaxing04  huaxing04             41001  </span><br><span class="line">   28       26  p     p               s     u       40002  huaxing04  huaxing04             41002  </span><br><span class="line">   29       27  p     p               s     u       40003  huaxing04  huaxing04             41003  </span><br><span class="line">   30       28  p     p               s     u       40004  huaxing04  huaxing04             41004  </span><br><span class="line">   31       29  p     p               s     u       40005  huaxing04  huaxing04             41005  </span><br><span class="line">   32       30  p     p               s     u       40000  huaxing05  huaxing05             41000  </span><br><span class="line">   33       31  p     p               s     u       40001  huaxing05  huaxing05             41001  </span><br><span class="line">   34       32  p     p               s     u       40002  huaxing05  huaxing05             41002  </span><br><span class="line">   35       33  p     p               s     u       40003  huaxing05  huaxing05             41003  </span><br><span class="line">   36       34  p     p               s     u       40004  huaxing05  huaxing05             41004  </span><br><span class="line">   37       35  p     p               s     u       40005  huaxing05  huaxing05             41005  </span><br><span class="line">   38        0  m     m               s     d       50000  huaxing01  huaxing01             51000  </span><br><span class="line">   39        1  m     m               s     d       50001  huaxing01  huaxing01             51001  </span><br><span class="line">   40        2  m     m               s     d       50002  huaxing01  huaxing01             51002  </span><br><span class="line">   41        3  m     m               s     d       50003  huaxing01  huaxing01             51003  </span><br><span class="line">   42        4  m     m               s     d       50004  huaxing01  huaxing01             51004  </span><br><span class="line">   43        5  m     m               s     d       50005  huaxing01  huaxing01             51005  </span><br><span class="line">   44        6  p     m               c     u       50000  huaxing02  huaxing02             51000  </span><br><span class="line">   45        7  p     m               c     u       50001  huaxing02  huaxing02             51001  </span><br><span class="line">   46        8  p     m               c     u       50002  huaxing02  huaxing02             51002  </span><br><span class="line">   47        9  p     m               c     u       50003  huaxing02  huaxing02             51003  </span><br><span class="line">   48       10  p     m               c     u       50004  huaxing02  huaxing02             51004  </span><br><span class="line">   49       11  p     m               c     u       50005  huaxing02  huaxing02             51005  </span><br><span class="line">   50       12  m     m               s     u       50000  huaxing03  huaxing03             51000  </span><br><span class="line">   51       13  m     m               s     u       50001  huaxing03  huaxing03             51001  </span><br><span class="line">   52       14  m     m               s     u       50002  huaxing03  huaxing03             51002  </span><br><span class="line">   53       15  m     m               s     u       50003  huaxing03  huaxing03             51003  </span><br><span class="line">   54       16  m     m               s     u       50004  huaxing03  huaxing03             51004  </span><br><span class="line">   55       17  m     m               s     u       50005  huaxing03  huaxing03             51005  </span><br><span class="line">   56       18  m     m               s     u       50000  huaxing04  huaxing04             51000  </span><br><span class="line">   57       19  m     m               s     u       50001  huaxing04  huaxing04             51001  </span><br><span class="line">   58       20  m     m               s     u       50002  huaxing04  huaxing04             51002  </span><br><span class="line">   59       21  m     m               s     u       50003  huaxing04  huaxing04             51003  </span><br><span class="line">   60       22  m     m               s     u       50004  huaxing04  huaxing04             51004  </span><br><span class="line">   61       23  m     m               s     u       50005  huaxing04  huaxing04             51005  </span><br><span class="line">   62       24  m     m               s     u       50000  huaxing05  huaxing05             51000  </span><br><span class="line">   63       25  m     m               s     u       50001  huaxing05  huaxing05             51001  </span><br><span class="line">   64       26  m     m               s     u       50002  huaxing05  huaxing05             51002  </span><br><span class="line">   65       27  m     m               s     u       50003  huaxing05  huaxing05             51003  </span><br><span class="line">   66       28  m     m               s     u       50004  huaxing05  huaxing05             51004  </span><br><span class="line">   67       29  m     m               s     u       50005  huaxing05  huaxing05             51005  </span><br><span class="line">   68       30  m     m               s     u       50000  huaxing00  huaxing00             51000  </span><br><span class="line">   69       31  m     m               s     u       50001  huaxing00  huaxing00             51001  </span><br><span class="line">   70       32  m     m               s     u       50002  huaxing00  huaxing00             51002  </span><br><span class="line">   71       33  m     m               s     u       50003  huaxing00  huaxing00             51003  </span><br><span class="line">   72       34  m     m               s     u       50004  huaxing00  huaxing00             51004  </span><br><span class="line">   73       35  m     m               s     u       50005  huaxing00  huaxing00             51005  </span><br><span class="line">(73 rows)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">postgres=# select * from pg_filespace_entry order by 2;</span><br><span class="line"> fsefsoid  fsedbid       fselocation       </span><br><span class="line">----------+---------+------------------------</span><br><span class="line">     3052        1  /data03/master/gpseg-1</span><br><span class="line">     3052        2  /data01/gp/p/gpseg0</span><br><span class="line">     3052        3  /data02/gp/p/gpseg1</span><br><span class="line">     3052        4  /data03/gp/p/gpseg2</span><br><span class="line">     3052        5  /data04/gp/p/gpseg3</span><br><span class="line">     3052        6  /data05/gp/p/gpseg4</span><br><span class="line">     3052        7  /data06/gp/p/gpseg5</span><br><span class="line">     3052        8  /data01/gp/p/gpseg6</span><br><span class="line">     3052        9  /data02/gp/p/gpseg7</span><br><span class="line">     3052       10  /data03/gp/p/gpseg8</span><br><span class="line">     3052       11  /data04/gp/p/gpseg9</span><br><span class="line">     3052       12  /data05/gp/p/gpseg10</span><br><span class="line">     3052       13  /data06/gp/p/gpseg11</span><br><span class="line">     3052       14  /data01/gp/p/gpseg12</span><br><span class="line">     3052       15  /data02/gp/p/gpseg13</span><br><span class="line">     3052       16  /data03/gp/p/gpseg14</span><br><span class="line">     3052       17  /data04/gp/p/gpseg15</span><br><span class="line">     3052       18  /data05/gp/p/gpseg16</span><br><span class="line">     3052       19  /data06/gp/p/gpseg17</span><br><span class="line">     3052       20  /data01/gp/p/gpseg18</span><br><span class="line">     3052       21  /data02/gp/p/gpseg19</span><br><span class="line">     3052       22  /data03/gp/p/gpseg20</span><br><span class="line">     3052       23  /data04/gp/p/gpseg21</span><br><span class="line">     3052       24  /data05/gp/p/gpseg22</span><br><span class="line">     3052       25  /data06/gp/p/gpseg23</span><br><span class="line">     3052       26  /data01/gp/p/gpseg24</span><br><span class="line">     3052       27  /data02/gp/p/gpseg25</span><br><span class="line">     3052       28  /data03/gp/p/gpseg26</span><br><span class="line">     3052       29  /data04/gp/p/gpseg27</span><br><span class="line">     3052       30  /data05/gp/p/gpseg28</span><br><span class="line">     3052       31  /data06/gp/p/gpseg29</span><br><span class="line">     3052       32  /data01/gp/p/gpseg30</span><br><span class="line">     3052       33  /data02/gp/p/gpseg31</span><br><span class="line">     3052       34  /data03/gp/p/gpseg32</span><br><span class="line">     3052       35  /data04/gp/p/gpseg33</span><br><span class="line">     3052       36  /data05/gp/p/gpseg34</span><br><span class="line">     3052       37  /data06/gp/p/gpseg35</span><br><span class="line">     3052       38  /data07/gp/m/gpseg0</span><br><span class="line">     3052       39  /data08/gp/m/gpseg1</span><br><span class="line">     3052       40  /data09/gp/m/gpseg2</span><br><span class="line">     3052       41  /data10/gp/m/gpseg3</span><br><span class="line">     3052       42  /data11/gp/m/gpseg4</span><br><span class="line">     3052       43  /data12/gp/m/gpseg5</span><br><span class="line">     3052       44  /data07/gp/m/gpseg6</span><br><span class="line">     3052       45  /data08/gp/m/gpseg7</span><br><span class="line">     3052       46  /data09/gp/m/gpseg8</span><br><span class="line">     3052       47  /data10/gp/m/gpseg9</span><br><span class="line">     3052       48  /data11/gp/m/gpseg10</span><br><span class="line">     3052       49  /data12/gp/m/gpseg11</span><br><span class="line">     3052       50  /data07/gp/m/gpseg12</span><br><span class="line">     3052       51  /data08/gp/m/gpseg13</span><br><span class="line">     3052       52  /data09/gp/m/gpseg14</span><br><span class="line">     3052       53  /data10/gp/m/gpseg15</span><br><span class="line">     3052       54  /data11/gp/m/gpseg16</span><br><span class="line">     3052       55  /data12/gp/m/gpseg17</span><br><span class="line">     3052       56  /data07/gp/m/gpseg18</span><br><span class="line">     3052       57  /data08/gp/m/gpseg19</span><br><span class="line">     3052       58  /data09/gp/m/gpseg20</span><br><span class="line">     3052       59  /data10/gp/m/gpseg21</span><br><span class="line">     3052       60  /data11/gp/m/gpseg22</span><br><span class="line">     3052       61  /data12/gp/m/gpseg23</span><br><span class="line">     3052       62  /data07/gp/m/gpseg24</span><br><span class="line">     3052       63  /data08/gp/m/gpseg25</span><br><span class="line">     3052       64  /data09/gp/m/gpseg26</span><br><span class="line">     3052       65  /data10/gp/m/gpseg27</span><br><span class="line">     3052       66  /data11/gp/m/gpseg28</span><br><span class="line">     3052       67  /data12/gp/m/gpseg29</span><br><span class="line">     3052       68  /data07/gp/m/gpseg30</span><br><span class="line">     3052       69  /data08/gp/m/gpseg31</span><br><span class="line">     3052       70  /data09/gp/m/gpseg32</span><br><span class="line">     3052       71  /data10/gp/m/gpseg33</span><br><span class="line">     3052       72  /data11/gp/m/gpseg34</span><br><span class="line">     3052       73  /data12/gp/m/gpseg35</span><br><span class="line">(73 rows)</span><br></pre></td></tr></table></figure>

<h4 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h4><p>因需要移除 huaxing01节点 从gp_segment_configuration表,根据preferred_role = p,hostname = huaxing01 可知content是：6,7,8,9,10,11</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete from gp_segment_configuration where content  in (6,7,8,9,10,11);</span><br><span class="line"></span><br><span class="line">#删除后 mir需要闭环，因为需要更新</span><br><span class="line">update gp_segment_configuration set hostname=&#x27;huaxing02&#x27;,address  =&#x27;huaxing02&#x27; where hostname=&#x27;huaxing01&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除后的信息，看完就会懂了</span><br><span class="line">postgres=# select * from gp_segment_configuration order by 1;</span><br><span class="line"> dbid  content  role  preferred_role  mode  status  port   hostname    address   replication_port  san_mounts </span><br><span class="line">------+---------+------+----------------+------+--------+-------+-----------+-----------+------------------+------------</span><br><span class="line">    1       -1  p     p               s     u        5432  huaxing00  huaxing00                    </span><br><span class="line">    2        0  p     p               c     u       40000  huaxing00  huaxing00             41000  </span><br><span class="line">    3        1  p     p               c     u       40001  huaxing00  huaxing00             41001  </span><br><span class="line">    4        2  p     p               c     u       40002  huaxing00  huaxing00             41002  </span><br><span class="line">    5        3  p     p               c     u       40003  huaxing00  huaxing00             41003  </span><br><span class="line">    6        4  p     p               c     u       40004  huaxing00  huaxing00             41004  </span><br><span class="line">    7        5  p     p               c     u       40005  huaxing00  huaxing00             41005  </span><br><span class="line">   14       12  p     p               s     u       40000  huaxing02  huaxing02             41000  </span><br><span class="line">   15       13  p     p               s     u       40001  huaxing02  huaxing02             41001  </span><br><span class="line">   16       14  p     p               s     u       40002  huaxing02  huaxing02             41002  </span><br><span class="line">   17       15  p     p               s     u       40003  huaxing02  huaxing02             41003  </span><br><span class="line">   18       16  p     p               s     u       40004  huaxing02  huaxing02             41004  </span><br><span class="line">   19       17  p     p               s     u       40005  huaxing02  huaxing02             41005  </span><br><span class="line">   20       18  p     p               s     u       40000  huaxing03  huaxing03             41000  </span><br><span class="line">   21       19  p     p               s     u       40001  huaxing03  huaxing03             41001  </span><br><span class="line">   22       20  p     p               s     u       40002  huaxing03  huaxing03             41002  </span><br><span class="line">   23       21  p     p               s     u       40003  huaxing03  huaxing03             41003  </span><br><span class="line">   24       22  p     p               s     u       40004  huaxing03  huaxing03             41004  </span><br><span class="line">   25       23  p     p               s     u       40005  huaxing03  huaxing03             41005  </span><br><span class="line">   26       24  p     p               s     u       40000  huaxing04  huaxing04             41000  </span><br><span class="line">   27       25  p     p               s     u       40001  huaxing04  huaxing04             41001  </span><br><span class="line">   28       26  p     p               s     u       40002  huaxing04  huaxing04             41002  </span><br><span class="line">   29       27  p     p               s     u       40003  huaxing04  huaxing04             41003  </span><br><span class="line">   30       28  p     p               s     u       40004  huaxing04  huaxing04             41004  </span><br><span class="line">   31       29  p     p               s     u       40005  huaxing04  huaxing04             41005  </span><br><span class="line">   32       30  p     p               s     u       40000  huaxing05  huaxing05             41000  </span><br><span class="line">   33       31  p     p               s     u       40001  huaxing05  huaxing05             41001  </span><br><span class="line">   34       32  p     p               s     u       40002  huaxing05  huaxing05             41002  </span><br><span class="line">   35       33  p     p               s     u       40003  huaxing05  huaxing05             41003  </span><br><span class="line">   36       34  p     p               s     u       40004  huaxing05  huaxing05             41004  </span><br><span class="line">   37       35  p     p               s     u       40005  huaxing05  huaxing05             41005  </span><br><span class="line">   38        0  m     m               s     d       50000  huaxing01  huaxing01             51000  </span><br><span class="line">   39        1  m     m               s     d       50001  huaxing01  huaxing01             51001  </span><br><span class="line">   40        2  m     m               s     d       50002  huaxing01  huaxing01             51002  </span><br><span class="line">   41        3  m     m               s     d       50003  huaxing01  huaxing01             51003  </span><br><span class="line">   42        4  m     m               s     d       50004  huaxing01  huaxing01             51004  </span><br><span class="line">   43        5  m     m               s     d       50005  huaxing01  huaxing01             51005  </span><br><span class="line">   50       12  m     m               s     u       50000  huaxing03  huaxing03             51000  </span><br><span class="line">   51       13  m     m               s     u       50001  huaxing03  huaxing03             51001  </span><br><span class="line">   52       14  m     m               s     u       50002  huaxing03  huaxing03             51002  </span><br><span class="line">   53       15  m     m               s     u       50003  huaxing03  huaxing03             51003  </span><br><span class="line">   54       16  m     m               s     u       50004  huaxing03  huaxing03             51004  </span><br><span class="line">   55       17  m     m               s     u       50005  huaxing03  huaxing03             51005  </span><br><span class="line">   56       18  m     m               s     u       50000  huaxing04  huaxing04             51000  </span><br><span class="line">   57       19  m     m               s     u       50001  huaxing04  huaxing04             51001  </span><br><span class="line">   58       20  m     m               s     u       50002  huaxing04  huaxing04             51002  </span><br><span class="line">   59       21  m     m               s     u       50003  huaxing04  huaxing04             51003  </span><br><span class="line">   60       22  m     m               s     u       50004  huaxing04  huaxing04             51004  </span><br><span class="line">   61       23  m     m               s     u       50005  huaxing04  huaxing04             51005  </span><br><span class="line">   62       24  m     m               s     u       50000  huaxing05  huaxing05             51000  </span><br><span class="line">   63       25  m     m               s     u       50001  huaxing05  huaxing05             51001  </span><br><span class="line">   64       26  m     m               s     u       50002  huaxing05  huaxing05             51002  </span><br><span class="line">   65       27  m     m               s     u       50003  huaxing05  huaxing05             51003  </span><br><span class="line">   66       28  m     m               s     u       50004  huaxing05  huaxing05             51004  </span><br><span class="line">   67       29  m     m               s     u       50005  huaxing05  huaxing05             51005  </span><br><span class="line">   68       30  m     m               s     u       50000  huaxing00  huaxing00             51000  </span><br><span class="line">   69       31  m     m               s     u       50001  huaxing00  huaxing00             51001  </span><br><span class="line">   70       32  m     m               s     u       50002  huaxing00  huaxing00             51002  </span><br><span class="line">   71       33  m     m               s     u       50003  huaxing00  huaxing00             51003  </span><br><span class="line">   72       34  m     m               s     u       50004  huaxing00  huaxing00             51004  </span><br><span class="line">   73       35  m     m               s     u       50005  huaxing00  huaxing00             51005  </span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<p>注意：如遇到content中断不连续，需要重新连接，不然启动的时候会报错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# update gp_segment_configuration set content=content-6 where content&gt;5;</span><br><span class="line">ERROR:  duplicate key value violates unique constraint &quot;gp_segment_config_content_preferred_role_index&quot;</span><br><span class="line">DETAIL:  Key (content, preferred_role)=(25, p) already exists.</span><br><span class="line"></span><br><span class="line">手动一个一个更新：</span><br><span class="line">update gp_segment_configuration set content=content-6 where content=12;</span><br><span class="line">...</span><br><span class="line">update gp_segment_configuration set content=content-6 where content=35;</span><br></pre></td></tr></table></figure>

<p>根据gp_segment_configuration表的dbid可知 pg_filespace_entry表fsedbid为：8,9,10,11,12,13,44,45,46,47,48,49</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete from pg_filespace_entry where fsedbid in (8,9,10,11,12,13,44,45,46,47,48,49);</span><br></pre></td></tr></table></figure>

<p>原来73个节点 包含master 刨除master就是72个 删掉了两台服务器12个 那就是60个了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# select * from gp_id;</span><br><span class="line">gpname    numsegments  dbid  content </span><br><span class="line">-----------+-------------+------+---------</span><br><span class="line"> Greenplum           -1    -1       -1</span><br><span class="line"> </span><br><span class="line"> #更新</span><br><span class="line">update gp_id set numsegments=60;</span><br><span class="line">update gp_id set dbid=1;</span><br><span class="line"> </span><br><span class="line"> postgres=# select * from gp_id;</span><br><span class="line">  gpname    numsegments  dbid  content </span><br><span class="line">-----------+-------------+------+---------</span><br><span class="line"> Greenplum           60     1       -1</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure>

<h4 id="退出管理模式，正常启动数据库"><a href="#退出管理模式，正常启动数据库" class="headerlink" title="退出管理模式，正常启动数据库"></a>退出管理模式，正常启动数据库</h4><p>文件夹也需要闭环处理—&gt;到huaxing02的mirror下 分别 ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv gpseg6 gpseg0</span><br><span class="line">mv gpseg7 gpseg1</span><br><span class="line">mv gpseg8 gpseg2</span><br><span class="line">mv gpseg9 gpseg3</span><br><span class="line">mv gpseg10 gpseg4</span><br><span class="line">mv gpseg11 gpseg5</span><br></pre></td></tr></table></figure>

<p>退出维护模式，请启动数据库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gpstop -m</span><br><span class="line">gpstart -a</span><br></pre></td></tr></table></figure>

<p>重启数据库会节点异常报错，需要进行异常同步：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gpadmin@huaxing00 ~]$ gpstart -a</span><br><span class="line">20210225:22:37:13:036328 gpstart:huaxing00:gpadmin-[INFO]:-Starting gpstart with args: -a</span><br><span class="line">20210225:22:37:13:036328 gpstart:huaxing00:gpadmin-[INFO]:-Gathering information and validating the environment...</span><br><span class="line">20210225:22:37:14:036328 gpstart:huaxing00:gpadmin-[INFO]:-Greenplum Binary Version: &#x27;postgres (Greenplum Database) 4.3.11.3 build 1&#x27;</span><br><span class="line">20210225:22:37:14:036328 gpstart:huaxing00:gpadmin-[INFO]:-Greenplum Catalog Version: &#x27;201310150&#x27;</span><br><span class="line">20210225:22:37:14:036328 gpstart:huaxing00:gpadmin-[INFO]:-Starting Master instance in admin mode</span><br><span class="line">20210225:22:37:15:036328 gpstart:huaxing00:gpadmin-[INFO]:-Obtaining Greenplum Master catalog information</span><br><span class="line">20210225:22:37:15:036328 gpstart:huaxing00:gpadmin-[INFO]:-Obtaining Segment details from master...</span><br><span class="line">20210225:22:37:15:036328 gpstart:huaxing00:gpadmin-[INFO]:-Setting new master era</span><br><span class="line">20210225:22:37:15:036328 gpstart:huaxing00:gpadmin-[INFO]:-Master Started...</span><br><span class="line">20210225:22:37:15:036328 gpstart:huaxing00:gpadmin-[INFO]:-Shutting down master</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipping startup of segment marked down in configuration: on huaxing02 directory /data07/gp/m/gpseg0 &lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipping startup of segment marked down in configuration: on huaxing02 directory /data08/gp/m/gpseg1 &lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipping startup of segment marked down in configuration: on huaxing02 directory /data09/gp/m/gpseg2 &lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipping startup of segment marked down in configuration: on huaxing02 directory /data10/gp/m/gpseg3 &lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipping startup of segment marked down in configuration: on huaxing02 directory /data11/gp/m/gpseg4 &lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipping startup of segment marked down in configuration: on huaxing02 directory /data12/gp/m/gpseg5 &lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:37:16:036328 gpstart:huaxing00:gpadmin-[INFO]:-Commencing parallel primary and mirror segment instance startup, please wait...</span><br><span class="line">...................................................... </span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-Process results...</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-----------------------------------------------------</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-   Successful segment starts                                            = 54</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-   Failed segment starts                                                = 0</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Skipped segment starts (segments are marked down in configuration)   = 6    &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-----------------------------------------------------</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-Successfully started 54 of 54 segment instances, skipped 6 other segments </span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-----------------------------------------------------</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[WARNING]:-****************************************************************************</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[WARNING]:-There are 6 segment(s) marked down in the database</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[WARNING]:-To recover from this current state, review usage of the gprecoverseg</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[WARNING]:-management utility which will recover failed segment instance databases.</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[WARNING]:-****************************************************************************</span><br><span class="line">20210225:22:38:10:036328 gpstart:huaxing00:gpadmin-[INFO]:-Starting Master instance huaxing00 directory /data03/master/gpseg-1 </span><br><span class="line">20210225:22:38:11:036328 gpstart:huaxing00:gpadmin-[INFO]:-Command pg_ctl reports Master huaxing00 instance active</span><br><span class="line">20210225:22:38:14:036328 gpstart:huaxing00:gpadmin-[INFO]:-No standby master configured.  skipping...</span><br><span class="line">20210225:22:38:14:036328 gpstart:huaxing00:gpadmin-[WARNING]:-Number of segments not attempted to start: 6</span><br><span class="line">20210225:22:38:14:036328 gpstart:huaxing00:gpadmin-[INFO]:-Check status of database with gpstate utility</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gpadmin@huaxing00 ~]$ gpstate -m</span><br><span class="line">20210225:22:38:19:037332 gpstate:huaxing00:gpadmin-[INFO]:-Starting gpstate with args: -m</span><br><span class="line">20210225:22:38:19:037332 gpstate:huaxing00:gpadmin-[INFO]:-local Greenplum Version: &#x27;postgres (Greenplum Database) 4.3.11.3 build 1&#x27;</span><br><span class="line">20210225:22:38:19:037332 gpstate:huaxing00:gpadmin-[INFO]:-master Greenplum Version: &#x27;PostgreSQL 8.2.15 (Greenplum Database 4.3.11.3 build 1) on x86_64-unknown-linux-gnu, compiled by GCC gcc (GCC) 4.4.2 compiled on Jan 24 2017 20:28:18&#x27;</span><br><span class="line">20210225:22:38:19:037332 gpstate:huaxing00:gpadmin-[INFO]:-Obtaining Segment details from master...</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:--------------------------------------------------------------</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:--Current GPDB mirror list and status</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:--Type = Group</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:--------------------------------------------------------------</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   Mirror      Datadir                Port    Status    Data Status    </span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-huaxing02   /data07/gp/m/gpseg0    50000   Failed                   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-huaxing02   /data08/gp/m/gpseg1    50001   Failed                   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-huaxing02   /data09/gp/m/gpseg2    50002   Failed                   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-huaxing02   /data10/gp/m/gpseg3    50003   Failed                   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-huaxing02   /data11/gp/m/gpseg4    50004   Failed                   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-huaxing02   /data12/gp/m/gpseg5    50005   Failed                   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing03   /data07/gp/m/gpseg12   50000   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing03   /data08/gp/m/gpseg13   50001   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing03   /data09/gp/m/gpseg14   50002   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing03   /data10/gp/m/gpseg15   50003   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing03   /data11/gp/m/gpseg16   50004   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing03   /data12/gp/m/gpseg17   50005   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing04   /data07/gp/m/gpseg18   50000   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing04   /data08/gp/m/gpseg19   50001   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing04   /data09/gp/m/gpseg20   50002   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing04   /data10/gp/m/gpseg21   50003   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing04   /data11/gp/m/gpseg22   50004   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing04   /data12/gp/m/gpseg23   50005   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing05   /data07/gp/m/gpseg24   50000   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing05   /data08/gp/m/gpseg25   50001   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing05   /data09/gp/m/gpseg26   50002   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing05   /data10/gp/m/gpseg27   50003   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing05   /data11/gp/m/gpseg28   50004   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing05   /data12/gp/m/gpseg29   50005   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing00   /data07/gp/m/gpseg30   50000   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing00   /data08/gp/m/gpseg31   50001   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing00   /data09/gp/m/gpseg32   50002   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing00   /data10/gp/m/gpseg33   50003   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing00   /data11/gp/m/gpseg34   50004   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:-   huaxing00   /data12/gp/m/gpseg35   50005   Passive   Synchronized</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[INFO]:--------------------------------------------------------------</span><br><span class="line">20210225:22:38:20:037332 gpstate:huaxing00:gpadmin-[WARNING]:-6 segment(s) configured as mirror(s) have failed</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#产生一个恢复的配置文件</span><br><span class="line">[gpadmin@huaxing00 ~]$ gprecoverseg -o ./recov</span><br><span class="line"></span><br><span class="line">#查看恢复的配置文件-可以知道哪些segment需要恢复</span><br><span class="line">[gpadmin@huaxing00 ~]$ cat recov </span><br><span class="line">filespaceOrder=</span><br><span class="line">huaxing02:50000:/data07/gp/m/gpseg0</span><br><span class="line">huaxing02:50001:/data08/gp/m/gpseg1</span><br><span class="line">huaxing02:50002:/data09/gp/m/gpseg2</span><br><span class="line">huaxing02:50003:/data10/gp/m/gpseg3</span><br><span class="line">huaxing02:50004:/data11/gp/m/gpseg4</span><br><span class="line">huaxing02:50005:/data12/gp/m/gpseg5</span><br><span class="line"></span><br><span class="line">#使用配置文件进行恢复</span><br><span class="line">[gpadmin@huaxing00 ~]$ gprecoverseg -i ./recov</span><br><span class="line"></span><br><span class="line">#查看恢复状态</span><br><span class="line">[gpadmin@huaxing00 ~]$ gpstate -m</span><br></pre></td></tr></table></figure>

<h4 id="primary-mirror角色对调："><a href="#primary-mirror角色对调：" class="headerlink" title="primary mirror角色对调："></a>primary mirror角色对调：</h4><p>数据库的主备就恢复了，但是还有一步，是可选的。要不要把primary mirror角色对调一下，因为现在mirror和primary和优先角色是相反的。 如果要对调，使用以下命令，会停库来处理：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gprecoverseg -r</span><br></pre></td></tr></table></figure>

<p>参考： <a href="https://blog.51cto.com/dengshuangfu/2395692?source=dra">https://blog.51cto.com/dengshuangfu/2395692?source=dra</a> <a href="https://blog.csdn.net/Explorren/article/details/103636269">https://blog.csdn.net/Explorren/article/details/103636269</a></p>
]]></content>
      <categories>
        <category>gp数据库集群安装</category>
      </categories>
      <tags>
        <tag>GP</tag>
        <tag>Greenplum</tag>
      </tags>
  </entry>
  <entry>
    <title>java对比入库小程序</title>
    <url>/954/</url>
    <content><![CDATA[<p>需求：对比规则表和累计表，符合条件的进行写入文件。</p>
<p>程序结构</p>
<p><img src="http://qn.199604.com/typoraImg/20181005101615.png" alt="img"></p>
<p>pom.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">  &lt;groupId&gt;com.htjf&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;iot_ana&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;name&gt;iot_ana&lt;/name&gt;</span><br><span class="line">  &lt;url&gt;http://maven.apache.org&lt;/url&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;repositories&gt;</span><br><span class="line">   	&lt;repository&gt;</span><br><span class="line">  		&lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">  		&lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;</span><br><span class="line">  	&lt;/repository&gt;</span><br><span class="line">  	&lt;repository&gt;</span><br><span class="line">  		&lt;id&gt;hortonworks&lt;/id&gt;</span><br><span class="line">  		&lt;url&gt;http://repo.hortonworks.com/content/groups/public/&lt;/url&gt;</span><br><span class="line">  	&lt;/repository&gt;</span><br><span class="line">  &lt;/repositories&gt;</span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">	&lt;dependency&gt;</span><br><span class="line">	    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">	    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">	    &lt;version&gt;2.4&lt;/version&gt;</span><br><span class="line">	&lt;/dependency&gt;</span><br><span class="line">  	&lt;dependency&gt;</span><br><span class="line">		&lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">		&lt;version&gt;3.8.1&lt;/version&gt;</span><br><span class="line">		&lt;!-- </span><br><span class="line">		&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">		 --&gt;</span><br><span class="line">	&lt;/dependency&gt;</span><br><span class="line">  	&lt;dependency&gt;</span><br><span class="line">		&lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">		&lt;version&gt;1.2.17&lt;/version&gt;</span><br><span class="line">	&lt;/dependency&gt;</span><br><span class="line">	&lt;dependency&gt;</span><br><span class="line">		&lt;groupId&gt;dom4j&lt;/groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;dom4j&lt;/artifactId&gt;</span><br><span class="line">		&lt;version&gt;1.6.1&lt;/version&gt;</span><br><span class="line">	&lt;/dependency&gt;</span><br><span class="line">	&lt;dependency&gt;  </span><br><span class="line">        &lt;groupId&gt;com.oracle&lt;/groupId&gt;  </span><br><span class="line">        &lt;artifactId&gt;ojdbc14&lt;/artifactId&gt;  </span><br><span class="line">        &lt;version&gt;10.2.0.1.0&lt;/version&gt;  </span><br><span class="line">     &lt;/dependency&gt;</span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line">  &lt;build&gt;</span><br><span class="line">  	&lt;plugins&gt;</span><br><span class="line">  		&lt;plugin&gt;</span><br><span class="line">  			&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;  </span><br><span class="line">			&lt;version&gt;3.2&lt;/version&gt;</span><br><span class="line">			&lt;configuration&gt;  </span><br><span class="line">            	&lt;source&gt;1.7&lt;/source&gt;  </span><br><span class="line">            	&lt;target&gt;1.7&lt;/target&gt;  </span><br><span class="line">            	&lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">            &lt;/configuration&gt; </span><br><span class="line">  		&lt;/plugin&gt;</span><br><span class="line">  	&lt;/plugins&gt;</span><br><span class="line">  &lt;/build&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>

<p>ana包下的两个java文件(主类包)</p>
<p>AnalysisBean</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.ana;</span><br><span class="line"></span><br><span class="line">public class AnalysisBean &#123;</span><br><span class="line">	</span><br><span class="line">	private String iotId;//iot设备ID</span><br><span class="line">	private String ruleId;//规则唯一id</span><br><span class="line">	private String iotRule;//iot规则</span><br><span class="line">	private String matchType;//匹配规则0：完全匹配，1：模糊匹配</span><br><span class="line">	</span><br><span class="line">	private String imei;</span><br><span class="line">	private String iotType;//可能是host/ua/apn...</span><br><span class="line">	private String dt;//相差时间（LT-FT）</span><br><span class="line">	</span><br><span class="line">	public AnalysisBean(String iotId, String ruleId, String iotRule,</span><br><span class="line">			String matchType) &#123;</span><br><span class="line">		super();</span><br><span class="line">		this.iotId = iotId;</span><br><span class="line">		this.ruleId = ruleId;</span><br><span class="line">		this.iotRule = iotRule;</span><br><span class="line">		this.matchType = matchType;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public void setData(String imei, String iotType, String dt) &#123;</span><br><span class="line">		this.imei = imei;</span><br><span class="line">		this.iotType = iotType;</span><br><span class="line">		this.dt = dt;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public AnalysisBean() &#123;</span><br><span class="line">		super();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public String getIotId() &#123;</span><br><span class="line">		return iotId;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setIotId(String iotId) &#123;</span><br><span class="line">		this.iotId = iotId;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getRuleId() &#123;</span><br><span class="line">		return ruleId;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setRuleId(String ruleId) &#123;</span><br><span class="line">		this.ruleId = ruleId;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getIotRule() &#123;</span><br><span class="line">		return iotRule;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setIotRule(String iotRule) &#123;</span><br><span class="line">		this.iotRule = iotRule;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getMatchType() &#123;</span><br><span class="line">		return matchType;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setMatchType(String matchType) &#123;</span><br><span class="line">		this.matchType = matchType;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getImei() &#123;</span><br><span class="line">		return imei;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setImei(String imei) &#123;</span><br><span class="line">		this.imei = imei;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getIotType() &#123;</span><br><span class="line">		return iotType;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setIotType(String iotType) &#123;</span><br><span class="line">		this.iotType = iotType;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getDt() &#123;</span><br><span class="line">		return dt;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setDt(String dt) &#123;</span><br><span class="line">		this.dt = dt;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public String toString() &#123;</span><br><span class="line">		return iotId + &quot;,&quot; + ruleId + &quot;,&quot; +matchType+ &quot;,&quot; + imei  + &quot;,&quot; + dt+ &quot;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IotAllAnalysis(主程序)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.ana;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.io.FileUtils;</span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line">import com.htjf.util.ConfigUtil;</span><br><span class="line">import com.htjf.util.DBHiberUtil;</span><br><span class="line">import com.htjf.util.DateUtil;</span><br><span class="line">import com.htjf.util.FileUtil;</span><br><span class="line"></span><br><span class="line">public class IotAllAnalysis &#123;</span><br><span class="line">	private static Logger logger = Logger.getLogger(IotAllAnalysis.class);</span><br><span class="line">	</span><br><span class="line">	private Map&lt;String ,AnalysisBean&gt;actuMap=new HashMap&lt;String,AnalysisBean&gt;();</span><br><span class="line">	private Map&lt;String ,AnalysisBean&gt;likeMap=new HashMap&lt;String,AnalysisBean&gt;();</span><br><span class="line">	private long maxFileSize = ConfigUtil.getMaxFileSise();//限制文件大小</span><br><span class="line">	private int maxCountRow = ConfigUtil.getMaxCountRow();//限制行数大小</span><br><span class="line">	private String initFileEndName = ConfigUtil.getInitFileEndName();//文件的后缀名(.temp)</span><br><span class="line">	private String fileEndName = ConfigUtil.getFileEndName();//文件的后缀名(.csv)</span><br><span class="line">	public IotAllAnalysis()&#123;</span><br><span class="line">		super();</span><br><span class="line">	&#125;</span><br><span class="line">	public void doAction()&#123;</span><br><span class="line">		String[] dataList = ConfigUtil.getDataType().split(&quot;,&quot;);</span><br><span class="line">		for(int i =0;i&lt;dataList.length;i++)&#123;</span><br><span class="line">			String dataType = dataList[i].toString();</span><br><span class="line">			loadRule(dataType);</span><br><span class="line">			readAllData(dataType);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 匹配规则</span><br><span class="line">	 * 精准优先(当精确匹配到不再匹配模糊)</span><br><span class="line">	 * 模糊之后</span><br><span class="line">	 * @param iotType</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public AnalysisBean matchIotType(String iotType)&#123;</span><br><span class="line">		if(null==iotType||&quot;&quot;.equals(iotType))&#123;</span><br><span class="line">			return null;</span><br><span class="line">		&#125;</span><br><span class="line">		iotType = iotType.toUpperCase();//转化为大写</span><br><span class="line">		AnalysisBean analysisBean = null;</span><br><span class="line">		for (String actuMapStr : actuMap.keySet()) &#123;</span><br><span class="line">			if(iotType.equals(actuMapStr))&#123;</span><br><span class="line">				analysisBean = actuMap.get(actuMapStr);</span><br><span class="line">				break;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(null!=analysisBean)&#123;</span><br><span class="line">			return analysisBean;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		for(String likeMapStr : likeMap.keySet()) &#123;</span><br><span class="line">			if(iotType.contains(likeMapStr))&#123;</span><br><span class="line">				return likeMap.get(iotType);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 读取累计表的数据</span><br><span class="line">	 */</span><br><span class="line">	public void readAllData(String dataType)&#123;</span><br><span class="line">		Connection conn = null;</span><br><span class="line">		Statement stmt = null;</span><br><span class="line">		ResultSet rs = null;</span><br><span class="line">		</span><br><span class="line">		List&lt;AnalysisBean&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">		File writeFile = null;</span><br><span class="line">		</span><br><span class="line">		String sql  = ConfigUtil.getQueryDataType(dataType);</span><br><span class="line">		logger.info(&quot;查询的sql语句&quot;+sql);</span><br><span class="line">		try &#123;</span><br><span class="line">			conn = DBHiberUtil.getConnection();</span><br><span class="line">			stmt = conn.createStatement();</span><br><span class="line">			rs = stmt.executeQuery(sql);</span><br><span class="line">			</span><br><span class="line">			String initFilePathName = ConfigUtil.getFilePath()+File.separator+dataType+File.separator+dataType+&quot;_&quot;+</span><br><span class="line">					DateUtil.nowTime()+&quot;_&quot;+ConfigUtil.getRandomNum()+initFileEndName;</span><br><span class="line">			writeFile = new File(initFilePathName); //文件路径名</span><br><span class="line">			logger.info(&quot;===&gt;生成文件&quot;+writeFile.getName());</span><br><span class="line">			long start = System.currentTimeMillis();</span><br><span class="line">			long countTime = 0;</span><br><span class="line">			long countrow = 0;</span><br><span class="line">			while(rs.next())&#123;</span><br><span class="line">				countrow++;</span><br><span class="line">				String imei = rs.getString(&quot;imei&quot;);</span><br><span class="line">				String iotType = rs.getString(&quot;iotType&quot;);//如果接入多个这里需要修改</span><br><span class="line">				String dt = rs.getString(&quot;dt&quot;);</span><br><span class="line">				//获取每一行数据-匹配规则</span><br><span class="line">				AnalysisBean analysisBean = matchIotType(iotType);</span><br><span class="line">				if(null!=analysisBean)&#123;</span><br><span class="line">					//匹配到数据</span><br><span class="line">					analysisBean.setData(imei, iotType, dt);</span><br><span class="line">					list.add(analysisBean);</span><br><span class="line">					try &#123;</span><br><span class="line">						if(list.size()%maxCountRow==0)&#123;</span><br><span class="line">							countTime++;</span><br><span class="line">							if(ConfigUtil.isAddFile())&#123;</span><br><span class="line">								if(writeFile.length()&gt;maxFileSize)&#123;</span><br><span class="line">									//从.termp临时文件转为.csv后缀文件</span><br><span class="line">									writeFile = FileUtil.rename(writeFile, initFileEndName, fileEndName);</span><br><span class="line">									logger.info(writeFile.getName()+&quot;,大于maxFileSize限制的&quot;+(maxFileSize/1024/1024)+&quot;M，需重新创建文件&quot;);</span><br><span class="line">									</span><br><span class="line">									long end = System.currentTimeMillis();</span><br><span class="line">									logger.info(&quot;生成一个文件耗时：&quot; + ((end - start)/1000) +&quot; 秒&quot;);</span><br><span class="line">									start = end;</span><br><span class="line">									</span><br><span class="line">									initFilePathName = ConfigUtil.getFilePath()+File.separator+dataType+File.separator+dataType+&quot;_&quot;+</span><br><span class="line">											DateUtil.nowTime()+&quot;_&quot;+ConfigUtil.getRandomNum()+initFileEndName;</span><br><span class="line">									writeFile = new File(initFilePathName); //文件路径名		</span><br><span class="line">									logger.info(&quot;===&gt;生成文件&quot;+writeFile.getName());</span><br><span class="line">								&#125;</span><br><span class="line">									FileUtils.writeLines(writeFile, list,true);</span><br><span class="line">									logger.info(&quot;第&quot;+countrow+&quot;个,第&quot;+countTime+&quot;批次===&gt;匹配到数据大于&quot;+maxCountRow+&quot;条了,并且写入了--&gt;&quot;+writeFile.getName());</span><br><span class="line">							&#125;else&#123;</span><br><span class="line">								initFilePathName = ConfigUtil.getFilePath()+File.separator+dataType+File.separator+dataType+&quot;_&quot;+</span><br><span class="line">										DateUtil.nowTime()+&quot;_&quot;+ConfigUtil.getRandomNum()+initFileEndName;</span><br><span class="line">								File file = new File(initFilePathName);</span><br><span class="line">								FileUtils.writeLines(file, list);</span><br><span class="line">								file = FileUtil.rename(file, initFileEndName, fileEndName);</span><br><span class="line">							&#125;</span><br><span class="line">								list = new ArrayList&lt;&gt;();////清空数据</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; catch (IOException e) &#123;</span><br><span class="line">						// TODO Auto-generated catch block</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;			 </span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			try &#123;</span><br><span class="line">				if(ConfigUtil.isAddFile())&#123;</span><br><span class="line">					logger.info(&quot;===&gt;最后数据：&quot;+list.size()+&quot;，并且写入了文件--&gt;.&quot;+writeFile.getName());</span><br><span class="line">					FileUtils.writeLines(writeFile, list,true);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					initFilePathName = ConfigUtil.getFilePath()+File.separator+dataType+File.separator+dataType+&quot;_&quot;+</span><br><span class="line">							DateUtil.nowTime()+&quot;_&quot;+ConfigUtil.getRandomNum()+initFileEndName;</span><br><span class="line">					File file = new File(initFilePathName);</span><br><span class="line">					FileUtils.writeLines(file, list);</span><br><span class="line">					file = FileUtil.rename(file, initFileEndName, fileEndName);</span><br><span class="line">				&#125;</span><br><span class="line">				list = new ArrayList&lt;&gt;();////清空数据</span><br><span class="line">			&#125; catch (IOException e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			//最后不符合限制大小文件也需要转换后缀名</span><br><span class="line">			writeFile = FileUtil.rename(writeFile, initFileEndName, fileEndName);</span><br><span class="line">		&#125; catch (SQLException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			logger.error(&quot;查询读取累计表的数据sql语句出错！请检查&quot;+e);</span><br><span class="line">		&#125;finally&#123;</span><br><span class="line">			try &#123;</span><br><span class="line">				DBHiberUtil.close(rs, stmt, conn);</span><br><span class="line">			&#125; catch (SQLException e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 读取规则表数据</span><br><span class="line">	 */</span><br><span class="line">	public void loadRule(String dataType)&#123;</span><br><span class="line">		logger.info(&quot;准备载入&quot;+dataType+&quot;规则数据!!!&quot;);</span><br><span class="line">		Connection conn = null;</span><br><span class="line">		Statement stmt = null;</span><br><span class="line">		ResultSet rs = null;</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">		String sql = ConfigUtil.getQueryRule(dataType);</span><br><span class="line">		logger.info(&quot;查询的sql语句&quot;+sql);</span><br><span class="line">		try &#123;</span><br><span class="line">			conn = DBHiberUtil.getConnection();</span><br><span class="line">			stmt = conn.createStatement();</span><br><span class="line">			rs = stmt.executeQuery(sql);</span><br><span class="line">			while (rs.next()) &#123;</span><br><span class="line">				String iot_id = rs.getString(&quot;iot_id&quot;);</span><br><span class="line">				String rule_id = rs.getString(&quot;rule_id&quot;);</span><br><span class="line">				String iot_rule = rs.getString(&quot;iot_rule&quot;);</span><br><span class="line">				String use_way = rs.getString(&quot;use_way&quot;);</span><br><span class="line">				</span><br><span class="line">				iot_rule = iot_rule.toUpperCase();//转化为大写</span><br><span class="line">				if(&quot;0&quot;.equals(use_way))&#123;</span><br><span class="line">					//精确匹配规则</span><br><span class="line">					AnalysisBean analysisBean = new AnalysisBean(iot_id, rule_id, iot_rule, use_way);</span><br><span class="line">					actuMap.put(iot_rule, analysisBean);</span><br><span class="line">					</span><br><span class="line">				&#125;else if(&quot;1&quot;.equals(use_way))&#123;</span><br><span class="line">					iot_rule = iot_rule.replace(&quot;%&quot;, &quot;&quot;);</span><br><span class="line">					//模糊匹配规则</span><br><span class="line">					AnalysisBean analysisBean = new AnalysisBean(iot_id, rule_id, iot_rule, use_way);</span><br><span class="line">					likeMap.put(iot_rule, analysisBean);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (SQLException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			logger.error(&quot;查询载入规则sql语句出错！请检查&quot;+e);</span><br><span class="line">		&#125;finally&#123;</span><br><span class="line">			try &#123;</span><br><span class="line">				DBHiberUtil.close(rs, stmt, conn);</span><br><span class="line">			&#125; catch (SQLException e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		IotAllAnalysis allAnalysis = new IotAllAnalysis();</span><br><span class="line">		allAnalysis.doAction();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>util包(工具包)</p>
<p>ConfigureUtil</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 系统配置类</span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class ConfigureUtil &#123;</span><br><span class="line">		private static Logger logger = Logger.getLogger(ConfigureUtil.class);</span><br><span class="line">	    public static ConfigureUtil instance = null;</span><br><span class="line">	    </span><br><span class="line">	    @SuppressWarnings(&quot;rawtypes&quot;)</span><br><span class="line">		private Map configureMap = null;</span><br><span class="line"></span><br><span class="line">	    public ConfigureUtil() &#123;</span><br><span class="line">	    	</span><br><span class="line">	    	String file = ClassLoader.getSystemResource(&quot;&quot;).getPath()+&quot;cfg.xml&quot;;//正式环境</span><br><span class="line">//	    	String file = this.getClass().getResource(&quot;/&quot;).getPath()+&quot;cfg.xml&quot;;//测试环境</span><br><span class="line">//	    	String file = ConfigureUtil.class.getClassLoader().getResource(&quot;cfg1.xml&quot;).getPath();//测试环境</span><br><span class="line">	    	System.out.println(file);</span><br><span class="line">	    	logger.info(&quot;获取了cfg.xml路径：&quot;+file);</span><br><span class="line">	    	try &#123;</span><br><span class="line">	    		configureMap = new XmlSupportImpl().readDocument(file);</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    public ConfigureUtil(String isHiber) &#123;</span><br><span class="line">	    	 String file = this.getClass().getResource(&quot;/&quot;).getPath()+&quot;cfghiber.xml&quot;;</span><br><span class="line">	    	try &#123;</span><br><span class="line">	    		configureMap = new XmlSupportImpl().readDocument(file);</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	    /*</span><br><span class="line">	     * (non-Javadoc)</span><br><span class="line">	     * @see proc.gmcc.sso.config.Configure#getValue(java.lang.String)</span><br><span class="line">	     */</span><br><span class="line">	    public String getValue(String key) &#123;</span><br><span class="line">	    	return (String) configureMap.get(key);</span><br><span class="line">	    &#125;</span><br><span class="line">	    </span><br><span class="line">		public static ConfigureUtil  getInstance()&#123;</span><br><span class="line">			if(null== instance )&#123;</span><br><span class="line">				synchronized(ConfigureUtil.class)&#123;</span><br><span class="line">					if(null== instance)&#123;</span><br><span class="line">						instance = new ConfigureUtil ();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			return instance;</span><br><span class="line">		&#125;</span><br><span class="line">	    public static void main(String[] args) &#123;</span><br><span class="line">	    	System.out.println(new ConfigureUtil().getValue(&quot;driverURL&quot;));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ConfigUtil</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line"></span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line">public class ConfigUtil &#123;</span><br><span class="line">	private static Logger logger = Logger.getLogger(ConfigUtil.class);</span><br><span class="line">	</span><br><span class="line">	public static String getXMLConfigValueBYName(String name) &#123;</span><br><span class="line">		return ConfigureUtil.getInstance().getValue(name);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 获取</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static boolean isAddFile()&#123;</span><br><span class="line">		String isAddFile = getXMLConfigValueBYName(&quot;IS_ADD&quot;);</span><br><span class="line">		return &quot;true&quot;.equals(isAddFile);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 获取</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static int getMaxCountRow()&#123;</span><br><span class="line">		String maxCountRow = getXMLConfigValueBYName(&quot;MAX_COUNT_ROW&quot;);</span><br><span class="line">		int intMaxCountRow = Integer.parseInt(maxCountRow);</span><br><span class="line">		return intMaxCountRow;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 初始生成文件的后缀名(.temp)</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String getInitFileEndName()&#123;</span><br><span class="line">		String initFileEndName = getXMLConfigValueBYName(&quot;INIT_FILE_ENDNAME&quot;);</span><br><span class="line">		return initFileEndName;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 最终生成文件的后缀名(.csv)</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String getFileEndName()&#123;</span><br><span class="line">		String fileEndName = getXMLConfigValueBYName(&quot;FILE_ENDNAME&quot;);</span><br><span class="line">		return fileEndName;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 获取存放生成文件的本地路径</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String getFilePath()&#123;</span><br><span class="line">		String filePath = getXMLConfigValueBYName(&quot;FILE_BASE_PATH&quot;);</span><br><span class="line">		File file = new File(filePath);</span><br><span class="line">		if(!file.exists()&amp;&amp;!file .isDirectory())&#123;</span><br><span class="line">				file.mkdir();</span><br><span class="line">				return filePath;</span><br><span class="line">		&#125;</span><br><span class="line">//		logger.info(&quot;获取filePath：&quot;+filePath);</span><br><span class="line">		return filePath;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 获取限制文件大小</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static long getMaxFileSise()&#123;</span><br><span class="line">		String strMaxFileSise = getXMLConfigValueBYName(&quot;MAX_FILE_SIZE&quot;);</span><br><span class="line">		long longMaxFileSise = Long.parseLong(strMaxFileSise)*1024*1024;</span><br><span class="line">		logger.info(&quot;获取文件限制大小：&quot;+strMaxFileSise+&quot;(MB)&quot;);</span><br><span class="line">		return longMaxFileSise;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 生成5位随机数</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static int getRandomNum()&#123;</span><br><span class="line">		int randomNum = (int)((Math.random()*9+1)*10000);</span><br><span class="line">		return randomNum;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 获取需要分析的类型</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String getDataType()&#123;</span><br><span class="line">		String dataType = getXMLConfigValueBYName(&quot;DATA_TYPE&quot;);</span><br><span class="line">		//全部转成大写</span><br><span class="line">		dataType = dataType.toUpperCase();</span><br><span class="line">		return dataType;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 获取累计表的sql</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String getQueryDataType(String dataType)&#123;</span><br><span class="line">		String sql = getXMLConfigValueBYName(&quot;QUERY_&quot;+dataType+&quot;_DATA&quot;);</span><br><span class="line">		return sql;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 获取规则表的sql</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String getQueryRule(String dataType)&#123;</span><br><span class="line">		String sql = getXMLConfigValueBYName(&quot;QUERY_&quot;+dataType+&quot;_RULE&quot;);</span><br><span class="line">		return sql;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		System.out.println(getMaxFileSise());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>DateUtil</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.text.ParseException;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Calendar;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public class DateUtil &#123;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 获取当前天的前一天</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String proFormatDay()&#123;</span><br><span class="line">		SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyyMMdd&quot;);    </span><br><span class="line">		Date today = new Date();    </span><br><span class="line">		Calendar calendar = Calendar.getInstance();</span><br><span class="line">		calendar.setTime(today);</span><br><span class="line">		calendar.add(Calendar.DAY_OF_MONTH, -1);</span><br><span class="line">		String proDay = simpleDateFormat.format(calendar.getTime()).toString();</span><br><span class="line">		return proDay;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 获取当天 yyyymmdd</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String formatDay()&#123;</span><br><span class="line">		SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyyMMdd&quot;);    </span><br><span class="line">		Date date = new Date();    </span><br><span class="line">		String today = simpleDateFormat.format(date).toString();</span><br><span class="line">		return today;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 获取当前时间yyyyMMddHHmmss</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public static String nowTime()&#123;</span><br><span class="line">		SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);    </span><br><span class="line">		Date currentTime1 = new java.util.Date();    </span><br><span class="line">		String nowTime = simpleDateFormat.format(currentTime1).toString();</span><br><span class="line">		return nowTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>DBHiberUtil</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.ResultSetMetaData;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 数据库连接相关操作类</span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class DBHiberUtil &#123;</span><br><span class="line">	//private static final transient Log log = LogFactory.getLog(DBHiberUtil.class);</span><br><span class="line">	private static Logger logger = Logger.getLogger(DBHiberUtil.class);</span><br><span class="line"></span><br><span class="line">	/**</span><br><span class="line">	 * 获取数据库链接</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">    public static Connection getConnection() &#123;</span><br><span class="line">        Connection conn = null;</span><br><span class="line">        ConfigureUtil configUtil = new ConfigureUtil();</span><br><span class="line">        String driverURL = configUtil.getValue(&quot;driverURL&quot;).trim();</span><br><span class="line">        String dataBaseAccount = configUtil.getValue(&quot;dataBaseAccount&quot;).trim();</span><br><span class="line">        String dataBasePassWord = configUtil.getValue(&quot;dataBasePassWord&quot;).trim();;</span><br><span class="line">        //System.out.println(&quot;getConnection-----&quot;+driverURL+&quot;--&quot;+dataBaseAccount+&quot;--&quot;+dataBasePassWord);</span><br><span class="line">        try &#123;</span><br><span class="line">            Class.forName(&quot;oracle.jdbc.driver.OracleDriver&quot;);</span><br><span class="line">            conn = DriverManager.getConnection(driverURL, dataBaseAccount, dataBasePassWord);</span><br><span class="line">           //System.out.println(&quot;Connection 开启！&quot;);</span><br><span class="line">            logger.info(&quot;Connection 开启！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e) &#123;</span><br><span class="line">        	logger.error(&quot;Connection 失败&quot;+e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 断开数据库连接</span><br><span class="line">     * @param conn</span><br><span class="line">     * @throws SQLException</span><br><span class="line">     */</span><br><span class="line">    public static void close(Connection conn) throws SQLException &#123;</span><br><span class="line">        if (conn != null) &#123;</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 断开数据库连接</span><br><span class="line">     * @param conn</span><br><span class="line">     */</span><br><span class="line">    public static void closeQuiet(Connection conn) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            close(conn);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭查询结果集对象</span><br><span class="line">     * @param rs</span><br><span class="line">     */</span><br><span class="line">    public static void closeQuiet(ResultSet rs) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            close(rs);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭查询结果集对象</span><br><span class="line">     * @param rs</span><br><span class="line">     * @throws SQLException</span><br><span class="line">     */</span><br><span class="line">    public static void close(ResultSet rs) throws SQLException &#123;</span><br><span class="line">        if (rs != null) &#123;</span><br><span class="line">            rs.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定Statement对象</span><br><span class="line">     * @param stmt</span><br><span class="line">     */</span><br><span class="line">    public static void closeQuiet(Statement stmt) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            close(stmt);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定Statement对象</span><br><span class="line">     * @param stmt</span><br><span class="line">     * @throws SQLException</span><br><span class="line">     */</span><br><span class="line">    public static void close(Statement stmt) throws SQLException &#123;</span><br><span class="line">        if (stmt != null) &#123;</span><br><span class="line">            stmt.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定Statement对象和ResultSet对象</span><br><span class="line">     * @param rs</span><br><span class="line">     * @param stmt</span><br><span class="line">     */</span><br><span class="line">    public static void closeQuiet(ResultSet rs, Statement stmt) &#123;</span><br><span class="line">        closeQuiet(rs);</span><br><span class="line">        closeQuiet(stmt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定Statement对象和ResultSet对象</span><br><span class="line">     * @param rs</span><br><span class="line">     * @param stmt</span><br><span class="line">     * @throws SQLException</span><br><span class="line">     */</span><br><span class="line">    public static void close(ResultSet rs, Statement stmt) throws SQLException &#123;</span><br><span class="line">        close(rs);</span><br><span class="line">        close(stmt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定Statement对象和断开数据库连接</span><br><span class="line">     * @param stmt</span><br><span class="line">     * @param conn</span><br><span class="line">     */</span><br><span class="line">    public static void closeQuiet(Statement stmt, Connection conn) &#123;</span><br><span class="line">        closeQuiet(stmt);</span><br><span class="line">        closeQuiet(conn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定Statement对象和断开数据库链接</span><br><span class="line">     * @param stmt</span><br><span class="line">     * @param conn</span><br><span class="line">     * @throws SQLException</span><br><span class="line">     */</span><br><span class="line">    public static void close(Statement stmt, Connection conn) throws SQLException &#123;</span><br><span class="line">        close(stmt);</span><br><span class="line">        close(conn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定ResultSet、Statement对象和断开数据库链接</span><br><span class="line">     * @param rs</span><br><span class="line">     * @param stmt</span><br><span class="line">     * @param conn</span><br><span class="line">     */</span><br><span class="line">    public static void closeQuiet(ResultSet rs, Statement stmt, Connection conn) &#123;</span><br><span class="line">        closeQuiet(rs);</span><br><span class="line">        closeQuiet(stmt, conn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭指定ResultSet、Statement对象和断开数据库链接</span><br><span class="line">     * @param rs</span><br><span class="line">     * @param stmt</span><br><span class="line">     * @param conn</span><br><span class="line">     * @throws SQLException</span><br><span class="line">     */</span><br><span class="line">    public static void close(ResultSet rs, Statement stmt, Connection conn) throws SQLException &#123;</span><br><span class="line">        close(rs);</span><br><span class="line">        close(stmt, conn);</span><br><span class="line">        logger.info(&quot;Connection 关闭！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 获取表中所有字段名称</span><br><span class="line">     * @param tableName 表名</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static List&lt;String&gt; getColumnNames(String tableName)&#123;</span><br><span class="line">    	List&lt;String&gt; columnNames = new ArrayList&lt;&gt;();</span><br><span class="line">    	Connection connection = null;</span><br><span class="line">		PreparedStatement ps = null;</span><br><span class="line">		ResultSet rs = null;</span><br><span class="line">		ResultSetMetaData rsmd = null;</span><br><span class="line">		String sql = &quot;select * from &quot;+tableName;</span><br><span class="line">		try &#123;</span><br><span class="line">			connection = DBHiberUtil.getConnection();</span><br><span class="line">			ps = connection.prepareStatement(sql);</span><br><span class="line">			rs = ps.executeQuery(sql);</span><br><span class="line">			rsmd = rs.getMetaData();</span><br><span class="line">			for (int i = 1; i &lt;=rsmd.getColumnCount() ; i++) &#123;</span><br><span class="line">				columnNames.add(rsmd.getColumnName(i));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (SQLException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;finally&#123;</span><br><span class="line">			try &#123;</span><br><span class="line">				connection.close();</span><br><span class="line">				ps.close();</span><br><span class="line">				rs.close();</span><br><span class="line">			&#125; catch (SQLException e) &#123;</span><br><span class="line">				// TODO Auto-generated catch block</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">    	return columnNames;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>FileUtil</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line"></span><br><span class="line">public class FileUtil &#123;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 文件处理前重命名(以扩展名替换的形式)</span><br><span class="line">	 * @param srcFile 需要重命名的文件</span><br><span class="line">	 * @param tar 重命名目标字符串</span><br><span class="line">	 * @param rep 替换字符串</span><br><span class="line">	 * @return 重命名后文件</span><br><span class="line">	 */</span><br><span class="line">	public static File rename(File srcFile, String tar, String rep) &#123;</span><br><span class="line">		String perMatchFileName =  srcFile.getPath().replace(tar, rep);</span><br><span class="line">		File newNameFile = new File(perMatchFileName);</span><br><span class="line">		srcFile.renameTo(newNameFile);</span><br><span class="line">		return newNameFile;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ParseXmlUtil</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line">import org.dom4j.Document;</span><br><span class="line">import org.dom4j.DocumentException;</span><br><span class="line">import org.dom4j.Element;</span><br><span class="line">import org.dom4j.io.SAXReader;</span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class ParseXmlUtil &#123;</span><br><span class="line">	private static Logger logger = Logger.getLogger(ParseXmlUtil.class);</span><br><span class="line">	private static ParseXmlUtil  instance = null;</span><br><span class="line">	private Map&lt;String,String&gt; configureMap = null;</span><br><span class="line">	private Document doc=null;</span><br><span class="line">	private String path= ClassLoader.getSystemResource(&quot;&quot;).getPath() + &quot;cfg.xml&quot;;</span><br><span class="line">	</span><br><span class="line">//	private String path2 = this.getClass().getResource(&quot;/&quot;).getPath()+&quot;cfg.xml&quot;;</span><br><span class="line">//	private String path3 = ConfigureUtil.class.getClassLoader().getResource(&quot;cfg.xml&quot;).getPath();//测试环境</span><br><span class="line">	</span><br><span class="line">	private ParseXmlUtil ()&#123;</span><br><span class="line">		try &#123;</span><br><span class="line">			//打包成jar包，直接读取jar包同级目录的包外配置文件</span><br><span class="line">//			path= &quot;cfg.xml&quot;;</span><br><span class="line">			reLoadData();</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getPath() &#123;</span><br><span class="line">		return path;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public void setPath(String path) &#123;</span><br><span class="line">		this.path = path;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public Document getDoc() &#123;</span><br><span class="line">		return doc;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public void setDoc(Document doc) &#123;</span><br><span class="line">		this.doc = doc;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void reLoadData()&#123;</span><br><span class="line">		try &#123;</span><br><span class="line">			logger.info(&quot;加载配置文件&quot;+getPath());</span><br><span class="line">			doc = new SAXReader().read(new File(getPath()));</span><br><span class="line">			configureMap=initLoadConfig();</span><br><span class="line">		&#125; catch (DocumentException e) &#123;</span><br><span class="line">			// TODO Auto-generated catch block</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	public static ParseXmlUtil  getInstance()&#123;</span><br><span class="line">		if(null== instance )&#123;</span><br><span class="line">			synchronized(ParseXmlUtil.class)&#123;</span><br><span class="line">				if(null== instance)&#123;</span><br><span class="line">					instance = new ParseXmlUtil ();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		return instance;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 指定配置文件目录初始化文件加</span><br><span class="line">	 * @param path</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	private Map&lt;String,String&gt; initLoadConfig()&#123;</span><br><span class="line">		 Map&lt;String,String&gt; map =new HashMap&lt;String,String&gt;();</span><br><span class="line">		 try &#123;</span><br><span class="line">	           Element root = doc.getRootElement();</span><br><span class="line">	           @SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="line">	           List&lt;Element&gt; list = root.elements();</span><br><span class="line">	           for(Element actionNode : list)</span><br><span class="line">	           &#123;</span><br><span class="line">	        	   map.put(actionNode.getName(),actionNode.getTextTrim());</span><br><span class="line">	           &#125;</span><br><span class="line">	           return map;</span><br><span class="line">	       &#125; catch (Exception e) &#123;</span><br><span class="line">	           e.printStackTrace();</span><br><span class="line">	           return null;</span><br><span class="line">	       &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * @param name</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public String getConfigValueBYName(String name)&#123;</span><br><span class="line">		return configureMap.get(name);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>XmlSupport</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.dom4j.Document;</span><br><span class="line">/**</span><br><span class="line"> * @author Jiomer</span><br><span class="line"> */</span><br><span class="line">public interface XmlSupport &#123;</span><br><span class="line">	/**</span><br><span class="line">	 * 创建xml文件</span><br><span class="line">	 * @return</span><br><span class="line">	 */</span><br><span class="line">	public Document createDocument();</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 读xml文件</span><br><span class="line">	 * @param file</span><br><span class="line">	 * @return</span><br><span class="line">	 * @throws Exception</span><br><span class="line">	 */</span><br><span class="line">	public Map readDocument(String file)throws Exception;</span><br><span class="line">	</span><br><span class="line">	/**</span><br><span class="line">	 * 写xml文件</span><br><span class="line">	 * @throws Exception</span><br><span class="line">	 */</span><br><span class="line">	public void writerDocument() throws Exception;</span><br><span class="line">	/**</span><br><span class="line">	 * 更新xml文件</span><br><span class="line">	 */</span><br><span class="line">	public void updateDocument() ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>XmlSupportImpl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.htjf.util;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileWriter;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.dom4j.Document;</span><br><span class="line">import org.dom4j.DocumentHelper;</span><br><span class="line">import org.dom4j.Element;</span><br><span class="line">import org.dom4j.io.OutputFormat;</span><br><span class="line">import org.dom4j.io.SAXReader;</span><br><span class="line">import org.dom4j.io.XMLWriter;</span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @author Jiomer</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class XmlSupportImpl implements XmlSupport&#123;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public Document createDocument() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Document document = DocumentHelper.createDocument();</span><br><span class="line">		Element rootElement = document.addElement(&quot;root&quot;);</span><br><span class="line"></span><br><span class="line">		Element uploadFileElement = rootElement.addElement(&quot;uploadFile&quot;);</span><br><span class="line"></span><br><span class="line">		Element path = uploadFileElement.addElement(&quot;path&quot;);</span><br><span class="line">		path.setText(&quot;/hjtInfoUpload/&quot;);</span><br><span class="line">		Element size = uploadFileElement.addElement(&quot;size&quot;);</span><br><span class="line">		size.setText(&quot;10240&quot;);</span><br><span class="line">		Element type = uploadFileElement.addElement(&quot;type&quot;);</span><br><span class="line">		type.setText(&quot;zip,rar,png,jpg,gif&quot;);</span><br><span class="line"></span><br><span class="line">		return document;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public Map readDocument(String file) throws Exception &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Map map = new HashMap();</span><br><span class="line">		SAXReader saxReader =  new SAXReader();</span><br><span class="line">		</span><br><span class="line">		Document document = saxReader.read(new FileInputStream(new File(file)));</span><br><span class="line">		Element root = document.getRootElement();</span><br><span class="line">		List list = root.elements();</span><br><span class="line">		for(int i=0;i&lt;list.size();i++)&#123;</span><br><span class="line">			Element ele = (Element) list.get(i);</span><br><span class="line">			map.put(ele.getName(), ele.getText());</span><br><span class="line">		&#125;</span><br><span class="line">		return map;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void writerDocument() throws Exception &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		OutputFormat of = new OutputFormat(&quot;   &quot;, true);</span><br><span class="line">		XMLWriter xmlWriter = new XMLWriter(new FileWriter(&quot;hjt_info.xml&quot;), of);</span><br><span class="line">		//LoggerUtil.info(&quot;XmlSupportImpl&quot;,new File(&quot;hjt_info.xml&quot;).getAbsolutePath());</span><br><span class="line">		xmlWriter.write(this.createDocument());</span><br><span class="line">		xmlWriter.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void updateDocument() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>log4j.properties</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">log4j.rootLogger=stdout,ERROR,logfile</span><br><span class="line">#\u8f93\u51fa\u5230\u63a7\u5236\u53f0#  </span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.Threshold=INFO</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern = %d %-5p [%-8t] [%-17c&#123;1&#125;]-%m%n</span><br><span class="line"></span><br><span class="line">#\u8f93\u51fa\u5230\u9879\u76ee\u6587\u4ef6\u4e0b#</span><br><span class="line">log4j.appender.logfile = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.logfile.File = ./logs/info_log.log</span><br><span class="line">log4j.appender.logfile.Append = true</span><br><span class="line">log4j.appender.logfile.Threshold = INFO</span><br><span class="line">log4j.appender.logfile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logfile.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; %5p %c&#123;1&#125;:%L - %m%n</span><br><span class="line">##log4j.appender.logfile.layout.ConversionPattern= %d %-5p [%-8t] [%-17c&#123;1&#125;]-%m%n</span><br><span class="line"></span><br><span class="line">#\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230\u9879\u76ee\u5b50\u6587\u4ef6\u5939\u4e0b#</span><br><span class="line">log4j.appender.ERROR=org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.ERROR.File = ./logs/err_log.log</span><br><span class="line">log4j.appenile.ERROR.Append = true</span><br><span class="line">log4j.appender.ERROR.Threshold = ERROR</span><br><span class="line">log4j.appender.ERROR.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.ERROR.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; %5p %c&#123;1&#125;:%L - %m%n</span><br></pre></td></tr></table></figure>

<p>cfg.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;cfgs&gt;</span><br><span class="line">    &lt;driver-class&gt;oracle.jdbc.driver.OracleDriver&lt;/driver-class&gt;</span><br><span class="line">    &lt;!-- 本地测试环境 </span><br><span class="line">		--&gt;</span><br><span class="line">    &lt;driverURL&gt;</span><br><span class="line">      jdbc:oracle:thin:@192.168.20.201:1521:mmdsdb</span><br><span class="line">    &lt;/driverURL&gt; </span><br><span class="line">    &lt;dataBaseAccount&gt;T_MMDS&lt;/dataBaseAccount&gt;</span><br><span class="line">    &lt;dataBasePassWord&gt;testmmds&lt;/dataBasePassWord&gt; </span><br><span class="line">    </span><br><span class="line">    &lt;!-- 基础配置项 --&gt;</span><br><span class="line">    &lt;INIT_FILE_ENDNAME&gt;.temp&lt;/INIT_FILE_ENDNAME&gt;&lt;!-- 初始化文件后缀名 --&gt;</span><br><span class="line">    &lt;FILE_ENDNAME&gt;.csv&lt;/FILE_ENDNAME&gt;&lt;!-- 生成文件的后缀名 .csv/.txt  --&gt;</span><br><span class="line">    &lt;MAX_FILE_SIZE&gt;10&lt;/MAX_FILE_SIZE&gt;&lt;!-- 生成文件大小限制多大 单位MB --&gt;</span><br><span class="line">    &lt;MAX_COUNT_ROW&gt;10000&lt;/MAX_COUNT_ROW&gt;&lt;!-- 设置多少行，生成/写入 --&gt;</span><br><span class="line">    &lt;IS_ADD&gt;true&lt;/IS_ADD&gt;&lt;!-- 是否追加在源文件 --&gt;</span><br><span class="line">    &lt;DATA_TYPE&gt;host&lt;/DATA_TYPE&gt;</span><br><span class="line">	&lt;FILE_BASE_PATH&gt;G:/test12&lt;/FILE_BASE_PATH&gt;</span><br><span class="line">	&lt;!-- 生成文件存放的父路径 </span><br><span class="line">	&lt;FILE_BASE_PATH&gt;/export/a5duser/iot_ana/file&lt;/FILE_BASE_PATH&gt;</span><br><span class="line">	--&gt;</span><br><span class="line">	&lt;QUERY_HOST_DATA&gt;select imei,host iotType,(lt-ft)dt from IOT_DIG_HOST_COUNT&lt;/QUERY_HOST_DATA&gt;</span><br><span class="line">	&lt;QUERY_HOST_RULE&gt;select iot_id,rule_id,iot_rule,use_way from iot_base_hreg_info where enable = 0&lt;/QUERY_HOST_RULE&gt;</span><br><span class="line">	&lt;QUERY_UA_DATA&gt;select imei,ua iotType,(lt-ft)dt from IOT_DIG_UA_COUNT&lt;/QUERY_UA_DATA&gt;</span><br><span class="line">	&lt;QUERY_UA_RULE&gt;select iot_id,rule_id,iot_rule,use_way from iot_base_ureg_info where enable = 0&lt;/QUERY_UA_RULE&gt;</span><br><span class="line">&lt;/cfgs&gt;</span><br></pre></td></tr></table></figure>

<p>end..</p>
]]></content>
      <categories>
        <category>JAVA代码</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>MVC框架——基于java web简单开发</title>
    <url>/166/</url>
    <content><![CDATA[<h2 id="MVC框架——基于java-web简单开发（作业）"><a href="#MVC框架——基于java-web简单开发（作业）" class="headerlink" title="MVC框架——基于java web简单开发（作业）"></a>MVC框架——基于java web简单开发（作业）</h2><p>我的JSP作业要求： 练习要求如下： 1.按照*.bmp做好客户端login.jsp文件 2.在客户端login.jsp文件中用javascript实现登陆验证,要求非空字符，非空对象等验证。 3.在服务器端口checkLogin.jsp文件中进行分类执行 1)学生用户:用户名为：本人姓名,密码为：本人学号，登陆成功后用response跳转到student.jsp页，输出个人信息。提醒：1.session应用；2.注意中文乱码处理。 2)管理员用户:用户名为：admin,密码为：admin，登陆成功后用jsp:forward跳转到student.jsp页，输出目前有多少人登陆服务器页面。提醒：application应用。 3)来宾账户:用户名为：guest,密码为：guest，登陆成功后输出“我来逛一圈，马上走！”。用超级链接跳转到客户端页。</p>
<hr>
<p>MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用于组织代码用一种业务逻辑和数据显示分离的方法。 哎呀，这些对我这个新手只能百度吧。 闲话少说了，下面开始手把手记录一下如何搭建MVC框架，作为例子，展示的是一个最（超级）简单的登录流程。</p>
<ul>
<li>  第一步：创建项目</li>
</ul>
<p>创建项目的工具我推荐MyEclipse，毕竟MyEclipse可以加载强大的插件,缺点就是吃资源-&gt;创建项目完毕之后，我们可以立刻启动项目。 <img src="http://qn.199604.com/ser1.jpg"> 启动项目完毕之后，MyEclipse自带的浏览器会向我们展示这么一个简单到不能再简单的页面 <img src="http://qn.199604.com/ser2.jpg"> 看到项目的文件结构，不难在WebRoot文件夹下找到名为index.jsp这一文件。浏览器所展示的页面，就是此文件经过处理过后的结果。 点开之后，修改<body></body>之间的内容，例如改成This is My MVC project.。重新启动项目后，告诉我你看到了什么。 好了，解决完页面来源问题之后，接下来就是解答为什么会展示这么一个页面的问题了。我们点WebRoot文件夹节点，再点击WEB-INF文件夹节点，找到web.xml文件并且双击打开，然后看看里面的内容</p>
<?xml version="1.0" encoding="UTF-8"?>
<p><web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   http://java.sun.com/xml/ns/javaee/web-app\_2\_5.xsd"></p>
 <welcome-file-list>
  <welcome-file>index.jsp</welcome-file>
 </welcome-file-list>

<p>看到第7行的代码中的index.jsp，是不是觉得似曾相识呢？没错，它就是我们刚才一直在讨论的那个页面。这里设置的就是项目启动后浏览器展示的第一个页面，以后我们可以试着再WebRoot目录下添加一个HTML文件或JSP文件，然后将这里的index.jsp改成所添加的文件名，重新启动项目，你就会发现哪里就改成你的默认首页页面。web.xml文件，用处还不止一点，因为我自己也不怎么懂！哈哈哈 前面已经创建完项目了，那么下面一个步骤就是逐一新建在MVC框架中负责V（视图）、C（控制器）、M（模型）的对应文件。</p>
<ul>
<li>  第二步：新建负责V（视图）的JSP文件</li>
</ul>
<p>在文件夹Web-Root下新建名为login.jsp的JSP文件，代码如下：</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”UTF-8” errorPage=”404.jsp”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    <title>统一身份认证平台</title>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<link href="login.css" type="text/css" rel="stylesheet">
<script type="text/javascript">
function checkLoginForm() {
var username = document.getElementById("username");
    var password = document.getElementById("password");
    if(username.value == ""  password.value == "") {
        alert("用户名或密码不能为空");
        return false;
    }
}

<p> function toUpperCase(obj)<br> {<br> obj.value = obj.value.toLowerCase();<br> }<br>function resetLogin(){<br>var username = document.getElementById(“username”);<br>    var password = document.getElementById(“password”);<br>    if(username.value!=null  username.value!=””) {<br>        username.value=””;<br>    }<br>    if(password.value!=null  password.value!=””) {<br>        password.value=””;<br>    }<br>}<br></script><br>  </head></p>
<body>
<div id="pagebody">
<div id="loginbox">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tbody>
<tr>
<td><img src="imgs/login-top.gif" width="262" height="34"></td>
</tr>
<tr>
<td>
<form id="fm1" name="fm1" action="MyServlet/checkLogin" method="post" onsubmit="return checkLoginForm()">
<div class="box" id="login">
<table border="0" cellspacing="0" cellpadding="0" width="92%" align="center">
<tbody>
<tr>
<td colspan="2">&nbsp; </td>
</tr>
<tr>
<td align="right">用户名：</td>
<td>
<input id="username" name="username" class="username" type="text" placeholder="请输入你的账号" size="25" onkeyup="toUpperCase(this)" />
</td>
</tr>
<tr>
<td colspan="2">&nbsp; </td>
</tr>
<tr>
<td align="right">密&nbsp;&nbsp;码：</td>
<td>
<input id="password" name="password" class="password" type="password" placeholder="请输入你的密码" size="25" onkeyup="toUpperCase(this)" />
</td>
</tr>
<tr>
<td colspan="2">
<table border="0" cellspacing="6" cellpadding="5" width="100%">
<tbody>
<tr>
<td align="right"><input alt="\[按钮\]" src="imgs/login-buttom.gif" type="image" name="imageField" /></td>
<td>
<a href="login.jsp"><img border="0" src="imgs/login-button2.gif" width="93" height="30" onclick="resetLogin()"></a>
</td>
</tr>
</tbody>
</table>
</td>
</tr>

<tr>
<td height="25" valign="bottom" colspan="2" align="left" style="padding-left:30px;"><a target="\_blank" href="LoginFailed.jsp">
<font color="#ff0000"><strong>疑难问题解答</strong></font>
</a>&nbsp; &nbsp; <a target="\_blank" href="LoginFailed.jsp">忘记密码？</a>
<br>
<a target="\_blank" href="LoginFailed.jsp">关于身份认证</a>
</td>
</tr>
<tr>
<td colspan="2"><!--  <div align="center"><img border="0" src="imgs/line.gif" width="227" height="2"></div>\*/-->
<div class="box-1"></div>
</td>
</tr>
<tr>
<td colspan="2"  class="xx"><img border="0" src="imgs/quan.gif" width="18" height="15">河源职业技术学院信息中心</td>
</tr>
</tbody>
</table>
</div>
</form>
</td>
</tr>
<tr>
<td><img src="imgs/login-foot.gif" width="262" height="10"></td>
</tr>
</tbody>
</table>
</div>
<div id="info">
<ul>
<li>这是校园的内部门户站点。您可以登录校园信息服务综合平台，通过同一个账户名/密码。
<font color="#ff0000">学生帐号为学号，初始密码为身份证号后六位或888888；教工帐号为新六位工号，初始密码为身份证号后六位。如果您的身份证号最后一位是字母，请尝试用大写的字母登录（具体情况以人事档案中大小写为准）。
</font>
访问校园网的各种网络应用系统和信息资源。 
</li>
<li>统一身份认证是当用户进入信息门户系统时对用户的统一认证，教职工和学生只用一个帐号，登录一次门户，就可以进入所有有权限访问的应用系统，不必重复登录。
</li>
<li>如有问题请联系：3800078</li>
<li>网络报障电话：3800202</li>
</ul>
</div>
</div>
</body>
</html>

<p>提交的表单，action为”MyServlet/checkLogin”，发出请求是post,具体请看代码 下面是login.css代码：</p>
<p>@charset “utf-8”;</p>
<p>body {<br>font:12px Tahoma;<br>margin:0px;<br>background:#eaeaea;<br>}<br>a:link,a:visited {<br>font-size:12px;<br>text-decoration:none;<br>color:#000;<br>}<br>.xx{<br>font-size:12px;<br>padding-left: 10px;<br>}<br>a:hover{<br>color: #3399cc;<br>text-decoration: underline;<br>}</p>
<p>.en{<br>font-family:Verdana;<br>font-size:10px;<br>}</p>
<p>a.yellowlink:link,a.yellowlink:visited,.yellow {<br>color: #ff6600;<br>}<br>a.yellowlink:hover{<br>color: #3399cc;<br>text-decoration: underline;<br>}<br>.username,.password{<br>width:176px;<br>font-size:14px;<br>height:20px;<br>line-height: 20px;<br>}<br>.input{<br>border: 1px solid #cccccc;<br>height: 18px;<br>padding: 3px 2px 0px 2px;<br>font: 12px Verdana;<br>}</p>
<p>#pagebody {<br>width:1024px;<br>height: 550px;<br>   margin:0px auto;<br>background: url(imgs/bg.jpg) top no-repeat;<br>background-color: #fff;<br>}</p>
<p>#loginbox {<br>position: relative;<br>overflow:hidden;<br>float:left;<br>clear:left;<br>top:265px;<br>left: 60px;<br>width:262px;<br>background: url(../imgs/login-bg.gif) repeat-y;<br>border:10px solid #f0ffff;<br>}<br>.box-1{<br>border:1px solid #f0ffff;<br>padding-top: 10px;<br>}</p>
<p>#info {<br>position: relative;<br>right:80px;<br>top: 245px;<br> width:560px;<br> float:right;<br> overflow:hidden;<br> padding-top:28px;<br> clear:right;</p>
<p>}</p>
<p>#info ul {<br>margin: 5px 5px 10px 20px;<br>list-style:url(../imgs/icon.gif)  disc;<br>}</p>
<p>#info  ul li{<br>font:14px/22px sans-serif;<br>padding: 2px;<br>list-style-image:url(../imgs/star.png);<br>}</p>
<p>#Footer {<br>   margin:0px auto;<br>display: block;<br>width: 1024px;<br>height:80px;<br>background: #ffffff url(../imgs/footer.jpg)  repeat-x;<br>background-color: #fff;<br>color: #666;<br>}<br>#footer tr td {<br>background:#FFFFFF;<br>}</p>
<p>这个文件的文件名login.jsp。（建议初学者做完这个步骤之后先运行一遍项目，看看效果如何，再看看有没有出错的地方） 如果运行的效果如下图，那应该就没什么问题了。 <img src="http://qn.199604.com/ser3.jpg"> 所谓的V（视图），通俗地来讲，就是用户所看到的内容。具体到这个Java web项目，就是用户所看到的页面。</p>
<ul>
<li>  第三步：新建负责C（控制器）的Servlet</li>
</ul>
<p>首先，要在src目录下新建一个包，包名为MyServlet然后，再在该包下新建一个servlet文件，名为checkLogin，代码如下：</p>
<p>package MyServlet;</p>
<p>import java.io.IOException;<br>import java.io.PrintWriter;</p>
<p>import javax.servlet.ServletException;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;<br>import javax.servlet.http.HttpSession;</p>
<p>import Uers.user;</p>
<p>public class checkLogin extends HttpServlet {</p>
<p>public checkLogin(){<br>super();<br>}</p>
<p>/**<br> * Destruction of the servlet. <br><br> */<br>public void destroy() {<br>super.destroy(); // Just puts “destroy” string in log<br>// Put your code here<br>}</p>
<p>public void doGet(HttpServletRequest request, HttpServletResponse response)<br>throws ServletException, IOException {<br>doPost(request,response);<br>}</p>
<p>/**<br> * The doPost method of the servlet. <br><br> *<br> * This method is called when a form has its tag value method equals to post.<br> *<br> * @param request the request send by the client to the server<br> * @param response the response send by the server to the client<br> * @throws ServletException if an error occurred<br> * @throws IOException if an error occurred<br> */<br>public void doPost(HttpServletRequest request, HttpServletResponse response)<br>throws ServletException, IOException {<br>boolean s=false;<br>boolean a=false;<br>boolean g=false;<br>request.setCharacterEncoding(“utf-8”);<br>user user = new user();<br>String username=request.getParameter(“username”);<br>String password=request.getParameter(“password”);</p>
<p>s=user.student(username, password);//使用模型对账号和密码进行验证，返回一个boolean类型的对象<br>a=user.admin(username, password);<br>g=user.guest(username, password);</p>
<p>if(s){  //如果验证结果为真，跳转至登录成功页面<br>            response.sendRedirect(“../student.jsp”);<br>            HttpSession session = request.getSession();<br>            session.setAttribute(“username”,request.getParameter(“username”));<br>            session.setAttribute(“password”,request.getParameter(“password”));<br>     }else if(a){  //如果验证结果为真，跳转至登录成功页面<br>            response.sendRedirect(“../admin.jsp”);<br>            HttpSession session = request.getSession();<br>            session.setAttribute(“username”,request.getParameter(“username”));<br>     }else if(g){  //如果验证结果为真，跳转至登录成功页面<br>            response.sendRedirect(“../guest.jsp”);<br>     }else{<br>    // response.sendRedirect(“../LoginFailed.jsp”);<br>     response.sendRedirect(“../404.jsp”);<br>      }</p>
<p>}</p>
<p>/**<br> * Initialization of the servlet. <br><br> *<br> * @throws ServletException if an error occurs<br> */<br>public void init() throws ServletException {<br>// Put your code here<br>}</p>
<p>}</p>
<p>控制器(C）的作用，就是对流程的控制，接收视图传来的参数，交由模型进行处理，再根据处理的结果决定下一步的操作。具体到本项目，servlet接收jsp传来的参数username和password，交由user处理，根据返回的boolean结果跳转到登录成功（失败）的页面。</p>
<ul>
<li>  第四步：修改web.xml文件，注册servlet并且建立action与servlet之间的映射。</li>
</ul>
<p>前面说到，MyServlet.checkLogin会处理提交的请求，那么，为什么checkLogin会接收到这个请求呢？因为，我事先修改了web.xml文件，在里面添加了相应的代码。web.xml的完整代码如下：</p>
<?xml version="1.0" encoding="UTF-8"?>
<p><web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   http://java.sun.com/xml/ns/javaee/web-app\_2\_5.xsd"><br> <servlet><br>  <description>This is the description of my J2EE component</description><br>  <display-name>This is the display name of my J2EE component</display-name><br>  <servlet-name>login</servlet-name><br>  <servlet-class>MyServlet.login</servlet-class><br> </servlet><br>  <servlet><br>    <description>This is the description of my J2EE component</description><br>    <display-name>This is the display name of my J2EE component</display-name><br>    <servlet-name>checkLogin</servlet-name><br>    <servlet-class>MyServlet.checkLogin</servlet-class><br>  </servlet></p>
 <servlet-mapping>
  <servlet-name>login</servlet-name>
  <url-pattern>/MyServlet/login</url-pattern>
 </servlet-mapping>
  <servlet-mapping>
    <servlet-name>checkLogin</servlet-name>
    <url-pattern>/MyServlet/checkLogin</url-pattern>
  </servlet-mapping>
 <welcome-file-list>
  <welcome-file>login.jsp</welcome-file>
 </welcome-file-list>
 <login-config>
  <auth-method>BASIC</auth-method>
 </login-config>
</web-app>

<p>看到关于action的那一行XML代码，是否想到了什么呢？没错，就是jsp表单中所定义的action。试着修改，看看会有什么效果？</p>
<ul>
<li>  第五步：新建M（模型）的user文件</li>
</ul>
<p>首先，在src文件下新建包，包名为Uers。然后在该包下新建class文件，名为user。 为了让读者，尤其是初学者更快地理解MVC，而不是将精力耗费在理解user以及数据库操作上面，我将user进行了尽可能的简化。代码如下：</p>
<p>package Uers;</p>
<p>public class user {<br>public boolean student(String username,String password){<br>if(username.equals(“郭良俊”)&amp;&amp;password.equals(“2015122297”)){//判断用户名以及密码是否与设定相符<br>return true;<br>}else {<br> return false;<br>}<br>}</p>
<p>public boolean admin(String username,String password){<br>if(username.equals(“admin”)&amp;&amp;password.equals(“admin”)){//判断用户名以及密码是否与设定相符<br>return true;<br>}else {<br> return false;<br>}<br>}</p>
<p>public boolean guest(String username,String password){<br>if(username.equals(“guest”)&amp;&amp;password.equals(“guest”)){//判断用户名以及密码是否与设定相符<br>return true;<br>}else {<br> return false;<br>}<br>}<br>}</p>
<ul>
<li>  第六步：新建V（视图）中的另外几个JSP文件</li>
</ul>
<p>代码如下：</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”UTF-8” errorPage=”404.jsp”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;admin.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <!-- JSP声明 -->  
  <%! int i;  
  %>  
  <!-- 将i值自加后放入application的变量内 -->  
  <%application.setAttribute("counter",String.valueOf(++i));%>   
  <%--String username = (String)session.getAttribute("username"); --%>
  <%-- <%=session.getAttribute("username") %>欢迎回来！</p>--%>
  <p>利用EL表达式：${sessionScope.username}欢迎回来！</p>
  <p>目前有<%=application.getAttribute("counter") %>人登陆服务器</p>
  <jsp:forward page="student.jsp" />
  </body>
</html>

<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”UTF-8” errorPage=”404.jsp”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;guest.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
   <h2>我来逛一圈，马上走！</h2>
   <a href="login.jsp">点击回到首页</a>
  </body>
</html>

<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”UTF-8” errorPage=”404.jsp”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;LoginFailed.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <h2>登录失败！请确认账号密码</h2>
    <p>学生用户:用户名为：本人姓名,密码为：本人学号</p>
    <p>管理员用户:用户名为：admin,密码为：admin</p>
    <p>来宾账户:用户名为：guest,密码为：guest</p>
    <a href="login.jsp">点击回到首页</a>
  </body>
</html>

<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”UTF-8” errorPage=”404.jsp”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;student.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <%
   String username =(String)session.getAttribute("username");
   String password =(String)session.getAttribute("password");
     %>
     <%-- 下面是stundent的任务--%>
<p>我叫：<%=username %></p>
<p>我的学号：<%=password %></p>
<%-- 下面是admin的任务--%>
 <%=session.getAttribute("username") %>欢迎回来！</p>
<p>利用EL表达式：${sessionScope.username}欢迎回来！</p>
<p>目前有<%=application.getAttribute("counter") %>人登陆服务器</p>
<p>利用EL表达式：目前有${applicationScope.counter} 人登陆服务器</p>
<a href="login.jsp">首页</a>
  </body>
</html>

<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”UTF-8” isErrorPage=”true”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;这不是404页面&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<link href="css/style.css" type="text/css" rel="stylesheet">
<script type="text/javascript">
var num=30;
function redirect(){
num--;
document.getElementById("num").innerHTML=num;
if(num<0){
document.getElementById("num").innerHTML=0;
//location.href="http://199604.com";
document.location="login.jsp";
}
}
setInterval("redirect()", 1000);
</script>
  </head>
  
  <body>
    <div class="whole">
<img src="imgs/back.jpg" />
    <div class="mask"></div>
</div>
<div class="b">
<p>
登录失败！<br />
如有疑问请咨询管理员<br />
I<br />
v<br />
我一直问我自己我以后能做什么。<br />
事实上我根本不需要，我只需要静静等待着。<br />
因为，生活，一半是回忆、一半时继续。<br />

<pre><code>        &lt;span id=&quot;num&quot;&gt;&lt;/span&gt;秒后自动跳转到主页
</code></pre>
</p>
<a class="new" href="http://199604.com">Go to 记忆角落</a>
      <a class="old" href="login.jsp">首页</a>
</div>
  </body>
</html>

<p> </p>
<ul>
<li>  第七步：跑项目，看效果</li>
</ul>
<p>（1）输入账号：admin，密码：admin 将会跳转到页面如下： <img src="http://qn.199604.com/ser4.jpg"> （2）输入错误的账号或错误的密码，将会跳转到页面如下： <img src="http://qn.199604.com/ser5.jpg"> 其他的功能你可以去尝试！ 下面是整个MVC的代码还有素材 <a href="http://qn.199604.com/MyProject.zip">点击下载</a></p>
<hr>
<p>这是小菜鸟半小时的作品，就是一些效果那些老师没有要求所以我就简单的接收数据就OK了。这个MVC是无数据库版的，嗯尽情的喷我挑转页面没有CSS和HTML且都很垃圾！其实我真的挺垃圾的!好了我现在就洗洗睡了！晚安了我的基友们!</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
        <tag>jsp</tag>
        <tag>MVC</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx笔记</title>
    <url>/1662/</url>
    <content><![CDATA[<h4 id="一、Nginx-简介"><a href="#一、Nginx-简介" class="headerlink" title="一、Nginx 简介"></a>一、Nginx 简介</h4><h5 id="1-什么是-Nginx"><a href="#1-什么是-Nginx" class="headerlink" title="1.什么是 Nginx?"></a>1.<strong>什么是 Nginx?</strong></h5><p>Nginx（engine x）是一款轻量级的 Web 服务器 、反向代理服务器及电子邮件（IMAP/POP3）代理服务器。 <img src="http://qn.199604.com/typoraImg/687474703a2f2f64756e77752e746573742e757063646e2e6e65742f63732f7765622f6e67696e782f6e67696e782e6a7067217a70.jpg" alt="img"></p>
<h5 id="2-什么是反向代理？"><a href="#2-什么是反向代理？" class="headerlink" title="2.什么是反向代理？"></a>2.<strong>什么是反向代理？</strong></h5><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端。 此时代理服务器对外就表现为一个反向代理服务器，如下图： <img src="http://qn.199604.com/typoraImg/640.png" alt="图片"></p>
<h4 id="二、Nginx-入门"><a href="#二、Nginx-入门" class="headerlink" title="二、Nginx 入门"></a>二、Nginx 入门</h4><blockquote>
<p>详细安装方法请参考：<a href="https://github.com/dunwu/nginx-tutorial/blob/master/docs/nginx-ops.md">Nginx 运维</a></p>
</blockquote>
<p>nginx 的使用比较简单，就是几条命令。 常用到的命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -s stop       快速关闭Nginx，可能不保存相关信息，并迅速终止web服务。</span><br><span class="line">nginx -s quit       平稳关闭Nginx，保存相关信息，有安排的结束web服务。</span><br><span class="line">nginx -s reload     因改变了Nginx相关配置，需要重新加载配置而重载。</span><br><span class="line">nginx -s reopen     重新打开日志文件。</span><br><span class="line">nginx -c filename   为 Nginx 指定一个配置文件，来代替缺省的。</span><br><span class="line">nginx -t            不运行，仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件。</span><br><span class="line">nginx -v            显示 nginx 的版本。</span><br><span class="line">nginx -V            显示 nginx 的版本，编译器版本和配置参数。</span><br></pre></td></tr></table></figure>

<h4 id="三、Nginx-实战"><a href="#三、Nginx-实战" class="headerlink" title="三、Nginx 实战"></a>三、Nginx 实战</h4><p>我始终认为，各种开发工具的配置还是结合实战来讲述，会让人更易理解。</p>
<h5 id="Http反向代理"><a href="#Http反向代理" class="headerlink" title="Http反向代理"></a>Http反向代理</h5><p>我们先实现一个小目标：不考虑复杂的配置，仅仅是完成一个 http 反向代理。 <code>nginx.conf</code> 配置文件如下：</p>
<blockquote>
<p>注：<code>conf/nginx.conf</code> 是 nginx 的默认配置文件。你也可以使用 nginx -c 指定你的配置文件</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#运行用户</span><br><span class="line">#user  nginx;</span><br><span class="line"></span><br><span class="line">#启动进程,通常设置成和cpu的数量相等</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#全局错误日志</span><br><span class="line">error_log  /var/log/nginx/error.log;</span><br><span class="line">error_log  /var/log/nginx/warn.log warn;</span><br><span class="line">error_log  /var/log/nginx/notice.log  notice;</span><br><span class="line">error_log  /var/log/nginx/info.log  info;</span><br><span class="line"></span><br><span class="line">#PID文件，记录当前启动的nginx的进程ID</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">#工作模式及连接数上限</span><br><span class="line">events &#123;</span><br><span class="line">#单个后台worker process进程的最大并发链接数</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span><br><span class="line">http &#123;</span><br><span class="line">    #设定mime类型(邮件支持类型),类型由mime.types文件定义</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">#设定日志</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">#连接超时时间</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">#gzip压缩开关</span><br><span class="line">    gzip  on;</span><br><span class="line">    </span><br><span class="line">    #允许客户端请求的最大单文件字节数</span><br><span class="line">    client_max_body_size 50m; </span><br><span class="line">    </span><br><span class="line">    #设定实际的服务器列表</span><br><span class="line">    upstream demo_server1&#123;</span><br><span class="line">        server 127.0.0.1:8085;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #引用/etc/nginx/conf.d/下的*.conf文件</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>/etc/nginx/conf.d/下的*.conf文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#HTTP服务器</span><br><span class="line">server &#123;</span><br><span class="line">#监听8088端口，80端口是知名端口号，用于HTTP协议</span><br><span class="line">        listen       8088;</span><br><span class="line">        </span><br><span class="line">        #定义使用www.xx.com访问</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">#编码格式</span><br><span class="line">        charset utf-8;</span><br><span class="line">        #charset koi8-r;</span><br><span class="line">        </span><br><span class="line">        #代理配置参数</span><br><span class="line">        proxy_connect_timeout 180;</span><br><span class="line">        proxy_send_timeout 180;</span><br><span class="line">        proxy_read_timeout 180;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Forwarder-For $remote_addr;</span><br><span class="line"></span><br><span class="line">#设定日志格式</span><br><span class="line">access_log    /var/log/nginx/access.log;</span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">#反向代理的路径（和upstream绑定），location 后面设置映射的路径</span><br><span class="line">        location / &#123;</span><br><span class="line">        #指向webapp的目录</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">            #首页</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            </span><br><span class="line">            #proxy_pass http://zp_server1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">#设定查看api的地址</span><br><span class="line">location /api/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1:8085/api/;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#静态文件，nginx自己处理</span><br><span class="line">        location ~ ^/(imagesjavascriptjscssflashmediastatic)/ &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">            #root D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp\views;</span><br><span class="line">            #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span><br><span class="line">            expires 30d;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        #禁止访问 .htxxx 文件</span><br><span class="line">        location ~ /\.ht &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h5 id="Https反向代理"><a href="#Https反向代理" class="headerlink" title="Https反向代理"></a>Https反向代理</h5><p>一些对安全性要求比较高的站点，可能会使用 HTTPS（一种使用 ssl 通信标准的安全 HTTP 协议）。 这里不科普 HTTP 协议和 SSL 标准。但是，使用 nginx 配置 https 需要知道几点：</p>
<ul>
<li>  HTTPS 的固定端口号是 443，不同于 HTTP 的 80 端口</li>
<li>  SSL 标准需要引入安全证书，所以在 nginx.conf 中你需要指定证书和它对应的 key</li>
</ul>
<p>其他和 http 反向代理基本一样，只是在 <code>Server</code> 部分配置有些不同。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#HTTP服务器</span><br><span class="line">  server &#123;</span><br><span class="line">      #监听443端口。443为知名端口号，主要用于HTTPS协议</span><br><span class="line">      listen       443 ssl;</span><br><span class="line"></span><br><span class="line">      #定义使用www.xx.com访问</span><br><span class="line">      server_name  localhost;</span><br><span class="line"></span><br><span class="line">      #ssl证书文件位置(常见证书文件格式为：crt/pem)</span><br><span class="line">      ssl_certificate      cert.pem;</span><br><span class="line">      #ssl证书key位置</span><br><span class="line">      ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">      #ssl配置参数（选择性配置）</span><br><span class="line">      ssl_session_cache    shared:SSL:1m;</span><br><span class="line">      ssl_session_timeout  5m;</span><br><span class="line">      #数字签名，此处使用MD5</span><br><span class="line">      ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">      ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line">          root   /usr/share/nginx/html;</span><br><span class="line">          index  index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h5 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h5><p>前面的例子中，代理仅仅指向一个服务器。 但是，网站在实际运营过程中，大部分都是以集群的方式运行，这时需要使用负载均衡来分流。 nginx 也可以实现简单的负载均衡功能。 <img src="http://qn.199604.com/typoraImg/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210124225931.png" alt="微信图片_20210124225931"> 假设这样一个应用场景：将应用部署在 192.168.1.11:80、192.168.1.12:80、192.168.1.13:80 三台 Linux 环境的服务器上。网站域名叫 <a href="http://www.baidu.com/">www.baidu.com</a>，公网 IP 为 192.168.1.11。 在公网 IP 所在的服务器上部署 Nginx，对所有请求做负载均衡处理（下面例子中使用的是加权轮询策略）。 nginx.conf 配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    #设定mime类型,类型由mime.type文件定义</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    #设定日志格式</span><br><span class="line">    access_log    /var/log/nginx/access.log;</span><br><span class="line"></span><br><span class="line">    #设定负载均衡的服务器列表</span><br><span class="line">    upstream load_balance_server &#123;</span><br><span class="line">        #weigth参数表示权值，权值越高被分配到的几率越大</span><br><span class="line">        server 192.168.1.11:80   weight=5;</span><br><span class="line">        server 192.168.1.12:80   weight=1;</span><br><span class="line">        server 192.168.1.13:80   weight=6;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   #HTTP服务器</span><br><span class="line">   server &#123;</span><br><span class="line">        #侦听80端口</span><br><span class="line">        listen       80;</span><br><span class="line"></span><br><span class="line">        #定义使用www.xx.com访问</span><br><span class="line">        server_name  www.baidu.com;</span><br><span class="line"></span><br><span class="line">        #对所有请求进行负载均衡请求</span><br><span class="line">        location / &#123;</span><br><span class="line">            root        /usr/share/nginx/html;                 #定义服务器的默认网站根目录位置</span><br><span class="line">            index       index.html index.htm;  #定义首页索引文件的名称</span><br><span class="line">            proxy_pass  http://load_balance_server ;#请求转向load_balance_server 定义的服务器列表</span><br><span class="line"></span><br><span class="line">            #以下是一些反向代理的配置(可选择性配置)</span><br><span class="line">            #proxy_redirect off;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span><br><span class="line">            proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">            proxy_connect_timeout 90;          #nginx跟后端服务器连接超时时间(代理连接超时)</span><br><span class="line">            proxy_send_timeout 90;             #后端服务器数据回传时间(代理发送超时)</span><br><span class="line">            proxy_read_timeout 90;             #连接成功后，后端服务器响应时间(代理接收超时)</span><br><span class="line">            proxy_buffer_size 4k;              #设置代理服务器（nginx）保存用户头信息的缓冲区大小</span><br><span class="line">            proxy_buffers 4 32k;               #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span><br><span class="line">            proxy_busy_buffers_size 64k;       #高负荷下缓冲大小（proxy_buffers*2）</span><br><span class="line">            proxy_temp_file_write_size 64k;    #设定缓存文件夹大小，大于这个值，将从upstream服务器传</span><br><span class="line"></span><br><span class="line">            client_max_body_size 10m;          #允许客户端请求的最大单文件字节数</span><br><span class="line">            client_body_buffer_size 128k;      #缓冲区代理缓冲用户端请求的最大字节数</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h5><p>Nginx 提供了多种负载均衡策略，让我们来一一了解一下：</p>
<h6 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream bck_testing_01 &#123;</span><br><span class="line">  # 默认所有服务器权重为 1</span><br><span class="line">  server 192.168.250.220:8080;</span><br><span class="line">  server 192.168.250.221:8080;</span><br><span class="line">  server 192.168.250.222:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream bck_testing_01 &#123;</span><br><span class="line">  server 192.168.250.220:8080   weight=3;</span><br><span class="line">  server 192.168.250.221:8080     ;         # default weight=1</span><br><span class="line">  server 192.168.250.222:8080     ;        # default weight=1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="最少连接数"><a href="#最少连接数" class="headerlink" title="最少连接数"></a>最少连接数</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream bck_testing_01 &#123;</span><br><span class="line">  least_conn;</span><br><span class="line"></span><br><span class="line">  # with default weight for all (weight=1)</span><br><span class="line">  server 192.168.250.220:8080;</span><br><span class="line">  server 192.168.250.221:8080;</span><br><span class="line">  server 192.168.250.222:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="加权最少连接数"><a href="#加权最少连接数" class="headerlink" title="加权最少连接数"></a>加权最少连接数</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream bck_testing_01 &#123;</span><br><span class="line">  least_conn;</span><br><span class="line"></span><br><span class="line">  server 192.168.250.220:8080   weight=3;</span><br><span class="line">  server 192.168.250.221:8080   ;           # default weight=1</span><br><span class="line">  server 192.168.250.222:8080   ;           # default weight=1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="Ip-Hash"><a href="#Ip-Hash" class="headerlink" title="Ip Hash"></a>Ip Hash</h6><p>通过客户端请求ip进行hash，再通过hash值选择后端server 当你服务端的一个特定url路径会被同一个用户连续访问时，如果负载均衡策略还是轮询的话，那该用户的多次访问会被打到各台服务器上，这显然并不高效（会建立多次http链接等问题）。甚至考虑一种极端情况，用户需要分片上传文件到服务器下，然后再由服务器将分片合并，这时如果用户的请求到达了不同的服务器，那么分片将存储于不同的服务器目录中，导致无法将分片合并。所以，此类场景可以考虑采用nginx提供的ip_hash策略。既能满足每个用户请求到同一台服务器，又能满足不同用户之间负载均衡。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream bck_testing_01 &#123;</span><br><span class="line">  ip_hash;</span><br><span class="line"></span><br><span class="line">  # with default weight for all (weight=1)</span><br><span class="line">  server 192.168.250.220:8080;</span><br><span class="line">  server 192.168.250.221:8080;</span><br><span class="line">  server 192.168.250.222:8080 down;#表示下线的意思</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="普通Hash（Url-Hash）"><a href="#普通Hash（Url-Hash）" class="headerlink" title="普通Hash（Url Hash）"></a>普通Hash（Url Hash）</h6><p>通过请求url进行hash，再通过hash值选择后端server 一般来讲，要用到urlhash，是要配合缓存命中来使用。举一个我遇到的实例：有一个服务器集群A，需要对外提供文件下载，由于文件上传量巨大，没法存储到服务器磁盘中，所以用到了第三方云存储来做文件存储。服务器集群A收到客户端请求之后，需要从云存储中下载文件然后返回，为了省去不必要的网络带宽和下载耗时，在服务器集群A上做了一层临时缓存（缓存一个月）。由于是服务器集群，所以同一个资源多次请求，可能会到达不同的服务器上，导致不必要的多次下载，缓存命中率不高，以及一些资源时间的浪费。在此类场景下，为了使得缓存命中率提高，很适合使用url_hash策略，同一个url（也就是同一个资源请求）会到达同一台机器，一旦缓存住了资源，再此收到请求，就可以从缓存中读取，既减少了带宽，也减少的下载时间。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream bck_testing_01 &#123;</span><br><span class="line">  hash $request_uri;</span><br><span class="line"></span><br><span class="line">  # with default weight for all (weight=1)</span><br><span class="line">  server 192.168.250.220:8080;</span><br><span class="line">  server 192.168.250.221:8080;</span><br><span class="line">  server 192.168.250.222:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="多个webapp的配置"><a href="#多个webapp的配置" class="headerlink" title="多个webapp的配置"></a>多个webapp的配置</h5><p>当一个网站功能越来越丰富时，往往需要将一些功能相对独立的模块剥离出来，独立维护。这样的话，通常，会有多个 webapp。 举个例子：假如 <a href="http://www.baidu.com.com/">www.baidu.com.com</a> 站点有好几个 webapp，finance（金融）、product（产品）、admin（用户中心）。 访问这些应用的方式通过上下文(context)来进行区分:</p>
<ul>
<li>  <a href="http://www.baidu.com.com/finance/">www.baidu.com.com/finance/</a></li>
<li>  <a href="http://www.baidu.com.com/product/">www.baidu.com.com/product/</a></li>
<li>  <a href="http://www.baidu.com.com/admin/">www.baidu.com.com/admin/</a></li>
</ul>
<p>我们知道，http 的默认端口号是 80，如果在一台服务器上同时启动这 3 个 webapp 应用，都用 80 端口，肯定是不成的。所以，这三个应用需要分别绑定不同的端口号。 那么，问题来了，用户在实际访问 <a href="http://www.baidu.com/">www.baidu.com</a> 站点时，访问不同 webapp，总不会还带着对应的端口号去访问吧。所以，你再次需要用到反向代理来做处理。 配置也不难，来看看怎么做吧：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    #此处省略一些基本配置</span><br><span class="line"></span><br><span class="line">    upstream product_server&#123;</span><br><span class="line">        server www.baidu.com:8081;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    upstream admin_server&#123;</span><br><span class="line">        server www.baidu.com:8082;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    upstream finance_server&#123;</span><br><span class="line">        server www.baidu.com:8083;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        #此处省略一些基本配置</span><br><span class="line">        #默认指向product的server</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://product_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /product/&#123;</span><br><span class="line">            proxy_pass http://product_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /admin/ &#123;</span><br><span class="line">            proxy_pass http://admin_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /finance/ &#123;</span><br><span class="line">            proxy_pass http://finance_server;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="静态站点配置"><a href="#静态站点配置" class="headerlink" title="静态站点配置"></a>静态站点配置</h5><p>有时候，我们需要配置静态站点(即 html 文件和一堆静态资源)。 举例来说：如果所有的静态资源都放在了 <code>/usr/share/nginx/html</code> 目录下，我们只需要在 <code>nginx.conf</code> 中指定首页以及这个站点的 host 即可。 配置如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript image/jpeg image/gif image/png;</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  location;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root /usr/share/nginx/html;</span><br><span class="line">            index index.html;</span><br><span class="line">            #转发任何请求到 index.html</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时，在本地浏览器访问 location ，就可以访问静态站点了。</p>
<h5 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h5><p>web 领域开发中，经常采用前后端分离模式。这种模式下，前端和后端分别是独立的 web 应用程序，例如：后端是 Java 程序，前端是 React 或 Vue 应用。 各自独立的 web app 在互相访问时，势必存在跨域问题。解决跨域问题一般有两种思路：</p>
<h6 id="1-CORS"><a href="#1-CORS" class="headerlink" title="1.CORS"></a>1.CORS</h6><p>在后端服务器设置 HTTP 响应头，把你需要允许访问的域名加入 <code>Access-Control-Allow-Origin</code> 中.</p>
<h6 id="2-jsonp"><a href="#2-jsonp" class="headerlink" title="2.jsonp"></a>2.jsonp</h6><p>把后端根据请求，构造 json 数据，并返回，前端用 jsonp 跨域。 这两种思路，本文不展开讨论。 需要说明的是，nginx 根据第一种思路，也提供了一种解决跨域的解决方案。 举例：<a href="http://www.baidu.com/">www.baidu.com</a> 网站是由一个前端 app ，一个后端 app 组成的。前端端口号为 9000， 后端端口号为 8080。 前端和后端如果使用 http 进行交互时，请求会被拒绝，因为存在跨域问题。来看看，nginx 是怎么解决的吧： 首先，在 enable-cors.conf 文件中设置 cors ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># allow origin list</span><br><span class="line">set $ACAO &#x27;*&#x27;;</span><br><span class="line"></span><br><span class="line"># set single origin</span><br><span class="line">if ($http_origin ~* (www.helloworld.com)$) &#123;</span><br><span class="line">  set $ACAO $http_origin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($cors = &quot;trueget&quot;) &#123;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Origin&#x27; &quot;$http_origin&quot;;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS&#x27;;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">  set $cors &quot;$&#123;cors&#125;options&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($request_method = &#x27;GET&#x27;) &#123;</span><br><span class="line">  set $cors &quot;$&#123;cors&#125;get&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($request_method = &#x27;POST&#x27;) &#123;</span><br><span class="line">  set $cors &quot;$&#123;cors&#125;post&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接下来，在你的服务器中 <code>include enable-cors.conf</code> 来引入跨域配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ----------------------------------------------------</span><br><span class="line"># 此文件为项目 nginx 配置片段</span><br><span class="line"># 可以直接在 nginx config 中 include（推荐）</span><br><span class="line"># 或者 copy 到现有 nginx 中，自行配置</span><br><span class="line"># www.baidu.com 域名需配合 dns hosts 进行配置</span><br><span class="line"># 其中，api 开启了 cors，需配合本目录下另一份配置文件</span><br><span class="line"># ----------------------------------------------------</span><br><span class="line">upstream front_server&#123;</span><br><span class="line">  server www.baidu.com:9000;</span><br><span class="line">&#125;</span><br><span class="line">upstream api_server&#123;</span><br><span class="line">  server www.baidu.com:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name  www.baidu.com;</span><br><span class="line"></span><br><span class="line">  location ~ ^/api/ &#123;</span><br><span class="line">    include enable-cors.conf;</span><br><span class="line">    proxy_pass http://api_server;</span><br><span class="line">    rewrite &quot;^/api/(.*)$&quot; /$1 break;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location ~ ^/ &#123;</span><br><span class="line">    proxy_pass http://front_server;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="四、Nginx-问题集"><a href="#四、Nginx-问题集" class="headerlink" title="四、Nginx 问题集"></a>四、Nginx 问题集</h4><h5 id="Nginx-出现大量-TIME-WAIT"><a href="#Nginx-出现大量-TIME-WAIT" class="headerlink" title="Nginx 出现大量 TIME_WAIT"></a>Nginx 出现大量 TIME_WAIT</h5><p>检测TIME_WAIT状态语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@izf8zf4p0dwlngmnn6hinkz conf.d]# netstat -n  awk &#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span><br><span class="line">SYN_RECV 7</span><br><span class="line">ESTABLISHED 756</span><br><span class="line">FIN_WAIT1 21</span><br><span class="line">SYN_SENT 3</span><br><span class="line">TIME_WAIT 2000</span><br></pre></td></tr></table></figure>

<p>状态解析：</p>
<ul>
<li>  <code>CLOSED</code> - 无连接是活动的或正在进行</li>
<li>  <code>LISTEN</code> - 服务器在等待进入呼叫</li>
<li>  <code>SYN_RECV</code> - 一个连接请求已经到达，等待确认</li>
<li>  <code>SYN_SENT</code> - 应用已经开始，打开一个连接</li>
<li>  <code>ESTABLISHED</code> - 正常数据传输状态</li>
<li>  <code>FIN_WAIT1</code> - 应用说它已经完成</li>
<li>  <code>FIN_WAIT2</code> - 另一边已同意释放</li>
<li>  <code>ITMED_WAIT</code> - 等待所有分组死掉</li>
<li>  <code>CLOSING</code> - 两边同时尝试关闭</li>
<li>  <code>TIME_WAIT</code> - 另一边已初始化一个释放</li>
<li>  <code>LAST_ACK</code> - 等待所有分组死掉</li>
</ul>
<p>解决办法 执行 <code>vim /etc/sysctl.conf</code>，并添加下面字段：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br></pre></td></tr></table></figure>

<p>执行 /<code>sbin/sysctl -p</code> 让修改生效。</p>
<h5 id="上传文件大小限制"><a href="#上传文件大小限制" class="headerlink" title="上传文件大小限制"></a>上传文件大小限制</h5><p>问题现象： 显示错误信息：<strong>413 Request Entity Too Large</strong>。 意思是请求的内容过大，浏览器不能正确显示。常见的情况是发送 <code>POST</code> 请求来上传大文件。 解决办法：</p>
<ul>
<li>  可以在 <code>http</code> 模块中设置：<code>client_max_body_size 20m;</code></li>
<li>  可以在 <code>server</code> 模块中设置：<code>client_max_body_size 20m;</code></li>
<li>  可以在 <code>location</code> 模块中设置：<code>client_max_body_size 20m;</code></li>
</ul>
<p>三者区别是：</p>
<ul>
<li>  如果文大小限制设置在 <code>http</code> 模块中，则对所有 Nginx 收到的请求。</li>
<li>  如果文大小限制设置在 <code>server</code> 模块中，则只对该 <code>server</code> 收到的请求生效。</li>
<li>  如果文大小限制设置在 <code>location</code> 模块中，则只对匹配了 <code>location</code> 路由规则的请求生效。</li>
</ul>
<h5 id="请求时间限制"><a href="#请求时间限制" class="headerlink" title="请求时间限制"></a>请求时间限制</h5><p>问题现象： 请求时间较长，链接被重置页面刷新。常见的情况是：上传、下载大文件。 解决办法： 修改超时时间   参考： <a href="https://dunwu.github.io/nginx-tutorial/#/README">https://dunwu.github.io/nginx-tutorial/#/README</a></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>postgreSQL之数据类型</title>
    <url>/1353/</url>
    <content><![CDATA[<h2 id="postgreSQL之数据类型"><a href="#postgreSQL之数据类型" class="headerlink" title="postgreSQL之数据类型"></a>postgreSQL之数据类型</h2><p>以下是自己结合postgreSQL文档手册总结整理的入门手札，如有不严谨，请到官方文档手册查看：<a href="http://www.postgres.cn/docs/10/index.html">http://www.postgres.cn/docs/10/index.html</a></p>
<h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><p>pgsql支持的数字类型有整数类型、用户指定精度类型、浮点型、和serial类型(自增)</p>
<p>数字类型图：<br><img src="http://qn.199604.com/20191019224145.jpg" alt="image"></p>
<h4 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h4><p>smallint、integer、bigint都是整数类型，存储一定范围的整数，超出范围将会报错。</p>
<p>PS：</p>
<blockquote>
<p>smallint字段定义时可以写成int2,integer比smallint大，所以是int4(最常用的整数类型），同理bigint可写成int8.</p>
</blockquote>
<h4 id="任意精度数字"><a href="#任意精度数字" class="headerlink" title="任意精度数字"></a>任意精度数字</h4><p>类型decimal和numeric是等效的,可以存储非常多位的数字.<br>比如numeric的语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.numberic(precision,scale)</span><br><span class="line">precision:指全部位数，必须为正整数--&gt;（精度）</span><br><span class="line">scale:指小数部分的数字位数，可以为0或者整数--&gt;(标度)</span><br><span class="line">2.numberic(precision)</span><br><span class="line">3.numberic</span><br></pre></td></tr></table></figure>
<p>PS:</p>
<blockquote>
<p>numberic类型性能比整数类型性能低，所以如果两种类型都能满足需求，建议使用整数类型。<br>最后：为了增强程序的移植性，最好同时指定numeric的精度和标度。</p>
</blockquote>
<h4 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h4><p>数据类型real和double precision是指浮点数据类型(不准确的、变精度的数字类型),real支持4字节，double precision是支持8字节。</p>
<h4 id="序列号类型（官方文档–-gt-序数类型）"><a href="#序列号类型（官方文档–-gt-序数类型）" class="headerlink" title="序列号类型（官方文档–&gt;序数类型）"></a>序列号类型（官方文档–&gt;序数类型）</h4><p>smallserial、serial和bigserial是自增类型，但严格意义上它不是真正的类型，它们只是为了创建唯一标识符列而存在的方便符号（类似其它一些数据库中支持的AUTO_INCREMENT属性），如下代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE test_serial (</span><br><span class="line">    id serial,</span><br><span class="line">    flag text</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>等价于以下语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE SEQUENCE test_serial_seq;</span><br><span class="line">CREATE TABLE test_serial (</span><br><span class="line">    id integer NOT NULL DEFAULT,</span><br><span class="line">    flag text</span><br><span class="line">    nextval(&#x27;test_serial_seq&#x27;)</span><br><span class="line">);</span><br><span class="line">ALTER SEQUENCE test_serial_seq OWNED BY test_serial.id;</span><br></pre></td></tr></table></figure>
<p>简单的说，就是mysql自增(AUTO_INCREMENT).</p>
<p>PS:</p>
<blockquote>
<p>类型名serial和serial4是等效的, 两个都创建integer列。</p>
<p>类型名bigserial和serial8也一样，只不过它们创建一个 bigint列。</p>
<p>类型名smallserial和serial2也以相同方式工作，只不过它们创建一个smallint列。</p>
</blockquote>
<hr>
<h3 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h3><p>字符串类型图，如下：<br><img src="http://qn.199604.com/zifuchuang_20191019233548.jpg" alt="image"></p>
<p>character varying(n)存储的是变长字符类型， 其中n是一个正整数，如果存储的字符串长度超过n会报错喔,但是如果存储字符串比n小的话，character varying(n)只会存储实际的字符串。</p>
<p>character(n)存储的是定长字符串，如果存储的字符串长度超过n会报错，比它小则会用空白填充…</p>
<p>说了那么多，还是用一个例子吧：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建一个表</span><br><span class="line">create table test_char(col1 varchar(4),col2 char(4));</span><br><span class="line">---</span><br><span class="line">插入数据</span><br><span class="line">insert into test_char(col1,col2) values(&#x27;a&#x27;,&#x27;a&#x27;);</span><br><span class="line">---</span><br><span class="line">比较字符串长度</span><br><span class="line">select char_length(col1),char_length(col2) from test_char;</span><br><span class="line">----</span><br><span class="line">char_length	char_length1</span><br><span class="line">1	1</span><br><span class="line">----</span><br><span class="line">比较字符串占用的字节数</span><br><span class="line">select octet_length(col1),octet_length(col2) from test_char</span><br><span class="line">----</span><br><span class="line">octet_length	octet_length1</span><br><span class="line">1	4</span><br></pre></td></tr></table></figure>
<p>PS:</p>
<blockquote>
<p>varchar(n)和char(n)的概念分别是character varying(n)和character(n)的别名。没有长度声明词的character等效于character(1)。如果不带长度说明词使用character varying，那么该类型接受任何长度的串。后者是一个PostgreSQL的扩展。</p>
</blockquote>
<p>text字符类型，它可以存储任何长度的串。和没有什么字符长度的character varying(n)字符类型几乎没有差别。</p>
<p>PS:</p>
<blockquote>
<p>这三种类型之间没有性能差别，只不过是在使用填充空白的类型的时候需要更多存储尺寸，以及在存储到一个有长度约束的列时需要少量额外CPU周期来检查长度。虽然在某些其它的数据库系统里，character(n)有一定的性能优势，但在PostgreSQL里没有。事实上，character(n)通常是这三种类型之中最慢的一个，因为它需要额外的存储开销。在大多数情况下，应该使用text或者character varying.（postgreSQL支持字符串存储的最长字串大概是 1 GB）</p>
</blockquote>
<hr>
<h3 id="日期-时间类型"><a href="#日期-时间类型" class="headerlink" title="日期/时间类型"></a>日期/时间类型</h3><p>PostgreSQL 支持 SQL标准中所有的日期和时间类型。<br>具体如下：<br><img src="http://qn.199604.com/time_20191020001423.jpg" alt="image"><br>PS:</p>
<blockquote>
<p>SQL要求只写timestamp等效于timestamp without time zone，并且PostgreSQL鼓励这种行为。timestamptz被接受为timestamp with time zone的一种简写，这是一种PostgreSQL的扩展</p>
</blockquote>
<p>time、timestamp和interval接受一个可选的精度值 p，这个精度值声明在秒域中小数点之后保留的位数。缺省情况下，在精度上没有明确的边界，p允许的范围是从 0 到 6。</p>
<p>说了那么多，我们还是用实例说话吧…<br>首先先用系统自带的now()函数，now()函数显示是当前时间，并返回类型为：timestamp with time zone,如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select now();</span><br><span class="line">---</span><br><span class="line">now</span><br><span class="line">2019-10-20 00:23:25.288484+08</span><br></pre></td></tr></table></figure>
<p>如果需要转到timestamp without time zone,并且不需要保留小数点，如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select now()::timestamp(0) without time zone;</span><br><span class="line">----</span><br><span class="line">now</span><br><span class="line">2019-10-20 00:24:42</span><br></pre></td></tr></table></figure>
<p>转换到date类型，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select now()::date;</span><br><span class="line">----</span><br><span class="line">now</span><br><span class="line">2019-10-20</span><br></pre></td></tr></table></figure>
<p>转到time without time zone，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select now()::time without time zone;</span><br><span class="line">----</span><br><span class="line">now</span><br><span class="line">00:26:33.661496</span><br></pre></td></tr></table></figure>
<p>最后就是interval类型，其实interval类型是有一个附加选项，它可以通过写下面之一的短语来限制存储的fields的集合：</p>
<blockquote>
<p>year,month,day,hour,minute,second,yeartomonth,daytohour,daytominute,daytosecond,hourtominute,hourtosecond,minutetosecond</p>
</blockquote>
<p>又来举个例子吧：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select now(),now()+interval &#x27;1 day&#x27;</span><br><span class="line">----</span><br><span class="line">now	?column?</span><br><span class="line">2019-10-20 00:29:49.530872+08	2019-10-21 00:29:49.530872+08</span><br></pre></td></tr></table></figure>
<p>剩下那么多附加选项，自己测吧…</p>
<hr>
<h3 id="布尔类型-boolean–-gt-true-false"><a href="#布尔类型-boolean–-gt-true-false" class="headerlink" title="布尔类型(boolean–&gt;true/false)"></a>布尔类型(boolean–&gt;true/false)</h3><p>“真(true)”状态的有效文字值是:</p>
<blockquote>
<p>TRUE、’t’、’true’、’y’、’yes’、’on’、’1’</p>
</blockquote>
<p>而对于“假”状态有效文字值是:</p>
<blockquote>
<p>FALSE、’f’、’false’、’n’、’no’、’off’、’0’</p>
</blockquote>
<p>知道我们的通病都不喜欢看文字，而看例子，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test_boolean(col1 boolean,col2 boolean);</span><br><span class="line">----</span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;true&#x27;,&#x27;false&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;true&#x27;,&#x27;false&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;t&#x27;,&#x27;f&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;TRUE&#x27;,&#x27;FALSE&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;yes&#x27;,&#x27;no&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;y&#x27;,&#x27;n&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(&#x27;1&#x27;,&#x27;0&#x27;);</span><br><span class="line"></span><br><span class="line">insert into test_boolean(col1,col2) values(null,null);</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line"></span><br><span class="line">select * from test_boolean</span><br><span class="line">----</span><br><span class="line">col1	col2</span><br><span class="line">t	f</span><br><span class="line">t	f</span><br><span class="line">t	f</span><br><span class="line">t	f</span><br><span class="line">t	f</span><br><span class="line">t	f</span><br><span class="line">	</span><br><span class="line">ps:一共有7条数据，其中布尔类型可以支持插入null字符...</span><br></pre></td></tr></table></figure>

<h3 id="网络地址类型"><a href="#网络地址类型" class="headerlink" title="网络地址类型"></a>网络地址类型</h3><p>PostgreSQL提供用于存储 IPv4、IPv6 和 MAC 地址的数据类型,使用网络地址类型存储IP地址会优于字符类型，因为网络地址类型一方面会对数据合法性进行检查，另一方面也提供了网络地址类型相关的函数，方便我们使用吧..</p>
<p>网络地址数据类型，如下：<br><img src="http://qn.199604.com/ipaddr_20191020111715.jpg" alt="image"></p>
<p>inet或者cidr类型存储的网络地址格式都为：address(地址)/y(网络掩码的位数)</p>
<p>address就是表示ipv4或者ipv6的网络地址<br>y表示网络掩码位数，如果y省略，则对于ipv4的网络掩码就为32，而ipv6则为128,因此该值表示只有一台主机。</p>
<p>如果y显示时，如果y部分指定一个单台主机，它将不会被显示出来。</p>
<p>之前说了inet或者cidr类型都会对数据合法性进行检查，如果数据不合法则会报错，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SQL]select &#x27;192.168.1.1000&#x27;::inet</span><br><span class="line"></span><br><span class="line">[Err] ERROR:  invalid input syntax for type inet: &quot;192.168.1.1000&quot;</span><br><span class="line">LINE 1: select &#x27;192.168.1.1000&#x27;::inet</span><br></pre></td></tr></table></figure>

<p>inet和cidr网络类型也存在一定的差别哒。</p>
<p>1.cidr类型的输出默认带子网掩码信息，而inte不一定。如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;192.168.1.100&#x27;::cidr,&#x27;192.168.1.100&#x27;::inet</span><br><span class="line">---</span><br><span class="line">cidr	inet</span><br><span class="line">192.168.1.100/32	192.168.1.100</span><br><span class="line">---------</span><br><span class="line">select &#x27;192.168.1.100/32&#x27;::cidr,&#x27;192.168.1.100/32&#x27;::inet</span><br><span class="line">---</span><br><span class="line">cidr	inet</span><br><span class="line">192.168.1.100/32	192.168.1.100</span><br><span class="line">--------</span><br><span class="line">select &#x27;192.168.1.100&#x27;::cidr,&#x27;192.168.1.100/16&#x27;::inet</span><br><span class="line">---</span><br><span class="line">cidr	inet</span><br><span class="line">192.168.1.100/32	192.168.1.100/16</span><br></pre></td></tr></table></figure>
<p>2.cidr类型对ip地址和子网掩码合法性进行检查，而inte不会，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SQL]select &#x27;192.168.1.100/8&#x27;::cidr</span><br><span class="line"></span><br><span class="line">[Err] ERROR:  invalid cidr value: &quot;192.168.1.100/8&quot;</span><br><span class="line">LINE 1: select &#x27;192.168.1.100/8&#x27;::cidr</span><br><span class="line">               ^</span><br><span class="line">DETAIL:  Value has bits set to right of mask.</span><br><span class="line"></span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">select &#x27;192.168.1.100/8&#x27;::inet</span><br><span class="line">----</span><br><span class="line">inet</span><br><span class="line">192.168.1.100/8</span><br></pre></td></tr></table></figure>
<p>从上面的例子看出，cidr比inet网络类型更加得严谨吧…<br>简单的说就是：</p>
<blockquote>
<p>inet和cidr类型之间的本质区别是inet接受右边有非零位的网络掩码， 而cidr不接受。 例如，192.168.1.100/24对inet来说是有效的， 但是cidr来说是无效的。</p>
</blockquote>
<hr>
<p><img src="http://qn.199604.com/addr_lizi_20191020114415.png" alt="image"></p>
<p>顺便记录一下网络操作符吧，因为oracle和mysql我自己也没有用到过网络类型的。<br><img src="http://qn.199604.com/ipadrr_azf_20191020114050.jpg" alt="image"></p>
<hr>
<h5 id="macaddr和macaddr8"><a href="#macaddr和macaddr8" class="headerlink" title="macaddr和macaddr8"></a>macaddr和macaddr8</h5><p>macaddr和macaddr8是存储mac地址。对于mac的介绍更多可到：<a href="http://www.postgres.cn/docs/10/datatype-net-types.html">http://www.postgres.cn/docs/10/datatype-net-types.html</a></p>
<hr>
<h3 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h3><p>postgreSQL支持一维数据or多维数组，常用的数据类型为数字类型的数组和字符串的数据，但也支持其他类型的吧?枚举类型、复合类型数组…怎么支持自己去全球最大的同性恋交友网站看官网手册..(github.com)</p>
<p>怎么用数组类型?噗,开玩笑我也不会…<br>那么我们就从怎么创建表开始吧..如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test_array(</span><br><span class="line">id INTEGER,</span><br><span class="line">array_i INTEGER[],</span><br><span class="line">arrat_t TEXT[]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>从创表语句看，INTEGER[]就是Integer类型的一维数组了，同样，TEXT[]就是text类型的一维数据.<br>什么?那么二维数组呢???喵喵喵???不就是:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test_array_er(</span><br><span class="line">id INTEGER,</span><br><span class="line">array_i INTEGER[][],</span><br><span class="line">arrat_t TEXT[][]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>数组类型插入数据有两种方式，一种方式使用花括号的方式，即：{}–&gt;:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;&#123;val1 delim val2 delim ...&#125;&#x27;</span><br></pre></td></tr></table></figure>
<p>说白了，就是将数组元素值用花括号“{}”包围并用delim分隔符分开，delim分隔符常用基本上为逗号?如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;1,2,3&#125;&#x27;</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">&#123;1,2,3&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>往表test_array 插入一条数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into test_array(id,array_i,arrat_t)</span><br><span class="line">values (1,&#x27;&#123;1,2,3&#125;&#x27;,&#x27;&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;&#125;&#x27;);</span><br></pre></td></tr></table></figure>
<p>往数组插入的第二张方式为使用array关键字，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select array[1,2,3]</span><br><span class="line">----</span><br><span class="line">array</span><br><span class="line">&#123;1,2,3&#125;</span><br></pre></td></tr></table></figure>
<p>往表test_array 插入一条数组：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into test_array(id,array_i,arrat_t)</span><br><span class="line">values (2,array[1,2,3],array[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]);</span><br></pre></td></tr></table></figure>
<p>同理，如果插入多维数组表，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into test_array_er(id,array_i,arrat_t)</span><br><span class="line">values (1,&#x27;&#123;&#123;1,2,3&#125;,&#123;4,5,6&#125;&#125;&#x27;,&#x27;&#123;&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;&#125;,&#123;&quot;e&quot;,&quot;f&quot;,&quot;g&quot;&#125;&#125;&#x27;);</span><br><span class="line">----</span><br><span class="line">insert into test_array_er(id,array_i,arrat_t)</span><br><span class="line">values (2,array[[1,2,3],[4,5,6]],array[[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;],[&#x27;e&#x27;,&#x27;f&#x27;,&#x27;g&#x27;]]);</span><br></pre></td></tr></table></figure>

<h5 id="查询数组元素"><a href="#查询数组元素" class="headerlink" title="查询数组元素"></a>查询数组元素</h5><p>如果要查询数组所有元素值，只需要查询数组字段名称即可，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select array_i from test_array</span><br></pre></td></tr></table></figure>
<p>数组元素的引用可以通过方括号[]方式，数据下表卸载方括号里面，范围基本上是1到n，n为数组长度，超出数据范围返回null，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select array_i[1],arrat_t[1] from test_array</span><br></pre></td></tr></table></figure>

<h4 id="数组元素追加、删除、更新"><a href="#数组元素追加、删除、更新" class="headerlink" title="数组元素追加、删除、更新"></a>数组元素追加、删除、更新</h4><p>数组元素的追加使用array_append函数，如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array_append(anyarray,anyelement)</span><br></pre></td></tr></table></figure>
<p>使用array_append函数向数组末端追加一个元素，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select array_append(array[1,2,3],4)</span><br><span class="line">----</span><br><span class="line">array_append</span><br><span class="line">&#123;1,2,3,4&#125;</span><br></pre></td></tr></table></figure>
<p>也可以用array_prepend函数，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT array_prepend(1, ARRAY[2,3]);</span><br><span class="line">----</span><br><span class="line">array_prepend</span><br><span class="line">&#123;1,2,3&#125;</span><br></pre></td></tr></table></figure>
<p>更可以用array_cat函数，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT array_cat(ARRAY[1,2], ARRAY[3,4]);</span><br><span class="line">----</span><br><span class="line">array_cat</span><br><span class="line">&#123;1,2,3,4&#125;</span><br><span class="line"></span><br><span class="line">------------</span><br><span class="line">SELECT array_cat(ARRAY[[1,2],[3,4]], ARRAY[5,6]);</span><br><span class="line">array_cat</span><br><span class="line">---------------------</span><br><span class="line"> &#123;&#123;1,2&#125;,&#123;3,4&#125;,&#123;5,6&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>array_prepend、array_append或array_cat这三个函数区别就是前两个函数仅支持一维数组，但array_cat支持多维数组。</p>
<p>数据元素追加到数组也可以使用||，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select array[1,2,3]||4</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">&#123;1,2,3,4&#125;</span><br></pre></td></tr></table></figure>
<p>数组元素的删除是使用array_remove函数，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array_remove(anyarray,anyelement)</span><br></pre></td></tr></table></figure>
<p>使用array_remove函数将移除数组中等于给定值的所有数组元素，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select array[1,2,2,3],array_remove(array[1,2,2,3],2)</span><br><span class="line">----</span><br><span class="line">array	array_remove</span><br><span class="line">&#123;1,2,2,3&#125;	&#123;1,3&#125;</span><br></pre></td></tr></table></figure>

<h5 id="修改数组"><a href="#修改数组" class="headerlink" title="修改数组"></a>修改数组</h5><p>1.一个数组值可以被整个替换：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">花括号的语法方式：</span><br><span class="line">update test_array set array_i=&#x27;&#123;2,3,4&#125;&#x27; where id =1</span><br><span class="line">----</span><br><span class="line">使用ARRAY表达式语法:</span><br><span class="line">update test_array set array_i=array[1,3,4] where id =1</span><br></pre></td></tr></table></figure>
<p>2.可以在一个元素上被更新，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update test_array set array_i[3] = 5 where id =1</span><br></pre></td></tr></table></figure>
<p>或者是二维数组的切片更新，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update test_array_er set array_i[1:2] = array[[7,8,9],[8,9,10]] where id =1</span><br></pre></td></tr></table></figure>
<p>数组元素丰富的操作符：<br><img src="http://qn.199604.com/array_czf_20191020192536.jpg" alt="image"></p>
<p>想要更深入了解数组类型，可到：<a href="http://www.postgres.cn/docs/10/arrays.html">http://www.postgres.cn/docs/10/arrays.html</a> </p>
<hr>
<h3 id="json-jsonb类型"><a href="#json-jsonb类型" class="headerlink" title="json/jsonb类型"></a>json/jsonb类型</h3><h4 id="json类型"><a href="#json类型" class="headerlink" title="json类型"></a>json类型</h4><p>开始我们先用一个简单的json例子开启json类型的使用吧~</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;&#x27;::json</span><br><span class="line">----</span><br><span class="line">json</span><br><span class="line">&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;</span><br></pre></td></tr></table></figure>
<p>这就是强转的一个小例子，我们还是创一个表吧，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test_json(</span><br><span class="line">id serial primary key,</span><br><span class="line">name json</span><br><span class="line">);</span><br><span class="line">insert into test_json(name) values(&#x27;&#123;&quot;col1&quot;:1,&quot;col2&quot;:&quot;glj&quot;,&quot;col3&quot;:&quot;male&quot;&#125;&#x27;);</span><br><span class="line">insert into test_json(name) values(&#x27;&#123;&quot;col1&quot;:2,&quot;col2&quot;:&quot;hhm&quot;,&quot;col3&quot;:&quot;famale&quot;&#125;&#x27;);</span><br><span class="line">select * from test_json;</span><br><span class="line">-----</span><br><span class="line">id	name</span><br><span class="line">1	&#123;&quot;col1&quot;:1,&quot;col2&quot;:&quot;glj&quot;,&quot;col3&quot;:&quot;male&quot;&#125;</span><br><span class="line">2	&#123;&quot;col1&quot;:2,&quot;col2&quot;:&quot;hhm&quot;,&quot;col3&quot;:&quot;famale&quot;&#125;</span><br></pre></td></tr></table></figure>
<h5 id="查询json数据"><a href="#查询json数据" class="headerlink" title="查询json数据"></a>查询json数据</h5><p>通过‘-&gt;’操作符可以查询json数据的键值，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select name-&gt;&#x27;col2&#x27; from test_json</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">&quot;glj&quot;</span><br><span class="line">&quot;hhm&quot;</span><br></pre></td></tr></table></figure>
<p>如果想以文本格式返回json字段的键值可以使用<br>‘-&gt;&gt;’操作符，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select name-&gt;&gt;&#x27;col2&#x27; from test_json</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">glj</span><br><span class="line">hhm</span><br></pre></td></tr></table></figure>
<h5 id="jsonb键-值得追加、删除、更新"><a href="#jsonb键-值得追加、删除、更新" class="headerlink" title="jsonb键/值得追加、删除、更新"></a>jsonb键/值得追加、删除、更新</h5><p>jsonb键/值追加可以通过||操作符，例如增加sex的键值，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23&#125;&#x27;::jsonb || &#x27;&#123;&quot;sex&quot;:&quot;male&quot;&#125;&#x27;::jsonb</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">&#123;&quot;age&quot;: 23, &quot;sex&quot;: &quot;male&quot;, &quot;name&quot;: &quot;glj&quot;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>jsonb键/值删除有两种办法，一是通过操作符-删除，另一种是通过操作符 #- 删除指定的键/值，<br>首先先通过操作符- 删除键/值，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;&#x27;::jsonb - &#x27;sex&#x27;</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">&#123;&quot;age&quot;: 23, &quot;name&quot;: &quot;glj&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>再通过操作符 #- 删除键/值，但这种方式通常用于嵌套json的数据删除的，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 	&#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;contact&quot;:&#123;&quot;phone&quot;:&quot;123456779&quot;,&quot;blogAddrUrl&quot;:&quot;http://199604.com&quot;&#125;&#125;&#x27;::jsonb #- &#x27;&#123;contact,phone&#125;&#x27;</span><br><span class="line">------</span><br><span class="line">?column?</span><br><span class="line">&#123;&quot;name&quot;: &quot;glj&quot;, &quot;contact&quot;: &#123;&quot;blogAddrUrl&quot;: &quot;http://199604.com&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>方式二：删除contact中位置1的键/值，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 	&#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;contact&quot;:[&quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]&#125;&#x27;::jsonb #- &#x27;&#123;contact,1&#125;&#x27;</span><br><span class="line">-----</span><br><span class="line">?column?</span><br><span class="line">&#123;&quot;name&quot;: &quot;glj&quot;, &quot;contact&quot;: [&quot;0&quot;, &quot;2&quot;, &quot;3&quot;]&#125;</span><br></pre></td></tr></table></figure>
<p>jsonb键/值更新也有两种办法，一种是操作符 ||的方式，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:22&#125;&#x27;::jsonb || &#x27;&#123;&quot;age&quot;:23&#125;&#x27;</span><br><span class="line">----</span><br><span class="line">?column?</span><br><span class="line">&#123;&quot;age&quot;: 24, &quot;name&quot;: &quot;glj&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>这种方式其实就是之前的笔记，jsonb的特点后续会说，就是jsonb会删除重复的键，仅仅保留最后一个。</p>
<p>第二种方式是通过jsonb_set函数，语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jsonb_set(target jsonb, path text[], new_value jsonb[, create_missing boolean])</span><br></pre></td></tr></table></figure>
<p>target 指的是jsonb源数据，path 指的是路径<br>new_value指的是更新后的键值，create_missing当为true是，表示键不存在时，则添加，反之，不存在就不添加，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select jsonb_set(&#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:22&#125;&#x27;::jsonb,&#x27;&#123;age&#125;&#x27;,&#x27;&quot;23&quot;&#x27;::jsonb,false)</span><br><span class="line">----</span><br><span class="line">jsonb_set</span><br><span class="line">&#123;&quot;age&quot;: &quot;23&quot;, &quot;name&quot;: &quot;glj&quot;&#125;</span><br></pre></td></tr></table></figure>


<h5 id="json和jsonb的对比差异"><a href="#json和jsonb的对比差异" class="headerlink" title="json和jsonb的对比差异"></a>json和jsonb的对比差异</h5><p>JSON 数据类型：json 和 jsonb，其实他们基本上一样哒，主要的实际区别之一是效率。因为json存储格式为文本，而jsonb存储格式为二进制，由于存储格式的不同使得两者数据类型的处理效率就不太一样了吧~json类型以文本存储并且存储的内容和输入的内容是一样的，当要检索json数据的时候，就需要重新解析，而jsonb不需要，因为它是二进制形式存储，已经解析好了数据，所以检索jsonb的数据时，不要重新解析即可查找，因此json写入比jsonb快，而检索时候就相反了。</p>
<p>说了那么多，我们用一个简单的例子看看吧，例如就是jsonb的输出键顺畅就和输入时候不一样，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;&#x27;::jsonb,&#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;&#x27;::json</span><br><span class="line">------</span><br><span class="line">jsonb	json</span><br><span class="line">&#123;&quot;age&quot;: 23, &quot;sex&quot;: &quot;male&quot;, &quot;name&quot;: &quot;glj&quot;&#125;	&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>从上面看出来，json输入和输出顺序是一致的。<br>还有，就是jsonb类型会去掉输入数据中的键值空格，而json则不会，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;name&quot;:&quot;glj&quot;,        &quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;&#x27;::jsonb,</span><br><span class="line">&#x27;&#123;&quot;name&quot;:&quot;glj&quot;,       &quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;&#x27;::json</span><br><span class="line">---------</span><br><span class="line">jsonb	json</span><br><span class="line">&#123;&quot;age&quot;: 23, &quot;sex&quot;: &quot;male&quot;, &quot;name&quot;: &quot;glj&quot;&#125;	&#123;&quot;name&quot;:&quot;glj&quot;,       &quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>最最最后，就是jsonb会删除重复的键，仅仅保留最后一个，如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;,&quot;name&quot;:&quot;hhm&quot;&#125;&#x27;::jsonb,</span><br><span class="line">&#x27;&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;,&quot;name&quot;:&quot;hhm&quot;&#125;&#x27;::json</span><br><span class="line">-----</span><br><span class="line">jsonb	json</span><br><span class="line">&#123;&quot;age&quot;: 23, &quot;sex&quot;: &quot;male&quot;, &quot;name&quot;: &quot;hhm&quot;&#125;	&#123;&quot;name&quot;:&quot;glj&quot;,&quot;age&quot;:23,&quot;sex&quot;:&quot;male&quot;,&quot;name&quot;:&quot;hhm&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>看看吧，上面的name重复了，但是jsonb它是保留了最后一个name键的值，而json鸡巴没有这个校验的规则，它是你输入啥它就给你输出啥..所以建议尽量使用jsonb，而除非是那种鸡巴特殊需求除外，比如就是对json的键值有顺序要求的..（这句话说得好没有底气，因为我tm也是小白..）</p>
<h4 id="jsonb和json操作符"><a href="#jsonb和json操作符" class="headerlink" title="jsonb和json操作符"></a>jsonb和json操作符</h4><p><img src="http://qn.199604.com/json_czf1_20191020213424.png" alt="image"><br><img src="http://qn.199604.com/json_czf2_20191020213424.png" alt="image"></p>
<p>想要更深入了解json/jsonb类型，可到：<a href="http://www.postgres.cn/docs/10/datatype-json.html">http://www.postgres.cn/docs/10/datatype-json.html</a></p>
<hr>
<p>码字挺辛苦哒~要不打个赏吧，郭良俊博客：<a href="https://199604.com/">https://199604.com/</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>pgsql</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>redis集群部署</title>
    <url>/1645/</url>
    <content><![CDATA[<h3 id="redis集群部署"><a href="#redis集群部署" class="headerlink" title="redis集群部署"></a>redis集群部署</h3><p>部署前提： 高可用Redis cluster集群(20)，主从+哨兵一台机器70个服务，每个服务限定10G内存(记得是运存，不是数据盘) 解读：69个服务+1个哨兵</p>
<h4 id="1-上传redis安装包"><a href="#1-上传redis安装包" class="headerlink" title="1.上传redis安装包"></a>1.上传redis安装包</h4><p>这里用得是redis-4.0.10.tar.gz 上传文件到 目录<code>/usr/local</code> 或者外网直接下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-4.0.10.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="2-安装GCC"><a href="#2-安装GCC" class="headerlink" title="2.安装GCC"></a>2.安装GCC</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install gcc</span><br></pre></td></tr></table></figure>

<h4 id="3-解压并安装"><a href="#3-解压并安装" class="headerlink" title="3.解压并安装"></a>3.解压并安装</h4><p>解压</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar xzvf redis-4.0.10.tar.gz</span><br></pre></td></tr></table></figure>

<p>编译安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>建立一个软连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s redis-4.0.10 redis</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：如出现/bin/sh: cc: command not found错误，是因为没有安装 gcc 环境，使用命令yum install gcc安装 gcc 环境即可</p>
</blockquote>
<p><img src="http://qn.199604.com/typoraImg/image-20210206000512881.png" alt="image-20210206000512881"> 测试是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入redis目录</span><br><span class="line">cd redis</span><br><span class="line"># 执行启动命令 读取默认配置文件</span><br><span class="line">redis-server ./redis.conf </span><br><span class="line"># 连接测试，默认是6379</span><br><span class="line">redis-cli -p 6379</span><br></pre></td></tr></table></figure>

<h4 id="4-搭建redis主从构造搭建"><a href="#4-搭建redis主从构造搭建" class="headerlink" title="4.搭建redis主从构造搭建"></a>4.搭建redis主从构造搭建</h4><p>Redis集群不用安装多个Redis,只需复制多个配置文件,修改即可</p>
<h5 id="4-1-搭建redis-master-只在master主机安装即可"><a href="#4-1-搭建redis-master-只在master主机安装即可" class="headerlink" title="4.1.搭建redis master(只在master主机安装即可)"></a>4.1.搭建redis master(只在master主机安装即可)</h5><p>创建redis master 配置文件存放的文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/redis/redis_master</span><br><span class="line"></span><br><span class="line">cd /data/redis/redis_master</span><br></pre></td></tr></table></figure>

<p>redis_master的配置文件如下 vi <strong>redis.conf</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 守护进程模式</span><br><span class="line">daemonize yes </span><br><span class="line"># pid file 修改pidfile指向路径</span><br><span class="line">pidfile /data/redis/redis_master/redis_master.pid</span><br><span class="line"></span><br><span class="line"># 监听端口</span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"># TCP接收队列长度，受/proc/sys/net/core/somaxconn和tcp_max_syn_backlog这两个内核参数的影响</span><br><span class="line">#tcp-backlog 511</span><br><span class="line"></span><br><span class="line"># 一个客户端空闲多少秒后关闭连接(0代表禁用，永不关闭)</span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"># 如果非零，则设置SO_KEEPALIVE选项来向空闲连接的客户端发送ACK</span><br><span class="line">tcp-keepalive 60</span><br><span class="line"></span><br><span class="line"># 指定服务器调试等级</span><br><span class="line"># 可能值：</span><br><span class="line"># debug （大量信息，对开发/测试有用）</span><br><span class="line"># verbose （很多精简的有用信息，但是不像debug等级那么多）</span><br><span class="line"># notice （适量的信息，基本上是你生产环境中需要的）</span><br><span class="line"># warning （只有很重要/严重的信息会记录下来）</span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"># 指明日志文件名</span><br><span class="line">logfile &quot;/data/redis/redis_master/redis6379.log&quot;</span><br><span class="line"></span><br><span class="line"># 设置数据库个数</span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"># 会在指定秒数和数据变化次数之后把数据库写到磁盘上</span><br><span class="line"># 900秒（15分钟）之后，且至少1次变更</span><br><span class="line"># 300秒（5分钟）之后，且至少10次变更</span><br><span class="line"># 60秒之后，且至少10000次变更</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 默认如果开启RDB快照(至少一条save指令)并且最新的后台保存失败，Redis将会停止接受写操作</span><br><span class="line"># 这将使用户知道数据没有正确的持久化到硬盘，否则可能没人注意到并且造成一些灾难</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"># 当导出到 .rdb 数据库时是否用LZF压缩字符串对象</span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"># 版本5的RDB有一个CRC64算法的校验和放在了文件的最后。这将使文件格式更加可靠。</span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"># 持久化数据库的文件名</span><br><span class="line">dbfilename dump-master.rdb</span><br><span class="line"></span><br><span class="line"># 工作目录</span><br><span class="line">dir /data/redis/redis_master/</span><br><span class="line"></span><br><span class="line"># 当master服务设置了密码保护时，slav服务连接master的密码</span><br><span class="line">masterauth testmaster123</span><br><span class="line"></span><br><span class="line"># 当一个slave失去和master的连接，或者同步正在进行中，slave的行为可以有两种：</span><br><span class="line">#</span><br><span class="line"># 1) 如果 slave-serve-stale-data 设置为 &quot;yes&quot; (默认值)，slave会继续响应客户端请求，</span><br><span class="line"># 可能是正常数据，或者是过时了的数据，也可能是还没获得值的空数据。</span><br><span class="line"># 2) 如果 slave-serve-stale-data 设置为 &quot;no&quot;，slave会回复&quot;正在从master同步</span><br><span class="line"># （SYNC with master in progress）&quot;来处理各种请求，除了 INFO 和 SLAVEOF 命令。</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"># 你可以配置salve实例是否接受写操作。可写的slave实例可能对存储临时数据比较有用(因为写入salve</span><br><span class="line"># 的数据在同master同步之后将很容易被删除</span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"># 是否在slave套接字发送SYNC之后禁用 TCP_NODELAY？</span><br><span class="line"># 如果你选择“yes”Redis将使用更少的TCP包和带宽来向slaves发送数据。但是这将使数据传输到slave</span><br><span class="line"># 上有延迟，Linux内核的默认配置会达到40毫秒</span><br><span class="line"># 如果你选择了 &quot;no&quot; 数据传输到salve的延迟将会减少但要使用更多的带宽</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"># slave的优先级是一个整数展示在Redis的Info输出中。如果master不再正常工作了，哨兵将用它来</span><br><span class="line"># 选择一个slave提升=升为master。</span><br><span class="line"># 优先级数字小的salve会优先考虑提升为master，所以例如有三个slave优先级分别为10，100，25，</span><br><span class="line"># 哨兵将挑选优先级最小数字为10的slave。</span><br><span class="line"># 0作为一个特殊的优先级，标识这个slave不能作为master，所以一个优先级为0的slave永远不会被</span><br><span class="line"># 哨兵挑选提升为master</span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 密码验证</span><br><span class="line"># 警告：因为Redis太快了，所以外面的人可以尝试每秒150k的密码来试图破解密码。这意味着你需要</span><br><span class="line"># 一个高强度的密码，否则破解太容易了</span><br><span class="line">requirepass testmaster123</span><br><span class="line"></span><br><span class="line"># redis实例最大占用内存，不要用比设置的上限更多的内存。一旦内存使用达到上限，Redis会根据选定的回收策略（参见：</span><br><span class="line"># maxmemmory-policy）删除key</span><br><span class="line">maxmemory 10gb</span><br><span class="line"></span><br><span class="line"># 最大内存策略：如果达到内存限制了，Redis如何选择删除key。你可以在下面五个行为里选：</span><br><span class="line"># volatile-lru -&gt; 根据LRU算法删除带有过期时间的key。</span><br><span class="line"># allkeys-lru -&gt; 根据LRU算法删除任何key。</span><br><span class="line"># volatile-random -&gt; 根据过期设置来随机删除key, 具备过期时间的key。 </span><br><span class="line"># allkeys-&gt;random -&gt; 无差别随机删, 任何一个key。 </span><br><span class="line"># volatile-ttl -&gt; 根据最近过期时间来删除（辅以TTL）, 这是对于有过期时间的key </span><br><span class="line"># noeviction -&gt; 谁也不删，直接在写操作时返回错误。</span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line"></span><br><span class="line"># 默认情况下，Redis是异步的把数据导出到磁盘上。这种模式在很多应用里已经足够好，但Redis进程</span><br><span class="line"># 出问题或断电时可能造成一段时间的写操作丢失(这取决于配置的save指令)。</span><br><span class="line">#</span><br><span class="line"># AOF是一种提供了更可靠的替代持久化模式，例如使用默认的数据写入文件策略（参见后面的配置）</span><br><span class="line"># 在遇到像服务器断电或单写情况下Redis自身进程出问题但操作系统仍正常运行等突发事件时，Redis</span><br><span class="line"># 能只丢失1秒的写操作。</span><br><span class="line">#</span><br><span class="line"># AOF和RDB持久化能同时启动并且不会有问题。</span><br><span class="line"># 如果AOF开启，那么在启动时Redis将加载AOF文件，它更能保证数据的可靠性。</span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"># aof文件名</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"># fsync() 系统调用告诉操作系统把数据写到磁盘上，而不是等更多的数据进入输出缓冲区。</span><br><span class="line"># 有些操作系统会真的把数据马上刷到磁盘上；有些则会尽快去尝试这么做。</span><br><span class="line">#</span><br><span class="line"># Redis支持三种不同的模式：</span><br><span class="line">#</span><br><span class="line"># no：不要立刻刷，只有在操作系统需要刷的时候再刷。比较快。</span><br><span class="line"># always：每次写操作都立刻写入到aof文件。慢，但是最安全。</span><br><span class="line"># everysec：每秒写一次。折中方案。 </span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"># 如果AOF的同步策略设置成 &quot;always&quot; 或者 &quot;everysec&quot;，并且后台的存储进程（后台存储或写入AOF</span><br><span class="line"># 日志）会产生很多磁盘I/O开销。某些Linux的配置下会使Redis因为 fsync()系统调用而阻塞很久。</span><br><span class="line"># 注意，目前对这个情况还没有完美修正，甚至不同线程的 fsync() 会阻塞我们同步的write(2)调用。</span><br><span class="line">#</span><br><span class="line"># 为了缓解这个问题，可以用下面这个选项。它可以在 BGSAVE 或 BGREWRITEAOF 处理时阻止主进程进行fsync()。</span><br><span class="line"># </span><br><span class="line"># 这就意味着如果有子进程在进行保存操作，那么Redis就处于&quot;不可同步&quot;的状态。</span><br><span class="line"># 这实际上是说，在最差的情况下可能会丢掉30秒钟的日志数据。（默认Linux设定）</span><br><span class="line"># </span><br><span class="line"># 如果你有延时问题把这个设置成&quot;yes&quot;，否则就保持&quot;no&quot;，这是保存持久数据的最安全的方式。</span><br><span class="line">no-appendfsync-on-rewrite yes</span><br><span class="line"></span><br><span class="line"># 自动重写AOF文件</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># AOF文件可能在尾部是不完整的（这跟system关闭有问题，尤其是mount ext4文件系统时</span><br><span class="line"># 没有加上data=ordered选项。只会发生在os死时，redis自己死不会不完整）。</span><br><span class="line"># 那redis重启时load进内存的时候就有问题了。</span><br><span class="line"># 发生的时候，可以选择redis启动报错，并且通知用户和写日志，或者load尽量多正常的数据。</span><br><span class="line"># 如果aof-load-truncated是yes，会自动发布一个log给客户端然后load（默认）。</span><br><span class="line"># 如果是no，用户必须手动redis-check-aof修复AOF文件才可以。</span><br><span class="line"># 注意，如果在读取的过程中，发现这个aof是损坏的，服务器也是会退出的，</span><br><span class="line"># 这个选项仅仅用于当服务器尝试读取更多的数据但又找不到相应的数据时。</span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"># Lua 脚本的最大执行时间，毫秒为单位</span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"># Redis慢查询日志可以记录超过指定时间的查询</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"># 这个长度没有限制。只是要主要会消耗内存。你可以通过 SLOWLOG RESET 来回收内存。</span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line"># redis延时监控系统在运行时会采样一些操作，以便收集可能导致延时的数据根源。</span><br><span class="line"># 通过 LATENCY命令 可以打印一些图样和获取一些报告，方便监控</span><br><span class="line"># 这个系统仅仅记录那个执行时间大于或等于预定时间（毫秒）的操作, </span><br><span class="line"># 这个预定时间是通过latency-monitor-threshold配置来指定的，</span><br><span class="line"># 当设置为0时，这个监控系统处于停止状态</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line"># Redis能通知 Pub/Sub 客户端关于键空间发生的事件，默认关闭</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line"># 当hash只有少量的entry时，并且最大的entry所占空间没有超过指定的限制时，会用一种节省内存的</span><br><span class="line"># 数据结构来编码。可以通过下面的指令来设定限制</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># 与hash似，数据元素较少的list，可以用另一种方式来编码从而节省大量空间。</span><br><span class="line"># 这种特殊的方式只有在符合下面限制时才可以用</span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># set有一种特殊编码的情况：当set数据全是十进制64位有符号整型数字构成的字符串时。</span><br><span class="line"># 下面这个配置项就是用来设置set使用这种编码来节省内存的最大长度。</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"># 与hash和list相似，有序集合也可以用一种特别的编码方式来节省大量空间。</span><br><span class="line"># 这种编码只适合长度和元素都小于下面限制的有序集合</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># HyperLogLog稀疏结构表示字节的限制。该限制包括</span><br><span class="line"># 16个字节的头。当HyperLogLog使用稀疏结构表示</span><br><span class="line"># 这些限制，它会被转换成密度表示。</span><br><span class="line"># 值大于16000是完全没用的，因为在该点</span><br><span class="line"># 密集的表示是更多的内存效率。</span><br><span class="line"># 建议值是3000左右，以便具有的内存好处, 减少内存的消耗</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"># 启用哈希刷新，每100个CPU毫秒会拿出1个毫秒来刷新Redis的主哈希表（顶级键值映射表）</span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"># 客户端的输出缓冲区的限制，可用于强制断开那些因为某种原因从服务器读取数据的速度不够快的客户端</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"># 默认情况下，“hz”的被设定为10。提高该值将在Redis空闲时使用更多的CPU时，但同时当有多个key</span><br><span class="line"># 同时到期会使Redis的反应更灵敏，以及超时可以更精确地处理</span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"># 当一个子进程重写AOF文件时，如果启用下面的选项，则文件每生成32M数据会被同步</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure>

<p>maxmemory 10gb ,即可限定服务限定10G内存(记得是运存，不是数据盘) 启动master</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server ./redis.conf</span><br></pre></td></tr></table></figure>

<p>查看下是否存在进程 6379</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@pod3-highapp-c-28 redis_master]# ps axugrep redis</span><br><span class="line">root     191460  0.0  0.0 112712   964 pts/1    S+   00:17   0:00 grep --color=auto redis</span><br><span class="line">root     227202 22.2  0.0 274336 61668 ?        Ssl  Feb03 736:51 redis-server *:6379</span><br></pre></td></tr></table></figure>

<p>在客户端做链接测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli  -p 6379 -a testmaster123</span><br><span class="line"></span><br><span class="line">#插入一条数据：</span><br><span class="line">set name hcxt</span><br><span class="line">#查询数据：</span><br><span class="line">get name</span><br><span class="line">退出：</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; set name hcxt</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;hcxt&quot;</span><br><span class="line">127.0.0.1:6379&gt; quit</span><br><span class="line">[root@pod3-highapp-c-28 redis_master]# </span><br></pre></td></tr></table></figure>

<blockquote>
<p>至此 redis_master 启动成功，能正常读写数据</p>
</blockquote>
<h5 id="4-2搭建redis-slave-所有机器"><a href="#4-2搭建redis-slave-所有机器" class="headerlink" title="4.2搭建redis slave(所有机器)"></a>4.2搭建redis slave(所有机器)</h5><p>创建redis slave 配置文件存放的文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/redis/redis_7000</span><br><span class="line">....</span><br><span class="line">mkdir -p /data/redis/redis_7068</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/image-20210206002909274.png" alt="image-20210206002909274"> 修改redis.conf配置文件 slave的配置和master基本一致，只需要修改相应的pidfile，端口，日志文件名，并配上master的地址和认证密码 配置文件如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 守护进程模式</span><br><span class="line">daemonize yes </span><br><span class="line"># pid file 修改pidfile指向路径</span><br><span class="line">pidfile /data/redis/redis_7000/redis_slave.pid</span><br><span class="line"></span><br><span class="line"># 监听端口</span><br><span class="line">port 7000</span><br><span class="line"></span><br><span class="line"># TCP接收队列长度，受/proc/sys/net/core/somaxconn和tcp_max_syn_backlog这两个内核参数的影响</span><br><span class="line">#tcp-backlog 511</span><br><span class="line"></span><br><span class="line"># 一个客户端空闲多少秒后关闭连接(0代表禁用，永不关闭)</span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"># 如果非零，则设置SO_KEEPALIVE选项来向空闲连接的客户端发送ACK</span><br><span class="line">tcp-keepalive 60</span><br><span class="line"></span><br><span class="line"># 指定服务器调试等级</span><br><span class="line"># 可能值：</span><br><span class="line"># debug （大量信息，对开发/测试有用）</span><br><span class="line"># verbose （很多精简的有用信息，但是不像debug等级那么多）</span><br><span class="line"># notice （适量的信息，基本上是你生产环境中需要的）</span><br><span class="line"># warning （只有很重要/严重的信息会记录下来）</span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"># 指明日志文件名</span><br><span class="line">logfile &quot;/data/redis/redis_7000/redis_slave.log&quot;</span><br><span class="line"></span><br><span class="line"># 设置数据库个数</span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"># 会在指定秒数和数据变化次数之后把数据库写到磁盘上</span><br><span class="line"># 900秒（15分钟）之后，且至少1次变更</span><br><span class="line"># 300秒（5分钟）之后，且至少10次变更</span><br><span class="line"># 60秒之后，且至少10000次变更</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 默认如果开启RDB快照(至少一条save指令)并且最新的后台保存失败，Redis将会停止接受写操作</span><br><span class="line"># 这将使用户知道数据没有正确的持久化到硬盘，否则可能没人注意到并且造成一些灾难</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"># 当导出到 .rdb 数据库时是否用LZF压缩字符串对象</span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"># 版本5的RDB有一个CRC64算法的校验和放在了文件的最后。这将使文件格式更加可靠。</span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"># 持久化数据库的文件名</span><br><span class="line">dbfilename dump-slave.rdb</span><br><span class="line"></span><br><span class="line"># 工作目录</span><br><span class="line">dir /data/redis/redis_7000/</span><br><span class="line"></span><br><span class="line"># 当master服务设置了密码保护时，slav服务连接master的密码</span><br><span class="line">masterauth testmaster123</span><br><span class="line"></span><br><span class="line"># 当一个slave失去和master的连接，或者同步正在进行中，slave的行为可以有两种：</span><br><span class="line">#</span><br><span class="line"># 1) 如果 slave-serve-stale-data 设置为 &quot;yes&quot; (默认值)，slave会继续响应客户端请求，</span><br><span class="line"># 可能是正常数据，或者是过时了的数据，也可能是还没获得值的空数据。</span><br><span class="line"># 2) 如果 slave-serve-stale-data 设置为 &quot;no&quot;，slave会回复&quot;正在从master同步</span><br><span class="line"># （SYNC with master in progress）&quot;来处理各种请求，除了 INFO 和 SLAVEOF 命令。</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"># 你可以配置salve实例是否接受写操作。可写的slave实例可能对存储临时数据比较有用(因为写入salve</span><br><span class="line"># 的数据在同master同步之后将很容易被删除</span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"># 是否在slave套接字发送SYNC之后禁用 TCP_NODELAY？</span><br><span class="line"># 如果你选择“yes”Redis将使用更少的TCP包和带宽来向slaves发送数据。但是这将使数据传输到slave</span><br><span class="line"># 上有延迟，Linux内核的默认配置会达到40毫秒</span><br><span class="line"># 如果你选择了 &quot;no&quot; 数据传输到salve的延迟将会减少但要使用更多的带宽</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"># slave的优先级是一个整数展示在Redis的Info输出中。如果master不再正常工作了，哨兵将用它来</span><br><span class="line"># 选择一个slave提升=升为master。</span><br><span class="line"># 优先级数字小的salve会优先考虑提升为master，所以例如有三个slave优先级分别为10，100，25，</span><br><span class="line"># 哨兵将挑选优先级最小数字为10的slave。</span><br><span class="line"># 0作为一个特殊的优先级，标识这个slave不能作为master，所以一个优先级为0的slave永远不会被</span><br><span class="line"># 哨兵挑选提升为master</span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 密码验证</span><br><span class="line"># 警告：因为Redis太快了，所以外面的人可以尝试每秒150k的密码来试图破解密码。这意味着你需要</span><br><span class="line"># 一个高强度的密码，否则破解太容易了</span><br><span class="line">requirepass testmaster123</span><br><span class="line"></span><br><span class="line"># redis实例最大占用内存，不要用比设置的上限更多的内存。一旦内存使用达到上限，Redis会根据选定的回收策略（参见：</span><br><span class="line"># maxmemmory-policy）删除key</span><br><span class="line">maxmemory 10gb</span><br><span class="line"></span><br><span class="line"># 最大内存策略：如果达到内存限制了，Redis如何选择删除key。你可以在下面五个行为里选：</span><br><span class="line"># volatile-lru -&gt; 根据LRU算法删除带有过期时间的key。</span><br><span class="line"># allkeys-lru -&gt; 根据LRU算法删除任何key。</span><br><span class="line"># volatile-random -&gt; 根据过期设置来随机删除key, 具备过期时间的key。 </span><br><span class="line"># allkeys-&gt;random -&gt; 无差别随机删, 任何一个key。 </span><br><span class="line"># volatile-ttl -&gt; 根据最近过期时间来删除（辅以TTL）, 这是对于有过期时间的key </span><br><span class="line"># noeviction -&gt; 谁也不删，直接在写操作时返回错误。</span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line"></span><br><span class="line"># 默认情况下，Redis是异步的把数据导出到磁盘上。这种模式在很多应用里已经足够好，但Redis进程</span><br><span class="line"># 出问题或断电时可能造成一段时间的写操作丢失(这取决于配置的save指令)。</span><br><span class="line">#</span><br><span class="line"># AOF是一种提供了更可靠的替代持久化模式，例如使用默认的数据写入文件策略（参见后面的配置）</span><br><span class="line"># 在遇到像服务器断电或单写情况下Redis自身进程出问题但操作系统仍正常运行等突发事件时，Redis</span><br><span class="line"># 能只丢失1秒的写操作。</span><br><span class="line">#</span><br><span class="line"># AOF和RDB持久化能同时启动并且不会有问题。</span><br><span class="line"># 如果AOF开启，那么在启动时Redis将加载AOF文件，它更能保证数据的可靠性。</span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"># aof文件名</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"># fsync() 系统调用告诉操作系统把数据写到磁盘上，而不是等更多的数据进入输出缓冲区。</span><br><span class="line"># 有些操作系统会真的把数据马上刷到磁盘上；有些则会尽快去尝试这么做。</span><br><span class="line">#</span><br><span class="line"># Redis支持三种不同的模式：</span><br><span class="line">#</span><br><span class="line"># no：不要立刻刷，只有在操作系统需要刷的时候再刷。比较快。</span><br><span class="line"># always：每次写操作都立刻写入到aof文件。慢，但是最安全。</span><br><span class="line"># everysec：每秒写一次。折中方案。 </span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"># 如果AOF的同步策略设置成 &quot;always&quot; 或者 &quot;everysec&quot;，并且后台的存储进程（后台存储或写入AOF</span><br><span class="line"># 日志）会产生很多磁盘I/O开销。某些Linux的配置下会使Redis因为 fsync()系统调用而阻塞很久。</span><br><span class="line"># 注意，目前对这个情况还没有完美修正，甚至不同线程的 fsync() 会阻塞我们同步的write(2)调用。</span><br><span class="line">#</span><br><span class="line"># 为了缓解这个问题，可以用下面这个选项。它可以在 BGSAVE 或 BGREWRITEAOF 处理时阻止主进程进行fsync()。</span><br><span class="line"># </span><br><span class="line"># 这就意味着如果有子进程在进行保存操作，那么Redis就处于&quot;不可同步&quot;的状态。</span><br><span class="line"># 这实际上是说，在最差的情况下可能会丢掉30秒钟的日志数据。（默认Linux设定）</span><br><span class="line"># </span><br><span class="line"># 如果你有延时问题把这个设置成&quot;yes&quot;，否则就保持&quot;no&quot;，这是保存持久数据的最安全的方式。</span><br><span class="line">no-appendfsync-on-rewrite yes</span><br><span class="line"></span><br><span class="line"># 自动重写AOF文件</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># AOF文件可能在尾部是不完整的（这跟system关闭有问题，尤其是mount ext4文件系统时</span><br><span class="line"># 没有加上data=ordered选项。只会发生在os死时，redis自己死不会不完整）。</span><br><span class="line"># 那redis重启时load进内存的时候就有问题了。</span><br><span class="line"># 发生的时候，可以选择redis启动报错，并且通知用户和写日志，或者load尽量多正常的数据。</span><br><span class="line"># 如果aof-load-truncated是yes，会自动发布一个log给客户端然后load（默认）。</span><br><span class="line"># 如果是no，用户必须手动redis-check-aof修复AOF文件才可以。</span><br><span class="line"># 注意，如果在读取的过程中，发现这个aof是损坏的，服务器也是会退出的，</span><br><span class="line"># 这个选项仅仅用于当服务器尝试读取更多的数据但又找不到相应的数据时。</span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"># Lua 脚本的最大执行时间，毫秒为单位</span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"># Redis慢查询日志可以记录超过指定时间的查询</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"># 这个长度没有限制。只是要主要会消耗内存。你可以通过 SLOWLOG RESET 来回收内存。</span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line"># redis延时监控系统在运行时会采样一些操作，以便收集可能导致延时的数据根源。</span><br><span class="line"># 通过 LATENCY命令 可以打印一些图样和获取一些报告，方便监控</span><br><span class="line"># 这个系统仅仅记录那个执行时间大于或等于预定时间（毫秒）的操作, </span><br><span class="line"># 这个预定时间是通过latency-monitor-threshold配置来指定的，</span><br><span class="line"># 当设置为0时，这个监控系统处于停止状态</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line"># Redis能通知 Pub/Sub 客户端关于键空间发生的事件，默认关闭</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line"># 当hash只有少量的entry时，并且最大的entry所占空间没有超过指定的限制时，会用一种节省内存的</span><br><span class="line"># 数据结构来编码。可以通过下面的指令来设定限制</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># 与hash似，数据元素较少的list，可以用另一种方式来编码从而节省大量空间。</span><br><span class="line"># 这种特殊的方式只有在符合下面限制时才可以用</span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># set有一种特殊编码的情况：当set数据全是十进制64位有符号整型数字构成的字符串时。</span><br><span class="line"># 下面这个配置项就是用来设置set使用这种编码来节省内存的最大长度。</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"># 与hash和list相似，有序集合也可以用一种特别的编码方式来节省大量空间。</span><br><span class="line"># 这种编码只适合长度和元素都小于下面限制的有序集合</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># HyperLogLog稀疏结构表示字节的限制。该限制包括</span><br><span class="line"># 16个字节的头。当HyperLogLog使用稀疏结构表示</span><br><span class="line"># 这些限制，它会被转换成密度表示。</span><br><span class="line"># 值大于16000是完全没用的，因为在该点</span><br><span class="line"># 密集的表示是更多的内存效率。</span><br><span class="line"># 建议值是3000左右，以便具有的内存好处, 减少内存的消耗</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"># 启用哈希刷新，每100个CPU毫秒会拿出1个毫秒来刷新Redis的主哈希表（顶级键值映射表）</span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"># 客户端的输出缓冲区的限制，可用于强制断开那些因为某种原因从服务器读取数据的速度不够快的客户端</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"># 默认情况下，“hz”的被设定为10。提高该值将在Redis空闲时使用更多的CPU时，但同时当有多个key</span><br><span class="line"># 同时到期会使Redis的反应更灵敏，以及超时可以更精确地处理</span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"># 当一个子进程重写AOF文件时，如果启用下面的选项，则文件每生成32M数据会被同步</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line"></span><br><span class="line"># 设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步</span><br><span class="line">slaveof 10.209.17.10 6379</span><br></pre></td></tr></table></figure>

<p>每个配置文件需要对应端口修改： #pid file 修改pidfile指向路径 pidfile /data/redis/redis_7000/redis_slave.pid #监听端口 port 7000 #指明日志文件名 logfile “/data/redis/redis_7000/redis_slave.log” #设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步 #slaveof 127.0.0.1 7001 slaveof 10.209.17.10 6379 #当master服务设置了密码保护时，slav服务连接master的密码 masterauth testmaster123 启动redis slave</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#今天配置文件主目录</span><br><span class="line">cd /data/redis</span><br><span class="line"></span><br><span class="line">redis-server ./redis_7000/redis.conf</span><br><span class="line">redis-server ./redis_7001/redis.conf</span><br><span class="line">redis-server ./redis_7002/redis.conf</span><br><span class="line">redis-server ./redis_7003/redis.conf</span><br><span class="line">redis-server ./redis_7004/redis.conf</span><br><span class="line">redis-server ./redis_7005/redis.conf</span><br><span class="line">redis-server ./redis_7006/redis.conf</span><br><span class="line">redis-server ./redis_7007/redis.conf</span><br><span class="line">redis-server ./redis_7008/redis.conf</span><br><span class="line">redis-server ./redis_7009/redis.conf</span><br><span class="line">redis-server ./redis_7010/redis.conf</span><br><span class="line">redis-server ./redis_7011/redis.conf</span><br><span class="line">redis-server ./redis_7012/redis.conf</span><br><span class="line">redis-server ./redis_7013/redis.conf</span><br><span class="line">redis-server ./redis_7014/redis.conf</span><br><span class="line">redis-server ./redis_7015/redis.conf</span><br><span class="line">redis-server ./redis_7016/redis.conf</span><br><span class="line">redis-server ./redis_7017/redis.conf</span><br><span class="line">redis-server ./redis_7018/redis.conf</span><br><span class="line">redis-server ./redis_7019/redis.conf</span><br><span class="line">redis-server ./redis_7020/redis.conf</span><br><span class="line">redis-server ./redis_7021/redis.conf</span><br><span class="line">redis-server ./redis_7022/redis.conf</span><br><span class="line">redis-server ./redis_7023/redis.conf</span><br><span class="line">redis-server ./redis_7024/redis.conf</span><br><span class="line">redis-server ./redis_7025/redis.conf</span><br><span class="line">redis-server ./redis_7026/redis.conf</span><br><span class="line">redis-server ./redis_7027/redis.conf</span><br><span class="line">redis-server ./redis_7028/redis.conf</span><br><span class="line">redis-server ./redis_7029/redis.conf</span><br><span class="line">redis-server ./redis_7030/redis.conf</span><br><span class="line">redis-server ./redis_7031/redis.conf</span><br><span class="line">redis-server ./redis_7032/redis.conf</span><br><span class="line">redis-server ./redis_7033/redis.conf</span><br><span class="line">redis-server ./redis_7034/redis.conf</span><br><span class="line">redis-server ./redis_7035/redis.conf</span><br><span class="line">redis-server ./redis_7036/redis.conf</span><br><span class="line">redis-server ./redis_7037/redis.conf</span><br><span class="line">redis-server ./redis_7038/redis.conf</span><br><span class="line">redis-server ./redis_7039/redis.conf</span><br><span class="line">redis-server ./redis_7040/redis.conf</span><br><span class="line">redis-server ./redis_7041/redis.conf</span><br><span class="line">redis-server ./redis_7042/redis.conf</span><br><span class="line">redis-server ./redis_7043/redis.conf</span><br><span class="line">redis-server ./redis_7044/redis.conf</span><br><span class="line">redis-server ./redis_7045/redis.conf</span><br><span class="line">redis-server ./redis_7046/redis.conf</span><br><span class="line">redis-server ./redis_7047/redis.conf</span><br><span class="line">redis-server ./redis_7048/redis.conf</span><br><span class="line">redis-server ./redis_7049/redis.conf</span><br><span class="line">redis-server ./redis_7050/redis.conf</span><br><span class="line">redis-server ./redis_7051/redis.conf</span><br><span class="line">redis-server ./redis_7052/redis.conf</span><br><span class="line">redis-server ./redis_7053/redis.conf</span><br><span class="line">redis-server ./redis_7054/redis.conf</span><br><span class="line">redis-server ./redis_7055/redis.conf</span><br><span class="line">redis-server ./redis_7056/redis.conf</span><br><span class="line">redis-server ./redis_7057/redis.conf</span><br><span class="line">redis-server ./redis_7058/redis.conf</span><br><span class="line">redis-server ./redis_7059/redis.conf</span><br><span class="line">redis-server ./redis_7060/redis.conf</span><br><span class="line">redis-server ./redis_7061/redis.conf</span><br><span class="line">redis-server ./redis_7062/redis.conf</span><br><span class="line">redis-server ./redis_7063/redis.conf</span><br><span class="line">redis-server ./redis_7064/redis.conf</span><br><span class="line">redis-server ./redis_7065/redis.conf</span><br><span class="line">redis-server ./redis_7066/redis.conf</span><br><span class="line">redis-server ./redis_7067/redis.conf</span><br><span class="line">redis-server ./redis_7068/redis.conf</span><br></pre></td></tr></table></figure>

<p>连接redis slave测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -p 7002 -a testmaster123</span><br><span class="line"></span><br><span class="line">[root@pod3-highapp-c-28 redis]# redis-cli -p 7002 -a testmaster123</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; option on the command line interface may not be safe.</span><br><span class="line">127.0.0.1:7002&gt; </span><br><span class="line">127.0.0.1:7002&gt; get name</span><br><span class="line">&quot;hcxt&quot;</span><br><span class="line">127.0.0.1:7002&gt; </span><br></pre></td></tr></table></figure>

<blockquote>
<p>至此 master slave 的主从关系也建立了 master中设置的key-value已经成功同步过来 连接maser机器，输入 Info replication 命令可以查看具体情况</p>
</blockquote>
<p>主从复制原理： 1.当从库和主库建立MS关系后,会向主数据库发送SYNC命令 2.主库接收到SYNC命令后会开始在后台保存快照(RDB持久化过程),并将期间接收到的写命令缓存起来 3.当快照完成后,主Redis会将快照文件和所有缓存的写命令发送给从Redis 4.从Redis接收到后,会载入快照文件并且执行收到的缓存的命令 5.之后,主Redis每当接收到写命令时就会将命令发送从Redis，从而保证数据的一致</p>
<h4 id="5-Redis-Sentinel-哨兵-部署–所有机器"><a href="#5-Redis-Sentinel-哨兵-部署–所有机器" class="headerlink" title="5.Redis Sentinel (哨兵)部署–所有机器"></a>5.Redis Sentinel (哨兵)部署–所有机器</h4><p>创建redis sentinel 配置文件存放的文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/redis/redis_sentinel</span><br><span class="line"></span><br><span class="line">cd /data/redis/redis_sentinel</span><br></pre></td></tr></table></figure>

<p>哨兵配置 sentinel.conf：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Example sentinel.conf</span><br><span class="line"></span><br><span class="line"># port &lt;sentinel-port&gt;</span><br><span class="line">port 26379</span><br><span class="line"></span><br><span class="line"># 守护进程模式</span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"># 指明日志文件名</span><br><span class="line">logfile &quot;/data/redis/redis_sentinel/sentinel.log&quot;</span><br><span class="line"></span><br><span class="line"># 工作路径，sentinel一般指定/tmp比较简单</span><br><span class="line">dir &quot;/data/redis/redis_sentinel&quot;</span><br><span class="line"></span><br><span class="line"># 哨兵监控这个master，在至少quorum个哨兵实例都认为master down后把master标记为odown</span><br><span class="line"># （objective down客观down；相对应的存在sdown，subjective down，主观down）状态。</span><br><span class="line"># slaves是自动发现，所以你没必要明确指定slaves。</span><br><span class="line">sentinel monitor MyMaster 10.209.17.10 6379 2</span><br><span class="line"></span><br><span class="line"># master或slave多长时间（默认30秒）不能使用后标记为s_down状态。</span><br><span class="line">sentinel down-after-milliseconds MyMaster 1500</span><br><span class="line"></span><br><span class="line">#主备切换时，最多有多少个slave同时对新的master进行同步，这里设置为默认的1。</span><br><span class="line">#snetinel parallel-syncs MyMaster 1</span><br><span class="line"></span><br><span class="line"># 若sentinel在该配置值内未能完成failover操作（即故障时master/slave自动切换），则认为本次failover失败。</span><br><span class="line">sentinel down-after-milliseconds MyMaster 3000</span><br><span class="line"></span><br><span class="line"># 设置master和slaves验证密码</span><br><span class="line">sentinel failover-timeout MyMaster 18000</span><br><span class="line">sentinel auth-pass MyMaster testmaster123</span><br></pre></td></tr></table></figure>

<p>启动哨兵：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-sentinel ./redis_sentinel/sentinel.conf</span><br></pre></td></tr></table></figure>

<p>在sentinel中查看 所监控的master 和slave 连接哨兵：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line"></span><br><span class="line">#查看master:  </span><br><span class="line">SENTINEL masters</span><br><span class="line"></span><br><span class="line">[root@pod3-highapp-c-28 redis_sentinel]# redis-cli -p 26379</span><br><span class="line">127.0.0.1:26379&gt; SENTINEL masters</span><br><span class="line">1)  1) &quot;name&quot;</span><br><span class="line">    2) &quot;MyMaster&quot;</span><br><span class="line">    3) &quot;ip&quot;</span><br><span class="line">    4) &quot;10.209.17.10&quot;</span><br><span class="line">    5) &quot;port&quot;</span><br><span class="line">    6) &quot;6379&quot;</span><br><span class="line">    7) &quot;runid&quot;</span><br><span class="line">    8) &quot;3ddc55f75fa3ae62952b679bb150c8a135bf8035&quot;</span><br><span class="line">    9) &quot;flags&quot;</span><br><span class="line">   10) &quot;master&quot;</span><br><span class="line">   11) &quot;link-pending-commands&quot;</span><br><span class="line">   12) &quot;0&quot;</span><br><span class="line">   13) &quot;link-refcount&quot;</span><br><span class="line">   14) &quot;1&quot;</span><br><span class="line">   15) &quot;last-ping-sent&quot;</span><br><span class="line">   16) &quot;0&quot;</span><br><span class="line">   17) &quot;last-ok-ping-reply&quot;</span><br><span class="line">   18) &quot;348&quot;</span><br><span class="line">   19) &quot;last-ping-reply&quot;</span><br><span class="line">   20) &quot;348&quot;</span><br><span class="line">   21) &quot;down-after-milliseconds&quot;</span><br><span class="line">   22) &quot;3000&quot;</span><br><span class="line">   23) &quot;info-refresh&quot;</span><br><span class="line">   24) &quot;9256&quot;</span><br><span class="line">   25) &quot;role-reported&quot;</span><br><span class="line">   26) &quot;master&quot;</span><br><span class="line">   27) &quot;role-reported-time&quot;</span><br><span class="line">   28) &quot;198364518&quot;</span><br><span class="line">   29) &quot;config-epoch&quot;</span><br><span class="line">   30) &quot;15&quot;</span><br><span class="line">   31) &quot;num-slaves&quot;</span><br><span class="line">   32) &quot;1380&quot;</span><br><span class="line">   33) &quot;num-other-sentinels&quot;</span><br><span class="line">   34) &quot;0&quot;</span><br><span class="line">   35) &quot;quorum&quot;</span><br><span class="line">   36) &quot;2&quot;</span><br><span class="line">   37) &quot;failover-timeout&quot;</span><br><span class="line">   38) &quot;18000&quot;</span><br><span class="line">   39) &quot;parallel-syncs&quot;</span><br><span class="line">   40) &quot;1&quot;</span><br><span class="line">127.0.0.1:26379&gt; </span><br></pre></td></tr></table></figure>

<blockquote>
<p>Redis注意事项： 1.最大内存问题：要设置好最大内存，以防不停的申请内存，造成系统内存都被用完。 2.密码问题：需要设置复杂一些，防止暴力破解。</p>
</blockquote>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro笔记</title>
    <url>/788/</url>
    <content><![CDATA[<p>一些shiro的笔记吧..以前学习框架也好..基础也好,都没有又要的去记录好笔记..</p>
<p>自从面试过了才知道笔记的重要性..嗯对的,应该还有的救吧..</p>
<p>先把shiro的笔记记录好吧..明天或者后天自己去写一个ssm+shiro的认证出来的..不然我又怕忘记了</p>
<hr>
<h3 id="shiro简介"><a href="#shiro简介" class="headerlink" title="shiro简介"></a>shiro简介</h3><ul>
<li>Apache Shiro 是 Java ?的一个安全（权限）框架。</li>
<li>Shiro 可以非常容易的开发出足够好的应用，其不仅可以用在 JavaSE 环境，也可以用在 JavaEE 环境。</li>
<li>Shiro 可以完成：认证、授权、加密、会话管理(session)、与JavaSE、JavaWeb 集成、缓存 等。</li>
<li>下载：<a href="http://shiro.apache.org/">http://shiro.apache.org/</a></li>
</ul>
<h3 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h3><p>如下图的主要功能接口…</p>
<p><img src="http://qn.199604.com/typoraImg/gongneng.jpg" alt="img"></p>
<ul>
<li>Authentication：身份认证/登录，验证用户是不是拥有相应的身份;</li>
<li>Authorization：授权，即权限验证，验证某个已认证的用户是否拥有某个权限;即判断用户是否能进行什么操作比如：验证某个用户是否拥有某个角色;或者验证某个用户对某个资源是否具有某个权限;</li>
<li>Session Manager：会话管理，即用户登录后就是一次会话，在没有退出之前(logout)，它的所有信息都在会话中;会话可以是普通 JavaSE 环境，也可以是 JavaWeb 环境的.</li>
<li>Cryptography：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储.</li>
<li>Web Support：Web 支持，可以非常容易的集成到JavaWeb 环境.</li>
<li>Caching：缓存(如ehcach)，比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可 以提高效率.</li>
<li>Concurrency：Shiro 支持多线程应用的并发验证即如在一个线程中开启另一个线程,能把权限自动传播过去.</li>
<li>Testing：提供我们测试用.</li>
<li>Run As：允许一个用户假装为另一个用户（如:他们允许）的身份进行访问</li>
<li>Remember Me：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了</li>
</ul>
<h3 id="Shiro-架构"><a href="#Shiro-架构" class="headerlink" title="Shiro 架构"></a>Shiro 架构</h3><p>从外部来看Shiro ，即从应用程序角度的来观察如何使用 Shiro 完成工作，如图：</p>
<p><img src="http://qn.199604.com/typoraImg/shirojiagou.jpg" alt="img"></p>
<p>从上图来看,就是包含了三个含义,subject(可以说是充当一个门面)-&gt;securityManager(这才是shiro的执行者/管理器)-&gt;realm(获取安全数据(如用户、角色、权限))</p>
<p>所以从外部看:</p>
<ul>
<li>Subject：应用代码直接交互的对象是 Subject，也就是说 Shiro 的对外 API 核心就是 Subject。Subject 代表了当前“用户”， 这个用户不一定 是一个具体的人，与当前应用交互的任何东西都是 Subject，如网络爬虫， 机器人等；与 Subject ?的所有交互都会委托给 SecurityManager； Subject 其实是一个门面，SecurityManager 才是实际的执行者；</li>
<li>SecurityManager：安全管理器；即所有与安全有关的操作都会与 SecurityManager 交互；且其管理着所有 Subject；可以看出它是 Shiro 的核心，它负责与 Shiro 的其他组件进行交互，它相当于 SpringMVC 中 DispatcherServlet 的角色</li>
<li>Realm：Shiro 从 Realm 获取安全数据（如用户、角色、权限），就是说 SecurityManager 要验证用户身份，那么它需要从 Realm 获取相应的用户 进行比较以确定用户身份是否合法；也需要从 Realm 得到用户相应的角色/ 权限进行验证用户是否能进行操作；可以把 Realm 看成 DataSource..</li>
</ul>
<p>从内部来看Shiro ，即从开发者角度的来观察如何使用 Shiro的功能去实现产品，如图：</p>
<p><img src="http://qn.199604.com/typoraImg/shironeibu.jpg" alt="img"></p>
<ul>
<li>Subject：任何可以与shiro应用交互的</li>
<li>SecurityManager ：相当于SpringMVC 中的 DispatcherServlet；是 Shiro 的心脏； 所有具体的交互都通过 SecurityManager 进行控制(filfer);它管理着所有 Subject、且负责进 行认证、授权、会话及缓存的管理。</li>
<li>Authenticator：负责 Subject 认证，是一个扩展点，可以自定义实现；可以使用认证策略（Authentication Strategy），即什么情况下算用户认证通过了；。</li>
<li>Authorizer：授权器、即访问控制器，用来决定主体是否有权限进行相应的操作；即控 制着用户能访问应用中的哪些功能。</li>
<li>Realm：自定义Realm,可以有 1 个或多个 Realm，可以认为是安全实体数据源，即用于获取安全实体的；可以是JDBC 实现，也可以是内存实现等等；由用户提供；所以一般在应用中都需要实现自己的 Realm。</li>
<li>SessionManager：管理 Session 生命周期的组件；而 Shiro 并不仅仅可以用在 Web 环境，也可以用在如普通的 JavaSE 环境</li>
<li>CacheManager：缓存控制器，来管理如用户、角色、权限等的缓存的；因为这些数据 基本上很少改变，放到缓存中后可以提高访问的性能 。</li>
<li>Cryptography：密码模块，Shiro 提高了一些常见的加密组件用于如密码加密/解密。</li>
</ul>
<h3 id="集成-Spring"><a href="#集成-Spring" class="headerlink" title="集成 Spring"></a>集成 Spring</h3><ul>
<li>加入 Spring 和 Shiro 的 jar 包</li>
<li>配置 Spring 及 SpringMVC</li>
<li>参照从官网下载下来的文件，我的是1.2.2版本：shiro-root-1.2.2-sourcerelease\shiro-root-1.2.2\samples\spring配置 web.xml 和 Spring 的配置文件</li>
</ul>
<p>在web.xml加入如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">	xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;</span><br><span class="line">	xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><br><span class="line">	id=&quot;WebApp_ID&quot; version=&quot;2.5&quot;&gt;	</span><br><span class="line">	&lt;!-- shiro配置 --&gt;</span><br><span class="line">	&lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure>

<p>其中DelegatingFilterProxy 作用是自动到 Spring 容器查找名字为 shiroFilter（filter-name）的 bean 并把所有 Filter 的操作委托给它.</p>
<p>在applicationContext.xml加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">	xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!--  </span><br><span class="line">    1. 配置 SecurityManager!</span><br><span class="line">    --&gt; </span><br><span class="line">	&lt;!-- 安全策划管理器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;securityManager&quot; class=&quot;org.apache.shiro.web.mgt.DefaultWebSecurityManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;cacheManager&quot; ref=&quot;cacheManager&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;authenticator&quot; ref=&quot;authenticator&quot;&gt;&lt;/property&gt;</span><br><span class="line">        &lt;!-- 我们需要自己去写一个realm --&gt;</span><br><span class="line">        &lt;!--  &lt;property name=&quot;realm&quot; ref=&quot;jdbcRealm&quot;/&gt;--&gt;</span><br><span class="line">        &lt;property name=&quot;realms&quot;&gt;</span><br><span class="line">        	&lt;list&gt;</span><br><span class="line">        		&lt;ref bean=&quot;jdbcRealm&quot;/&gt;</span><br><span class="line">        		&lt;ref bean=&quot;secondJdbcRealm&quot;/&gt;</span><br><span class="line">        	&lt;/list&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!--  </span><br><span class="line">    2. 配置 CacheManager. </span><br><span class="line">    2.1 需要加入 ehcache 的 jar 包及配置文件. </span><br><span class="line">    --&gt; </span><br><span class="line">    &lt;bean id=&quot;cacheManager&quot; class=&quot;org.apache.shiro.cache.ehcache.EhCacheManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;cacheManagerConfigFile&quot; value=&quot;classpath:ehcache.xml&quot;/&gt; </span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">	&lt;!-- </span><br><span class="line">    	3. 配置 Realm </span><br><span class="line">    	3.1 直接配置实现了 org.apache.shiro.realm.Realm 接口的 bean</span><br><span class="line">    --&gt;   </span><br><span class="line">	&lt;bean id=&quot;jdbcRealm&quot; class=&quot;com.glj.bean.shiroRealm&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;credentialsMatcher&quot;&gt;</span><br><span class="line">			&lt;bean class=&quot;org.apache.shiro.authc.credential.HashedCredentialsMatcher&quot;&gt;</span><br><span class="line">				&lt;property name=&quot;hashAlgorithmName&quot; value=&quot;MD5&quot;&gt;&lt;/property&gt;</span><br><span class="line">				&lt;property name=&quot;hashIterations&quot; value=&quot;1024&quot;&gt;&lt;/property&gt;</span><br><span class="line">			&lt;/bean&gt;</span><br><span class="line">		&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">	&lt;bean id=&quot;secondJdbcRealm&quot; class=&quot;com.glj.bean.secondShiroRealm&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;credentialsMatcher&quot;&gt;</span><br><span class="line">			&lt;bean class=&quot;org.apache.shiro.authc.credential.HashedCredentialsMatcher&quot;&gt;</span><br><span class="line">				&lt;property name=&quot;hashAlgorithmName&quot; value=&quot;SHA1&quot;&gt;&lt;/property&gt;</span><br><span class="line">				&lt;property name=&quot;hashIterations&quot; value=&quot;1024&quot;&gt;&lt;/property&gt;</span><br><span class="line">			&lt;/bean&gt;</span><br><span class="line">		&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;bean id=&quot;authenticator&quot; class=&quot;org.apache.shiro.authc.pam.ModularRealmAuthenticator&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;authenticationStrategy&quot;&gt;</span><br><span class="line">			&lt;!-- ：只要有一个Realm验证成功即可，和 FirstSuccessfulStrategy 不同，将返回所有Realm身份验证成功的认证信 息；--&gt; </span><br><span class="line">			&lt;bean class=&quot;org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy&quot;&gt;&lt;/bean&gt; </span><br><span class="line">			&lt;!-- 所有Realm验证成功才算成功，且返回所有 Realm身份验证成功的认证信息，如果有一个失败就失败了。  </span><br><span class="line">			&lt;bean class=&quot;org.apache.shiro.authc.pam.AllSuccessfulStrategy&quot;&gt;&lt;/bean&gt; --&gt;</span><br><span class="line">		&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- 多Realm配置的第二种方式</span><br><span class="line">	&lt;bean id=&quot;authenticator&quot; class=&quot;org.apache.shiro.authc.pam.ModularRealmAuthenticator&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;realms&quot;&gt;</span><br><span class="line">			&lt;list&gt;</span><br><span class="line">				&lt;ref bean=&quot;jdbcRealm&quot;/&gt;</span><br><span class="line">        		&lt;ref bean=&quot;secondJdbcRealm&quot;/&gt;</span><br><span class="line">			&lt;/list&gt;</span><br><span class="line">		&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;--&gt;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&lt;!-- 必须要有这样的实例，用来管理在spring容器当中的shiro常见的对象 </span><br><span class="line">		配置 LifecycleBeanPostProcessor. </span><br><span class="line">		可以自定的来调用配置在 Spring IOC 容器中 shiro bean 的生命周期方法. </span><br><span class="line">	--&gt;            </span><br><span class="line">    &lt;bean id=&quot;lifecycleBeanPostProcessor&quot; class=&quot;org.apache.shiro.spring.LifecycleBeanPostProcessor&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 启用shiro注解</span><br><span class="line">    	但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用.</span><br><span class="line">     --&gt;     </span><br><span class="line">    &lt;bean class=&quot;org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator&quot;</span><br><span class="line">          depends-on=&quot;lifecycleBeanPostProcessor&quot;/&gt;</span><br><span class="line">    &lt;bean class=&quot;org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 网络方面 --&gt;</span><br><span class="line">    &lt;bean id=&quot;secureRemoteInvocationExecutor&quot; class=&quot;org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">   	&lt;!-- </span><br><span class="line">   	配置shiroFiler</span><br><span class="line">   	id 必须和 web.xml 文件中配置的 DelegatingFilterProxy 的 &lt;filter-name&gt; 一致.</span><br><span class="line">                      若不一致, 则会抛出: NoSuchBeanDefinitionException. </span><br><span class="line">                      因为 Shiro 会来 IOC 容器中查找和 &lt;filter-name&gt; 名字对应的 filter bean.</span><br><span class="line">   	 --&gt;</span><br><span class="line">    &lt;bean id=&quot;shiroFilter&quot; class=&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login.jsp&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;successUrl&quot; value=&quot;/success.jsp&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;unauthorizedUrl&quot; value=&quot;/unauthorized.jsp&quot;/&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- filter具体配置 --&gt;</span><br><span class="line">        &lt;property name=&quot;filterChainDefinitions&quot;&gt;</span><br><span class="line">            &lt;value&gt;</span><br><span class="line">                /login.jsp = anon</span><br><span class="line">                # allow WebStart to pull the jars for the swing app:</span><br><span class="line">                /login = anon</span><br><span class="line">                /loginout = logout</span><br><span class="line">                /admin.jsp = roles[admin]</span><br><span class="line">                /user.jsp = roles[user]</span><br><span class="line">                # everything else requires authentication:</span><br><span class="line">                /** = authc</span><br><span class="line">            &lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">	&lt;bean id=&quot;shiroService&quot; class=&quot;com.glj.service.shiroService&quot;&gt;&lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>



<h3 id="shiro中默认的过滤器"><a href="#shiro中默认的过滤器" class="headerlink" title="shiro中默认的过滤器"></a>shiro中默认的过滤器</h3><p><img src="http://qn.199604.com/typoraImg/shiromorenguoluqi.jpg" alt="img"></p>
<h3 id="URL-匹配模式"><a href="#URL-匹配模式" class="headerlink" title="URL 匹配模式"></a>URL 匹配模式</h3><ul>
<li>url 模式使用 Ant 风格模式</li>
<li>Ant 路径通配符支持 ?、*、**，注意通配符匹配不 包括目录分隔符“/”</li>
<li>– ?：匹配一个字符，如 /user? 将匹配 /user1，但不匹配 /user或 /user/</li>
<li>– <em>：匹配零个或多个字符串，如 /user</em> 将匹配 /user、 /user123，但不匹配 /user/123</li>
<li>– <strong>：匹配路径中的零个或多个路径，如 /user/</strong> 将匹 配 /user/a或 /user/a/b….</li>
</ul>
<h3 id="URL-匹配顺序"><a href="#URL-匹配顺序" class="headerlink" title="URL 匹配顺序"></a>URL 匹配顺序</h3><ul>
<li>URL 权限采取第一次匹配优先的方式，即从头开始使用第一个匹配的 url 模式对应的拦截模式</li>
</ul>
<p>如:</p>
<p>/login/** = filter1</p>
<p>/login/aa?= filter2</p>
<p>/**=filter3</p>
<p>如果我们现在请求的url是/login/aa，按照声明顺序进行匹配，那么是filter1进来拦截</p>
<p>所以如果想让/login/aa被filter2拦截，只需要调换一下顺序即可…</p>
<h1 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h1><h3 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h3><ul>
<li>身份验证：一般需要提供如身份 ID 等一些标识信息来表明登录者的身份</li>
<li>在 shiro 中，用户需要提供 principals （身份）和 credentials（证明）给 shiro，从而应用能验证用户身份</li>
<li>principals：身份，即主体的标识属性，可以是任何属性，如用户名、 邮箱等，唯一即可。一个主体可以有多个 principals，但只有一个 Primary principals，一般是用户名/邮箱/手机号。</li>
<li>credentials：证明/凭证，即只有主体知道的安全值，如密码/数字证 书等。</li>
<li>最常见的 principals 和 credentials 组合就是用户名/密码了</li>
</ul>
<h3 id="身份验证基本流程"><a href="#身份验证基本流程" class="headerlink" title="身份验证基本流程"></a>身份验证基本流程</h3><ul>
<li>1.收集用户身份/凭证，如用户名/密码</li>
<li>2.调用 Subject.login 进行登录，如果失败将得到相应 的 AuthenticationException 异常，根据异常提示用户错误信息；否则登录成功</li>
<li>3.创建自定义的 Realm 类，继承 org.apache.shiro.realm.AuthorizingRealm类，实现doGetAuthenticationInfo() 方法</li>
</ul>
<p>如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//判断当前用户是否有认证</span><br><span class="line">        if (!currentUser.isAuthenticated()) &#123;</span><br><span class="line">        	//创建UsernamePasswordToken对象来封装对象的身份，即用户名和密码</span><br><span class="line">            UsernamePasswordToken token = new UsernamePasswordToken(&quot;username&quot;, &quot;password&quot;);</span><br><span class="line">            //是否记住我</span><br><span class="line">            token.setRememberMe(true);</span><br><span class="line">            try &#123;</span><br><span class="line">                currentUser.login(token);</span><br><span class="line">                //如果登录失败即返回下列的错误...</span><br><span class="line">            &#125; catch (UnknownAccountException uae) &#123;</span><br><span class="line">                log.info(&quot;There is no user with username of &quot; + token.getPrincipal());</span><br><span class="line">            &#125; catch (IncorrectCredentialsException ice) &#123;</span><br><span class="line">                log.info(&quot;Password for account &quot; + token.getPrincipal() + &quot; was incorrect!&quot;);</span><br><span class="line">            &#125; catch (LockedAccountException lae) &#123;</span><br><span class="line">                log.info(&quot;The account for username &quot; + token.getPrincipal() + &quot; is locked.  &quot; +</span><br><span class="line">                        &quot;Please contact your administrator to unlock it.&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            // ... catch more exceptions here (maybe custom ones specific to your application?</span><br><span class="line">            catch (AuthenticationException ae) &#123;</span><br><span class="line">                //unexpected condition?  error?</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://qn.199604.com/typoraImg/shirorenzheng.jpg" alt="img"></p>
<ul>
<li>1.首先调用 Subject.login(token) 进行登录，其会自动委托给 SecurityManager</li>
<li>2.SecurityManager 负责真正的身份验证逻辑，它会委托给 Authenticator 进行身份验证</li>
<li>3.Authenticator 才是真正的身份验证者，Shiro API 中核心的身份 认证入口点，此处可以自定义插入自己实现的Reaml</li>
<li>4.Authenticator 可能会委托给相应的 AuthenticationStrategy 进 行多 Realm 身份验证，默人ModularRealmAuthenticator 会调用 AuthenticationStrategy 进行多 Realm 身份验证</li>
<li>5.Authenticator 会把相应的 token 传入 Realm，从 Realm 获取 身份验证信息，如果没有返回/抛出异常表示身份验证失败了。此处 可以配置多个Realm，将按照相应的顺序及策略进行访问</li>
</ul>
<h4 id="Realm"><a href="#Realm" class="headerlink" title="Realm"></a>Realm</h4><ul>
<li>?Realm：Shiro 从 Realm 获取安全数据（如用户、角色、 权限），即 SecurityManager 要验证用户身份，那么它需 要从 Realm 获取相应的用户进行比较以确定用户身份是否 合法；也需要从Realm得到用户相应的角色/权限进行验证 用户是否能进行操作</li>
<li>一般继承 AuthorizingRealm（授权）即可；其继承了 AuthenticatingRealm（即身份验证），而且也间接继承了 CachingRealm（带有缓存实现）</li>
</ul>
<p><img src="http://qn.199604.com/typoraImg/shirorealm.jpg" alt="img"></p>
<h4 id="Authenticator"><a href="#Authenticator" class="headerlink" title="Authenticator"></a>Authenticator</h4><ul>
<li>Authenticator 的职责是验证用户帐号，是 Shiro API 中身份验 证核心的入口点：如果验证成功，将返回AuthenticationInfo 验 证信息；此信息中包含了身份及凭证；如果验证失败将抛出相应的AuthenticationException 异常</li>
<li>SecurityManager 接口继承了 Authenticator，另外还有一个ModularRealmAuthenticator实现，其委托给多个Realm 进行验证，验证规则通过 AuthenticationStrategy 接口指定</li>
</ul>
<h4 id="AuthenticationStrategy"><a href="#AuthenticationStrategy" class="headerlink" title="AuthenticationStrategy"></a>AuthenticationStrategy</h4><ul>
<li>FirstSuccessfulStrategy：只要有一个 Realm 验证成功即可，只返回第 一个 Realm 身份验证成功的认证信息，其他的忽略</li>
<li>AtLeastOneSuccessfulStrategy：只要有一个Realm验证成功即可，和 FirstSuccessfulStrategy 不同，将返回所有Realm身份验证成功的认证信息</li>
<li>AllSuccessfulStrategy：所有Realm验证成功才算成功，且返回所有 Realm身份验证成功的认证信息，如果有一个失败就失败了</li>
<li>ModularRealmAuthenticator 默认是 AtLeastOneSuccessfulStrategy 策略</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;authenticator&quot; class=&quot;org.apache.shiro.authc.pam.ModularRealmAuthenticator&quot;&gt;</span><br><span class="line">		&lt;property name=&quot;authenticationStrategy&quot;&gt;</span><br><span class="line">			&lt;!-- ：只要有一个Realm验证成功即可，和 FirstSuccessfulStrategy 不同，将返回所有Realm身份验证成功的认证信 息；--&gt; </span><br><span class="line">			&lt;bean class=&quot;org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy&quot;&gt;&lt;/bean&gt; </span><br><span class="line">			&lt;!-- 所有Realm验证成功才算成功，且返回所有 Realm身份验证成功的认证信息，如果有一个失败就失败了。  </span><br><span class="line">			&lt;bean class=&quot;org.apache.shiro.authc.pam.AllSuccessfulStrategy&quot;&gt;&lt;/bean&gt; --&gt;</span><br><span class="line">		&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br></pre></td></tr></table></figure>



<h1 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h1><ul>
<li>授权，也叫访问控制，即在应用中控制谁访问哪些资源（如访问页面/编辑数据/页面操作 等）。在授权中需了解的几个关键对象：主体（Subject）、资源（Resource）、权限 （Permission）、角色（Role）。</li>
<li>主体(Subject)：访问应用的用户，在 Shiro 中使用 Subject 代表该用户。用户只有授权 后才允许访问相应的资源</li>
<li>资源(Resource)：在应用中用户可以访问的 URL，比如访问 JSP 页面、查看/编辑某些 数据、访问某个业务方法、打印文本等等都是资源。用户只要授权后才能访问</li>
<li>权限(Permission)：安全策略中的原子授权单位，通过权限我们可以表示在应用中用户 有没有操作某个资源的权力。即权限表示在应用中用户能不能访问某个资源</li>
<li>角色(Role)：权限的集合，一般情况下会赋予用户角色而不是权限，即这样用户可以拥有 一组权限，赋予权限时比较方便</li>
</ul>
<h3 id="授权方式"><a href="#授权方式" class="headerlink" title="授权方式"></a>授权方式</h3><p>Shiro 支持三种方式的授权</p>
<ul>
<li>1.编程式：通过写if/else 授权代码块完成 (比较少用)</li>
<li>2.注解式：通过在执行的Java方法上放置相应的注解完成，没有权限将抛出相应的异常</li>
<li>3.JSP/GSP 标签：在JSP/GSP 页面通过相应的标签完成</li>
</ul>
<p>1.编程式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(subject.hasRole(&quot;admin&quot;))&#123;</span><br><span class="line">//有admin的权限干什么</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//没有admin的权限干什么	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.注解式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequiresRoles(value=&#123;&quot;admin&quot;&#125;)</span><br><span class="line">	public void TestshiroMethod()&#123;</span><br><span class="line">		System.out.println(new Date()+&quot;只有admin才可以访问&quot;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>3.JSP/GSP 标签</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:hasRole name=&quot;admin&quot;&gt;</span><br><span class="line">&lt;a href=&quot;admin.jsp&quot;&gt;admin page&lt;/a&gt;</span><br><span class="line">&lt;/shiro:hasRole&gt;</span><br></pre></td></tr></table></figure>



<h4 id="默认拦截器"><a href="#默认拦截器" class="headerlink" title="默认拦截器"></a>默认拦截器</h4><p>Shiro 内置了很多默认的拦截器，比如身份验证、授权等相关的。</p>
<p>默认拦截器可以参考org.apache.shiro.web.filter.mgt.DefaultFilter中的枚举 拦截器：</p>
<p><img src="http://qn.199604.com/typoraImg/defaultFilter.jpg" alt="img"></p>
<h4 id="身份验证相关的"><a href="#身份验证相关的" class="headerlink" title="身份验证相关的"></a>身份验证相关的</h4><p><img src="http://qn.199604.com/typoraImg/shiroshenfenxiangguan.jpg" alt="img"></p>
<h4 id="授权相关的"><a href="#授权相关的" class="headerlink" title="授权相关的"></a>授权相关的</h4><p><img src="http://qn.199604.com/typoraImg/shouquanxiangguan.jpg" alt="img"></p>
<h4 id="Shiro-的-Permissions"><a href="#Shiro-的-Permissions" class="headerlink" title="Shiro 的 Permissions"></a>Shiro 的 Permissions</h4><p>规则：</p>
<p>资源标识符，操作：对象实例 ID 即对哪个资源的哪个 实例可以进行什么操作. 其默认支持通配符权限字符串，: 表 示资源/操作/实例的分割；, 表示操作的分割，* 表示任意资 源/操作/实例。</p>
<ul>
<li>多层次管理</li>
</ul>
<p>例如：user:query、user:edit</p>
<p>1.-冒号是一个特殊字符，它用来分隔权限字符串的下一部件：第一部分 是权限被操作的领域（打印机），第二部分是被执行的操作。</p>
<p>2.-多个值：每个部件能够保护多个值。因此，除了授予用户 user:query 和 user:edit 权限外,也可以简单地授予他们一个：user:query, edit…</p>
<p>3.-还可以用 * 号代替所有的值，如：user:* ， 也可以写：*:query，表示 某个用户在所有的领域都有 query 的权限</p>
<ul>
<li>实例级访问控制</li>
</ul>
<p>1.– 这种情况通常会使用三个部件：域：操作：被付诸实施的实例。如：user:edit:manager</p>
<p>2.– 也可以使用通配符来定义，如：user:edit:<em>、user:</em>:<em>、 user:</em>:manager</p>
<p>3.– 部分省略通配符：缺少的部件意味着用户可以访问所 有与之匹配的值，比如：user:edit 等价于 user:edit :<em>、 user 等价于 user:</em>:*</p>
<p>4.– 注意：通配符只能从字符串的结尾处省略部件，也就 是说 user:edit 并不等价于 user:<em>:edit而等价于 user:edit:</em></p>
<h4 id="授权流程"><a href="#授权流程" class="headerlink" title="授权流程"></a>授权流程</h4><p><img src="http://qn.199604.com/typoraImg/shouquanliuchengtu.jpg" alt="img"></p>
<ul>
<li>?1、首先调用 Subject.isPermitted*/hasRole* 接口，其会委托给 SecurityManager，而 SecurityManager 接着会委托给 Authorizer；</li>
<li>2、Authorizer是真正的授权者，如果调用如 isPermitted(“user:view”)，其首先会通过??PermissionResolver 把字符串转换成相应的 Permission 实例</li>
<li>3、在进行授权之前，其会调用相应的 Realm 获取 Subject 相应的角 色/权限用于匹配传入的角色/权限</li>
<li>4、Authorizer 会判断 Realm 的角色/权限是否和传入的匹配，如果 有多个Realm，会委托给ModularRealmAuthorizer 进行循环判断， 如果匹配如 isPermitted*/hasRole* 会返回true，否则返回false表示 授权失败</li>
</ul>
<h4 id="ModularRealmAuthorizer-进行多-Realm-匹配流程"><a href="#ModularRealmAuthorizer-进行多-Realm-匹配流程" class="headerlink" title="ModularRealmAuthorizer 进行多 Realm 匹配流程"></a>ModularRealmAuthorizer 进行多 Realm 匹配流程</h4><ul>
<li>1、首先检查相应的 Realm 是否实现了实现了Authorizer</li>
<li>2、如果实现了 Authorizer，那么接着调用其相应的 isPermitted*/hasRole* 接口进行匹配</li>
<li>3、如果有一个Realm匹配那么将返回 true，否则返回 false</li>
</ul>
<h1 id="Shiro-标签"><a href="#Shiro-标签" class="headerlink" title="Shiro 标签"></a>Shiro 标签</h1><p>Shiro 提供了 JSTL 标签用于在 JSP 页面进行权限控制，需要实现:</p>
<p><code>&lt;%@taglib prefix=&quot;shiro&quot; uri=&quot;http://shiro.apache.org/tags&quot; %&gt;</code></p>
<p>guest 标签：用户没有身份验证时显示相应信息，即游客 访问信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:guest&gt;</span><br><span class="line">	WelCome&lt;a href=&quot;login.jsp&quot;&gt;登录&lt;/a&gt;</span><br><span class="line">&lt;/shiro:guest&gt;</span><br></pre></td></tr></table></figure>

<p>user 标签：用户已经经过认证/记住我登录后显示相应的信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:user&gt;</span><br><span class="line">&lt;h1&gt;WelCome:&lt;shiro:principal /&gt;&lt;/h1&gt;</span><br><span class="line">&lt;a href=&quot;loginout&quot;&gt;登出&lt;/a&gt;</span><br><span class="line">&lt;/shiro:user&gt;</span><br></pre></td></tr></table></figure>

<p>authenticated 标签：用户已经身份验证通过，即 Subject.login登录成功，不是记住我登录的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:authenticated&gt;</span><br><span class="line">	用户[&lt;shiro:principal /&gt;]已经身份验证通过</span><br><span class="line">&lt;/shiro:authenticated&gt;</span><br></pre></td></tr></table></figure>

<p>notAuthenticated 标签：用户未进行身份验证，即没有调 用Subject.login进行登录，包括记住我自动登录的也属于未进行身份验证。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:notAuthenticated&gt;</span><br><span class="line">	没有调 用Subject.login进行登录，包括记住我自动登录的也属于 未进行身份验证</span><br><span class="line">&lt;/shiro:notAuthenticated&gt;</span><br></pre></td></tr></table></figure>

<p>pincipal 标签：显示用户身份信息，默认调用 Subject.getPrincipal() 获取，即 Primary Principal</p>
<p><code>&lt;shiro:principal /&gt;</code></p>
<p>hasRole 标签：如果当前 Subject 有角色将显示 body 体内 容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:hasRole name=&quot;admin&quot;&gt;</span><br><span class="line">&lt;a href=&quot;admin.jsp&quot;&gt;admin page&lt;/a&gt;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">&lt;/shiro:hasRole&gt;</span><br></pre></td></tr></table></figure>

<p>hasAnyRoles 标签：如果当前Subject有任意一个 角色（或的关系）将显示body体内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:hasAnyRoles name=&quot;admin,user&quot;&gt;</span><br><span class="line">	用户[&lt;shiro:principal /&gt;]拥有admin/user权限</span><br><span class="line">&lt;/shiro:hasAnyRoles&gt;</span><br></pre></td></tr></table></figure>

<p>lacksRole：如果当前 Subject 没有角色将显示 body 体内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:lacksRole name=&quot;admin&quot;&gt;</span><br><span class="line">	WelCome:&lt;shiro:principal /&gt;,你不是admin</span><br><span class="line">&lt;/shiro:lacksRole&gt;</span><br></pre></td></tr></table></figure>

<p>hasPermission：如果当前 Subject 有权限 将显示 body 体内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:hasPermission name=&quot;admin:update&quot;&gt;</span><br><span class="line">	WelCome:&lt;shiro:principal /&gt;拥有admin:update</span><br><span class="line">&lt;/shiro:hasPermission&gt;</span><br></pre></td></tr></table></figure>

<p>lacksPermission：如果当前Subject没有权 限将显示body体内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;shiro:lacksPermission name=&quot;admin:update&quot;&gt;</span><br><span class="line">	WelCome:&lt;shiro:principal /&gt;不拥有admin:update</span><br><span class="line">&lt;/shiro:lacksPermission&gt;</span><br></pre></td></tr></table></figure>



<h1 id="shiro权限注解"><a href="#shiro权限注解" class="headerlink" title="shiro权限注解"></a>shiro权限注解</h1><ul>
<li>@RequiresAuthentication：表示当前Subject已经通过login 进行了身份验证；即 Subject. isAuthenticated() 返回 true</li>
<li>@RequiresUser：表示当前 Subject 已经身份验证或者通过记 住我登录的</li>
<li>@RequiresGuest：表示当前Subject没有身份验证或通过记住我登录过，即是游客身份</li>
<li>@RequiresRoles(value={“admin”, “user”}, logical= Logical.AND)：表示当前 Subject 需要角色 admin 和user</li>
<li>@RequiresPermissions (value={“user:a”, “user:b”}, logical= Logical.OR)：表示当前 Subject 需要权限 user:a 或 user:b</li>
</ul>
<h1 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理"></a>会话管理</h1><p>Shiro 提供了完整的企业级会话管理功能，不依赖于底层容 器（如web容器tomcat），不管 JavaSE 还是 JavaEE 环境 都可以使用，提供了会话管理、会话事件监听、会话存储/ 持久化、容器无关的集群、失效/过期支持、对Web 的透明 支持、SSO 单点登录的支持等特性。</p>
<h4 id="会话相关的-API"><a href="#会话相关的-API" class="headerlink" title="会话相关的 API"></a>会话相关的 API</h4><ul>
<li>Subject.getSession()：即可获取会话,其等价于 Subject.getSession(true)，即如果当前没有创建 Session 对象会创建 一个；Subject.getSession(false)，如果当前没有创建 Session 则返回 null</li>
<li>session.getId()：获取当前会话的唯一标识</li>
<li>session.getHost()：获取当前Subject的主机地址</li>
<li>session.getTimeout() &amp; session.setTimeout(毫秒)：获取/设置当 前Session的过期时间</li>
<li>session.getStartTimestamp() &amp; session.getLastAccessTime()： 获取会话的启动时间及最后访问时间；如果是 JavaSE 应用需要自己定 期调用 session.touch() 去更新最后访问时间；如果是 Web 应用，每 次进入 ShiroFilter 都会自动调用 session.touch() 来更新最后访问时间</li>
<li>session.touch() &amp; session.stop()：更新会话最后访问时 间及销毁会话；当Subject.logout()时会自动调用 stop 方法 来销毁会话。如果在web中，调用 HttpSession. invalidate() 也会自动调用Shiro Session.stop 方法进行销毁Shiro 的会 话</li>
<li>session.setAttribute(key, val) &amp;?session.getAttribute(key) &amp;?session.removeAttribute(key)：设置/获取/删除会话属性；在整个会话范围内都可以对这些属性进行操作</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line">   * 用户登录</span><br><span class="line">   * @param user</span><br><span class="line">   * @param request</span><br><span class="line">   * @return</span><br><span class="line">   */</span><br><span class="line">  @RequestMapping(&quot;/login&quot;)</span><br><span class="line">  public String login(User user, HttpServletRequest request) &#123;</span><br><span class="line"></span><br><span class="line">      // 获取subject对象</span><br><span class="line">      Subject subject = SecurityUtils.getSubject();</span><br><span class="line">      String username = user.getUserName();</span><br><span class="line">      String password = user.getPassword();</span><br><span class="line">      System.out.println(username+&quot;--&quot;+password);</span><br><span class="line">      // 实例化用户名密码令牌</span><br><span class="line">      UsernamePasswordToken token = new UsernamePasswordToken(username, password);</span><br><span class="line">      try &#123;</span><br><span class="line">          // 使用subject对象进行登陆</span><br><span class="line">          subject.login(token);</span><br><span class="line">          // 获取session</span><br><span class="line">          Session session = subject.getSession();</span><br><span class="line">          // 输出session</span><br><span class="line">          System.out.println(&quot;sessionId:&quot; + session.getId() + &quot;;sessionHost:&quot; + session.getHost() +&quot;;sessionTimeout:%s&quot; + session.getTimeout());</span><br><span class="line">          session.setAttribute(&quot;info&quot;, &quot;session的数据&quot;);</span><br><span class="line">          return &quot;redirect:success&quot;;</span><br><span class="line">      &#125; catch (Exception e) &#123;</span><br><span class="line">          // 验证失败</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">          request.setAttribute(&quot;user&quot;, user);</span><br><span class="line">          request.setAttribute(&quot;errorMsg&quot;, &quot;用户名或密码错误&quot;);</span><br><span class="line">          return &quot;login&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<h4 id="会话监听器"><a href="#会话监听器" class="headerlink" title="会话监听器"></a>会话监听器</h4><p>会话监听器用于监听会话创建、过期及停止事件</p>
<p><img src="http://qn.199604.com/typoraImg/sessionListener.jpg" alt="img"></p>
<h4 id="会话验证"><a href="#会话验证" class="headerlink" title="会话验证"></a>会话验证</h4><ul>
<li>Shiro 提供了会话验证调度器，用于定期的验证会话是否 已过期，如果过期将停止会话</li>
<li>出于性能考虑，一般情况下都是获取会话时来验证会话是否过期并停止会话的；但是如在 web 环境中，如果用户不主动退出是不知道会话是否过期的，因此需要定期的检测会话是否过期，Shiro 提供了会话验证调度器 SessionValidationScheduler</li>
<li>Shiro 也提供了使用Quartz会话验证调度器：QuartzSessionValidationScheduler</li>
</ul>
<h1 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h1><h4 id="CacheManagerAware-接口"><a href="#CacheManagerAware-接口" class="headerlink" title="CacheManagerAware 接口"></a>CacheManagerAware 接口</h4><p>Shiro 内部相应的组件（DefaultSecurityManager）会自 动检测相应的对象（如Realm）是否实现了 CacheManagerAware 并自动注入相应的 CacheManager</p>
<h4 id="Realm-缓存"><a href="#Realm-缓存" class="headerlink" title="Realm 缓存"></a>Realm 缓存</h4><ul>
<li>Shiro 提供了 CachingRealm，其实现了 CacheManagerAware 接口，提供了缓存的一些基础实现</li>
<li>AuthenticatingRealm 及 AuthorizingRealm 也分别提供了对AuthenticationInfo 和 AuthorizationInfo 信息的缓 存</li>
</ul>
<h4 id="Session-缓存"><a href="#Session-缓存" class="headerlink" title="Session 缓存"></a>Session 缓存</h4><ul>
<li>如 SecurityManager 实现了 SessionSecurityManager， 其会判断 SessionManager 是否实现了CacheManagerAware 接口，如果实现了会把 CacheManager 设置给它</li>
<li>SessionManager 也会判断相应的 SessionDAO（如继承 自CachingSessionDAO）是否实现了 CacheManagerAware，如果实现了会把 CacheManager 设置给它</li>
<li>设置了缓存的 SessionManager，查询时会先查缓存，如 果找不到才查数据库</li>
</ul>
<h1 id="认证和记住我"><a href="#认证和记住我" class="headerlink" title="认证和记住我"></a>认证和记住我</h1><ul>
<li>subject.isAuthenticated() 表示用户进行了身份验证登录的， 即使有 Subject.login 进行了登录</li>
<li>subject.isRemembered()：表示用户是通过记住我登录的， 此时有可能并不是真正的你（如你的朋友使用你的电脑，或者 你的cookie 被窃取）在访问的</li>
<li>两者二选一，即 subject.isAuthenticated()==true，则 subject.isRemembered()==false；反之一样</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
        <tag>JAVA</tag>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>uni-app的技术探索</title>
    <url>/1545/</url>
    <content><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>这篇文章主要目的是分享我个人在探索uniapp期间的一些坑和整体感受，难免会有一些偏个人的主观意见，希望各位再看这篇文章之前先去看官方文档，以免先入为主。 官方文档并非同步更新的，需要同步着当前的<a href="https://ask.dcloud.net.cn/article/36599">uni-app v3版本升级</a> 这篇文章看，这样才是比较完整的内容。 关于苹果下架H5 app 的相关新闻，请看这个<a href="https://ask.dcloud.net.cn/article/36654">官方说明</a> 。想看更多新闻请看 <a href="https://ask.dcloud.net.cn/notice/list/">公告</a> 。</p>
<h2 id="开发工具介绍及使用"><a href="#开发工具介绍及使用" class="headerlink" title="开发工具介绍及使用"></a>开发工具介绍及使用</h2><p><a href="https://uniapp.dcloud.io/">uniapp</a>，由 <a href="https://baike.baidu.com/item/Dcloud/8358528?fr=aladdin">Dcloud</a> 公司推出。 因为app的开发依赖HbuilderX的app编译模块 ， 所以HbuilderX这个开发工具的版本相当重要。 我们从<a href="https://uniapp.dcloud.io/release">HbuilderX更新日志</a>可以看出，v3版本的编译器是从2.5.1版本加入正式版的，那时候是2020-01-03，直到现在过去2个月，v3版本还不算稳定，<strong>推荐是官方有推出更新就更新</strong> （虽然每次更新填坑的时候也在挖坑） 目前的app开发（整个流程）需要官方的开发工具HbuilderX的支持。因为app的项目热开发、debug、真机运行、打包都需要这个HbuilderX 去做一个 “启动器”的角色。开发上面可以使用其他的编辑器，比如我们的vscode，保存代码HbuilderX会自动编译。 目前我使用的是最新的HbuilderX 2.6.1 ，这里有这个版本的 <a href="https://ask.dcloud.net.cn/article/36837">相关更新</a> 开发插件相关 在菜单栏 =&gt; 工具栏下有插件安装，在这里基本能找到你想要的插件</p>
<h2 id="工程构建"><a href="#工程构建" class="headerlink" title="工程构建"></a>工程构建</h2><p>开发app必须要用HbuilderX ,所以项目的初始化我直接使用了官方提供的基础模板，从而走上了从零构建项目工程的道路… 第二种方式是通过vue-cli，这里官方文档 <a href="https://uniapp.dcloud.io/quickstart">快速入手</a>  有更加具体的说明，这里我不再赘述。</p>
<h2 id="APP打包"><a href="#APP打包" class="headerlink" title="APP打包"></a>APP打包</h2><p>这里介绍了<a href="https://uniapp.dcloud.io/quickstart?id=%E5%8F%91%E5%B8%83uni-app">发布app</a> 的大概资料。app的打包需要HbuilderX完成，这里面涉及到<strong>开发者证书相关的一块</strong> ,正式打包需要原生这边的一些东西。可以需询问相关的开发人员，也可以问我。 我们自己开发测试可以使用官方提供的<strong>测试证书</strong> （打包时候的默认选项）。</p>
<h2 id="插件市场"><a href="#插件市场" class="headerlink" title="插件市场"></a>插件市场</h2><p>以往的从npm的地方的下载的插件通常只支持H5端， <a href="https://ext.dcloud.net.cn/">插件市场</a>则是uniapp相关插件主要获取来源，插件特性是能兼容多端。 插件安装方式</p>
<ol>
<li> 使用npm进行安装使用，这是我们比较熟悉的方式 （但目前使用的组件一般很少支持这种方式）</li>
<li> 手动下载插件的zip压缩包， 解压后直接放入项目文件夹中使用</li>
</ol>
<p>生态 uniapp已经出来这么多年了，而目前生态的状况在我看来，我是不满意的。或许是因为uniapp的稳定性不够或者其他原因，插件市场插件数量少同时质量也不够高（比起我们之前的要差上一个档次），没有一套其他第三方团队提供的比较完整地UI框架，大对数都是个人开发者在做。 文档 插件能否有效利用，文档是一个主要的因素。我个人在使用插件的时候发现大部分插件的文档并不友好（甚至连官方也不是很完善） v3编译器带来的影响 其实自从V3编译器上线正式版之后，经历了一个月的疫情的影响和官方HbuilderX本身的各种小bug不断，目前插件市场的绝大多数组件都没有兼容v3 ，所以可以试着想想对于v3这个版本来说生态是很初始的一个状态的，生态的跟进还需要一定的时间（UI相关的插件会好很多，多半只是UI的布局受到影响）</p>
<h2 id="项目顶层设计"><a href="#项目顶层设计" class="headerlink" title="项目顶层设计"></a>项目顶层设计</h2><p>JS API发生了一个巨大的改变，开发方式相同，但是各项api名字都不一样，但也就只是改了个名字。 出现了一系列对原生的<a href="http://www.html5plus.org/doc/h5p.html">html5+ api</a> (加强版api)。这里会出现很多原生相关的知识点和小技巧，无疑是一大波知识点的补充。 也有部分js和vue的api无法使用，主要原因的一个功能在某个端不存在想对应的概念，或者说不支持这个特性。 比方说微信小程序的请求是不支持发送cookie凭证，而我们常用的H5是可以做到的，cookie凭证在我们的文件上传一类的接口中需要使用到 就是这样，可能是因为官方为了让多端的表现统一，所以在接口设计上就会统一砍掉，保持开发上的一致性。 这样的情况从我来看不在少数 但实际上如果 配置 发送cookie凭证 , 实际上是可以使用的(前提是那个端支持), 同时也不会报错 (注意使用<a href="https://uniapp.dcloud.io/platform?id=%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91">条件编译</a>), 但是官方文档并不会提到这一点</p>
<h2 id="页面适配方案及布局"><a href="#页面适配方案及布局" class="headerlink" title="页面适配方案及布局"></a>页面适配方案及布局</h2><p>适配方案 <a href="https://uniapp.dcloud.io/frame?id=%E5%B0%BA%E5%AF%B8%E5%8D%95%E4%BD%8D">尺寸单位</a>。按照文档，直接使用rpx，简单易用，使用750px宽的的设计稿即可 （什么？给的是1242？自己用ps调）。 我目前99%都是使用rpx, 只有在做少部分比如一些边框的那种细线的时候才会使用到px，但并不是说px使用的场景就很少，这需要各位的挖掘。 并不是现在的所有第三方插件都使用了rpx, 因为有些组件有点年代了, 它们大量使用着upx和px。选择第三方插件的时候请多多注意。 布局和样式 官方首先推荐flex布局, 当然flex本身就是个很不错的选择，我个人也推荐这个，当然同时我们也能使用原本就有的布局方法，这些在vue页面都是支持的（nvue的布局是例外）。 每个页面的css自带作用域, 不用在style中额外声明scoped 样式重置相关 在 uni-app 中不能使用 * 选择器。样式重置是个问题， 比如我们常见的一些 *{ box-sizing:border-box } 这个盒子模型贯穿我们整个项目的一个布局思路, 但目前我自己使用只能每个单独去处理, 比较不方便, 同时没有遇到较好的解决方法</p>
<h2 id="UI框架"><a href="#UI框架" class="headerlink" title="UI框架"></a>UI框架</h2><p><a href="https://ask.dcloud.net.cn/article/35489">多端UI库的基本认识</a> ,下面是介绍我所知道的大多数开发者会使用的UI库。</p>
<h4 id="基础组件"><a href="#基础组件" class="headerlink" title="基础组件"></a><a href="https://uniapp.dcloud.io/component/README">基础组件</a></h4><p>基础组件会是我们业务开发中很重要的组成部分。官方放在基础组件这个位置就说明了态度。 性能来说最好（官方），但UI上来说特别简单（这里input默认情况连边框都没有），需要自己的额外修饰</p>
<h4 id="uni-ui"><a href="#uni-ui" class="headerlink" title="uni-ui"></a><a href="https://uniapp.dcloud.io/component/README?id=uniui">uni-ui</a></h4><p>优点:官方团队维护的组件库， 稳定性和支持性有保证。 缺点：<strong>难看</strong><strong>,</strong> <strong>且业务型组件不够丰富</strong><strong>,</strong> <strong>有的组件甚至没有样式</strong> <strong>(<strong><strong>也可以侧面说可开发的部分很多</strong></strong>)</strong> 这里附上 <a href="https://m3w.cn/uniapp">uniapp相关组件的在线预览</a> 这里有个很奇妙的问题 , 下面这个是组件的引入方式, 在组件中单独引入没有问题, 但当在main.js中想做全局组件引入就会<strong>报错</strong> , 目前没有探明原因 import { uniLoadMore } from ‘@dcloudio/uni-ui/‘</p>
<h4 id="ColorUI"><a href="#ColorUI" class="headerlink" title="ColorUI"></a><a href="https://ext.dcloud.net.cn/plugin?id=239">ColorUI</a></h4><ul>
<li>  css库，为数不多的使用人数多的，比较好看的UI之一，<strong>没有使用文档！</strong> 使用纯靠复制粘贴</li>
<li>  <strong>并没有对组件进行功能上的封装</strong> ， 样式的命名上面也不够谨慎</li>
<li>  不支持nvue</li>
</ul>
<p>我个人是及其不推荐使用这个库的，样式的写法可以作为参考</p>
<h4 id="ThroUI"><a href="#ThroUI" class="headerlink" title="ThroUI"></a><a href="https://ext.dcloud.net.cn/plugin?id=556">ThroUI</a></h4><ul>
<li>  我个人没有使用，但是觉得还可以的一个很完善的有功能封装的UI框架，推荐尝试使用（踩坑）</li>
<li>  不支持nvue</li>
</ul>
<h4 id="graceUI"><a href="#graceUI" class="headerlink" title="graceUI"></a><a href="http://grace.hcoder.net/login">graceUI</a></h4><ul>
<li>  各方面看起来支持性最好的一个第三方UI框架，<strong>但是要钱！</strong> 200一个月，没钱</li>
<li>  各方面支持性很好，支持nvue</li>
</ul>
<h4 id="vant-weapp"><a href="#vant-weapp" class="headerlink" title="vant-weapp"></a><a href="https://github.com/youzan/vant-weapp">vant-weapp</a></h4><ul>
<li>  你没有看错, 这是vant对微信小程序组件推出的框架, 但uniapp本身是支持微信小程序组件的, 当然不好的地方是只支持编译 app、微信小程序、H5，其他小程序不支持。</li>
<li>  同时官方说明使用微信小程序从性能上来说比常规的vue组件、页面性能要差， 这点希望考虑进去。</li>
<li>  不支持nvue</li>
<li>  至少组件很全，还有一个专门的团队在维护呀</li>
</ul>
<p><strong>个人意见</strong> 开发上面我个人推荐是基础组件+ uni-ui + 任意一款第三方UI框架， 首选稳定的官方提供的框架，然后在部分需求去选择业务组件。 v3版本刚出的情况下，难免会出现比较多的问题。特别是那种个人开发者做的独立插件。从UI看来，nvue页面的业务开发速度上明显会落后于常规vue页面</p>
<h2 id="webview"><a href="#webview" class="headerlink" title="webview"></a>webview</h2><p><a href="https://uniapp.dcloud.io/component/web-view">https://uniapp.dcloud.io/component/web-view</a> 我个人总感觉这是个很关健的组件，使用这个组件能完全模仿出以前传统的webiview+ h5的方式。同时通讯各种的api都很齐全。 ps : 目前我使用方面主要是用来app内部打开外链使用。当时我遇到这个需求的时候，期望能找到api直接调用打开webview的方法，我个人认为uniapp的接口设计上是会有这么个接口的，但我寻找了很久都没有找到类似的接口，于是我只能单独做了个路由页面去做webview以处理app内部打开外链。</p>
<h2 id="nvue"><a href="#nvue" class="headerlink" title="nvue"></a>nvue</h2><p>nvue，native vue，即原生的vue，这是这个文件后缀名的来源 。 相关资料 <a href="https://uniapp.dcloud.io/use-weex">官方nvue文档</a> <a href="https://ask.dcloud.net.cn/article/36074%20">nvue不同编译模式介绍</a> <strong>坏处</strong></p>
<ol>
<li> 正如前面所提到的UI框架对nvue的支持普遍不好，意味着nvue页面业务开发速度会受到不少的影响</li>
<li> nvue是基于<a href="https://weex.apache.org/zh/docs/api/weex-variable.html">weex</a> ，意味着使用上你需要接受weex的各种限制，这是个全新的知识点，你需要花想当的时间去消化吸收 （从<a href="https://weex.apache.org/zh/docs/styles/common-styles.html#%E7%9B%92%E6%A8%A1%E5%9E%8B">样式限制</a> 来看，布局上就能受到不小阻碍）</li>
<li> 公用文件相关。在nvue中，我们可能会使用一些公用的组件，但如果想在nvue页面中使用, 组件也得按照weex的规则去写，否则就会报错无法使用，这意味着所有的公用的组件也许你都得考虑做nvue的兼容，这是个不小的工作量。</li>
<li> 特别有意思的是官方的<a href="https://uniapp.dcloud.io/component/README?id=uniui">uni-ui</a> 组件都普遍是在 2019-11-12 才支持nvue（可以点几个组件看看，里面有更新日志），这里面有值得挖掘的部分。虽然目前不清楚之前的nvue发生了什么，连官方都是最近才做完的兼容，我们有理由怀疑nvue整体的可靠性</li>
<li> nvue 专用组件使用方面比较诡异</li>
<li> 调试困难，即便是官方有debug工具， 但能看到的信息不多，调试起来的感觉比较像猜</li>
</ol>
<p><strong>好处</strong></p>
<ol>
<li> 高性能。官方一直推荐的部分需要高性能的场景就推荐使用nvue。个人感受：如丝般顺滑</li>
</ol>
<p>个人意见 我个人使用过nvue， 综合考虑下来是不推荐使用，原因如上面所述。个人是否承担nvue页面给整个项目带来的负担及后续的维护成本（还有面对各种无法难以形容的开发情况保持良好的心态）</p>
<h2 id="http请求"><a href="#http请求" class="headerlink" title="http请求"></a>http请求</h2><p>我试用了插件市场中差不多三款http的插件，最终选择了 <a href="https://ext.dcloud.net.cn/plugin?id=392">luch-request</a> ，因为其余的插件封装不完整，还有细微的bug和不支持的功能。 使用方法与 axios基本相似，少部分不同 , 需要自己对<strong>请求进行再封装</strong> 。   存在的问题 目前这个插件还不支持abort 个人意见 插件市场有好几个模仿axios的的http请求库， 在我的认识里面相似及其功能的插件对于大多数人来说只需要一款，绝对不会出现第二款。而目前在插件市场就出现了3款，且使用人数都相差不大。所以目前插件市场出现这种现象是比较令我感到奇怪，侧面证明uniapp的生态还不算稳定。 反馈 <strong>文件上传</strong><strong>,</strong> <strong>出现问题</strong> 自定义出现难度</p>
<h2 id="vuex相关"><a href="#vuex相关" class="headerlink" title="vuex相关"></a>vuex相关</h2><p>使用方式基本没有差别 <a href="https://uniapp.dcloud.io/use?id=%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">配置使用vuex</a> <a href="https://uniapp.dcloud.io/use-weex?id=vue-%E5%92%8C-nvue-%E5%85%B1%E4%BA%AB%E7%9A%84%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE">nvue使用vuex注意事项</a></p>
<h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p><a href="https://uniapp.dcloud.io/collocation/pages?id=pages">pages.json</a>， 文档明确说明了所有的页面路径都是需要在这里配的， 同时还可以在这里设置对应页面的导航栏的各种自定义按钮呀， 搜索栏， 透明等等。（注意每次配置完后你的热开发都是要重启的，这个不像我们的webpack这块能自动编译） <a href="https://uniapp.dcloud.io/frame?id=%E8%B7%AF%E7%94%B1">官方关于路由的使用相关文档</a> <strong>参数的接收</strong> //钩子 onLoad(query){ //query 就是对象参数， 中文的参数需要使用 encodeURIComponent 和 decodeURIComponent转换处理 } 个人意见 我认为上述的这种做法并不是很好，因为我认为的这种中文转码应该内置处理了，就像vue-router本身不存在这样的问题。 插件市场的 <a href="https://ext.dcloud.net.cn/plugin?id=578">vue-router</a> 是个不错的选择，这个是插件是在uniapp中模拟vue-router，使用之后大致上能延续以往习惯的开发方式，包含了vue-router原本就比较丰富的api。但是目前还不能在v3版本使用，因为v3版本的部分问题没有修复，如果修复了可以尝试去跟进 我目前在这个作者群， 这是作者的相关项目 <a href="https://github.com/SilurianYang/uni-simple-router"> uni-simple-router</a> ，如果方便的可以给作者点个star, 秋梨膏 ~ 反馈 原生api用着还可以</p>
<h2 id="资源路径"><a href="#资源路径" class="headerlink" title="资源路径"></a>资源路径</h2><p><a href="https://uniapp.dcloud.io/frame?id=%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84%E8%AF%B4%E6%98%8E">资源路径说明</a> ，如果背景图片引用上出现问题，参考<a href="https://uniapp.dcloud.io/frame?id=%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87">背景图片- 绝对路径 引用图片</a> 背景图片相对路径引用失败可能是v3版本的一个暂时性的bug 反馈 少数有bug</p>
<h2 id="字体图标-iconfont"><a href="#字体图标-iconfont" class="headerlink" title="字体图标 iconfont"></a>字体图标 iconfont</h2><p>跟原本常规使用方式一致,使用icomoon即可。部分<strong>不适合</strong><strong>/*<em><strong>不能使用</strong>字体图标的场景使用图片代替即可 引入方式 不能像传统项目直接在main.js中直接引用，HbuilderX会报出App平台 v3 模式暂不支持在 js 文件中引用***.css 关于这个暂不支持可能后续会有解决方案,这里将会持续关注 这里提供一个可用的引入方式，就是在App.vue中引入，代码如下： /* #ifndef APP-PLUS-NVUE*/ /*字图标片icomoon */ @import “static/icomoon/style.css”; /* #endif */ 以我们常用的icomoon为例, 我们将icomoon放在static文件加下面并通过上述方式引用, 但是这时候会报错, 提示字体文件 ttf/eot找不到 , 我们需要对其中引用tff文件的引用路径做一下小小修改，</em>*下面是例子</strong> @font-face { font-family: ‘icomoon’; src:  url(‘fonts/icomoon.eot?8v7q4m’); src:  url(‘fonts/icomoon.eot?8v7q4m#iefix’) format(‘embedded-opentype’), url(‘fonts/icomoon.ttf?8v7q4m’) format(‘truetype’), url(‘fonts/icomoon.woff?8v7q4m’) format(‘woff’), url(‘fonts/icomoon.svg?8v7q4m#icomoon’) format(‘svg’); font-weight: normal; font-style: normal; font-display: block; } 我们需要所有的路径改为<a href="https://uniapp.dcloud.io/frame?id=%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87">绝对路径</a> ， 也就是图中的fonts/icomoon 改成 ~@/static/icomoon/fonts/icomoon (这里的路径请根据自己的文件结构自行调整), 修改完后就能够正确使用 。 <strong>当然这么做也有其缺点</strong></p>
<ol>
<li> 每次从字体图标库打包了新的文件下来后<strong>都要修改</strong>.</li>
<li> 还有icomoon预览用的html就失效了 :) , 因为~@是uniapp特有的一个规则，在uniapp中才能正常编译使用，而index.html的路径是常规的引用规则。</li>
</ol>
<p>  这里实际上还有另外一个解决方式， 那就是字体文件转换成<strong>base64</strong>的方式，直接内联进去，这样就不会有字体文件引用的问题 此时或许有人注意到我在上面提供的例子中, 是通过<a href="https://uniapp.dcloud.io/platform?id=%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91">条件编译</a>来引入字体图标的css文件的 , 在nvue的页面中不引人这个css文件, 这么做的原因是主要因为<strong>下面这段</strong> [class^=’icon-‘], [class*=’ icon-‘] { /* use !important to prevent issues with browser extensions that change fonts */ font-family: ‘icomoon’ !important; speak: none; font-style: normal; font-weight: normal; font-variant: normal; text-transform: none; line-height: 1; /* Better Font Rendering =========== */ -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } 这只是一个例子, 因为nvue的 css使用规则是基于weex的, 在这套规则中<strong>不能识别属性选择器</strong>, 会提示报错。这意味着我们放弃了在nvue文件中使用我们自定义的字体图标 ，目前没有找到比较方便的解决方法 ，在nvue页面推荐使用官方提供的icons 组件做字体图标。</p>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p><a href="https://uniapp.dcloud.io/snippet?id=%E4%BD%BF%E7%94%A8-chrome-%E8%B0%83%E8%AF%95-h5">调试相关文档</a> , 正常情况只需要在电脑浏览器上对H5进行调试即可, 基本上H5跟app的表现是一致的, 当遇到比较复杂的问题, 就可以考虑<strong>debug****调试</strong> 普通H5调试 菜单栏 =&gt;运行 =&gt; 运行到浏览器 (选择自己想要打开的浏览器) 真机调试<strong>vue</strong>!页面 菜单栏 =&gt; 视图 =&gt; 显示webview控制台 (其实很像 google 的 inspect) 真机调试<strong>Nvue</strong>页面 <a href="https://uniapp.dcloud.io/snippet?id=%E5%85%B3%E4%BA%8E-app-%E7%9A%84%E8%B0%83%E8%AF%95debug">关于-app-的调试debug</a> , 连接失败可以尝试关闭电脑防火墙，同时电脑和手机要处于同一wifi下</p>
<h2 id="推送和统计"><a href="#推送和统计" class="headerlink" title="推送和统计"></a>推送和统计</h2><p><a href="https://uniapp.dcloud.io/cloud">https://uniapp.dcloud.io/cloud</a></p>
<h2 id="uniapp插件开发指南-（包含原生sdk相关）"><a href="#uniapp插件开发指南-（包含原生sdk相关）" class="headerlink" title="uniapp插件开发指南 （包含原生sdk相关）"></a>uniapp插件开发指南 （包含原生sdk相关）</h2><p><a href="https://uniapp.dcloud.io/api/extend/native-plugin">app原生插件</a></p>
<h2 id="业务组件"><a href="#业务组件" class="headerlink" title="业务组件"></a>业务组件</h2><p>目前这里讲的组件都是<strong>uni-ui</strong>， 看之前推荐去<a href="https://uniapp.dcloud.io/README?id=%E5%BF%AB%E9%80%9F%E4%BD%93%E9%AA%8C">快速体验</a> 下载app，边实时预览边看。</p>
<h4 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a><a href="https://uniapp.dcloud.io/api/ui/prompt">Toast</a></h4><p>uni.showToast({ title: error_message, duration: 2000, icon: ‘none’, //不想要icon需要手动取消 position: ‘bottom’//这个位置的显示会特殊点 })</p>
<ol>
<li> 使用上颇为麻烦, 因为默认是有icon的, 所以每次都需要手动icon: ‘none’ （我很希望能找到一个全局设置的方法）</li>
<li> position: ‘bottom’ 这里面比较特殊，显示的效果是特殊的轻提示 (用app能看出明显区别)</li>
</ol>
<h4 id="Drawer"><a href="#Drawer" class="headerlink" title="Drawer"></a><a href="https://ext.dcloud.net.cn/plugin?id=26">Drawer</a></h4><p>这个侧边栏使用的场景不用我说, 一般首页普遍都会有。这里我想提醒的是这个组件的问题。</p>
<ol>
<li> 先将这个组件开启遮罩，这个组件会有滚动穿透的现象，说明这个遮罩功能是不完善的，但是目前官方仍然没去处理， 官方的想法我暂时看不懂</li>
<li> 这个组件的遮罩有个范围，表现为不覆盖 tabbar（底部栏）,同时也不覆盖导航栏，这种遮罩在部分场景下是不符合需求的</li>
</ol>
<p><strong>解决方法</strong></p>
<ol>
<li> 放弃使用官方提供的组件，去插件市场换个组件</li>
<li> 手动有subNvue实现</li>
</ol>
<h4 id="List"><a href="#List" class="headerlink" title="List"></a><a href="https://ext.dcloud.net.cn/plugin?id=24">List</a></h4><p>我在项目中使用完这个组件之后，我意识到了为什么文档不友好体现在哪里。 首先我们进去一看 示例，这不就是我们移动端常见的cell吗？ 如果认真看虽然很像cell，<strong>但是却没有提供插槽</strong>， 我不认为加入个简单的插槽都这么困难，这里面发生了什么，但原因我目前仍然没有查明 我们继续看文档， 看向使用方式会发现使用的时候需要同时引入uniList,uniListItem这两个组件 ，很明显uniListItem 这个组件基本上就是cell, <strong>同时你会发现当然文档并没有<strong><strong>uni-list</strong></strong>的一个文档或者是相关说明</strong>。 我当时就裂开了， 官方文档竟然能这么写 为了解决这个疑问，我们首先来看源码 <strong>uni-list</strong> <template> <!-- #ifndef APP-NVUE --> <view class="uni-list"> <slot /> </view> <!-- #endif --> <!-- #ifdef APP-NVUE --> &lt;list class=”uni-list” :enableBackToTop=”enableBackToTop” loadmoreoffset=”15” :scroll-    y=”scrollY” @loadmore=”loadMore”&gt; <slot /> </list> <!-- #endif --> </template> <strong>uni-list-item</strong> <template> <!-- #ifdef APP-NVUE --> <cell> <!-- #endif --> &lt;view :class=”disabled ? ‘uni-list-item–disabled’ : ‘’” :hover-class=”disabled                 showSwitch ? ‘’ : ‘uni-list-item–hover’” class=”uni-list-item” @click=”onClick”&gt; <!-- ...其余代码 --> </view> <!-- #ifdef APP-NVUE --> </cell> <!-- #endif --> </template> 可能这里放代码不合适，可以去<a href="https://www.npmjs.com/package/@dcloudio/uni-ui">npm地址</a> 下载下来看源码会更适合。 这里我们应该把目光着重放在 其中的条件编译部分的代码，会发现这两个组件会在nvue页面中， 使用 list、cell 这两个<a href="https://uniapp.dcloud.io/component/list">nvue专用的原生组件</a> , 文档明确说明了这两个组件之间的关系, 即 能作为list组件的一级子组件的组件只有cell、header、refresh、loading，而cell就是其中1个； 同样的能作为cell组件的父组件的只有list、recycler、waterfall，而list是其中一个 让我们尝试一下错误示范, 在nvue页面中，如果我们如下方这么写，那么就会提示报错，因为这是不符合规范的 <list> <view></view> <!--或者是其他规范外的组件--> </list> <!--or--> <view> <cell></cell> <!--或者是其他规范外的组件--> </view> 至此我们能理解为什么uni-list和uni-list-item会在文档中成对出现了, 多半是不希望有人在nvue页面使用这个组件的时候出错。<strong>但文档并没有能对这个情况做一个很好的说明</strong>，能想象得出来，会出现这种情况并不会只是在这个组件中。 官方已经为所有的组件进行了nvue的适配，无论是否使用nvue，至少我们知道使用nvue的时候会遇到更多的障碍，各位在使用的时候要谨慎应对。</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="小于1px的细线条"><a href="#小于1px的细线条" class="headerlink" title="小于1px的细线条"></a>小于1px的细线条</h3><p>/*其实跟vant的方案是一样的, 通常的1px看起来是会有点粗,只需要设置1px再通过transform 之后就可以达到想要的细线条,这个方法在hbuilderx2.6.1.202002261 后证实有效*/ &amp;::after { content: “ “; position: absolute; height: 1px; top: 50%; right: 0; left: 0; background-color: #d2d2d2; transform: scaleY(0.5); }</p>
<h3 id="富文本解决方案"><a href="#富文本解决方案" class="headerlink" title="富文本解决方案"></a>富文本解决方案</h3><p>这里是指类似v-html的过程 大部分情况下我们使用v-html， 替代方案 <a href="https://ext.dcloud.net.cn/search?q=uparse">插件市场富文本</a></p>
<h3 id="报错日志"><a href="#报错日志" class="headerlink" title="报错日志"></a>报错日志</h3><p>这个我认为也是比较重要的东西， 因为有些错误只会在特定情况下发生（app的确很容易这样），事后的问题重现难度大。应该要统一做个错误日志，好方面问题排查 比如用onError的钩子去处理 <a href="https://uniapp.dcloud.io/use?id=%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">https://uniapp.dcloud.io/use?id=常见问题</a> <strong>目前并未探索出比较好的错误预警方式</strong><strong>!</strong></p>
<h3 id="顶部栏和底部栏相关高度"><a href="#顶部栏和底部栏相关高度" class="headerlink" title="顶部栏和底部栏相关高度"></a>顶部栏和底部栏相关高度</h3><p><a href="https://uniapp.dcloud.io/frame?id=css%E5%8F%98%E9%87%8F">https://uniapp.dcloud.io/frame?id=css%e5%8f%98%e9%87%8f</a></p>
<h3 id="自定义导航栏"><a href="#自定义导航栏" class="headerlink" title="自定义导航栏"></a>自定义导航栏</h3><p>实际上官方提供的原生导航栏本身就很强大!包括了各种你想的到的常见需求,例如 常见搜索栏, 各种按钮 <a href="https://ask.dcloud.net.cn/article/34921">uni-app导航栏开发指南</a>, <a href="https://uniapp.dcloud.io/collocation/pages?id=customnav">官网文档对应部分</a> 但同时应该也要注意<a href="https://uniapp.dcloud.io/collocation/pages?id=customnav">相关问题</a>，避免开发上面出现比较大的问题。 当需求特别诡异的时候，可以考虑 <a href="https://ext.dcloud.net.cn/plugin?id=52">前端模拟导航栏</a></p>
<h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><p><a href="https://uniapp.dcloud.io/collocation/pages?id=app-pulltorefresh">官方文档- 下拉刷新</a> 原生自带的下拉刷新我全局关掉了，目前我的做法是在需要地方单独做下拉刷新 （nvue页面），但并没有对下拉刷新进行抽象 （官方的示例中也不抽象）。 常用列表的下拉刷新方案 (vue) <a href="https://uniapp.dcloud.io/api/lifecycle?id=%E5%BA%94%E7%94%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F">应用生命周期</a> ,每个页面提供了对应的下拉刷新 onPullDownRefresh和上拉刷新 onReachBottom的 生命周期. <a href="https://uniapp.dcloud.io/api/ui/pulldown">下拉刷新的更多妙用</a> , 这里你甚至能手动调用下拉刷新</p>
<h3 id="登录模块"><a href="#登录模块" class="headerlink" title="登录模块"></a>登录模块</h3><p>实现方面可以参考HBuilderX新建uni-app项目时的登陆模板。 <strong>登录页不一定要设为首页</strong> 页面呢..及相关微信登录等其他<a href="https://uniapp.dcloud.io/api/plugins/login">第三方登录</a> , 可以参考登录模板或者插件市场的相关代码。 总体来说做起来不会太难</p>
<h3 id="扫码-二维码相关"><a href="#扫码-二维码相关" class="headerlink" title="扫码 (二维码相关)"></a>扫码 (二维码相关)</h3><p><a href="https://uniapp.dcloud.io/component/barcode?id=barcode">内嵌扫码</a> <a href="https://uniapp.dcloud.io/api/system/barcode?id=scancode">接口调用扫码</a></p>
<h3 id="返回逻辑自定义"><a href="#返回逻辑自定义" class="headerlink" title="返回逻辑自定义"></a>返回逻辑自定义</h3><p><a href="https://ask.dcloud.net.cn/article/35120">https://ask.dcloud.net.cn/article/35120</a></p>
<h3 id="返回上个页面并刷新（回调）"><a href="#返回上个页面并刷新（回调）" class="headerlink" title="返回上个页面并刷新（回调）"></a>返回上个页面并刷新（回调）</h3><p>使用场景 常用是提交表单之后返回上个页面并刷新列表 <a href="https://ask.dcloud.net.cn/question/64481">uniapp社区相关解决方案</a> <a href="https://uniapp.dcloud.io/collocation/frame/window?id=getcurrentpages">getCurrentPages文档</a> let page = getCurrentPages();//获取页面栈 let prevPage = pages[pages.length - 2];//获取你想操作的对应页面 // #ifdef APP-PLUS prevPage.$vm.test();//app端写法 // #endif // #ifndef APP-PLUS prevPage.test();//调用列表页面方法 // #endif uni.navigateBack();//跳转页面的操作,这个一定要放在后面不然page 这些就会失效 //test 是对应页面的对应方法 没有, 因为其他平台式并不一定有dom这个概念的</p>
<h2 id="其他推荐"><a href="#其他推荐" class="headerlink" title="其他推荐"></a>其他推荐</h2><p><a href="https://juejin.im/post/5d48eac9518825403769d9ad#heading-24">掘金-uni-app的开发经历</a></p>
<hr>
<p>感谢 <strong>李坤泉</strong> 前端大佬的投稿…</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>uni-app</tag>
      </tags>
  </entry>
  <entry>
    <title>一位学霸从小学到博士的92条学习感触</title>
    <url>/286/</url>
    <content><![CDATA[<p>1、小学时代如果能写一手工整的字，具有准确的数学运算能力，OK，完美了。对以后的学业生涯够用了，所以尽量给孩子五彩缤纷的童年吧。。。。。 2、小学和中学这十二年的学习内容，都是几百年甚至几千年以前（阿基米德啊、牛顿啊、笛卡尔）人类创造以前的东西，思辨性不高，真的不难。</p>
<p> 3、如果想要拿诺贝尔奖或者当选两院院士，这个要看天赋和智商，但是学那些几百年以前的东西，考个好的大学，基本和智商无关。和什么有关？情商！ 4、学习不好的同学，基本都是严重拖延症患者，今天的事能拖到下个学期。</p>
<p> 5、勤奋永远是真理吗？！教育学理论里面有个“有效时间”的概念，看你的心用在学习上面的时间是多少。所以看到班上很多拼命学的学不好，玩的反而学的好的，不要惊讶。</p>
<p> 6、总是期待天才，我就读的都算是不错的高中大学，读书读到现在都没有看到无师自通的天才。同学的差距是有的，差距在哪里？接受能力和专注程度，这些都是情商的范畴。</p>
<p> 7、时代发展的当今，似乎城市里面的孩子更容易在学习方面出人才，我大学的同学只有不到三分之一的农村孩子。</p>
<p> 8、但是农村的孩子要么不读，读就会读的非常好。“寒门出才子”是真理！高中、大学里面学习拔尖的一般家境都不好。我就是地道的农家子弟（是不是自恋了，原谅我哈）。 </p>
<p>9、女孩子小学一般成绩都不错，到了初中就不是太好了。这个是什么原因？！教育学给出的是生物学解释，Thelawofthenature.</p>
<p> 10、有鉴于第9条，女孩子上了初中一定要对数学引起高度重视。哎，多少曾经优秀的女同学最后学业毁在数学上。。。。呜呜。 </p>
<p>11、对于成绩不好的同学，家长总是期待出现奇迹，成绩突然“冒起来了”。什么样的同学容易冒起来？似乎一般是男生并且一般很调皮。 </p>
<p>12、初二真的很关键。基本是分水岭，所以要重视初二的学习啊。。。 </p>
<p>13、初中时形成思想观和价值观的时候，这个时候有人带坏就带坏了。与其多花时间给孩子找家教找辅导班，不如多注意孩子身边的玩伴和朋友。有句土话叫做“人搀不走，鬼搀飞奔！”多关注孩子的生活吧！</p>
<p> 14、家长如果发现孩子突然学业成绩掉得厉害，请参照13条。</p>
<p> 15、“网络是是把双刃剑，有好有坏”。我的看法是：千万不要任由孩子沉溺网络！沉溺于网络，学业必然受影响！不过，现在的孩子，已经视网络为我们时代的电视，父辈时代的收音机，网络已经常态化、工具化，节制是关键。</p>
<p> 16、孩子没考上理想的高中，该不该交择校费让他继续读？！这个要分类讨论。如果的确是自然灾害，孩子临场没发挥好，那砸锅卖铁都要交。如果是确实已经不想学了，那就不用拿血汗钱养活一帮教书先生吧，此类择校生考上好大学的是特例，自己申请退学或是被开除的到是很多。。。。</p>
<p> 17、刚才说“砸锅卖铁都要交”是不是过分了？！我觉得，小学、初中在哪个学校读不重要。高中真的太重要了。。。。为什么？因为高考是选拔性考试，其他的不是。</p>
<p> 18、英语怎么学好？我的经验是多听，就像我们从小听方言所以就会说一样。英语也是一门语言，不要过分强调语法啊、结构啊、我认识的母语是英语的外国友人没人搞得懂自己的语法（我们中国人又有多少知道汉语里面的主谓宾定状补？！），请不要妖魔化英语。</p>
<p> 19、我真的要强烈建议多听英语，每晚睡觉前听半个小时。长期以往，英语保证不会差的。</p>
<p> 20、插播一段自己的小故事：记得我小时候是个调皮大王，初一的时候英语总是不及格，后来家里发生变故，母亲重病一下子家境窘迫一贫如洗，十四岁的时候母亲去世对我打击很大，自己开始知道好丑了。恶补英语，每晚都在听，我喝学校免费的照见影子的稀饭，总是把早上买包子的钱拿去买电池（话说那个时候电池质量不好），看着别人吃包子，肚子真的好饿啊…… 后来我中考英语满分，高中英语接近满分，大学获得了全国大学生英语竞赛一等奖。非英语专业第一人哈。由于专业排名第一，我跳过硕士，被直接保送博士了。 很多人问我有没有学习英语的窍门？我只是给两个字：多听（话说我现在还在每晚听英语。） </p>
<p>21、孩子要不要住不住宿呢？！我的建议是还是住宿好（批注：这个要因人而异，损友一堆，也许会带坏。），集体的氛围有利于孩子更加培养团队意识，知道怎样和其他人交往。这个社会，死读书的人不招待见的。但是要关心孩子的成长，请参见13条。</p>
<p> 22、如果读书好算是成才的话，那么成才的人毕竟是少数，不要太苛责孩子。只要努力的都是好孩子，但是一定要成人，人品不管什么时候，都是最重要的。</p>
<p> 23、应试教育的体制下，你不会还真的相信“素质教育”吧？！小学时代可以过的五彩缤纷，但是上了中学……还是现实点吧。 </p>
<p>24、我和我学生的一段对话： “我对数学这门科目没兴趣……呜呜。” “孩子你二十岁了，都高三了，不到一年就高考了，你和我说你对数学没兴趣，我给你讲讲科学家小时候的故事？！再给你培养兴趣？！” </p>
<p>25、我都读博士了，至今不知道兴趣为何物。而那些天生对数理化感兴趣，而对玩游戏打篮球不感兴趣的名人典故，从人性角度出发，我更愿意相信只不过是讹传。在应试教育的体制下，我的解释是“不讨厌就是兴趣”。所以咯，其实考大学就是看谁对自己更狠……你信不信？！ </p>
<p>26、早恋都是坏事？！我不觉得，在我身边就有一对高中同学，一起努力互相勉励互相加油走过苦难的高三，最后都考上了很好的大学（我怎么可能会告诉你那个男主角就是我！）。 </p>
<p>27、我在提倡早恋？！错了。我还没说完，就我身边的例子而言，这种单纯美好励志向上的恋爱发生的概率基本和你买彩票中了五百万一样。所以，还是花花肠子收起来，好好读书吧。但是还是有许多人会买彩票……爱情来了真是挡也挡不住啊。</p>
<p> 28、数学怎么学？！我数学一直都不错，我觉得这是一门技巧性的学科，小学要求要运算准确就行，中学主要由四个思想方法：数形结合、分类讨论、函数思想、划归与转化。</p>
<p> 29、那个四个思想方法，是我上大学在一个月黑风高之夜，总结高中学业和高考经历悟出来的（夸张啦？！哈哈哈），可惜已经迟了。我曾经断言，只要把这四种方法掌握了的，永远不要为数学而担心。话说我本科时期辅导过一个高中学生三年，本来数学基础一般，最后这么一灌输，考上了中科大！擦，比我考得还好。</p>
<p> 30、如果英语的秘籍是多听，那么数学就是整理错题。</p>
<p> 31、太重要了！整理错题。我最辉煌的战绩，是辅导一个初二的女生，一开始期末数学只有36分，最后期末考试考了115分！！那位家长期末奖励了我五千大洋。。。。。我是怎么做到的？我勒令她订正所有遇到的每一个错题，最后考试时候就基本没有错题可订正了……</p>
<p> 32、为什么订正错题这么重要？！因为其实初高中数学所有的题型就那么多，把盲点都找出来就无敌了。。。。这是为什么。请参见第2条。 </p>
<p>33、你以为你数学只能考一般，你只是学会了一般的知识？！错了，你掌握了一大部分知识，只是有几个没掌握。就是那个没掌握的，总是做错。而考试，考的都是综合题，一个知识点没掌握基本就一票否决了、、、、、错题啊，真的是太重要了。</p>
<p> 34、话说我初高中数学错题本写了五本，那个我辅导三年的最后考上中国科学技术大学的高中生写了七本。大概这就是为啥他高考数学考的比我好的原因吧。。。。。。</p>
<p> 35、数学学得不好的同学，一般都很两个明显的缺点：粗心、没有毅力。英语学得不好的同学有个共性的缺点：懒！</p>
<p> 36、我至今没看到学习很刻苦，但是英语差的，如果您遇到过请您给我引见一下，增加我的阅历。学习认真但是数学差的有几个，主要还是不得要领，做的是无用功。参见第6条。</p>
<p> 37、英语的学习，有很多方法，但是多听无疑是最快最有效的。这个要坚持，而且真的要坚持。每次想到自己切身学英语的经过，再看看一些教育砖家们总是喜欢把学英语上升到形而上学或者上升到方法论的境界，真是玄之又玄。我，只能莞尔一笑。</p>
<p> 38、英语的提高，真的是个长久的过程，提高的速度较慢，但是考试的稳定性能好。尤其是高中，发现没有，班上拿英语第一的总是她或者他？！ </p>
<p>39、你问我英语听什么好？我的回答是：小学随便听听，不要太有目的性，培养兴趣为主；初中听课文，高中听历年高考题。</p>
<p> 40、还是有人想和我聊聊兴趣。小学的时候，强烈还是不要太压迫孩子了，真的。著名的“起跑线”理论不知道扼杀了多少美好的童年，童年刚至心先老，长使英雄泪满襟啊……在我大学同学中，不乏从小家境很好的同学，我看到的真相是：凡是小时候的家人强迫学（钢琴、小提琴、六弦琴等等各种琴）的几乎没有坚持下去，把其当成事业的。而他们回忆起来的时候，只剩下一段灰暗压迫的岁月，这就是艺术的熏陶？！真的有这种必要么？</p>
<p> 41、初中强烈要听课文啊！！初中是义务教育阶段，要知道，中考是必须保证很高的及格率的！！所以，很多中考试卷的真题都是来自课文原句的改写或者同一题材的改写，主要考固定搭配、语法（主要是从句）、一词多义、习惯表达，因为知识点就那么多。如果哪一次出卷老师出的都是课本以外的知识点，这先生必火无疑，他没法向全市人民交代。。。。。</p>
<p> 42、当年明月在，曾照彩云归啊。记得那时我把自己的早饭钱全部奉献给了社会主义现代化电池厂事业，每晚都听课文，以致最后课文每篇都能背上，后来你知道了，不自吹自擂了……</p>
<p> 43、我按照这样的英语学习方法，勒令我的学生背课文，真的要求严格啊，一开始他说自己很痛苦，各种尥蹶子，我还是能HOLD住他的，他初三的课文现在背的滚瓜烂熟。教了不到一年，现在已经稳定在115+，毫无压力（过几天他就参加中考了，我在重庆教的最后一个学生娃，祝他好运！）。</p>
<p> 44、其实中考英语拿高分真的很简单：如果哪位参加中考的同学，能把初二上学期到初三下学期的所有英语课文背的滚瓜烂熟，也每天都在听英语，正常发挥的状况下中考竟然没有考到110+，我绝对要振臂一呼，号召不明真相的群众们去教育局与英语出卷老师当面交涉。不肖生立此贴为据。</p>
<p> 45、高中其实和初中区别很大的，因为即使在大学如此扩招的今天，重点大学录取率依然不足百分之十。初高中最大的差距是：初中只要能把课本看明白就能考得不错，高中即使把书本看烂可能也只是及格分。。。。 </p>
<p>46、高中切记要多听听高考历年真题，太重要了，能背诵更好。高考很坑爹的，真的，选拔性考试压力太大。,我高三后期看到每一个选择题我都能说出这是哪一年哪一个省份的。高中想考名牌大学的（全国前二十是名牌。全国前五十是重点。全国前一百是知名），一定要认真研究高考真题，你会发现一些规律性的东西，江苏高考每年出题目的几乎都是那帮名师们，能没规律吗？！？！但是不要到了大学才后知后觉。很神奇的，你信不信？！</p>
<p> 47、该说数学了，数学真的是个大问题。做家教时我宁愿那个孩子语文英语物理化学地理政治生物历史乃至音乐体育美术都不好但是唯独数学好，也不希望孩子数学很不好其它都好的。因为，经验表明，数学的提高似乎我要花更多的功夫，尤其是把数学提高到一个稳定发挥的水平，实非一日之功。 </p>
<p>48、小学数学没啥说的，家长多管管吧，我甚至认为小学生根本没必要找家教找辅导班。我以前开家教班，从来不招小学生，也没教过小学生家教。不想扯淡，误人子弟，参见第1条。</p>
<p> 49、那些总是忙着做生意、忙事业不顾小孩子的家长们，总让我联想到小时候玩坦克战，自己在外面杀敌，老家即将被人轰了还蒙在鼓里，继续开心的驰骋疆场。不知道他们奋斗是为的啥？！近年来留守儿童屡次出现各种端倪，我只能说，社会有时候真无奈。</p>
<p> 50、如果硬是要我给一个小学数学的建议的话：学学奥数吧，对于开拓思维确实会起到作用。没有坏处的，而且要是一不留神，发现了自己孩子原来是个难得一见的数学神童，直接保送大学自不在话下，要是给国家争光了，岂不是举家幸甚、万民幸甚。。。。</p>
<p> 51、初中几何基本上可以作为中国教育的缩影，玩文字游戏和脑经急转弯更多余实用性。我这学期还有过一次，做一道初三几何证明题没做出来的（好没面子啊），那个题目是圆和相似性的结合，不容易想到辅助线的做法。属于脑经急转弯一类的，奇技淫巧，不足道也。</p>
<p> 52、高中是不学几何（空间几何除外）的，不会遇到初中那种坑爹的数学证明题，方法性和方向性比初中突出很多，不会让你因为没想到辅助线的做法，就被判0分。感谢党，感谢政府，感谢YCTV，感谢JSTV，将来还有可能感谢CCTV，对寒窗苦读苦求功名的学子们厚爱与仁慈！！</p>
<p> 53、即使那种坑爹型证明题也只有五分（一般是试卷倒数第三题的第二小问）。初中没啥特别难的，二次函数基本算最难得了吧，二次函数屡次被选作中考的压轴题，很锻炼思维，这个一定要多练。尤其是想考名牌高中正取生的同学们。。。。。。、、、 </p>
<p>54、语文这是个尴尬的学科，尤其是上了中学。先插播一段坊间流传的一则轶事：话说北京某年中考选用了巴金先生的一篇文章作为现代文阅读材料，有好事者就把这篇现代文阅读让巴金先生做（巴金先生05年去世，缅怀一下），最后这篇现代文阅读满分二十分的情况下，巴金只得了七分，最难理解的是，有一个题目问“此处作者这样说的深层含义是什么？！”，巴金作为文章的作者，给出的答案与标准答案竟然相去甚远，被判不得分。。。。。 </p>
<p>55、语文基本只要把字写好了，基础知识（拼音、名句、成语、病句）掌握了，就成功一大半了。语文的改卷主观性很大，不要花太多时间，这个意义不大，实践表明这个科目只要认真发挥不怎么拉分的。</p>
<p> 56、我在担心上面一段话，会不会引起语文老师们集体对我口诛笔伐。我在让大家忽视语文的学习？！我们可能不会要求早餐店的师傅给你做个周长为十六内切角为八十度的正七边形黄桥饼，我们可能一辈子也不会达到和外国人交流无碍的境界（要那些学英语翻译专业的干啥？！），但是我们每天都在写汉字，说汉语。其实，语文是人生中最重要的一门学科，一个文采斐然、出口成章的人，走到哪里都会受欢迎。要怪的是这种工业化大生产的、急于求成的教育体制。</p>
<p> 57、腹有诗书气自华。多读课外书吧，天文地理历史人文都要读一些。书籍会给你打开一翻新的世界，中国古典文学让人陶冶情操，心清气静。我发现理科学习特别好的都喜欢读课外书，而且知识全面，充满灵气，我觉得两者不无关系。</p>
<p> 58、如果培养孩子的兴趣爱好，我弱弱的建议让孩子学一些中国风的吧，民族的才是世界的。不要一窝蜂的学钢琴、小提琴、舞蹈，学学书法、戏剧、国画吧。尤其建议写书法，学习学的心气浮躁，写上一段名人字帖会让人清静，我一直热衷于临摹赵孟睿侨圆坏靡觳牙⒉牙?淳缫材艹稀短负ぁ贰墩渲樗》《买油条》那么经典的几段，艺术细菌作祟啊。 </p>
<p>59、我从来都不觉得初中的物理、化学属于理科的范围，尤其是初中化学。因为题型之固定、题材之简单、思维方式之单一、计算之粗略让人不忍心把他们归类到理科的范围。</p>
<p> 60、如果哪位孩子初三化学没学好，和英语一样，基本就是一个字：懒。</p>
<p> 61、读书从来就是一件很单纯的一个人的事情，和你的家境、出身、人品、父母关系不大。我上了大学，慢慢接触社会，我常想如果所有事情都能像高考那么单纯简单就好了。</p>
<p> 62、读书真的和有没有钱关系不大，这一段是给家境不好的孩子看的，衣食无忧的孩子们可以绕过去，直接下一条。从初中到大学，我在班上一直家境是最差的，母亲早逝，父亲在外地打杂工。我是爷爷奶奶把我培养大的，和他们打电话他们常常戏言，我就像他们的小儿子一样。我大学学费自己贷的国家助学贷款，我这人重脸面，从不接受助学金或者开口向同学借钱，大一最辛苦的时候一天只吃两个馒头就白开水（现在想来真的好傻啊！！！）。后来可能家教做的还算用心细致有效果吧，酬劳都给的不低，“出场费”也水涨船高。加上每年的国家奖学金（八千大洋）,生活费自己足够花，有时还会给家里寄一点。现在我有幸拿到了全额奖学金攻读硕博连读，我想可能我以后再也不用为没钱读书而担忧了，但我很感谢这段日子，以及那些曾经在我最困难的时候帮助过我的人，我这辈子都不会忘记的。和我以前的同学相比，虽然现在我没房没车没家庭，但是我真的很知足。我喜欢单纯的读书学习写字，我把自己的兴趣当作自己的事业，夫复何求？！ 而这一切，都是自己一个人努力奋斗起来的，我已经没啥遗憾了。任何时候对明天都要充满美好的希望，乐观点，豁达点。天下寒门学子勉乎哉！！</p>
<p> 63、英语听什么，这个是问的最多的一个问题。这个第二篇里面已经阐述了：小学随意听什么、初中听教材课文、高中听历年高考题。</p>
<p> 64、不要让孩子太早接触网络，这个真的不是什么好东西。</p>
<p> 65、有人发消息问我“我孩子严重偏科，其他科目能考130几，但是英语只能考50几，马上中考了，怎样让他中考成绩不偏科呢？！”我开玩笑的回答道：“让他其他科目都考50几就可以不偏科了啊”。我想说的是：这是一个长期的过程，应该早点关注，采取有效地学习方法，把偏科扼杀在摇篮之中。 66、我敢说：如果您的孩子能够每天做个学习计划，每天列出需要完成的任务，睡觉前逐一打勾，他的学习效率会快两倍，也会更加喜欢学习。你信不信？！</p>
<p> 67、实践表明，调皮自负的孩子比沉默自卑的孩子要更好带些，成绩提高的更快。</p>
<p> 68、关于报考志愿：除非家庭经济情况已经到达财团的境界、或者关系已经强硬到出路已经内定了、或者对某一门专业抱着非此专业不读大学的决心，我不是很建议男生读文学、英语、哲学、政治、环境、生物工程等“形而上”的专业。</p>
<p> 69、我不否认三百六十行行行出状元。但是我更不否认在社会分配如此不公、就业压力如此大的今天，男生入错行，怎么能说是悲剧呢？！那简直是惨剧啊！我在的本科大学是一所综合型大学，这几乎是所有毕业生的共识。</p>
<p> 70、大型考试比如高考、中考、研究生入学考试，那种感觉和平时考试是完全不一样的，必须承认临场发挥的重要性，你平时一定要刻意训练这一点。怎么样算是训练合格了呢？！平时就是中考，中考就像平时。</p>
<p> 71、粗心只是你做的还不够，熟练程度还没达到！我从来不知道什么是粗心，我也不觉得世界上有粗心这回事。“粗心”二字，不知道多少次被当做借口掩盖了事实的真相，害死了多少英雄好汉。你以为你会做了，其实你还没有那么熟练很容易“粗心”，这在大型考试里面会害死人的！！！ </p>
<p>72、我和我学生的对话：学生说“老师，我本来可以考140+的，因为粗心最后只考了120+”我问“1加1等于几？”他回答道“等于2。”我说：“题目只有会做和不会做两种，不得分就是不会，这个在大型考试里面从来都是这样。为什么你1加1等于2没有粗心？！所以你要做的是把你的熟练程度和对知识点的认识再提高一个境界，这些题目对于你来说都是1加1等于2的问题你就无敌了，把这些错题认真的誊写到错题本上，这个就是你最宝贵的财富。”话说这孩子后来数学考试只要会的就是对的，再也没有因为“粗心”丢过分。</p>
<p> 73、你现在知道为什么你的错题本总是那么几张纸就没有再订正了吧？“哎呀，这个题目其实我是会做的，只是粗心了，计算出了点问题，下次注意就行了。没必要誊写到错题本上吧”。那我只能起到文殊菩萨保佑你中考高考不粗心吧！</p>
<p> 74、坊间似乎总是把考试临场发挥的作用扩大化，常见的夸张版本就有：“额，那个细小的额，本来能考上清华大学的，高考肚子泄头昏，最后没考上清华大学，考上清华厨师培训职业学校学厨师了”。“额，我宝宝一个同学咯，本身成绩不如我家宝宝的，高考我家宝宝没发挥好。最后他考上了南京大学，我家宝宝考了南京职业大学了”。</p>
<p> 75、经济学里面有个理论叫做“价格围绕价值上下波动”，具体例子就是一盒火柴再怎么涨价，也不可能比一辆汽车贵，因为固有劳动时间不一样。这个可以用来说明这个大型考试发挥的问题。我读书读到现在，没看到过黑的发亮的马或者白的刺眼的马，小黑马或者小白马很常见。</p>
<p> 76、高考、中考实际上是对你学习、心理素质、抗压能力、协调能力等综合能力的考察，不光考察学习，我想这也是高考中考存在的合理性之一吧。</p>
<p> 77、那些抱怨自己因为考试当天过度紧张、腹泻、失眠、头疼、失恋、遭人暗算等总总原因没发挥好而与理想学校擦肩而过的同学，如果有这种认识，是不是那些念兹在兹的纠结和遗憾释怀了很多？！ </p>
<p>78、中考、高考几乎是我所有已知的国内考试中最公正公平的了，尤其是对于农村的孩子，是一个很好的也几乎是唯一的改变命运的机会。所以我看到很多农村的、家境一般的孩子也跟着叫嚣取消高考，改变现行人才选拔方式的时候，我，表示不能理解。</p>
<p> 79、我有点后悔在以前过度强调英语多听，实际上除了多听以外还有一个大问题：词汇量。不背单词只听英语的人想学好英语，我不大相信有这种可能。 80、我敢说，高中英语得词汇量者，得天下。我曾经把一个暑假的时间背完了一本星火英语单词册，我高考的时候，一份高考英语试卷没有我不认识的单词，与看中文别无二致。我都是这么要求我高三学生背诵课外常用单词，起码要达到大学四级单词水平，效果很好，一劳永逸，发挥稳定，高三后期英语根本不用操心。每一个高中生都被要求去背课本单词，但是高考是选拔性考试，你知道为什么只背课本单词HOLD不住高考了吧？！</p>
<p> 81、一份模拟考试卷子，假如你考了一百四十分，你是不是很开心？！我不觉得，因为实际上你花了两个多小时去考试，又花了很多时间听老师改卷、评奖，而实际上对你学习进步有意义的只是那个丢掉的十分，知道了这一点，你还会轻视错题么？！</p>
<p> 82、改写一位伟人的名句。‘错题本的步伐应该再迈大一点“，你觉得只有数学有必要订正错题？！</p>
<p> 83、在错题本订正错题的时候，请用不同颜色的笔，注明题目当时为什么写错了，以及心得体会，不要干巴巴的只是错题而已。</p>
<p> 84、学自然科学的都知道，哲学是一切自然科学的本源，数学思想方法其实属于哲学方法论的范畴。我们国家的中等教育很忽视数学思想方法的讲解与提炼，却经常考察一些涉及数学思想方法的题目，这个本身就是一对矛盾。数形结合、分类讨论、函数思想、化归与转化这四种方法，高三我会专门讲一个学期，初中我会讲半个学期。说实话，效果好的有时候我自己都不敢相信，就是能明显感觉到学生突然开窍了。</p>
<p> 85、是不是经常有一些题目（比如大型考试的压轴题），会出现没有思路，不知道怎么下手的情况？如果基础过关的情况下，那就是数学思想方法还不到位，就是常说的“不开窍”。</p>
<p> 86、我如果是数学教师，我一定不按教学计划讲课，我会专门讲一个月的思想方法，磨刀不误砍材工，真的太有用了。</p>
<p> 87、对数学史和数学思想方法掌握后，学生能够高屋建瓴的角度看题目，几何和代数已经没有明确的界限，有的时候看到一些题目，就有思想方法像虫子一样在脑子里蠢蠢欲动，比如看到数列我就想到用函数的方法去解答，看到一个函数解析式，我就试图做出它的图像，数形结合看看它的性质。大有裨益啊！</p>
<p> 88、小学五六年级其实挺重要的，承上启下，尤其是一些数学应用题，考验你的抽象思维，而智商最重要的考核标准就是抽象思维。</p>
<p> 89、字一定要写好啊！从小就要写好，这个也是一劳永逸。我所在的大学，每年都被选作高考中考的阅卷点，同样的卷子，卷面整洁与否判分也迥然不同，这是我有幸进高考阅卷现场后观察得出的结论。</p>
<p> 90、奋斗永远都是一个连续的过程。我的意思是没有包括中考、高考在内的任何一场考试可以作为学业的一个节点，如果你觉得过完了中考或者过完了高考我就轻松了，那你真的需要再去成熟一下。路遥《平凡的世界》一句话一直激励着我：把辛勤的耕作当作生命的必要，即使没有收获的指望依然心平气和的继续耕种。 </p>
<p>91、话说我高中那些发挥不好的同学，研究生都考的是清华大学、复旦大学、上海交大、浙江大学等名校。所以高考很重要，但是也没“一考定终生”那么离谱。</p>
<p> 92、学途漫漫，考试多如牛毛，发挥或好或坏，或喜或悲也很常见。即使不能做到“不以物喜，不以己悲”的境界，也要好好考虑坚持的价值。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
      <tags>
        <tag>人生回忆</tag>
      </tags>
  </entry>
  <entry>
    <title>作文素材。</title>
    <url>/417/</url>
    <content><![CDATA[<p>1、诺基亚的成功</p>
<p>一个企业置身商界犹如一个人置身社会，其生命的旅途中，形形色色的诱惑是很多的，可贵的是世界名牌企业一旦认准了属于自己的一点之后，敢于舍弃其他的一切，而且为了将全部力量集中在这一点上，最典型的例子是诺基亚。1990年的诺基亚，因产业领域过宽而濒于破产，后来老总决定只认准一点–手机，将其他产业全部舍弃(包括卖掉一个年利润800万美元的制药厂)，5年后它便东山再起了。</p>
<p>提示：专心容易成功，路多了踩不死草。舍弃。</p>
<p>2、杨时程门立雪</p>
<p>宋代著名学者杨时，四十岁时拜程颐为师。一个下雪的中午，杨时和他的同学在读书时产生了疑问，便去请教程颐。当时，程颐正在午睡，他们便站在门口，静等老师醒来；待程颐醒后发现他们时，他们站的地方已在雪地里留下了深深的脚印。</p>
<p>提示：尊师不是做秀，心诚能求真知。尊重知识。</p>
<p>3、愈来愈烈的沙尘暴</p>
<p>我国的沙尘暴灾害可以说是愈演愈烈。据专家统计，从1952年到1993年，我国西北地区发生沙尘暴的次数是：50年代5次，60年代8次，70年代13次，80的代14次；1993年发生了一次剧烈的黑风暴事件。之后，每年四五月份，甘肃河西走廊至少要发生一次，而在2000年，连续就是8次。据权威专家分析，在10-20年内，面对人口越来越多，生态环境越来越恶化的现状，如果不采取得力措施，我国沙尘暴的频率、强度和危害程度还有进一步加剧的可能。</p>
<p>提示：万事有果必有因，环境恶化是大自然对人类冲动最好的惩罚。尊重规律。尊重自然。忧患意识。</p>
<p>4、驯兽师的危险时刻</p>
<p>杭州有一位驯兽师讲过一个故事。他训练了一只狮子，平日里十分温顺。但有一天进笼与它交流，一进门，风就把笼门关上了，他下意识地摸了一下自己的口袋。这个动作被狮子误解了，狮子忽然怒吼起来，瞪着他。他心中一阵慌乱，知道狮子已经饿了一天，而刚才这个动作是敌意，如果狮子进攻他，他必死无疑。</p>
<p>他站在那儿不动，脸上露出了笑容，眼睛直视着狮子。时间一分一分过去，狮子慢慢从暴怒中恢复过来，舍下他一边去了。</p>
<p>提示：沉着冷静。</p>
<p>5、法国梧桐不是法国的</p>
<p>上海的法国梧桐学名叫“悬铃木”，因为其叶子像中国原有的梧桐，且曾经广植于旧上海的法租界故长时期地被叫做“法国梧桐”。其实是“英国梧桐”，老家在英国。</p>
<p>但是我知道再也不会有人叫它“英国梧桐”了，就像当年哥伦布将他发现的新大陆错认为“印度”从而误冠的地名一样，再也改不过来了。人类本质上是喜欢约定俗成的。</p>
<p>提示：尊重文化习俗。</p>
<p>6、木工要留一道缝隙</p>
<p>木工讲究疏密有致，黏合贴切，该疏则疏，不然易散落。时下许多人家装修房子，常常出现木地板开裂，或挤压拱起的现象，这就是太“美满”的缘故。高明的装修师傅则懂得恰到好处地留一道缝隙，给组合材料留足吻合的空间，便可避免出现这样那样的问题。想来，我曾祖父的木匠绝活肯定是在这一点上下足了工夫。</p>
<p>其实，做人与处世，和木匠的工艺原理一样。</p>
<p>提示：人与人要有点距离。</p>
<p>7、老父亲只给孩子擦一只鞋</p>
<p>有个做父亲的为孩子擦皮鞋时只擦一只。他解释说，这是他创造的一种教育孩子的方法。因为这样可以迫使孩子把另一只鞋也擦的一样干净。如果经常这样做，就能促使孩子形成自觉的卫生习惯。这看起来是一桩小事，但却反映出一种成功的教育方法。</p>
<p>在很多场合下，我们都能看到一些不动脑筋的父母，为了让孩子接受自己的意愿而不停地唠叨，实在不见效便拿起棍棒，并多伴以讽刺和挖苦的语言。这样的孩子，内心常是痛苦的。</p>
<p>提示：表率的作用不可忽视。润物细无声。细节。</p>
<p>8、老太太杞人忧天</p>
<p>有这样一个故事：曾经有个老太太，她有两个儿子，大儿子卖伞，小儿子晒盐，于是，老太太整天担心，今天下雨了小儿子不能晒盐了，明天出太阳，大儿子的伞卖不出去了，就这样，她成天不高兴，最后忧虑成疾，去看医生，医生对老太太说：老人家，如果我是你呀，应该天天快乐，出太阳了为小儿子高兴，今天好晒盐；下雨了为大儿子高兴，今天好卖伞。于是老太太就按医生所说的那样，天天快乐，不久病就好了。</p>
<p>提示：用美的眼光看世界；快乐。</p>
<p>9、鳄鱼吃小鱼</p>
<p>心理学家将一只饥饿的鳄鱼和一些小鱼放在水箱的两端，中间用透明的玻璃板挡开。</p>
<p>刚开始，鳄鱼毫不犹豫地向小鱼发动攻击，它失败了，但毫不气馁；接着，它又向小鱼发动更猛烈地攻击，它又失败了，并且受了重伤；它还要攻击，第十三次，第十四次……多次攻击无望后，它不再攻击了。</p>
<p>这个时候，心理学家将挡板拿开，鳄鱼已经不再攻击小鱼了。它依然无望地看着那些小鱼在眼皮底下悠闲地游来游去，它放弃了一切的努力。</p>
<p>提示：善用智慧；认清本质；不放弃。</p>
<p>10、给木塞以空间</p>
<p>有经验的人都知道，给暖水壶灌水的时候，不能灌得太满，需要留一个比木塞大一点的空间，如果灌得太满，木塞会被暖水壶里热空气的压力弹起来，有时还会烫伤人。待人接物也是如此，人的潜力无限而忍耐力却是有限的，对于一些不起眼的人，我们千万不要忽视他们的存在与价值，更不该去凌辱尊严和人格，否则，任何有理性的人都会不惜一战，像弹起来的木塞一样，那时，可能不仅仅是溅起的开水把你烫伤，你可能会为此付出更为惨重的代价。</p>
<p>提示：人与人留点距离；尊重他人。君子之交淡如水。</p>
<p>11、林黛玉不该死</p>
<p>大凡读《红楼梦》读到黛玉之死那一节，少有不悲咽感伤的。回头看看宝玉黛玉之间的关系，以及黛玉和大观园里形形色色人物之间的往来，我们会发现，林黛玉自从跨进贾府那一天起，似乎就很少与人有过一次真正的交心。人们阅读《红楼梦》，总是习惯给林黛玉扣上小心眼的帽子。殊不知，林黛玉所以多心，一方面固然与她身份和处境有着关系，实际上更多的原因是因为她缺少与人之间的拥有心对心的交流。她只凭着自己敏慧的感觉去猜度别的心思。她和宝玉之间尽管彼此心有灵犀，但是总是隔着那么一层纸，若即若离，朦朦胧胧，彼此之间倒是因为缺少真实而大胆的交心，而屡次伤害着。</p>
<p>可以说，林黛玉是让自己的心病折磨死的。</p>
<p>提示：沟通从心开始。</p>
<p>12、茅台酒的成功</p>
<p>茅台酒是我国十大名酒之一。但是，开始的时候在国际上的知名度并不高，我国的茅台酒首次拿到巴拿马博览参展的时候，竟无人问津，眼看展期快过，博览会就要降下帷幕了，我国的参展人员十分焦急。突然，有位工作人员眉头一皱，急中生智，他故意打翻了一瓶茅台酒，顿时，整个展览大厅酒香扑鼻，沁人心脾，客商们都被这迷人的酒香吸引过来了，他们纷纷同茅台酒厂签订购销合同。这一招，不仅使茅台酒夺得了这次展览的金奖，而且从此一举成名，走向世界。</p>
<p>提示：机智；把握时机。</p>
<p>13、中国人不记得“甲午”</p>
<p>三位年轻的海军新闻工作者在北京进行了一次特别采访，题目是：中国人，你还记得“甲午”吗？</p>
<p>一位来自佳木斯的三十多岁的东北汉子愣愣地问：“‘甲午’是个啥？”给他解释后，他说：“现在都兴公历了，连俺屯子里的庄稼人都不看皇历了，谁还弄得清什么‘甲午’！”</p>
<p>上海来京旅游的林小姐说：“甲午战争我是晓得的。好像是在初中学过的吧。林则徐这个海军司令没当好，让日本人打沉了好多条船，不过他禁烟还是有功的。”</p>
<p>一位在颐和园北窗门外卖各种纪念章的中年人说：“那是多少年前的事了，知道了也没用。打仗是当兵的事，做生意就是多赚点少赔点。”</p>
<p>人们几乎对此问题都感到意外。</p>
<p>提示：知耻</p>
<p>14、法国士兵冲锋不要金钱</p>
<p>法国著名的将军狄龙在他的回忆录中讲过这样一件事：一战期间的一次恶战，他带领第80步兵团进攻一个城堡，遭到了敌人顽强抵抗，步兵团被对方火力压住无法前行。狄龙情急之下大声对他的部下说：“谁设法炸毁城堡，谁就能得到1000法郎。”他以为士兵们肯定会前仆后继，但是没有一位士兵冲向城堡。狄龙大声责骂部下懦弱，有辱法兰西国家的军威。</p>
<p>一位军士长听罢，大声对狄龙说：“长官，要是你不提悬赏，全体士兵都会发起冲锋。”狄龙听罢，转发另一个命令：“全体士兵，为了法兰西，前进！”结果整个步兵团从掩体里冲出来，最后，全团1194名士兵只有90个生还。</p>
<p>提示：有时，尊严比生命更重要，如果用金钱去驱使他们，无异是大辱。</p>
<p>15、阿波罗登月者的妙语</p>
<p>第一次登陆月球的太空人其实共有两位，除了大家所熟识的阿姆斯特朗外，还有一位是奥尔德林。当时阿姆斯特朗说过一句话：“我个人的一小步，是全人类的一大步。”这早已是全世界家喻户晓的名言。在庆祝登陆月球成功的记者会上，一个记者突然问了奥尔德林一个特别的问题：“阿姆斯特朗先下去，成为登陆月球的第一个人，你会不会觉得有点遗憾?”</p>
<p>在全场有点尴尬的注视下，奥尔德林很有风度地回答：“各位，千万别忘了，回到地球时，我可是最先出太空舱的。”他环顾四周笑着说：“所以我是由别的星球来到地球的第一个人。”大家在笑声中都给予他最热烈的掌声。</p>
<p>提示：成功会带来荣耀，但为荣耀而生活的人则活得小器。淡泊名誉。</p>
<p>16、犹太人不禁书</p>
<p>犹太人不禁书，即使是一本攻击犹太人的书。</p>
<p>犹太人爱书的传统由来已久，深入人心。联合国教科文组织最近调查表明，在犹太人为主要人口的以色列，14岁以上的人平均每月读一本书，全国公共图书馆、大学图书馆1000多所，平均每4500人就有一座图书馆。约450万人口的以色列，办有借书证的就有100万人。</p>
<p>在人均拥有图书馆、出版社和每年人均读书的数量上，以色列是当之无愧的世界之最。</p>
<p>提示：读书带来智慧，读书成就了犹太人的聪明。知识就是力量。</p>
<p>17、肯德基创始人??哈伦德 山德士</p>
<p>以下是一个人一生的简历：５岁时，他父亲就去世了；１４岁时，他从学校辍学，开始了流浪生活；16岁时，他谎报年龄参了军，而军旅生活也是处处不顺心；１８岁时，他娶了个媳妇，可只过了几个月，媳妇就变卖了他所有的财产逃回了娘家；他曾通过函授学习法律，可不久又放弃了；后来，他卖过保险，卖过轮胎，还经营过一条渡船，开过一家加油站，但都失败了。</p>
<p>人到中年，他成了一家餐馆的主厨和洗瓶师，可因政府修公路而拆了那家餐馆，他又失业了；时光飞逝，眼看一辈子就这样过去了，而他仍一无所有。６５岁那年，邮递员给他送来了他的第一份社会保险支票，他用这１０５美元保险金创办了自己的一份崭新的事业；８８岁高龄时，他的事业终于大获成功。</p>
<p>他，就是肯德基创始人??哈伦德 山德士！</p>
<p>提示：成功的前面是失败，失败的后面是成功。信念和意志非常重要，成功常常属于那些屡败屡战者。</p>
<p>18、普罗米修斯偷火</p>
<p>希腊神话中的普罗米修斯是为人类造福而献身的神。他出于对人类的同情，为使人类免遭毁灭，把天火偷来送给人类，并把科学、艺术和医药等知识传授给人类，使人类从此能够战胜危难，并变得文明起来。他因此而惹怒了众神之王宙斯。宙斯用铁镣把他铐锁起来，钉在高加索山的悬崖上，让神鹰每天啄食他的肝脏。普罗米修斯坚强不屈，对奉命来逼降的神使赫耳墨斯说：“我决不会用自己的痛苦，去换取你奴隶般的命运；我宁肯被缚在崖石上，也不愿作宙斯的忠顺奴仆。”马克思推崇普罗米修斯的精神，称他为“哲学的日历中最高尚的圣者和殉道者”。</p>
<p>提示：一切为人类的进步而受难的先驱们都是普罗米修斯。对事业要有献身精神。</p>
<p>19、幼儿园最重要</p>
<p>1987年，75位偌贝尔奖金获得者在巴黎聚会。有人问其中的一位：“您在哪所大学、哪个实验室学到了您认为最重要的东西？”出人意料的是，这位学者回答说：“是在幼儿园。”“在幼儿园学到些什么？”学者答道：“把自己的东西分一半给小伙伴们；不是自己的东西不要拿；东西要放整齐；吃饭前要洗手；做错了事情要表示歉意；午饭后要休息；要仔细观测周围的大自然。从根本上说，我学到的全部东西就是这些。”</p>
<p>提示：好的习惯是成功的基础，每个人都要重视习惯的养成。</p>
<p>20、毛毛虫试验</p>
<p>法国科学家约翰 法伯曾做过一个著名的“毛毛虫试验”。这种毛毛虫有一种“跟随者”的习性，总是盲目地跟前面的毛毛虫走。法伯把若干个毛毛虫放在一只花盆的边缘上，首尾相接，围成一圈；花盆周围不到六英寸的地方，撒了一些毛毛虫喜欢吃的松针。毛毛虫开始一个跟着一个，绕着花盆，一圈又一圈地走。一个小时过去了，一天过去了，毛毛虫还不停地坚韧地团团转。一连走了七天七夜，终因饥饿和筋疲力尽而死去。这其中，只要任何一只毛毛虫稍微与众不同，便立即会过上更好的生活（吃松叶）。</p>
<p>提示：盲从不会有好的结局，穷则思变，探索创新才有出路。不盲从；有主见；创新。</p>
<p>21、美国校园为凶手立碑</p>
<p>美国弗吉尼亚大学枪杀案以后，校园里面遇害者竖起了33块纪念碑，这其中也包括行凶的凶手赵承熙的碑。一位无名者还在了赵的碑前留一段话，看后深深感动，想起案件出事时，我们更多的关心的是凶手是哪一国人，真是惭愧不已。这段话的译文如下：</p>
<p>亲爱的赵</p>
<p>你也许不知道造成的伤害有多大</p>
<p>你也低估了我们的爱和宽容</p>
<p>我们在为死难者哀悼</p>
<p>这其中也包括你</p>
<p>虽然你曾经认为在你在世的时候</p>
<p>没有人爱过你</p>
<p>而我多莫希望你能给我们机会</p>
<p>告诉你事实并非如此</p>
<p>可是你选择了终结</p>
<p>上帝的爱会帮助我们战胜一切</p>
<p>提示：宽容我们的敌人，是因为我们也需要救赎。</p>
<p>22、成功的“铁律”是什么？</p>
<p>马克思写《资本论》花了40年。 达尔文写《物种起源》花了20年。</p>
<p>哥白尼写《天体运行论》花了36年。摩尔根写《古代社会》花了40年。</p>
<p>歌德写《浮士德》花了60年。 托尔斯泰写《战争与和平》花了37年。</p>
<p>司马迁写《史记》花了15年。 左思写《三都赋》花了10年。</p>
<p>李时珍写《本草纲目》花了27年。 曹雪芹写《红楼梦》花了10年。</p>
<p>徐霞客写《徐霞客游记》花了34年。</p>
<p>提示：从以上几个数字里，我们可以看到要成就一项事业，需要持久的恒心。所以，巴尔扎克说：“持续不断的劳动是人生的铁律，也是艺术的铁律。”</p>
<p>23、医学家罗斯和蚊子打交道</p>
<p>英国医学家罗斯为了证实蚊子是疟疾病菌的媒介，日复一日地和蚊子打交道。1983年的一天，他在显微镜下看了8个小时，眼睛酸痛，视力模糊，外加天气炎热，蚊叮蝇咬，观察难以继续。可是，还有两只蚊子未观察。他定了定神，咬了咬牙，继续在显微镱下观察。突然，他发现这两只蚊子身上有一种前所未有的细而圆的细胞，其中含有黑色物质组成的小颗粒，和疟疾寄生虫的色素完全一样。就这样，他终于找到了传播疟疾病的根源。</p>
<p>提示：成功往往是失败后的坚持，失败常常是成功前的放弃。思考。</p>
<p>24、加拿大的约翰逊欺骗全世界</p>
<p>1988年汉城奥运会，加拿大运动员约翰逊在赛场出尽了风头。他只用了47步、9秒79的时间就跑完了百米全程，以一个崭新的世界纪录结束了这次被称为”世纪之战”的比赛。他高举加拿大国旗绕场一周，接受8万观众的欢呼。然而几天以后，辉煌的”世纪之战”化为特大丑闻。国际奥委会宣布：约翰逊在参加男子100米赛前服用了兴奋剂。约翰逊的9秒79的世界纪录作废，剥夺他本届大赛选手资格。消息传出，全球哗然。加拿大总理马尔罗尼说，这不仅是约翰逊个人和家庭的悲剧，也是全体加拿大的悲剧。</p>
<p>提示：体育精神在于公平竞争，实力称雄，它超越种族，也超越阶级；它超越政治，也超越经济。欺骗是体育精神的毒药，它毒杀的公平竞争的体育精神。公平意识。</p>
<p>25、警惕鞋中的小沙子</p>
<p>伏尔泰说，使人疲惫的不是远方的高山，而是鞋子里的一粒沙子。在人生的道路上，我们很有必要学会随时倒出鞋子里的那颗小小的沙子。</p>
<p>提示：细节。小的缺点或障碍会影响远大目标的实现。</p>
<p>26、日本人尊师</p>
<p>日本人有尊师的传统，他们普遍认为教师是在为社会作自我牺牲；因此，当公共车辆上出现穿有“教师服”的乘客时，无论这个人年龄大小，其他乘客都会主动让座。这让教师们都有一种光荣感。</p>
<p>提示：尊重知识。</p>
<p>27、不妨照着树节砍下去</p>
<p>一日本围棋高手讲过一个故事：他小时侯，常常跟着父亲进山砍柴。后来，他发现一位老伯伯也常常到山里砍柴，但他总是来得很晚，走得早，中间还不时歇息一会儿。令他感到奇怪的是，老伯伯每次砍的柴，总是比父亲要多一些。一开始，他以为老伯伯的斧子更犀利或者他砍的柴都是木质比较软的。但后来，他仔细比较了父亲和老伯伯的砍柴方法，他才揭开了其中的秘密??父亲总是朝一处用力砍，而老伯伯是围着树砍。在遇到有树节时，父亲总是避开树节，斧子却常常被卡住；而老伯伯却总是从有节的地方开始下手。</p>
<p>原来，在人们的传统观念中，没有节的树干比较容易被砍断，而有节的地方则不容易砍断。实际上，有节的地方虽然坚硬一些，但是却也更容易折断，有时找准其脆弱点，稍加用力就可以砍断。</p>
<p>提示：打破习惯的思维定势；创新。</p>
<p>28、保护区引狼入室</p>
<p>美国阿拉斯加一个自然保护区有一种稀珍的鹿种，主人们为了使鹿群不受伤害，将狼、豹野兽捕杀光。从此，这些鹿置于没有任何危险的“安乐窝”中，活动量逐渐减少，体质也越来越差，在瘟疫泛滥时大量死亡。后来，主人们特意从外地“引进”狼，珍稀的鹿群为了生存，整天来回奔跑，体质和生命力逐渐增强。</p>
<p>提示：忧患意识；压力产生动力。</p>
<p>29、两个囚犯看窗口</p>
<p>第二次世界大战时，有两个人被关在纳粹集中营的一间狭窄的囚室里，他们唯一能了解世界的地方，是囚室里那扇一尺见方的窗口。</p>
<p>每天早上，他俩都要轮流去窗口眺望外面的世界。</p>
<p>一个人总是愁苦地看着窗外的高墙和铁丝网，另一个人却总爱看窗外的天空，看蓝色天空中的小鸟自由地飞翔。</p>
<p>半年后，前者因忧郁死在狱中；后者却坚强地活了下来，直到获救。</p>
<p>提示：乐观。</p>
<p>30、沃尔特?迪斯尼的米老鼠</p>
<p>有一年轻的国家，借用一家废弃车库作为画室。晚上陪伴他的是枯黄的灯盏和上窜下跳的老鼠。后来画家离开了，来到好莱坞制作卡通片，可素材难找，画的图形缺乏新意。有一天，苦苦思索的画家突然想起了以前车库中的小老鼠，那亮晶晶的小眼睛仿佛中画家面前闪现，一瞬间的灵感足以影响世界，广受小孩喜爱的卡通形象??米老鼠诞生了。这位画家就是美国最负盛名的人物之一??沃尔特?迪斯尼。</p>
<p>提示：灵感；善于发现美。</p>
<p>31、艺术家摔琴惊四座</p>
<p>日本所编《欧美逸谭》中，有一则艺术家摔琴的故事：有位著名提琴家将用文艺复兴时期流传下来的最珍贵的提琴演奏，这张琴价值连城。一曲终了，那宝贝乐器的美妙乐音使听众如醉如痴，一致惊叹昔日提琴制造师超群绝伦的手艺。这时，提琴家一挥手，竟将琴摔了个粉碎，顿时四座皆惊。</p>
<p>此刻，主持人上场宣布：“刚才打碎的，只是一把价值一元多的琴。提琴家这样做，是为了告诉诸位，音乐之妙，并不在于乐器好或歹，而在于演奏它的人。现在，请大家欣赏以真正珍贵的提琴演奏的乐曲。”于是，提琴家再一次操起琴，同样美妙的乐音悠然而起。听众再不去注意琴的价值，而专心致志地进入了艺术境界。</p>
<p>提示：注意实质；人是最重要的。</p>
<p>32、兀鹰捕猎</p>
<p>在阿根廷的沙漠地区，飞翔着一种凶猛的兀鹰。它们矫健、敏捷、锐利。奇怪的是，尽管兀鹰个个都是捕捉猎物的高手，但却很少单独行动。兀鹰往往是三三两两在天空中盘旋，一旦发现地面上的猎物，它们就会从各个方向俯冲而下，在最短的时间内将猎物杀死。事后，每个参与者都能获得一份食物……</p>
<p>科学家经过长期观察研究，得出结论说，这都是沙漠地区自然生态环境差、食物少造成的。因为在这种环境下，为了避免被天敌捕捉，许多弱小动物都有很强的逃生能力。而对于兀鹰来说，要想获得足够的食物，单干不如共同行动有收获。</p>
<p>动物界如此，一个民族乃至一个国家的发展不也是如此吗？</p>
<p>提示：集体意识</p>
<p>33、湖北“捞尸索钱门”</p>
<p>2009年10月，湖北荆州两名少年不慎落水。为了营救落水少年，湖北长江大学10多名大学生手拉手扑进江中营救，两名少年获救，而3名大学生不幸遇难。就在人们为见义勇为者扼腕叹息时，一则新闻却使整个事件向另一个方向发展。</p>
<p>一名参与施救的大学生告诉媒体：“在两个少年落水不足5米的地方就停着一艘机械渔船，我们同学都给渔船的老板跪下了，求他们看能否捞救方招等三人，老板说，长江上哪天不死人，不死几个人我们靠什么挣钱啊？活人不救，捞尸体，白天每人一万二千元，晚上一万八千，一手交钱一手捞人……”后经媒体调查发现，当地存在一个牟取暴利的民间打捞队，专靠捞尸体赚钱。一时间引发众怒。</p>
<p>提示：人要有道德底线。</p>
<p>34、富二代“飙车门”</p>
<p>2009年5月，24岁的谭卓在杭州市被胡斌所驾驶的改装三菱跑车撞飞，后送120后不治身亡。有目击者声称，谭卓被撞出大约5米高后再重重摔在20米以外的地方。此事一经报道，立即引来公众的关注。富二代、飙车，这些敏感的词汇引起巨大争议。此案以胡家赔偿受害者父母113万元、胡斌被判三年有期徒刑告一段落。期间，演变出“七十码”、“胡斌替身门”、“以赔款抵刑期”等诸多事端，令其成为2009年最跌宕起伏的网络热门事件。</p>
<p>据媒体报道，在出事后，有一群年轻人站在血肉模糊的尸体旁，还若无其事、勾肩搭背，甚至悠闲地吐着烟圈……这些“富二代”轻视他人生命的行为深深刺痛了民众的道德神经，也让这群年轻人的形象一路跌停。网上对于“富二代”的指责不绝于耳。</p>
<p>提示：法律面前人人平等；生命面前人人敬畏。平等观念；敬畏生命。</p>
<p>35、感冒农民工“民意门”</p>
<p>陈国芳和张大有是四川内江人，在广西一家工厂打工。12月20日，二人放假准备回家过新年。在大巴车上，陈、张感到嗓子沙哑还伴有轻微咳嗽。每次咳嗽，都有乘客投来异样的眼光。于是，陈国芳和张大有自觉戴上了口罩。没想到，他们的举动反而引来了更多异样的眼光。21日凌晨，大巴驶入服务区。全车近30个乘客进行“民意表决”，所有乘客举手同意让两人马上离开大巴，到服务区“隔离”。随即，两人被撵下了车。凌晨4时，高速公路执法支队队员发现了正在高速路上步行的陈国芳和张大有。经检查，两人患的只是普通感冒。</p>
<p>提示：公民意识；歧视；平等观。自私；敬畏生命；人性道德。</p>
<p>36、烟草企业“冠名门”</p>
<p>“四川烟草希望小学，中南海爱心小学，‘迎客松’希望小学，红塔希望小学，芙蓉学子助学基金……”12月中旬，一位控烟专家抛出一张烟草企业赞助、冠名的希望小学名单，炮轰这些企业沽名钓誉，名为做公益，实为推销烟草产品。</p>
<p>根据不完全统计，我们目前以烟草冠名的希望小学多达17家，去年地震后，四川灾区建立了一所“四川烟草希望小学”，不仅屋顶上有明显的“中国烟草”的标识，楼下的一块石板上还写着“立志奉献社会，烟草助你成才”，这一做法引发媒体和众多反烟人士的声讨。</p>
<p>提示：社会责任。淡泊名利。</p>
<p>37、蹬三轮的蔡伟入复旦大学读博士</p>
<p>2009年4月，复旦大学经过专家考试和校招生领导小组讨论，把38岁的蔡伟列入了2009年度博士生拟录取名单，导师为古文字学泰斗裘锡圭先生。38岁读博士并不稀罕，稀罕的是蔡伟只有高中学历，下岗十余年??8个月前，他还在辽宁锦州蹬三轮养家糊口，从未想过，人生最大的转折即将到来。</p>
<p>这必然会是一则充满励志色彩的“佳话”，构成佳话的各种反差元素都有：比如高中学历、下岗工、蹬三轮、博士生、复旦大学、古文字学泰斗。不过，佳话的生命力不在于传诵，而在于透过它，窥见这个社会的镜像。从这个意义而言，三轮车夫获读博士，更像是一张丰富的社会试纸。</p>
<p>提示：学人的浮躁、大学的功利化；不拘一格选人才。坚持；进取。</p>
<p>38、浙大海归博士涂序新跳楼之死</p>
<p>9月17日，在浙江大学任讲师的一名海归博士留下6页遗书后跳楼自杀。在跳楼前6天，他刚提交了申报副教授职称的相关材料。网络盛传浙大曾给该博士口头承诺，却未能履行。这位博士在遗书中说，“国内学术圈的现实：残酷、无信、无情。”</p>
<p>据说，9月中旬，涂博士诊断出抑郁症，遗书里，他没有责怪任何人，他说，我只想安静地离开。</p>
<p>提示：需要人文关怀；要有承受压力的能力。</p>
<p>39、严查赌球大快人心</p>
<p>最近传来消息，辽宁省沈阳市破获一起赌球团伙案，牵出多名足球人士涉嫌控制和操纵联赛的丑闻。不少圈内人士都认为，或许这正是足坛“打黑”、除恶的好机会。</p>
<p>据一些媒体报道，此次赌球案件绝非一般的赌博案件那么简单，它牵扯面之大，涉及人数之多，都是十分惊人的。其实，中国足坛的“黑哨”、“假球”等丑恶行径并非一朝一夕的事情。</p>
<p>近年来，中国体育大多数项目高歌猛进、形势大好，在群众中很有影响力的足球却止步不前，究其原因，是多方面的，但绿茵场滋生的颗颗毒瘤恐怕也是阻碍其发展的重要原因之一。</p>
<p>提示：加强法制建设。维护公平。</p>
<p>40、2010年上海世博会中国馆</p>
<p>以往，北京上海的一些标志性建筑，大多采用国外专家的设计方案。但这次上海世博会中国馆建筑全部由自己设计。中国馆外观以“东方之冠”的构思主题，表达中国文化的精神与气质。国家馆居中升起、层叠出挑，成为凝聚中国元素、象征中国精神的雕塑感造型主体??东方之冠。世博会期间，国家馆将在“城市、让生活更美好”主题下，展示“城市发展中的中华智慧”，展现出一幅伟大的中国城市文明图。</p>
<p>提示：弘扬民族文化。民族自豪感。要有自我。</p>
]]></content>
      <categories>
        <category>学习人生</category>
      </categories>
      <tags>
        <tag>经典作文素材</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Python和selenium--广东省干部培训网络学院自动登录学习脚本</title>
    <url>/1401/</url>
    <content><![CDATA[<p>前提：因为我姐需要帮她挂机刷学时<del>而我自己又懒</del>于是就直接谷歌了一下…</p>
<p>在这位大神的前提下修改了一下：<a href="https://www.52pojie.cn/thread-1105553-1-1.html">https://www.52pojie.cn/thread-1105553-1-1.html</a></p>
<p>主要这位大神的代码是直接还有多少个未学习/正在学习的都全部打开窗口，不符合最新规则只能打开一门进行学习</p>
<p>因为自己学python 也不久.菜逼一个~</p>
<p>使用前需要安装浏览器对应的驱动，代码使用的是谷歌浏览器，因此自行百度/谷歌如何下载安装谷歌浏览器驱动~</p>
<p>python建议直接安装Anaconda吧，就不用每个都pip了~</p>
<p>ps:记得弄个网络好哒<del>我这边没考虑啥报错的问题</del>如果遇上什么鹏博士那些的话就节哀吧~</p>
<p>代码如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">import pyautogui</span><br><span class="line">import time</span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line">def switch2frame(par):</span><br><span class="line">    par.switch_to.frame(&#x27;secondIframe&#x27;)</span><br><span class="line">    par.switch_to.frame(&#x27;thirdIframe&#x27;)</span><br><span class="line">    par.switch_to.frame(&#x27;dataMainIframe&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def run_main(video_unstudy_num, browser):</span><br><span class="line">    if int(video_unstudy_num) &gt; 0:</span><br><span class="line">        print(&quot;nonlocal--该目录下还有&#123;&#125;个视频未学习……&quot;.format(video_unstudy_num))</span><br><span class="line">        js_click = &#x27;document.getElementsByClassName(&quot;courseware-list-reed&quot;)[0].click()&#x27;</span><br><span class="line">        browser.execute_script(js_click)</span><br><span class="line">        time.sleep(3)</span><br><span class="line">        # 拿到所有的窗口</span><br><span class="line">        all_handles = browser.window_handles</span><br><span class="line">        pre_window_handle = browser.current_window_handle</span><br><span class="line">        for handle in all_handles:</span><br><span class="line">            if handle != pre_window_handle:</span><br><span class="line">                browser.switch_to.window(handle)</span><br><span class="line">                browser.implicitly_wait(10)</span><br><span class="line">                # time.sleep(10)</span><br><span class="line">                # elem = browser.find_element_by_class_name(&quot;introjs-button&quot;)</span><br><span class="line">                elem = browser.find_element_by_link_text(&#x27;好的，我知道了&#x27;)</span><br><span class="line">                elem.click()</span><br><span class="line">                time.sleep(2)</span><br><span class="line">                browser.switch_to.frame(&#x27;course_frame&#x27;)</span><br><span class="line">                time.sleep(10)</span><br><span class="line">                # 点击播放</span><br><span class="line">                js_paused = &#x27;return document.getElementById(&quot;my-video_html5_api&quot;).paused;&#x27;</span><br><span class="line">                view_paused_status = browser.execute_script(js_paused)</span><br><span class="line">                print(&#x27;viewPaused：&#x27; + str(view_paused_status))</span><br><span class="line">                # false 点击了播放  true 点击了暂停</span><br><span class="line">                if view_paused_status:</span><br><span class="line">                    elem = browser.find_element_by_class_name(&quot;vjs-play-control&quot;)</span><br><span class="line">                    elem.click()</span><br><span class="line">                time.sleep(5)</span><br><span class="line">                # 获取视频播放时长?</span><br><span class="line">                js_duration_str = &#x27;return document.getElementById(&quot;my-video_html5_api&quot;).duration;&#x27;</span><br><span class="line">                view_time = browser.execute_script(js_duration_str)</span><br><span class="line">                print(&#x27;viewTime:&#x27; + str(view_time))</span><br><span class="line">                time.sleep(5)</span><br><span class="line">                js_current_time_str = &#x27;return document.getElementById(&quot;my-video_html5_api&quot;).currentTime;&#x27;</span><br><span class="line">                view_current_time = browser.execute_script(js_current_time_str);</span><br><span class="line">                print(&#x27;viewCurrentTime:&#x27; + str(view_current_time))</span><br><span class="line"></span><br><span class="line">                if math.ceil(view_current_time) &gt;= math.ceil(view_time):</span><br><span class="line">                    print(&#x27;1111&#x27;)</span><br><span class="line">                    browser.switch_to.default_content()</span><br><span class="line">                    elem = browser.find_element_by_id(&#x27;btnexit&#x27;)</span><br><span class="line">                    elem.click()</span><br><span class="line">                    # 关闭视频网站页面 进入pre_window_handle页面</span><br><span class="line">                    browser.switch_to.window(pre_window_handle)</span><br><span class="line">                    browser.refresh()</span><br><span class="line">                    browser.implicitly_wait(10)</span><br><span class="line">                    switch2frame(browser)</span><br><span class="line">                    js_list = &#x27;return document.getElementsByClassName(&quot;courseware-list-reed&quot;).length;&#x27;</span><br><span class="line">                    video_unstudy_num = browser.execute_script(js_list)</span><br><span class="line">                    time.sleep(3)</span><br><span class="line">                    # print(&quot;local--该目录下还有&#123;&#125;个视频未学习……&quot;.format(video_unstudy_num))</span><br><span class="line">                    run_main(video_unstudy_num, browser)</span><br><span class="line">                else:</span><br><span class="line">                    print(&#x27;2222&#x27;)</span><br><span class="line">                    time.sleep(math.ceil(view_time) - math.ceil(view_current_time))</span><br><span class="line">                    browser.switch_to.default_content()</span><br><span class="line">                    elem = browser.find_element_by_id(&#x27;btnexit&#x27;)</span><br><span class="line">                    elem.click()</span><br><span class="line">                    # 关闭视频网站页面 进入pre_window_handle页面</span><br><span class="line">                    browser.switch_to.window(pre_window_handle)</span><br><span class="line">                    browser.refresh()</span><br><span class="line">                    browser.implicitly_wait(10)</span><br><span class="line">                    switch2frame(browser)</span><br><span class="line">                    js_list = &#x27;return document.getElementsByClassName(&quot;courseware-list-reed&quot;).length;&#x27;</span><br><span class="line">                    video_unstudy_num = browser.execute_script(js_list)</span><br><span class="line">                    time.sleep(3)</span><br><span class="line">                    # print(&quot;local--该目录下还有&#123;&#125;个视频未学习……&quot;.format(video_unstudy_num))</span><br><span class="line">                    run_main(video_unstudy_num, browser)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;该目录下还有视频已学习完毕……&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 输入账号</span><br><span class="line">    username = &quot;*****&quot;</span><br><span class="line">    # 输入密码</span><br><span class="line">    passwd = &quot;*****&quot;</span><br><span class="line">    login_url = &#x27;https://gbpx.gd.gov.cn/gdceportal/index.aspx&#x27;</span><br><span class="line">    option = webdriver.ChromeOptions()</span><br><span class="line">    option.add_argument(&#x27;--mute-audio&#x27;)</span><br><span class="line">    browser = webdriver.Chrome(options=option)</span><br><span class="line">    browser.get(login_url)</span><br><span class="line">    browser.implicitly_wait(10)</span><br><span class="line">    # 窗口最大化</span><br><span class="line">    browser.maximize_window()</span><br><span class="line">    elem = browser.find_element_by_xpath(&#x27;//*[@id=&quot;pnlLogin&quot;]/div[1]/div[2]&#x27;)</span><br><span class="line">    elem.click()</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    elem = browser.find_element_by_id(&quot;txtLoginName&quot;)</span><br><span class="line">    elem.clear()</span><br><span class="line">    elem.send_keys(username)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    elem = browser.find_element_by_id(&quot;txtPassword&quot;)</span><br><span class="line">    elem.clear()</span><br><span class="line">    elem.send_keys(passwd)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    # 验证码</span><br><span class="line">    code_num = pyautogui.prompt(&quot;请输入验证码:&quot;)</span><br><span class="line">    elem = browser.find_element_by_id(&quot;txtValid&quot;)</span><br><span class="line">    elem.clear()</span><br><span class="line">    elem.send_keys(code_num)</span><br><span class="line">    elem = browser.find_element_by_xpath(&#x27;//*[@id=&quot;user-login-form&quot;]/div[2]/input[1]&#x27;)</span><br><span class="line">    elem.click()</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    elem = browser.find_element_by_id(&#x27;btnStudy&#x27;)</span><br><span class="line">    elem.click()</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    # browser.switch_to_frame(&#x27;secondIframe&#x27;)</span><br><span class="line">    # browser.switch_to.frame(&#x27;secondIframe&#x27;)</span><br><span class="line">    # browser.switch_to.frame(&#x27;thirdIframe&#x27;)</span><br><span class="line">    # browser.switch_to.frame(&#x27;dataMainIframe&#x27;)</span><br><span class="line">    switch2frame(browser)</span><br><span class="line">    time.sleep(1)</span><br><span class="line"></span><br><span class="line">    js_list = &#x27;return document.getElementsByClassName(&quot;courseware-list-reed&quot;).length;&#x27;</span><br><span class="line">    video_unstudy_num = browser.execute_script(js_list)</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    run_main(video_unstudy_num, browser)</span><br><span class="line">    browser.close()</span><br><span class="line">    print(&quot;end......&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<hr>
<p>然后在玩这个的同时，又想着能不能直接让python自己去识别验证码呢？</p>
<p>于是乎就在上面的代码基础上，弄了一个自动识别验证码的脚本，但是pytesseract识别率是真的差(可能我百度来的脚本不行?)</p>
<p>使用前下面脚本时，需要先预装tesseract-ocr，怎么下载安装记得百度噢</p>
<p>代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">import pyautogui</span><br><span class="line">import time</span><br><span class="line">import math</span><br><span class="line">from PIL import Image  # 用于打开图片和对图片处理</span><br><span class="line">import pytesseract  # 用于图片转文字</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">def switch2frame(par):</span><br><span class="line">    par.switch_to.frame(&#x27;secondIframe&#x27;)</span><br><span class="line">    par.switch_to.frame(&#x27;thirdIframe&#x27;)</span><br><span class="line">    par.switch_to.frame(&#x27;dataMainIframe&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def processing_image(img_obj):</span><br><span class="line">    # 转灰度</span><br><span class="line">    print(&#x27;转灰度1&#x27;)</span><br><span class="line">    img = img_obj.convert(&quot;L&quot;)</span><br><span class="line">    print(&#x27;转灰度2&#x27;)</span><br><span class="line">    pixdata = img.load()</span><br><span class="line">    w, h = img.size</span><br><span class="line">    threshold = 160</span><br><span class="line">    # 遍历所有像素，大于阈值的为黑色</span><br><span class="line">    for y in range(h):</span><br><span class="line">        for x in range(w):</span><br><span class="line">            if pixdata[x, y] &lt; threshold:</span><br><span class="line">                pixdata[x, y] = 0</span><br><span class="line">            else:</span><br><span class="line">                pixdata[x, y] = 255</span><br><span class="line">    return img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def delete_spot(img_obj):</span><br><span class="line">    print(&#x27;delete_spot&#x27;)</span><br><span class="line">    images = processing_image(img_obj)</span><br><span class="line">    data = images.getdata()</span><br><span class="line">    w, h = images.size</span><br><span class="line">    black_point = 0</span><br><span class="line">    for x in range(1, w - 1):</span><br><span class="line">        for y in range(1, h - 1):</span><br><span class="line">            mid_pixel = data[w * y + x]  # 中央像素点像素值</span><br><span class="line">            if mid_pixel &lt; 50:  # 找出上下左右四个方向像素点像素值</span><br><span class="line">                top_pixel = data[w * (y - 1) + x]</span><br><span class="line">                left_pixel = data[w * y + (x - 1)]</span><br><span class="line">                down_pixel = data[w * (y + 1) + x]</span><br><span class="line">                right_pixel = data[w * y + (x + 1)]</span><br><span class="line">                # 判断上下左右的黑色像素点总个数</span><br><span class="line">                if top_pixel &lt; 10:</span><br><span class="line">                    black_point += 1</span><br><span class="line">                if left_pixel &lt; 10:</span><br><span class="line">                    black_point += 1</span><br><span class="line">                if down_pixel &lt; 10:</span><br><span class="line">                    black_point += 1</span><br><span class="line">                if right_pixel &lt; 10:</span><br><span class="line">                    black_point += 1</span><br><span class="line">                if black_point &lt; 1:</span><br><span class="line">                    images.putpixel((x, y), 255)</span><br><span class="line">                black_point = 0</span><br><span class="line">    return images</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def image_str(img_obj):</span><br><span class="line">    print(&quot;image_str&quot;)</span><br><span class="line">    image = delete_spot(img_obj)</span><br><span class="line">    # 设置pyteseract路径</span><br><span class="line">    pytesseract.pytesseract.tesseract_cmd = r&quot;D:\Program Files (x86)\Tesseract-OCR\tesseract&quot;</span><br><span class="line">    # 图片转文字</span><br><span class="line">    result = pytesseract.image_to_string(image)</span><br><span class="line">    print(result)</span><br><span class="line">    # 去除识别出来的特殊字符</span><br><span class="line">    resultj = re.sub(u&quot;([^\u4e00-\u9fa5\u0030-\u0039\u0041-\u005a\u0061-\u007a])&quot;, &quot;&quot;, result)</span><br><span class="line">    print(resultj)</span><br><span class="line">    result_four = resultj[0:4]</span><br><span class="line">    return result_four</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def run_main(video_unstudy_num, browser):</span><br><span class="line">    if int(video_unstudy_num) &gt; 0:</span><br><span class="line">        print(&quot;nonlocal--该目录下还有&#123;&#125;个视频未学习……&quot;.format(video_unstudy_num))</span><br><span class="line">        js_click = &#x27;document.getElementsByClassName(&quot;courseware-list-reed&quot;)[0].click()&#x27;</span><br><span class="line">        browser.execute_script(js_click)</span><br><span class="line">        time.sleep(3)</span><br><span class="line">        # 拿到所有的窗口</span><br><span class="line">        all_handles = browser.window_handles</span><br><span class="line">        pre_window_handle = browser.current_window_handle</span><br><span class="line">        for handle in all_handles:</span><br><span class="line">            if handle != pre_window_handle:</span><br><span class="line">                browser.switch_to.window(handle)</span><br><span class="line">                browser.implicitly_wait(10)</span><br><span class="line">                # time.sleep(10)</span><br><span class="line">                # elem = browser.find_element_by_class_name(&quot;introjs-button&quot;)</span><br><span class="line">                elem = browser.find_element_by_link_text(&#x27;好的，我知道了&#x27;)</span><br><span class="line">                elem.click()</span><br><span class="line">                time.sleep(2)</span><br><span class="line">                browser.switch_to.frame(&#x27;course_frame&#x27;)</span><br><span class="line">                time.sleep(10)</span><br><span class="line">                # 点击播放</span><br><span class="line">                js_paused = &#x27;return document.getElementById(&quot;my-video_html5_api&quot;).paused;&#x27;</span><br><span class="line">                view_paused_status = browser.execute_script(js_paused)</span><br><span class="line">                print(&#x27;viewPaused：&#x27; + str(view_paused_status))</span><br><span class="line">                # false 点击了播放  true 点击了暂停</span><br><span class="line">                if view_paused_status:</span><br><span class="line">                    elem = browser.find_element_by_class_name(&quot;vjs-play-control&quot;)</span><br><span class="line">                    elem.click()</span><br><span class="line">                time.sleep(5)</span><br><span class="line">                # 获取视频播放时长?</span><br><span class="line">                js_duration_str = &#x27;return document.getElementById(&quot;my-video_html5_api&quot;).duration;&#x27;</span><br><span class="line">                view_time = browser.execute_script(js_duration_str)</span><br><span class="line">                print(&#x27;viewTime:&#x27; + str(view_time))</span><br><span class="line">                time.sleep(5)</span><br><span class="line">                js_current_time_str = &#x27;return document.getElementById(&quot;my-video_html5_api&quot;).currentTime;&#x27;</span><br><span class="line">                view_current_time = browser.execute_script(js_current_time_str);</span><br><span class="line">                print(&#x27;viewCurrentTime:&#x27; + str(view_current_time))</span><br><span class="line"></span><br><span class="line">                if math.ceil(view_current_time) &gt;= math.ceil(view_time):</span><br><span class="line">                    print(&#x27;1111&#x27;)</span><br><span class="line">                    browser.switch_to.default_content()</span><br><span class="line">                    elem = browser.find_element_by_id(&#x27;btnexit&#x27;)</span><br><span class="line">                    elem.click()</span><br><span class="line">                    # 关闭视频网站页面 进入pre_window_handle页面</span><br><span class="line">                    browser.switch_to.window(pre_window_handle)</span><br><span class="line">                    browser.refresh()</span><br><span class="line">                    browser.implicitly_wait(10)</span><br><span class="line">                    switch2frame(browser)</span><br><span class="line">                    js_list = &#x27;return document.getElementsByClassName(&quot;courseware-list-reed&quot;).length;&#x27;</span><br><span class="line">                    video_unstudy_num = browser.execute_script(js_list)</span><br><span class="line">                    time.sleep(3)</span><br><span class="line">                    # print(&quot;local--该目录下还有&#123;&#125;个视频未学习……&quot;.format(video_unstudy_num))</span><br><span class="line">                    run_main(video_unstudy_num, browser)</span><br><span class="line">                else:</span><br><span class="line">                    print(&#x27;2222&#x27;)</span><br><span class="line">                    time.sleep(math.ceil(view_time) - math.ceil(view_current_time))</span><br><span class="line">                    browser.switch_to.default_content()</span><br><span class="line">                    elem = browser.find_element_by_id(&#x27;btnexit&#x27;)</span><br><span class="line">                    elem.click()</span><br><span class="line">                    # 关闭视频网站页面 进入pre_window_handle页面</span><br><span class="line">                    browser.switch_to.window(pre_window_handle)</span><br><span class="line">                    browser.refresh()</span><br><span class="line">                    browser.implicitly_wait(10)</span><br><span class="line">                    switch2frame(browser)</span><br><span class="line">                    js_list = &#x27;return document.getElementsByClassName(&quot;courseware-list-reed&quot;).length;&#x27;</span><br><span class="line">                    video_unstudy_num = browser.execute_script(js_list)</span><br><span class="line">                    time.sleep(3)</span><br><span class="line">                    # print(&quot;local--该目录下还有&#123;&#125;个视频未学习……&quot;.format(video_unstudy_num))</span><br><span class="line">                    run_main(video_unstudy_num, browser)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;该目录下还有视频已学习完毕……&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 输入账号</span><br><span class="line">    username = &quot;****&quot;</span><br><span class="line">    # 输入密码</span><br><span class="line">    passwd = &quot;*****&quot;</span><br><span class="line">    login_url = &#x27;https://gbpx.gd.gov.cn/gdceportal/index.aspx&#x27;</span><br><span class="line">    option = webdriver.ChromeOptions()</span><br><span class="line">    option.add_argument(&#x27;--mute-audio&#x27;)</span><br><span class="line">    browser = webdriver.Chrome(options=option)</span><br><span class="line">    # browser.maximize_window()</span><br><span class="line">    browser.get(login_url)</span><br><span class="line">    browser.implicitly_wait(10)</span><br><span class="line">    # 窗口最大化</span><br><span class="line">    browser.maximize_window()</span><br><span class="line">    elem = browser.find_element_by_xpath(&#x27;//*[@id=&quot;pnlLogin&quot;]/div[1]/div[2]&#x27;)</span><br><span class="line">    elem.click()</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    elem = browser.find_element_by_id(&quot;txtLoginName&quot;)</span><br><span class="line">    elem.clear()</span><br><span class="line">    elem.send_keys(username)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    elem = browser.find_element_by_id(&quot;txtPassword&quot;)</span><br><span class="line">    elem.clear()</span><br><span class="line">    elem.send_keys(passwd)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    # 验证码</span><br><span class="line">    # code_num = pyautogui.prompt(&quot;请输入验证码:&quot;)</span><br><span class="line">    # elem = browser.find_element_by_id(&quot;txtValid&quot;)</span><br><span class="line">    # elem.clear()</span><br><span class="line">    # elem.send_keys(code_num)</span><br><span class="line"></span><br><span class="line">    js_display = &#x27;document.getElementsByClassName(&quot;signup_header2&quot;)[0].style.display = &quot;none&quot;;&#x27; \</span><br><span class="line">                 &#x27;document.getElementsByClassName(&quot;signup_header&quot;)[0].style.display = &quot;none&quot;;&#x27;</span><br><span class="line">    browser.execute_script(js_display)</span><br><span class="line">    # 全屏截图</span><br><span class="line">    # browser.save_screenshot(&#x27;pictures.png&#x27;)</span><br><span class="line">    browser.get_screenshot_as_file(&#x27;pictures.png&#x27;)</span><br><span class="line">    page_snap_obj = Image.open(&#x27;pictures.png&#x27;)</span><br><span class="line"></span><br><span class="line">    # 验证码元素位置</span><br><span class="line">    elem = browser.find_element_by_xpath(&#x27;//*[@id=&quot;imgValid&quot;]&#x27;)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    location = elem.location</span><br><span class="line">    print(&quot;location:&quot;+str(location))</span><br><span class="line">    # 获取验证码的大小参数</span><br><span class="line">    size = elem.size</span><br><span class="line">    print(&quot;size:&quot; + str(size))</span><br><span class="line">    left = location[&#x27;x&#x27;]*1.5</span><br><span class="line">    top = location[&#x27;y&#x27;]*1.5</span><br><span class="line">    right = left + size[&#x27;width&#x27;]*1.5</span><br><span class="line">    bottom = top + size[&#x27;height&#x27;]*1.5</span><br><span class="line">    # 按照验证码的长宽，切割验证码</span><br><span class="line">    image_obj = page_snap_obj.crop((left, top, right, bottom))</span><br><span class="line">    # 打开切割后的完整验证码</span><br><span class="line">    # image_obj.show()</span><br><span class="line">    code_num = image_str(image_obj)</span><br><span class="line">    elem = browser.find_element_by_id(&quot;txtValid&quot;)</span><br><span class="line">    elem.clear()</span><br><span class="line">    elem.send_keys(code_num)</span><br><span class="line"></span><br><span class="line">    elem = browser.find_element_by_xpath(&#x27;//*[@id=&quot;user-login-form&quot;]/div[2]/input[1]&#x27;)</span><br><span class="line">    elem.click()</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    elem = browser.find_element_by_id(&#x27;btnStudy&#x27;)</span><br><span class="line">    elem.click()</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    # browser.switch_to_frame(&#x27;secondIframe&#x27;)</span><br><span class="line">    # browser.switch_to.frame(&#x27;secondIframe&#x27;)</span><br><span class="line">    # browser.switch_to.frame(&#x27;thirdIframe&#x27;)</span><br><span class="line">    # browser.switch_to.frame(&#x27;dataMainIframe&#x27;)</span><br><span class="line">    switch2frame(browser)</span><br><span class="line">    time.sleep(1)</span><br><span class="line"></span><br><span class="line">    js_list = &#x27;return document.getElementsByClassName(&quot;courseware-list-reed&quot;).length;&#x27;</span><br><span class="line">    video_unstudy_num = browser.execute_script(js_list)</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    run_main(video_unstudy_num, browser)</span><br><span class="line">    browser.close()</span><br><span class="line">    print(&quot;end......&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>好了~你以为就完了？</p>
<p>其实在弄这两个脚本的时候，我试过直接用Js脚本无线循环请求也是可以达到的…</p>
<p>因为这个学习系统是用scorm标准记录学习时间及其进度，但是你如果看了他的播放页面源码，可以知道无非就是一直请求这几个URL：</p>
<p><a href="https://url/resplay/resCoursse/createRes">https://url/resplay/resCoursse/createRes</a> (请求课程信息)</p>
<p><a href="https://url/resplay/resCoursse/heartbeat(%E9%97%B4%E9%9A%941%E5%88%86%E9%92%9F%E6%8F%90%E4%BA%A4%E4%B8%80%E4%B8%AA%E4%BD%A0%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%B6%E9%97%B4%EF%BC%8C%E5%8F%A0%E5%8A%A0%E6%97%B6%E9%97%B4%E6%8F%90%E4%BA%A4%E7%9A%84)">https://url/resplay/resCoursse/heartbeat(间隔1分钟提交一个你的学习时间，叠加时间提交的)</a></p>
<p><a href="https://url/resplay/resCoursse/finished(%E5%9C%A8%E5%85%B3%E9%97%AD%E9%A1%B5%E9%9D%A2%E6%98%AF%E6%8F%90%E4%BA%A4%E7%9A%84)">https://url/resplay/resCoursse/finished(在关闭页面是提交的)</a></p>
<p>url是啥你自行去找到…我怕犯法…</p>
<p>然后测试可以用postman 去(post)请求一下</p>
<p><a href="https://url/resplay/resCoursse/createRes">https://url/resplay/resCoursse/createRes</a> (请求课程信息)</p>
<p>请求参数:</p>
<p>labelId–在播放页面URL上面有，因为是默认还是每个人不一样我就不知道了~</p>
<p>courseId–科目id，在播放页面URL上面有</p>
<p>请求头：</p>
<p>token–你账号的token</p>
<hr>
<p><a href="https://url/resplay/resCoursse/heartbeat(%E9%97%B4%E9%9A%941%E5%88%86%E9%92%9F%E6%8F%90%E4%BA%A4%E4%B8%80%E4%B8%AA%E4%BD%A0%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%B6%E9%97%B4%EF%BC%8C%E5%8F%A0%E5%8A%A0%E6%97%B6%E9%97%B4%E6%8F%90%E4%BA%A4%E7%9A%84)https://url/resplay/resCoursse/finished(%E5%9C%A8%E5%85%B3%E9%97%AD%E9%A1%B5%E9%9D%A2%E6%98%AF%E6%8F%90%E4%BA%A4%E7%9A%84)">https://url/resplay/resCoursse/heartbeat(间隔1分钟提交一个你的学习时间，叠加时间提交的)https://url/resplay/resCoursse/finished(在关闭页面是提交的)</a></p>
<p>请求参数:</p>
<p>labelId–在播放页面URL上面有，因为是默认还是每个人不一样我就不知道了~</p>
<p>courseId–科目id，在播放页面URL上面有</p>
<p>event–&gt;beat</p>
<p>scoData–&gt;{“cmi.core.session_time”:”10:44:02”,”cmi.core.lesson_location”:56079}</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>期中考试 政治地理历史考试内容提纲</title>
    <url>/328/</url>
    <content><![CDATA[<p>1、商品的含义：商品是用于交换的劳动产品。</p>
<p>2、商品的基本属性??使用价值和价值</p>
<p>使用价值概念：商品能够满足人们某种需要的属性。（注意：有使用价值不一定是商品，商品必须有使用价值。）</p>
<p>（2）商品的价值：凝结在商品中的无差别的人类劳动。</p>
<p>（注意：使用价值不同的商品之所以能交换，是因为都耗费了无差别的人类劳动）</p>
<p>（3）商品是使用价值和价值的统一体，二者缺一不可</p>
<p>使用价值是价值的物质承担者，没有使用价值的东西不是商品，没有价值的东西也不是商品。任何人不能同时兼得商品的使用价值和价值。消费者购买商品的目的是为了获得商品的使用价值，销售者是为了实现商品的价值。</p>
<p>（二）货币的本质。</p>
<p>1、货币的产生：货币是商品交换发展到一定阶段的产物；</p>
<p>2、货币的含义和本质：</p>
<p>（1）含义：货币是从商品中分离出来，固定地充当一般等价的商品。</p>
<p>（2）货币的本质是：一般等价物。</p>
<p>（一般等价物：能表现其他一切商品价值，充当商品交换媒介的商品。）</p>
<p>3、货币的职能</p>
<p>（1）两个基本职能??价值尺度与流通手段</p>
<p>A、价值尺度职能</p>
<p>(1)含义：就是以货币作为尺度来表现和衡量其他一切商品价值的大小职能。</p>
<p>（原因：货币之所以能成为价值尺度，是因为货币也是商品，也有价值。）</p>
<p>(2)价格与价值的关系：</p>
<p>所谓价格是通过一定数量的货币表现出来的商品价值，叫做价格。价格是价值的货币表现，价值是价格的基础。在其他因素不变情况下，商品价格与价值成正比。</p>
<p>(3)货币执行价值尺度职能时，只是观念上的货币，不需要现实货币。</p>
<p>B、流通手段：</p>
<p>(1)含义：货币充当商品交换媒介的职能，叫做流通手段。</p>
<p>(2)要注意流通手段与商品流通的区别。以货币为媒介的商品交换，叫做商品流通。流通手段强调的是货币在商品交换中的作用，商品流通强调的是商品如何交换。</p>
<p>(3)作为流通手段的货币必须是现实的货币，不能是观念上的货币。</p>
<p>（2）货币在发展过程中又有了贮藏手段、支付手段、世界货币的职能。</p>
<p>4、流通中所需要的货币量的计算公式。</p>
<p>*<em>流通中所需要的货币量</em><em>*<em>=<strong><strong>商品的价格总额（即待售商品的数量</strong></strong>×</em>*</em><em>价格水平）</em>***/**<strong>货币流通速度</strong></p>
<p>(这表明:流通中所需要的货币量，同商品的价格总额成正比例，而同货币流通速度成反比例。)</p>
<p>5、纸币的产生和发展：</p>
<p>（1）纸币是随着商品交换的发展而产生的。</p>
<p>（2）纸币的含义：它必须由国家（或某些地区）发行的、强制使用的价值符号。</p>
<p>（注意：纸币本身没有价值，它只是代替金属货币执行流通手段的职能。这里需要强调两点：一是由国家或特定地区发行的。二是国家强制使用的。纸币没有价值，之所以能代替货币行使流通手段，最主要原因就在于国家的强制力。）</p>
<p>6、通货膨胀和通货紧缩。</p>
<p>（1）纸币是由国家发行的，国家有权发行纸币，但不能任意发行任何数量的纸币。纸币的发行量必须以流通中所需要的货币数量为限度。</p>
<p>（2）通货膨胀指的是经济运行中出现的全面、持续的物价上涨的现象。如果纸币的发行量超过流通中所需要的货币量，会引起物价上涨，影响人民的生活或社会经济秩序。</p>
<p>（注意：通货膨胀的产生原因很多，不仅仅与纸币的发行量太多有关，也与其他因素有关，如成本上升、总需求太大等。）</p>
<p>（3）通货紧缩是一种与通货膨胀相反的经济现象，表现为物价全面、持续的下跌的经济现象。通常伴随着经济衰退。</p>
<p>二、信用工具和外汇</p>
<p>（一）信用工具：</p>
<p>1、结算的方式：（1）现金结算（2）转账结算。</p>
<p>2、常用信用工具：</p>
<p>（1）信用卡：</p>
<p>A、含义：具有消费、转帐结算、存取现金、信用贷款等部分或全部功能的电子支付卡</p>
<p>B、优点：信用卡可以集存款、取款、消费、结算、查询为一体，能减少现金的使用，简化收款手续，方便购物消费，增强消费安全，给持卡人带来诸多便利。</p>
<p>C、其中银行信用卡是指商业银行对信贷状况良好的客户发行的一种信用凭证。</p>
<p>（2）支票：</p>
<p>是活期存款的支付凭证，是出票人委托银行等金融机构见票时无条件支付一定金额给受款人或者持票人的票据。支票主要分为转帐支票和现金支票两种。</p>
<p>（二）外汇和汇率：</p>
<p>1、外汇：外汇是用外币表示的用于国际间结算的支付手段。</p>
<p>2、汇率又称汇价，是两种货币之间的兑换比率。</p>
<p>判断汇率升高和跌落的标准：如果用100单位外汇可以兑换成更多的人民币，说明外汇的汇率升高，外币升值，人民币汇率下降，人民币贬值；反之，亦然。</p>
<p>3、汇率变化对经济的影响：（即：货币升值和贬值的利弊分析）</p>
<p>（1）本币升值，意味着同量外币兑换的本币更少，影响有：A出口减少，进口增加；B外资投资成本增加；C导致国内生产下降、失业增加；D本国外汇储备贬值，但有利于偿还外债；E有利于本国企业走出去</p>
<p>（2）本币贬值，意味着同量外币兑换的本币更多，影响有：A出口增加，进口减少；B外资投资成本降低；C增强本国产品的国际竞争力，D本国消费相对便宜，外国游客增加。</p>
<p>4、保持人民币币值基本稳定的含义及意义：即对内保持物价总水平稳定，对外保持人民币汇率稳定，对人民生活安定，对国民经济持续快速健康发展，对世界金融的稳定、经济的发展，具有重要意义。</p>
<p>三、树立正确的金钱观</p>
<p>1、从产生看：货币是商品交换长期发展的产物；</p>
<p>2、从本质看：货币是固定的充当一般等价物的商品；</p>
<p>从职能看：货币具有价值尺度、流通手段两个基本职能；</p>
<p>从重要性看：在一定意义上，货币是财富的象征，在社会主义初级阶段，任然存在商品货币关系，生产、分配、交换、消费等各种经济活动都离不开货币。</p>
<p>第二课多变的价格</p>
<p>一、影响价格的因素</p>
<p>价格由价值决定，并受供求关系及其它的影响（即价格由市场形成）</p>
<p>（一）供求影响价格</p>
<p>1．供求影响价格</p>
<p>（1）引起价格变动和差异的因素有气候、时间、地域、生产，甚至宗教信仰、习俗等文化因素也有影响（间接因素）；（2）这些因素对价格的影响是通过改变该商品的供求关系(直接因素)来实现的</p>
<p>2．供求如何影响价格</p>
<p>①供不应求，价格升高。买方不得不接受较高的价格以满足自身的需要，出现“物以稀为贵”的现象，这就是“卖方市场”。（即由卖者起主导作用的一种市场类型，卖者在市场交易中处于有利地位）；</p>
<p>②供过于求，价格降低。卖方不得不以较低的价格处理他们过剩的存货，出现“货多不值钱”的现象，这就是“买方市场”。（即是买者起主导作用的一种市场类型，买者在市场交易中处于有利地位。）</p>
<p>（二）价值决定价格</p>
<p>1．价格和价值的关系</p>
<p>价格是由价值决定的，价值是价格的基础，价格是价值的货币表现（其它条件不变的情况下，价值越大，价格越高</p>
<p>2．商品价值量由社会必要劳动时间决定</p>
<p>3．劳动生产率及其与商品价值量的关系</p>
<p>单位商品的价值量和社会劳动生产率成反比;个别劳动生产率与商品价值总量成正比</p>
<p>4．价值规律的基本内容和表现形式</p>
<p>(1)基本内容：商品价值量由生产该商品的社会必要劳动时间决定，商品交换以价值量为基础实行等价交换；（提示：价值规律是商品经济的基本规律，有商品经济就有价值规律）</p>
<p>(2)表现形式：价格受供求关系的影响，围绕价值上下波动</p>
<p>价格围绕价值上下波动为什么是价值规律的表现形式（即为什么没违背价值规律—等价交换原则?为什么价格围绕价值上下波动不是对价值规律的否定）？</p>
<p>价格和供求相互影响、相互制约造成价格上下波动,价格不可能无限上涨，也不可能无限下跌，始终以价值为基础，围绕价值波动.从单个交换过程来看，经常价格与价值不相符，但是从一个较长时间看，商品的平均价格还是和商品价值相符的可见，价格围绕价值上下波动不是对价值规律的否定，而是价值规律的表现形式，而且是唯一可能的表现形式，等价交换存在于商品多次交换的平均数中</p>
<p>二、价格变动的影响</p>
<p>(一)价格变动对人们生活的影响</p>
<p>1、价格变动会引起需求量的变动（一般来说，其它条件不变的情况下）</p>
<p>(1)某种商品的价格上升时，人们会减少对它的购买</p>
<p>(2)某种商品的价格下降时，人们会增加对它的购买</p>
<p>2、不同商品的需求量对价格变动的反应程度是不同的</p>
<p>（1）价格变动对生活必需品需求量的影响比较小</p>
<p>（2）价格变动对高档耐用品需求量的影响比较大</p>
<p>3、相关商品的价格变动对需求量的影响</p>
<p>（1）在可替代的两种商品中，一种商品价格上升，消费者将减少对该商品的需求量，将增加对其替代品的需求量；反之亦然。</p>
<p>（2）在有互补关系的商品中，一种商品价格上升，消费者将减少对该商品的需求量，同时将减少对其互补商品的需求量；反之亦然。</p>
<p>（名词解释：替代品是指如果两种商品功用相同或相近，可以满足消费者的同一需要，这两种商品就互为替代品；互补商品是两种商品必须组合在一起才能满足人们的某种需要，这两种商品就是互补商品。）</p>
<p>（二）对生产经营的影响：</p>
<p>1、调节生产规模2、提高劳动生产率3、促使企业生产适销对路的高质量的产品<br>第三课多彩的消费</p>
<p>1、影响消费的因素（影响消费的主要因素：收入、物价总体水平）</p>
<p>⑴、居民收入是影响消费的主要因素??收入是消费的基础和前提；</p>
<p>A、其他条件不变，则人们当前可支配收入（当前收入）越多，对各种商品和服务的消费量就越大。因此要提高居民的生活水平，必须保持经济的稳定增长，增加居民收入。</p>
<p>B、一般地，未来预期收入（未来收入）越高，预期支出的可能性就会越大。</p>
<p>C、社会收入差距与社会总体消费水平有密切的联系。人们的收入差距过大，总体消费水平会降低；反之，收入差距缩小，会使总体消费水平提高。</p>
<p>⑵、物价水平也是影响消费的主要因素：一般说来，物价上涨人们会减少对商品的消费量；物价下跌，则购买力普遍提高，会增加对商品的消费量。</p>
<p>2、消费的类型</p>
<p>（1）按照消费对象不同可分为有形商品消费和劳务消费</p>
<p>（2）按照交易方式不同可分:钱货两清的消费、贷款消费、租赁消费</p>
<p>（3）按照消费的目的分：生存资料消费、发展资料消费、享受资料消费</p>
<p>第一单元宇宙中的地球</p>
<p>一：地球运动的基本形式：公转和自转</p>
<p>绕转中心太阳地轴</p>
<p>方向自西向东（北天极上空看逆时针）自西向东（北极上空看逆时针，南极上空相反）</p>
<p>周期恒星年（365天6时9分10秒）恒星日（23时56分4秒）</p>
<p>角速度平均1o/日近日点（1月初）快远日点（7月初）快各地相等，每小时15o（两极除外）</p>
<p>线速度平均30千米/小时从赤道向两极递减,赤道1670KM小时,两极为0</p>
<p>地球自转和公转的关系：</p>
<p>（1）黄赤交角：赤道平面和黄道平面的交角。目前是23o26’</p>
<p>（2）太阳直射点在南北回归线之间的移动</p>
<p>二：地球自转的地理意义</p>
<p>（1）昼夜更替</p>
<p>（2）地方时</p>
<p>（3）沿地表水平运动的物体发生偏移,北半球右偏,南半球左偏.</p>
<p>三：地球公转的地理意义</p>
<p>（1）昼夜长短和正午太阳高度的变化</p>
<p>①昼夜长短的变化</p>
<p>北半球：夏半年，昼长夜短，越向北昼越长</p>
<p>①太阳直射点在那个半球，北极圈以北出现极昼现象那个半球昼长，②赤道全年冬半年，昼短夜长，越向北昼越短昼夜平分，③春秋分日全球北极圈以北出现极夜现象昼夜平分南半球：与北半球相反</p>
<p>②正午太阳高度的变化</p>
<p>春秋分日：由赤道向南北方向降低由太阳直射点向南北</p>
<p>随纬度的变化夏至日：由23o26’N向南北降低方向降低</p>
<p>冬至日：由23o26’S向南北降低</p>
<p>23o26’N以北在夏至日达到最大值离直射点越近高度</p>
<p>随季节的变化23o26’S以南在冬至日达到最大值越大</p>
<p>南北回归线之间每年有两次直射</p>
<p>四：光照图的判读</p>
<p>（1）判断南北极，通常用于俯视图，判断依据为：从地球北极点看地球的自转为逆时针，从南极看为顺时针;或看经度,东经度递增的方向即为地</p>
<p>球自转的方向</p>
<p>（2）判断节气，日期及太阳直射点的纬度晨昏圈过极点（或与一条经线重合），太阳直射点是赤道，是春秋分日；晨昏线与极圈相切，若北极圈</p>
<p>有极昼现象为北半球的夏至日，太阳直射点为北纬23o26’，若北极圈有极夜现象为北半球的冬至日，太阳直射点为南纬23o26’</p>
<p>（3）确定地方时在光照图中，太阳直射点所在的经线为正午12点，晨昏线所包围的白昼部分的中间经线为12点，晨线与赤道交点经线的地方时为</p>
<p>6点，昏线与赤道交点经线为18点，依据每隔15o，时间相差1小时，每1o相差4分钟，先计算两地的经度差（同侧相减，异侧相加），再转换成时间，依据东加西减的原则，计算出地方时</p>
<p>（4）判断昼夜长短求某地的昼（夜）长，也就是求该地在纬线圈上昼（夜）弧的长度，这个长度也可由昼（夜）弧所跨的经度数来推算</p>
<p>（5）判断正午太阳高度角先求所求地区与太阳直射点的纬度差，若所求地和太阳直射点在同一半球，取两地纬度之差，若所求地和太阳直射点不在同一半球，取两地纬度之和，再用90o-两地纬度差即为所求地的正午太阳高度</p>
<p>五：晨昏线与经线和纬线</p>
<p>（1）根据晨昏线与纬线相交判断问题</p>
<p>①晨昏线通过南北极可判断这一天为3月21日或9月23日前后</p>
<p>②晨昏线与南北极相切，北极圈内为昼，可判断这一天为6月22日前后，北半球为夏至日，北半球为夏季，南半球为冬季</p>
<p>③晨昏线与南北极相切，北极圈内为夜，可判断这一天为12月22日前后，北半球为冬至日，北半球为冬季，南半球为夏季</p>
<p>（2）根据晨昏线与经线相交关系判断昼长和夜长</p>
<p>推算某地昼长或者夜长，求昼长时，在昼半球范围内算出该地所在地的纬线圈从晨线与纬线圈交点到昏线与纬线圈交点，所跨的经度除以15即该地</p>
<p>昼长，如果图上只画了昼半球的一半，要注意，图中白昼所跨经度差的2倍，除以15才是该地的昼长</p>
<p>七：区时,地方时的计算</p>
<p>第一步:先求两地的经度差.</p>
<p>第二步:再求时间差,以每一度经度相差4分钟来算.</p>
<p>第三步：然后判断两地的东西方向,求东用加,求西用减.若求出的时间大于24小时，则减24，日期加1天，若时间为负值，则加24小时，日期减去1</p>
<p>天.</p>
<p>第二单元大气</p>
<p>一：大气的组成和垂直分层</p>
<p>1）低层大气的组成：干洁空气（氮?生物体的基本成分、氧?生物维持生命活动的基本物质、二氧化碳?光合作用的基本原料、臭氧?吸收太阳</p>
<p>紫外线“地球生命的保护伞”）、水汽和固体杂质（成云致雨的必要条件）</p>
<p>2）：大气的垂直分层（课本29页图2.1）</p>
<p>高度温度大气运动对人类活动的影响</p>
<p>高层大气2000-3000千米电离层反射无线电波</p>
<p>平流层50-55千米随高度的增加而上升平流运动臭氧吸收紫外线升温;有利于高空飞行</p>
<p>对流层低纬：17-18千米，中纬：10-12千米，高纬：8-9千米随高度增加而递减对流运动天气现象复杂多变，与人类关系最密切</p>
<p>二：大气热力作用</p>
<p>（1）对太阳辐射的削弱作用</p>
<p>吸收作用：具有选择性，水汽和二氧化碳吸收红外线，臭氧吸收紫外线，对于可见光部分吸收比较少</p>
<p>反射作用：无选择性，云层越厚，反射作用越强，在夏季多云的白天，气温不是很高</p>
<p>散射作用：具有选择性，对于波长较短的篮紫光易被散射，所以晴朗的天空呈蔚蓝色</p>
<p>（2）对地面的保温效应</p>
<p>①大气吸收地面的长波辐射，截留热量而增温，由于大气对于太阳短波辐射的吸收能力比较差，但是对于地面长波辐射吸收作用强，所以地面辐射</p>
<p>大部分都是被大气吸收</p>
<p>②大气逆辐射是大气辐射的一种,方向朝向地面,对地面热量进行补偿，起保温作用</p>
<p>二：大气的热力状况</p>
<p>大气的热力作用</p>
<p>1）热力环流：由于地面冷热不均而形成的空气环流，是大气运动的一种最简单的形式。</p>
<p>从图中可以看出，近地面等压线向低压方向（向下）弯曲，高空等压线向高压方向（向上）凸起</p>
<p>2）大气的水平运动?–风</p>
<p>影响因素：等压线越密集的地方，则风力越大（图2.10，2.11，2.12）</p>
<p>在单一水平气压梯度力作用下：风向垂直等压线，指向低压</p>
<p>风向在水平气压梯度力和地转偏向力作用下：风向与等压线平行</p>
<p>在三个力作用下：风向与等压线成一夹角,始终由高压指向低压方向.</p>
<p>三：全球性的大气环流</p>
<p>1）三圈环流（课本37页图2.14）</p>
<p>①在地表形成了七个气压带和六个风带，气压带风带随太阳直射点的南北移动而南北移动,对于北半球来说,夏季向北移,位置偏北;冬季向南移,位</p>
<p>置偏南.（图2.15）</p>
<p>②海陆分布对大气环流的影响</p>
<p>（3）季风环流（图2.18）</p>
<p>地区东亚南亚,东南亚</p>
<p>气候类型温带季风气候亚热带季风气候热带季风气候</p>
<p>成因海陆热力性质差异海陆热力性质差异，气压带和风带的季节移动</p>
<p>风向冬季西北风（亚洲大陆）东北风（亚洲大陆）</p>
<p>夏季东南风（太平洋）西南风（印度洋）</p>
<p>第1课夏、商、西周的政治制度</p>
<p>1、夏商政治制度的内容：</p>
<p>中央：</p>
<p>1王位世袭制取代禅让制；</p>
<p>2参与决策相、卿士，负责祭祀占卜和记录王朝大事的卜、祝、史，执掌军权的师等。</p>
<p>地方：侯、伯</p>
<p>夏商政治制度的影响：夏商的早期政治制度，对西周宗法制和分封制有直接影响。</p>
<p>2、西周的分封：</p>
<p>1被封的诸侯国的义务：镇守疆土、随从作战、缴纳贡赋、朝觐述职</p>
<p>2影响：</p>
<p>积极影响：加强了周天子对地方的统治；形成了对周王室众星</p>
<p>捧月般的政治格局</p>
<p>消极影响：西周后期王权衰弱，春秋战国暑期列国纷争</p>
<p>3结果：西周后期分封制受到破坏；战国末年周王室失去分封大权</p>
<p>3、西周的宗法制：</p>
<p>1内容：用父系的血缘关系的亲疏来维系政治等级，巩固国家政治的制度。</p>
<p>2特点：嫡长子继承制</p>
<p>3影响：保证贵族的垄断和特权地位，有利于统治集团内部的稳定和团结。</p>
<p>第2课秦朝的中央集权制度的形成</p>
<p>1、中央集权制度的形成：</p>
<p>特点：一人独尊；皇权至上；皇位世袭</p>
<p>评价：标志着封建专制主义中央集权制度的确立。形成中央垂直管理地方的形式，官僚政治取代贵族政治的重要标志。</p>
<p>2、中央集权的基本特征：权力高度集中</p>
<p>3、中央集权制的作用及影响：</p>
<p>积极作用：</p>
<p>1使秦实力增强，通过战争扩大疆域，形成中国历史上第一个统一的多民族的封建国家，成为当时世界大国。</p>
<p>2使秦能一实行各种巩固统一的措施。</p>
<p>3奠定了中国两千多年封建社会政治制度的基本格局，为历代封建王朝所沿用，且不断得到加强和完善。</p>
<p>消极作用：依靠皇帝的专制权威，加强对人民的压榨，造成阶级矛盾迅速激化。</p>
<p>第3课从汉至元政治制度的演变</p>
<p>1、中央政治制度的演变：</p>
<p>汉朝汉承秦制</p>
<p>有所变化中央设三公(相、御史大夫、太尉)</p>
<p>中朝决策机构</p>
<p>外朝执行机构</p>
<p>尚书台中枢机构</p>
<p>魏晋南北朝逐步形成三省体制</p>
<p>隋朝尚书省、内史省、门下省为中央政府最高统治机构</p>
<p>唐朝中书省掌决策，负责草拟和颁发皇帝诏令</p>
<p>尚书省负责执行政令。下设吏、户、礼、兵、刑、工六部。</p>
<p>门下省掌审议，负责审核政令。</p>
<p>宋二府中书门下最高行政机构</p>
<p>枢密院最高军政机构</p>
<p>参知政事副相，分割宰相的行政权</p>
<p>三司管理财政，分割宰相的财权</p>
<p>元中书省最高行政机构</p>
<p>枢密院最高军事机构</p>
<p>宣政院统领宗教事务和管理西藏地区</p>
<p>2、地方政治制度的演变：</p>
<p>汉汉初，郡国并行制；汉武帝后期：设刺史制度</p>
<p>隋唐唐中后期，地方军镇长官节度使越设越多，发展成藩镇割据局面</p>
<p>宋文臣做地方官；州县两级制</p>
<p>元在地方实行行省制度，行省之下，分别为路、府、州、县。行省制度加强了中央集权，巩固了多民族国家的统一。它的创立，是地方行政制度的重大变革。</p>
<p>边远民族地区高寒宣政院进行管理</p>
<p>3、从汉至元政治制度特点：相权不断削弱，皇权不断增强。地方权力不断削弱，中央权力不断增强。</p>
<p>第4课明清君主专制的加强</p>
<p>1、明朝：君主专制强化，中国的宰相制度从此被废除，君主专制达到了新的高度</p>
<p>2、清朝：君主专制达到顶峰，设置军机处，由皇帝挑选新任的满汉官员充任军机大臣。全</p>
<p>国的军政大权就完全集中到皇帝手中。</p>
<p>第二单元古代希腊罗马的政治制度</p>
<p>第5课古代希腊政治民主政治</p>
<p>1、基础：梭伦改革</p>
<p>确立：克利斯提尼改革</p>
<p>黄金时代：伯利克里统治时期</p>
<p>2、特征：人民主权、轮番而治、法律至上、公民内部平等</p>
<p>3、积极作用：促进希腊民族性格形成；推动古希腊文化事业发展；开西方民主政治的先河</p>
<p>消极作用：男性公民民主；小国寡民的直接民主；抽签选举，轮番坐庄的弊端</p>
<p>第6课罗马法的起源与发展</p>
<p>1、《十二铜表法》标志着罗马成文法的诞生。</p>
<p>《民法大全》（查士丁尼组织编纂）标志着罗马法律体系的最终完成。</p>
<p>2、影响：维护罗马帝国的政治、经济统治；是现代欧洲大陆法律体系的基础；是反封建和巩固资本主义制度的有力思想武器。</p>
<p>第三单元近代西方资本主义政治制度的确立与发展</p>
<p>第7课英国君主立宪制的建立</p>
<p>1、1光荣革命：1688年</p>
<p>2《权利法案》：1689年。特点：议会的权力日益超过国王的权力；国会逐渐处于“同而不治”的地位</p>
<p>3责任内阁制：首相事实上成为国家政治生活中的最高决策者和领导者。</p>
<p>2、作用：</p>
<p>国内影响：提供保障、稳定社会、走入民主、树立模式；</p>
<p>国外影响：对其他国家的资产阶级建立新制度，也有巨大影响。</p>
<p>3、特点：英国立宪制度是君主制、贵族制与民主制三者融为一体的混合物。君主是象征性</p>
<p>的元首，其职责多数是礼仪性的。</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>简单利用Struts2实现用户登录/测身材</title>
    <url>/260/</url>
    <content><![CDATA[<p>前几天看了一本JSP-Struts2相关的书，按照步骤来还是出现了几个问题</p>
<p>二月 16, 2017 12:33:07 上午 org.apache.catalina.core.AprLifecycleListener init<br>信息: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: C:\Program Files\Java\jre7\bin;C:\Program Files\Apache Software Foundation\Tomcat 6.0\bin<br>二月 16, 2017 12:33:07 上午 org.apache.coyote.http11.Http11Protocol init<br>信息: Initializing Coyote HTTP/1.1 on http-8080<br>二月 16, 2017 12:33:07 上午 org.apache.catalina.startup.Catalina load<br>信息: Initialization processed in 352 ms<br>二月 16, 2017 12:33:07 上午 org.apache.catalina.core.StandardService start<br>信息: Starting service Catalina<br>二月 16, 2017 12:33:07 上午 org.apache.catalina.core.StandardEngine start<br>信息: Starting Servlet Engine: Apache Tomcat/6.0.16<br>二月 16, 2017 12:33:09 上午 com.opensymphony.xwork2.util.logging.commons.CommonsLogger info<br>信息: Parsing configuration file [struts-default.xml]<br>二月 16, 2017 12:33:09 上午 com.opensymphony.xwork2.util.logging.commons.CommonsLogger error<br>严重: Dispatcher initialization failed<br>Unable to load configuration. - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:58)<br>at org.apache.struts2.dispatcher.Dispatcher.init_PreloadConfiguration(Dispatcher.java:374)<br>at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:418)<br>at org.apache.struts2.dispatcher.FilterDispatcher.init(FilterDispatcher.java:190)<br>at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:275)<br>at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:397)<br>at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:108)<br>at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3709)<br>at org.apache.catalina.core.StandardContext.start(StandardContext.java:4356)<br>at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)<br>at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)<br>at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:525)<br>at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:924)<br>at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:887)<br>at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:492)<br>at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1147)<br>at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)<br>at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)<br>at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)<br>at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)<br>at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)<br>at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)<br>at org.apache.catalina.core.StandardService.start(StandardService.java:516)<br>at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)<br>at org.apache.catalina.startup.Catalina.start(Catalina.java:578)<br>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)<br>at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)<br>at java.lang.reflect.Method.invoke(Unknown Source)<br>at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)<br>at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)<br>Caused by: Unable to load bean: type: class:com.opensymphony.xwork2.ObjectFactory - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.register(XmlConfigurationProvider.java:221)<br>at org.apache.struts2.config.StrutsXmlConfigurationProvider.register(StrutsXmlConfigurationProvider.java:101)<br>at com.opensymphony.xwork2.config.impl.DefaultConfiguration.reloadContainer(DefaultConfiguration.java:169)<br>at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:55)<br>… 30 more<br>Caused by: Bean type class com.opensymphony.xwork2.ObjectFactory with the name struts has already been loaded by bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.1.8.1.jar!/struts-default.xml:30:124 - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.register(XmlConfigurationProvider.java:205)<br>… 33 more</p>
<p>二月 16, 2017 12:33:09 上午 org.apache.catalina.core.StandardContext filterStart<br>严重: Exception starting filter struts2<br>Unable to load configuration. - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:431)<br>at org.apache.struts2.dispatcher.FilterDispatcher.init(FilterDispatcher.java:190)<br>at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:275)<br>at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:397)<br>at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:108)<br>at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3709)<br>at org.apache.catalina.core.StandardContext.start(StandardContext.java:4356)<br>at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)<br>at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)<br>at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:525)<br>at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:924)<br>at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:887)<br>at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:492)<br>at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1147)<br>at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)<br>at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)<br>at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)<br>at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)<br>at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)<br>at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)<br>at org.apache.catalina.core.StandardService.start(StandardService.java:516)<br>at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)<br>at org.apache.catalina.startup.Catalina.start(Catalina.java:578)<br>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)<br>at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)<br>at java.lang.reflect.Method.invoke(Unknown Source)<br>at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)<br>at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)<br>Caused by: Unable to load configuration. - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:58)<br>at org.apache.struts2.dispatcher.Dispatcher.init_PreloadConfiguration(Dispatcher.java:374)<br>at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:418)<br>… 28 more<br>Caused by: Unable to load bean: type: class:com.opensymphony.xwork2.ObjectFactory - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.register(XmlConfigurationProvider.java:221)<br>at org.apache.struts2.config.StrutsXmlConfigurationProvider.register(StrutsXmlConfigurationProvider.java:101)<br>at com.opensymphony.xwork2.config.impl.DefaultConfiguration.reloadContainer(DefaultConfiguration.java:169)<br>at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:55)<br>… 30 more<br>Caused by: Bean type class com.opensymphony.xwork2.ObjectFactory with the name struts has already been loaded by bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.1.8.1.jar!/struts-default.xml:30:124 - bean - jar:file:/C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/webapps/sshTest/WEB-INF/lib/struts2-core-2.3.31.jar!/struts-default.xml:65:72<br>at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.register(XmlConfigurationProvider.java:205)<br>… 33 more</p>
<p>二月 16, 2017 12:33:09 上午 org.apache.catalina.core.StandardContext start<br>严重: Error filterStart<br>二月 16, 2017 12:33:09 上午 org.apache.catalina.core.StandardContext start<br>严重: Context [/sshTest] startup failed due to previous errors<br>二月 16, 2017 12:33:10 上午 org.apache.coyote.http11.Http11Protocol start<br>信息: Starting Coyote HTTP/1.1 on http-8080<br>二月 16, 2017 12:33:10 上午 org.apache.jk.common.ChannelSocket init<br>信息: JK: ajp13 listening on /0.0.0.0:8009<br>二月 16, 2017 12:33:10 上午 org.apache.jk.server.JkMain start<br>信息: Jk running ID=0 time=0/46  config=null<br>二月 16, 2017 12:33:10 上午 org.apache.catalina.startup.Catalina start<br>信息: Server startup in 2658 ms</p>
<p>新手处理问题、老鸟或者大神可以忽略喔</p>
<h1 id="问题1：Tomcat启动时出现的Error-filterStart错误"><a href="#问题1：Tomcat启动时出现的Error-filterStart错误" class="headerlink" title="问题1：Tomcat启动时出现的Error filterStart错误"></a>问题1：Tomcat启动时出现的Error filterStart错误</h1><p>出现这个问题,大家都是出找g女或者b仔、但是来来回回都是国人那些复杂的问题 我也是先按照网上的答案1，检查配置文件，反复检查若干遍之后，确认的确没有问题。 再按照网上的答案2，把“commons-fileupload-1.2.2.jar”和“commons-io-2.0.1.jar”包放到lib下，不过启动时还是出现相同的错误。 其实这需要去看报错的代码去分析！因为Error filterStart报错的原因实在太多了 1.xml配置失误 2.filter中某段代码未实例化 <strong>3.相应的包重复出现/相应的包包在部署是没有被包含/或者包对应的版本不对！（我就是出现struts2包和xwork包的版本不对）</strong> 4.类文件没有部署到tomcat下面，clean掉整个工程，重新编译，部署，启动tomcat.</p>
<h1 id="问题2：关于Context-startup-failed-due-to-previous-errors"><a href="#问题2：关于Context-startup-failed-due-to-previous-errors" class="headerlink" title="问题2：关于Context []startup failed due to previous errors"></a>问题2：关于Context []startup failed due to previous errors</h1><p>可能出错的地方： 1.web.xml文件 web应用部署描述符，里面的部署的xml文件或者类，如果这些找不到就会发生startup failed due to previous errors错误。 2.如果在应用spring的话，在配置文件applicationContext.xml中定义的类、xml文件找不到也会报这个错误。 3.在web.xml，struts.xml，applicationContext.xml文件中自身有任何一点错误都可能引起上面的这个问题，而不仅仅是附带的文件错误导致。 4.如果使用ibatis的话，在SqlMapConfig.xml中定义的xml文件找不到也会报这个错误。（hibernate的配置在整合spring的时候使用spring的配置文件） 5.JDK的版本问题，最好使用JDK5.0 或者更高的版本。 6.Eclipse和tomcat的版本兼容问题 7.框架整合的过程中在导入到lib下的jar包冲突也可能产生该错误。 8.jar包的缺少以及jar包的版本也可产生该错误。（我的出现的问题） 9.其他的原因</p>
<hr>
<p>所以为了解决Struts2 jar包的的重复或者出错。 还是直接用myeclipse配置的包使用 -&gt;?<a href="http://jingyan.baidu.com/article/ed2a5d1f3353d709f6be17a6.html">myeclipse 如何配置struts2</a> 自带已经包含了Struts2所需要的包</p>
<hr>
<p>下面是一个简单利用Struts2实现用户登录的小程序 记得先把 这个 -&gt;<a href="http://jingyan.baidu.com/article/ed2a5d1f3353d709f6be17a6.html">myeclipse 如何配置struts2</a>?配置好才进行下面的 配置完成后在src中出现struts.xml的文件 然后需要建两个JSP页面：login.jsp 、loginResult.jsp，一个action类、 配置WEB.xml的代码如下</p>
<?xml version="1.0" encoding="UTF-8"?>
<p><web-app version="2.5" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
http://java.sun.com/xml/ns/javaee/web-app\_2\_5.xsd"></p>
<!-- 默认首页配置 -->
<welcome-file-list> 
<welcome-file>index.jsp</welcome-file> 
</welcome-file-list>
<!-- Starts配置名 -->
<display-name>Starts info</display-name>
<!-- Starts注册 -->
<filter>
<filter-name>struts2</filter-name>
<filter-class>
org.apache.struts2.dispatcher.FilterDispatcher
</filter-class>
</filter>
<filter-mapping>
<filter-name>struts2</filter-name>
<url-pattern>/\*</url-pattern>
</filter-mapping>
</web-app>

<p>Jsp页面代码：</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%@taglib prefix=”s” uri=”/struts-tags”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;login.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
  <br/>
  <br/>
  <br/>
    <div> 
    ${requestScope.message}  
    <s:form action="Login" method="post">
    <s:textfield name="adminUserName" label="用户名" />
    <s:password name="adminUserPassword" size="21" label="密码"/>
    <s:submit value="提 交"/>
    </s:form> 
    </div>
  </body>
</html>

<p>由于文件中用到了strut的标签，所以需要在文件头部加上下面语句：</p>
<p>&lt;%@taglib prefix=”s” uri=”/struts-tags”%&gt;</p>
<p>而：</p>
<p>${requestScope.message}  </p>
<p>是我使用了EL表达式，接收失败的报错信息显示出来 loginResult.jsp</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;通过&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    ${message}
  </body>
</html>

<p>这个文件是显示验证结果！成功到这个页面 Struts.xml:</p>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.1//EN" "http://struts.apache.org/dtds/struts-2.1.dtd">
<struts>
<package name="example" namespace="" extends="struts-default">
<action name="Login" class="action.LoginAction">
<result>/loginResult.jsp</result>
<result name="input">/login.jsp</result>
</action>
</package>
</struts>    

<p><struts></struts>之间是actionMapper相关的配置内容、一个WEB应用系统会有很多配置，所以用到了<package>来进行分类，这个相当于Java开发的包 最后是在loginAction.java</p>
<p>package action;</p>
<p>import com.opensymphony.xwork2.ActionSupport;</p>
<p>/**<br> * Struts2实现用户登录<br> * @author Administrator<br> *<br> */<br>public class LoginAction extends ActionSupport{<br>//执行用户验证的方法<br>public String execute() throws Exception{<br>if(“admin”.equals(adminUserName)&amp;&amp;”admin”.equals(adminUserPassword)){<br>message=adminUserName+”登录成功！”;<br>}else{<br>message=adminUserName+”登录失败！”;<br>return INPUT;<br>}</p>
<p>return SUCCESS;<br>}</p>
<p>public String adminUserName;//用户名<br>public String adminUserPassword;//密码<br>public String message;//执行后返回的信息<br>public String getAdminUserName() {<br>return adminUserName;<br>}<br>public void setAdminUserName(String adminUserName) {<br>this.adminUserName = adminUserName;<br>}<br>public String getAdminUserPassword() {<br>return adminUserPassword;<br>}<br>public void setAdminUserPassword(String adminUserPassword) {<br>this.adminUserPassword = adminUserPassword;<br>}<br>public String getMessage() {<br>return message;<br>}<br>public void setMessage(String message) {<br>this.message = message;<br>}</p>
<p>}</p>
<p>这个类有山歌属性：adminUserNmae、adminUserPassword、和message。 执行完成会返回execute()方法。</p>
<hr>
<p>程序开发完毕后： <img src="http://qn.199604.com/20170216004237.jpg"> 运行结果图： <img src="http://qn.199604.com/20170216004253.jpg"> 成功图： <img src="http://qn.199604.com/20170216004325.jpg"> 失败图： <img src="http://qn.199604.com/20170216004305.jpg"></p>
<hr>
<p>写的很烂、也很长气、新手学习处理的问题。</p>
<hr>
<h1 id="测身材体型的应用"><a href="#测身材体型的应用" class="headerlink" title="测身材体型的应用"></a>测身材体型的应用</h1><p>index.jsp页面</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ pageEncoding=”utf-8”%&gt;<br>&lt;%@taglib prefix=”s” uri=”/struts-tags” %&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;index.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->
<style type="text/css">
div{font-size: 50px;
font-weight: bold;
color: #f55;
}
#t{
font-weight: bold;
color: #f55;
}
</style>
  </head>
  <body>
    <center>
    <s:div>炸鸡专用测试</s:div>
<s:form action="Body" method="post">
<s:textfield name="height" label="身高(cm)" id="t"/>
<s:textfield name="weight" label="体重(kg)" id="t" />
<s:submit value="提交"/>
</s:form>
    </center>
  </body>
</html>

<p>normal.jsp</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;normal.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <h1>正常！</h1>
  </body>
</html>

<p>thin.,jsp</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;normal.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <h1>你的体型偏瘦！</h1>
  </body>
</html>

<p>little_thin..jsp</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;normal.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <h1>你的体型：苗条！</h1>
  </body>
</html>

<p>little_fat.jsp</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;normal.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <h1>你的体型：轻度肥胖！</h1>
  </body>
</html>

<p>fat.jsp</p>
<p>&lt;%@ page language=”java” import=”java.util.*“ contentType=”text/html; charset=utf-8”%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+”://“+request.getServerName()+”:”+request.getServerPort()+path+”/“;<br>%&gt;</p>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
<pre><code>&lt;title&gt;My JSP &#39;normal.jsp&#39; starting page&lt;/title&gt;
</code></pre>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="expires" content="0">    
<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
<meta http-equiv="description" content="This is my page">
<!--
<link rel="stylesheet" type="text/css" href="styles.css">
-->

  </head>
  
  <body>
    <h1>你的体型：重度肥胖！</h1>
  </body>
</html>

<p>BodyAction.java</p>
<p>package com.glj;</p>
<p>import com.opensymphony.xwork2.ActionSupport;</p>
<p>public class BodyAction extends ActionSupport {<br>private String height;<br>private String weight;<br>public String execute(){</p>
<p>double bodyHeight = Double.parseDouble(height);<br>double bodyWeight = Double.parseDouble(weight);<br>double standardBody = (bodyHeight-100)*0.9;<br>double body = bodyWeight/standardBody;<br>if(body&lt;0.8){<br>return “thin”;<br>}else if(body&gt;=0.8&amp;&amp;body&lt;0.9){<br>return “little_thin”;<br>}else if(body&gt;=0.9&amp;&amp;body&lt;0.9){<br>return “normal”;<br>}else if(body&gt;=1.1&amp;&amp;body&lt;=1.3){<br>return “little_fat”;<br>}else if(body&gt;1.3){<br>return “fat”;<br>}else{<br>return “error”;<br>}<br>}<br>public String getHeight() {<br>return height;<br>}<br>public void setHeight(String height) {<br>this.height = height;<br>}<br>public String getWeight() {<br>return weight;<br>}<br>public void setWeight(String weight) {<br>this.weight = weight;<br>}</p>
<p>}</p>
<p>struts.xml</p>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.1//EN" "http://struts.apache.org/dtds/struts-2.1.dtd">
<struts>
<package name="bodyTest" namespace="" extends="struts-default">
<action name="Body" class="com.glj.BodyAction">
<result name="thin">/thin.jsp</result>
<result name="little\_fat">/little\_fat.jsp</result>
<result name="fat">/fat.jsp</result>
<result name="little\_thin">/little\_thin.jsp</result>
<result name="normal">/normal.jsp</result>
<result name="error">/index.jsp</result>
</action>
</package>
</struts>    

<p>web.xml</p>
<?xml version="1.0" encoding="UTF-8"?>
<p><web-app version="2.5" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
http://java.sun.com/xml/ns/javaee/web-app\_2\_5.xsd"><br>  <welcome-file-list><br>    <welcome-file>index.jsp</welcome-file><br>  </welcome-file-list><br>  <filter><br>  <filter-name>struts2</filter-name><br>  <filter-class><br>  org.apache.struts2.dispatcher.FilterDispatcher<br>  </filter-class><br>  </filter><br>  <filter-mapping><br>  <filter-name>struts2</filter-name><br>  <url-pattern>/*</url-pattern><br>  </filter-mapping></web-app></p>
<hr>
<p>带有数据验证(Validation) 去掉strut2标签自动生成html中的table/tr/td代码，只需要在配置文件struts.xml中加入以下代码即可</p>
<p><constant name="struts.ui.theme" value="simple"></constant></p>
<p> </p>
<p>package com.glj;</p>
<p>import com.opensymphony.xwork2.ActionSupport;</p>
<p>public class userAction extends ActionSupport{<br>private String username;<br>private String password;<br>public String getUsername() {<br>return username;<br>}<br>public void setUsername(String username) {<br>this.username = username;<br>}<br>public String getPassword() {<br>return password;<br>}<br>public void setPassword(String password) {<br>this.password = password;<br>}<br>@Override<br>public void validate() {<br>// TODO Auto-generated method stub<br>super.validate();<br>if(“”.equals(this.getUsername())null==this.getUsername()){<br>this.addFieldError(“username”, “对不起，用户名不能为空”);<br>}<br>if(“”.equals(this.getPassword())null==this.getPassword()){<br>this.addFieldError(“password”, “对不起，密码不能为空”);<br>}<br>}<br>@Override<br>public String execute() throws Exception {<br>System.out.println(“执行了userAction”);<br>if (“admin”.equals(this.getUsername())&amp;&amp;”admin”.equals(this.getPassword())) {<br>return SUCCESS;<br>}<br>else{<br>return ERROR;<br>}<br>}<br>}</p>
<p>&lt;%@ page language=”java” pageEncoding=”utf-8”%&gt;<br><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></p>
<html>
  <head>
  </head> 
  <body>
  <center>
    <form action="login.action" method="post" focus="login">
      <h2>系统登录：</h2>
      账号:
<input type="text" name="username">
${errors.username\[0\]}
<br />
      密码:
<input type="password" name="password">
${errors.password\[0\]}
<br />
<input type="submit" value="提交">
    </form>
   </center>
  </body>
</html>

<p>用&lt;s:actionerror&gt;标签显示出全部错误信息/&lt;s:actionmessage /&gt; 提示信息</p>
<p>package com.glj;</p>
<p>import com.opensymphony.xwork2.ActionSupport;</p>
<p>public class userAction extends ActionSupport{<br>private String username;<br>private String password;<br>public String getUsername() {<br>return username;<br>}<br>public void setUsername(String username) {<br>this.username = username;<br>}<br>public String getPassword() {<br>return password;<br>}<br>public void setPassword(String password) {<br>this.password = password;<br>}<br>@Override<br>public void validate() {<br>// TODO Auto-generated method stub<br>super.validate();<br>if(“”.equals(this.getUsername())null==this.getUsername()){<br>this.addActionError( “对不起，用户名不能为空”);<br>}<br>if(“”.equals(this.getPassword())null==this.getPassword()){<br>this.addActionError(“对不起，密码不能为空”);<br>}<br>}<br>@Override<br>public String execute() throws Exception {<br>System.out.println(“执行了userAction”);<br>if (“admin”.equals(this.getUsername())&amp;&amp;”admin”.equals(this.getPassword())) {<br>return SUCCESS;<br>}<br>else{<br>return ERROR;<br>}<br>}<br>}</p>
<p>在jsp页面加入&lt;s:actionerror /&gt; &lt;s:actionmessage /&gt; 和</p>
<p>this.addActionError(“对不起，密码不能为空”);同理</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>jsp</tag>
      </tags>
  </entry>
  <entry>
    <title>高中感触</title>
    <url>/330/</url>
    <content><![CDATA[<p>学生进人高中后，学习就登上了一个新台阶。新的教材、新的教学要求，在学生面前摆下一道道难关。有的学生在初中时学得蛮不错，学习成绩很好，可是到高中后，却很不适应，听不懂，学不会，成绩甚至出现不及格，高挂红灯。为什么呢？就是因为没有根据高中学习的特点而学习。 </p>
<p>一、高中学习的特点 </p>
<p>1、高中教材的特点 </p>
<p>（1）知识量增大 学科门类，高中与初中差不多，但高中的知识量比初中的大。如初中物理力学的知识点约60个，而高中力学知识点增为90个。 </p>
<p>（2）理论性增强 这是最主要的特点。初中教材有些只要求初步了解，只作定性研究，而高中则要求深人理解，作定量研究，教材的抽象性和概括性大大加强。如初中代数侧重于解方程、运算，而高中代数一开始就是相当抽象的集合、映射。初中政治讲的是法律学这类联系事实的内容，高中则要求学习经济学，马克思理论这样哲学性的东西，比较之下更为抽象。 </p>
<p>（3）系统性增强 高中教材由于理论性增强，常以某些基础理论为纲，根据一定的逻辑，把基本概念、基本原理、基本方法联结起来。构成一个完整的知识体系。前后知识的关联是其一个表现。另外，知识结构的形成是另一个表现，因此高中教材知识结构化明显升级。 </p>
<p>（4）综合性增强 学科间知识相互渗透，相互为用，加深了学习难度。如分析计算物理题，要具备数学的函数，解方程等知识技能。 </p>
<p>（5）能力要求提高 在阅读能力、写作能力、运算能力、实验能力需要进一步的提高与培养。 </p>
<p>2、对高中生智力发展的要求 </p>
<p>智力一般认为包括观察力、记忆力、思维能力和想象力，这就要求高中学生智力方面有相应发展。 </p>
<p>（1）在观察事物时，要更富目的性，会更加全面和深刻，能区别出主要的和次要的，必然和偶然的现象；不仅要有静态的观察，还要有动态的观察；不仅有定性的研究，还要有定量的分析。 </p>
<p>（2）要求记忆以逻辑识记为本，力求在理解基础上抓住教材内在联系，进行记忆。 </p>
<p>（3）运用概念、判断、推理来进行逻辑思维。同时要独立思考问题，研究问题。 </p>
<p>（4）想象力要较大发展。把抽象问题具体化，形象化，如从平面几何到高中立体几何的学习，就需要发展空间想象力。 </p>
<p>二、高中学习的方法 </p>
<p>爱因斯坦有个成功的公式：A＝X＋Y＋Z。A代表成功，X代表艰苦劳动，Y代表正确方法，Z代表少说废话。这个公式指明事业成功的三要素。对于学业来说，成功也有三要素：学习成功＝心理素质十学习方法十智能素质 </p>
<p>1、提高学习心理的素质 </p>
<p>（1）学习的动机。学习需要动机。由于学生的个人需要而产生的学习内驱力很重要。有人有旺盛的求知欲，对学习有浓厚的兴趣，正是如此，如升学、就业、兴趣、爱好、荣誉、地位、求知欲、事业、前途等都是。我们要努力强化学习的动机，如树立远大理想；参加各种竞赛，挑战强者，激起学习欲望；看到自己学习成果而受鼓励，从而增强自信，经受挫折，要有不甘失败和屈辱的精神。 </p>
<p>（2）学习的兴趣。浓厚的学习兴趣与效率有密切关系，可以从好奇心和求知欲中激发学习兴趣。如物理的实验，化学的变化等，容易引起人的好奇和求知；培养对各门功课的兴趣。往往是刻苦学习后，才发现知识的奥秘和用途，才提高学习成绩，所以一定要钻进“书海”去；把知识应用于实践，激发兴趣，用自己所学的知识分析解决出问题时，那种成功感易激发学习兴趣。 </p>
<p>(3）学习的情感、意志和态度。将积极的情感同学习联系起来，防止消极情绪的滋生，可以促进学习。善于控制自己，是学习意志力培养的关键。控制和约束自己的行动，控制不需要的想法和情绪，可以使思想集中到学习上来，这点是尤为重要的。 </p>
<p>2、掌握科学的学习方法。 </p>
<p>（1）预习 在测览教材的总体内容后再细读，充分发挥自己的自学能力，理清哪些内容已经了解，哪些内容有疑问或是看不明白（即找重点、难点）分别标出并记下来。这样既提高了自学能力，又为听课“铺”平了道路，形成期待老师解析的心理定势；这种需求心理定势必将调动起我们的学习热情和高度集中的注意力。 </p>
<p>（2）听课 听老师讲课是获取知识的最佳捷径，老师传授的是经过历史验证的真理；是老师长期学习和教学实践的精华。因为提高课堂效率是尤为重要的，那么课堂效率如何提高呢？a、做好课前准备。精神上的准备十分重要。保持课内精力旺盛，头脑清醒，是学好知识的前提条件。 </p>
<p>b、集中注意力。思想开小差会分心等一切都要靠理智强制自己专心听讲，靠意志来排除干扰。c、认真观察、积极思考。不要做一个被动的信息接受者，要充分调动自己的积极性，紧跟老师讲课的思路，对老师的讲解积极思考。结论由学生自己的观察分析和推理而得，会比先听现成结论的学习效果好。 </p>
<p>d、充分理解、掌握方法。 </p>
<p>e、抓住老师讲课的重点。有的同学在听课，往往忽视老师讲课的开头和结尾，这是错误的，开头，往往寥寥数语．但却是全堂讲课的纲。只要抓住这个纲去听课，下面的内容才会眉目清楚。结尾的话虽也不多，但却是对一 节课精要的提炼和复习提示。同时还要注意老师反复强调的部分。 </p>
<p>f、做好课堂笔记。笔记记忆法，是强化记忆的最佳方法之一。笔记，一份永恒的笔录，可以克服大脑记忆方面的限制。俗语说，好记忆不如烂笔头，因此为了充分理解和消化，必须记笔记。同时做笔记充分调动耳、眼、手、心等器官协同工作可帮助学习。 </p>
<p>g、注意和老师的交流，目光交流，提问式交流，都可以促进学习。 </p>
<p>（3）作业的方法 作业是提高思维能力，复习掌握知识，提高解题速度的途径。通过审题，分析问题，解决问题可以达到巩固检验自己的目的。当然在分析问题时，可有几条思路，如顺推法、逆推法、双向法、辅助法、排除法等，另外作业是千万不可COpy的，那样毫无意义。不理解的也要及时弄明白。 </p>
<p>（4）复习的方法 德国教育学家第斯多惠说：“必须时常回复到所学的东西上而加以复习…… 牢固地记住所学会的东西，这比贪学新东西而又很快忘掉好得多。”因此往往考前的“临时抱佛脚”是不起作用的。复习在于平时，如何复习？ </p>
<p>a、课后回忆，即在听课基础上把所学内容回忆一遍。 </p>
<p>b、精读教材。对教材理解的越透，掌握得越牢，效率也就自然提高了。 </p>
<p>c、整理笔记。 </p>
<p>d、看参考书。这是补充课外知识的好方法。 </p>
<p>e、补缺补漏，系统掌握知识结构。 </p>
<p>f、循环复习。将甲复习完后复习乙，在复习完乙后对甲再进行一次复习，然后前进……这种循环复习利于记忆。 </p>
<p>总的来说，科学的学习方法可用如下此歌谣来概括：课前要预习，听课易人脑。温故才知新，歧义见分晓。自学新内容，要把重点找。问题列出来，听课有目标。听课要专心，努力排干扰。扼要做笔记，动脑多思考。课后须复习，回忆第一条。看书要深思，消化细咀嚼。重视做作业，切勿照搬抄。编织知识网，简洁又明了。 </p>
<p>3、发展智力，提高能力。 </p>
<p>（1）发展观察力。观察是掌握知识，搞好学习的重要环节，也是成才的必要条件。聪明，即耳聪目明，接听力强，视力强，实指观察力强，掌握科学的观察方法，要a、明确的目的和周密的计划山、灵活应用各种观察法，如重复观察、比较观察、定期观察、与思考相结合的观察等。 </p>
<p>（2）提高记忆能力。一切智慧的根源都在于记忆。记忆的原理是随时间变化的，在学习后的几天内遗忘的速度非常的快。但过了一星期后遗忘速度便趋缓了。因此记忆的关键便在最容易遗忘的那几天里巩固复习。选择最佳的时间段进行记忆，由于每个人的情况不同而无法作一个绝对的定论。但是掌握好时间安排是提高记忆能力永远不变的真理。为了同遗忘作斗争，正确安排复习时间便是选择最佳学习时间段了。 </p>
<p>a、及时复习。把识记过的材料再拿来识记，使之巩固。其生理基础是对暂时神经联系不断强化，使它的痕迹进一步巩固。由于遗忘是先快后慢的，因此复习必须及时，要在遗忘尚未大规模开始前进行。 </p>
<p>b、在时间和量上合理安排复习。实验证明：相对集中一段时间学习同一内容，记忆效果好。但也要适当分散，因为复习时间过于集中容易发生干扰；过于分散容易发生遗忘。 </p>
<p>c、交替地分配时间学习也可以提高记忆。科学实验证明：用相等频率的电脉冲刺激脑神经细胞，反应敏捷，可是一旦反复刺激时间过长，神经细胞的反应便消失了。休息一段时间后，反应得以恢复。人的记忆也是如此。法国科学家居里夫人就曾说过：“我同时读几种书，因为专研究一种东西会使我的宝贵的头脑疲倦。”因此我们必须“分配交替”地进行记忆。 </p>
<p>d、另外，采用各种记忆方式也有效果。如特征记忆；歌决记忆；形象记忆；比较记忆；联想记忆等。 </p>
<p>（3）发展思维能力。 </p>
<p>a、学好基础知识，练好基本功； </p>
<p>b、提高语言表达能力； </p>
<p>c、掌握思维的基本方法； </p>
<p>d、提高自己的思维品质（不断学习）； </p>
<p>e、养成良好的思考习惯。 </p>
<p>（4）发展想象能力。 </p>
<p>a、学习丰富的知识和经验； </p>
<p>b、学习诗文作画； </p>
<p>c、开拓思路，研究假设； </p>
<p>d、学好立几发挥空间想象力； </p>
<p>e、参与创造活动。 </p>
<p>（5）培养自学能力，用自己的头脑亲自获得知识。 </p>
<p>同时在学习方法培养之时，要发挥创造才能。这是时代和未来的要求。发展创造性思维，鼓励多样性和个性，有利于学习的创新、科技与发展。 </p>
<p>总之，优化心理素质，就是在高中学习中攻克难点的信心与勇气；掌握科学的学习方法就是运筹正确的战略技术；提高智力能力，就是改良攻关武器，三者是不可或缺的。 </p>
<p>倘若就我们的学习喻作航船，勤奋则是轮船的马达；正确的学习方法便是轮船的方向盘与航线、让我们驾上这艘希冀之船在知识的海洋中园游，让船儿载着我们驶向美好吧！ </p>
<p>我觉得一本好的练习册很重要 并且会做练习册也很重要 我来讲讲我的学习方法 </p>
<p>数学 我们学习发的导学大课堂是一本很好的练习册 题很全 有一定难度 前边有知识点总结 每次做的时候先做知识点总结 然后看例题 这本练习册是一个例题 对应一个类题 看完例题 再做类题 再这部分结束之后 要做课后导练了 每道题都认真去做 哪怕多用点时间 错的题回头想想错哪了 正确答案自己是否明白 你如果找不到这本书 可以选择典中点 也是非常不错的书 知识点归纳得好 同样 要先做例题 再做类题 然后再做习题 不明白的马上问老师 数学要准备出一个白纸本 因为开学之后一般情况下老师会动不动在黑板上抄一些题 这些题是要非常认真做的 因为这就是以后自己复习时用的东西了!还有这也是老师知识的精髓部分了 那么多习题他选出这十几道 一定很有代表性的 老师会讲他的方法 也会问同学们的方法 把题写完后留出一定的位置 记下好的方法 不过自己的方法也要改进 因为一般掌握别人的方法不容易 自己做的印象会很深 </p>
<p>语文 高中语文和初中语文有了非常大的差别 一般来说 基础知识很重要 高考题中 有一道字音题 一道字形 一道病句 一道实词虚词 三道科学文 三道文言文 语文不用特意做题 跟住老师讲得 一般就可以了 老师会给你们讲很多东西 用本子记下来 买那种分成板块的本子 用随意贴自己分好多少张是哪部分 笔记对学习语文很有用 </p>
<p>英语记笔记也是很重要的 笔记不能记杂了 即便老师讲得也有的有用 有的没用 一般动词短语是有用的 要重点记这些 有一些短语你自己不可能记住或者不可能再看就不用记它 英语可以买王后雄教材全解 不需要做别的题 先看完左边的导学部分 再对应作题 只做选择题 因为选择题对你帮助最大 选择最好了别的也跟着好起来 </p>
<p>化学 方程式很重要 高中化学知识少 要跟住老师 化学是半文半理的 也可以选择王后雄教材全解 </p>
<p>物理 我感觉有一本叫倍速学习法的书很好 可以买来看看 </p>
<p>练习册千万不能买杂了 一科一本就可以 不会要马上问老师 千万别这么想：等考完试或者有空从学一遍 因为高中知识不等人的 假期期间可以先把数理化自学一下 学到期中考试 顶多需要10天左右 自学的过程中 你可以配合着做练习册 主要自学的过程中最重要的就是自己哪里不会一定要弄明白 很多时候自己会的等以后老师讲自己还会 自己不会的 等老师讲还不会 其实自学最大的好处并不是让你学过一遍课程 而是让你了解高中课本了解高中学习方法 在自学过程中找到最适合自己的方法 </p>
<p>别睡得太晚 十点睡就行 学习要有计划 做一个像日历一样 把每天要做的事写在上边 做完一件打一个对号 </p>
<p>在上课前，最好先预习课本中将要讲授的内容，这一遍是略读，只要知道将要讲什么就可以了，有不明白之处记下来，课堂上认真听明白它。预习是为了使听课心中有数，提高听课效率。 </p>
<p>课后第一件事不是做练习，而是阅读课文。课后复习，是消化阶段，是自己进行深入理解、分析综合的积极思维过程，必须及时地、仔细地、逐字逐句地阅读课本，并在此基础上，动脑动手，积极消化。 </p>
<p>最后，在学完每章之后，还应把整章课文再阅读，做一个全章总结，把全章内容整理成有纲有目的系统内容，有系统地掌握它。这是一种知识归纳。 </p>
<p>(2)广泛的课外阅读 </p>
<p>除了精读课本外，为了开拓自己的视野，培养自学能力，还应进行广泛的课外阅读，特别是科普书籍和报刊。对科普报刊上的文章，除了自己特别有兴趣的可以精读外，一般只要泛读就可以了。在泛读中可能遇到一些自己读不懂或读得不太懂的问题，这不要紧，从阅读中知道有这么一回事，也是有益处的，这种阅读的主要意义在于扩大你的知识面，活跃你的思维。 </p>
<p>3.认真做好实验 </p>
<p>实验是物理、化学、生物等学科的基础和最重要的研究方法。在学习物理、化学、生物等学科时，实验可以帮助我们理解和巩固有关知识。因此，必须学会实验。在高中，我们怎样会科学实验呢？ </p>
<p>（1）要认真学好历史上的著名实验。学习这些历史上著名实验的实验方法、实验原理和实验装置，可以启发我们自己的思路，使我们在自己进行实验时可以进行借鉴，吸取其精华，并认识到对现象的认真观察和科学归纳的重要性。 </p>
<p>（2）正确观察演示实验。课堂上的演示实验，是教师进行操作，引导我们正确观察、从实验中分析总结得出规律的实验。这时我们虽然没有机会动手，但在实验的过程中，可以充分地看和听，还可以充分地思考。观察演示实验。首先要认真听清老师关于为什么要做这个实验和怎样安排实验的讲解，明确实验目的，知道要考虑哪些因素，排除什么干扰，用什么仪器，它们的作用如何等等。在演示的过程中，要看清每个步骤的目的、操作过程、现象变化过程、怎样做可以获得成功、怎样将导致失败等等。总之，看演示实验，要认真观察和思考，把注意力放在观察和思考实验目的、原理、装置、实验操作步骤和变化过程上，而不能单看实验结果，更不能只觉得好看、好玩就心满意足了。 </p>
<p>（3）认真动手做好实验。教学中安排的学生实验，是极为宝贵的学习机会。百闻不如一见，更不如一做，要真正掌握实验技能，必须通过自己的实践。怎样动手做好实验呢？那就要做到“六要六不要”： </p>
<p>一要预习，明确实验目的、原理、步骤，做到胸有全局。不要心中无数，实验中手忙脚乱，实验后对实验结果茫茫然。 </p>
<p>二要理解仪器性能及使用注意事项，爱护仪器。不要随意玩弄，任意乱用。 </p>
<p>三要仔细观察实验现象及变化过程细节，透过现象看本质。不要粗心大意看热闹。 </p>
<p>四要操作规范，养成良好的实验素养，这是获得准确的实验结果和取得实验成功的保证。不要随心所欲、胡乱操作甚至损坏仪器。 </p>
<p>五要既动手又动脑，不但在操作上下功夫，而且积极动脑深入思考为什么要这样做，不要光做不思考。 </p>
<p>六要认真处理实验数据，分析实验结果，找出产生误差的原因，填好实验报告。不要潦草马虎，为了得到满意结果而拼凑数据。 </p>
<p>学习方法方面，建议看看中科院推出的学习方法讲座光盘《CVC状元高分学习法》(中国科学文化音像出版社出版），里面融会了400多名高考状元的学习经验，汇聚了16位特级教师及教育专家的精髓，众多的案例说明套用其中方法，可以较快地提高成绩，是中国孩子不应错过的一套光盘，值得推荐。内容如下：</p>
<p>1、学习质量管理：</p>
<p>为学习中的各个环节都提供了方法、制定了标准，用了以后孩子在预习、听课、作业、复习、考试等每一个环节都能得到最好的学习质量，记忆、解题、写作等各个方面都会有巨大提高。</p>
<p>2、各学科学习方法及考试技巧：</p>
<p>对每一门课程、每一个知识点、每一种题型都提出了相应学习技巧和解决思路。如数学 方面的规定法、平移法、变换法，英语方面的能力培养法、 1秒钟记忆法、硬盘式记忆法……</p>
]]></content>
      <categories>
        <category>人生回忆</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL数据库部分知识点汇总</title>
    <url>/1697/</url>
    <content><![CDATA[<p>不知道你们看过这个段子没<del>反正就重视sql的程序员都很水</del> <img src="http://qn.199604.com/typoraImg/image-20210328160114395.png" alt="image-20210328160114395"></p>
<h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><h4 id="1-主键、外键、超键、候选键"><a href="#1-主键、外键、超键、候选键" class="headerlink" title="1.主键、外键、超键、候选键"></a><strong>1.主键、外键、超键、候选键</strong></h4><p><strong>超键：</strong> 在关系中能唯一标识元组的属性集称为关系模式的超键。一个属性可以为作为一个超键，多个属性组合在一起也可以作为一个超键。超键包含候选键和主键。 <strong>候选键：</strong> 是最小超键，即没有冗余元素的超键。 <strong>主键：</strong> 数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的组合。一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值（Null）。 <strong>外键：</strong> 在一个表中存在的另一个表的主键称此表的外键。</p>
<h4 id="2-为什么用自增列作为主键"><a href="#2-为什么用自增列作为主键" class="headerlink" title="2.为什么用自增列作为主键"></a><strong>2.为什么用自增列作为主键</strong></h4><p>如果我们定义了主键(PRIMARY KEY)，那么InnoDB会选择主键作为聚集索引、 如果没有显式定义主键，则InnoDB会选择第一个不包含有NULL值的唯一索引作为主键索引、 如果也没有这样的唯一索引，则InnoDB会选择内置6字节长的ROWID作为隐含的聚集索引(ROWID随着行记录的写入而主键递增，这个ROWID不像ORACLE的ROWID那样可引用，是隐含的)。 数据记录本身被存于主索引（一颗B+Tree）的叶子节点上。这就要求同一个叶子节点内（大小为一个内存页或磁盘页）的各条数据记录按主键顺序存放，因此每当有一条新的记录插入时，MySQL会根据其主键将其插入适当的节点和位置，如果页面达到装载因子（InnoDB默认为15/16），则开辟一个新的页（节点） 如果表使用自增主键，那么每次插入新的记录，记录就会顺序添加到当前索引节点的后续位置，当一页写满，就会自动开辟一个新的页 如果使用非自增主键（如果身份证号或学号等），由于每次插入主键的值近似于随机，因此每次新记录都要被插到现有索引页的中间某个位置，此时MySQL不得不为了将新记录插到合适位置而移动数据，甚至目标页面可能已经被回写到磁盘上而从缓存中清掉，此时又要从磁盘上读回来，这增加了很多开销，同时频繁的移动、分页操作造成了大量的碎片，得到了不够紧凑的索引结构，后续不得不通过OPTIMIZE TABLE来重建表并优化填充页面。</p>
<h4 id="3-触发器的作用"><a href="#3-触发器的作用" class="headerlink" title="3.触发器的作用"></a><strong>3.触发器的作用</strong></h4><p>触发器是一种特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发。</p>
<h4 id="4-什么是存储过程？用什么来调用？"><a href="#4-什么是存储过程？用什么来调用？" class="headerlink" title="4.什么是存储过程？用什么来调用？"></a><strong>4.什么是存储过程？用什么来调用？</strong></h4><p>存储过程是一个预编译的SQL语句，优点是允许模块化的设计，就是说只需创建一次，以后在该程序中就可以调用多次。如果某次操作需要执行多次SQL，使用存储过程比单纯SQL语句执行要快。 <strong>调用：</strong> 1）可以用一个命令对象来调用存储过程。 2）可以供外部程序调用，比如：java程序。</p>
<h4 id="5-存储过程的优缺点？"><a href="#5-存储过程的优缺点？" class="headerlink" title="5.存储过程的优缺点？"></a><strong>5.存储过程的优缺点？</strong></h4><p><strong>优点：</strong> 1）存储过程是预编译过的，执行效率高。 2）存储过程的代码直接存放于数据库中，通过存储过程名直接调用，减少网络通讯。 3）安全性高，执行存储过程需要有一定权限的用户。 4）存储过程可以重复使用，可减少数据库开发人员的工作量。 <strong>缺点：</strong>移植性差</p>
<h4 id="6-存储过程与函数的区别"><a href="#6-存储过程与函数的区别" class="headerlink" title="6.存储过程与函数的区别"></a><strong>6.存储过程与函数的区别</strong></h4><p><img src="http://qn.199604.com/typoraImg/ymE9HPJ.png" alt="img"></p>
<h4 id="7-什么叫视图？游标是什么？"><a href="#7-什么叫视图？游标是什么？" class="headerlink" title="7.什么叫视图？游标是什么？"></a><strong>7.什么叫视图？游标是什么？</strong></h4><p><strong>视图：</strong> 是一种虚拟的表，具有和物理表相同的功能。可以对视图进行增，改，查，操作，试图通常是有一个表或者多个表的行或列的子集。对视图的修改会影响基本表。它使得我们获取数据更容易，相比多表查询。 <strong>游标：</strong> 是对查询出来的结果集作为一个单元来有效的处理。游标可以定在该单元中的特定行，从结果集的当前行检索一行或多行。可以对结果集当前行做修改。一般不使用游标，但是需要逐条处理数据的时候，游标显得十分重要。</p>
<h4 id="8-视图的优缺点"><a href="#8-视图的优缺点" class="headerlink" title="8.视图的优缺点"></a><strong>8.视图的优缺点</strong></h4><p><strong>优点：</strong></p>
<ol>
<li> 对数据库的访问，因为视图可以有选择性的选取数据库里的一部分。</li>
<li> 用户通过简单的查询可以从复杂查询中得到结果。</li>
<li> 维护数据的独立性，试图可从多个表检索数据。</li>
<li> 对于相同的数据可产生不同的视图。</li>
</ol>
<p><strong>缺点：</strong> 性能：查询视图时，必须把视图的查询转化成对基本表的查询，如果这个视图是由一个复杂的多表查询所定义，那么就无法更改数据</p>
<h4 id="9-drop、truncate、-delete区别"><a href="#9-drop、truncate、-delete区别" class="headerlink" title="9.drop、truncate、 delete区别"></a><strong>9.drop、truncate、 delete区别</strong></h4><p><strong>最基本：</strong></p>
<ul>
<li>  drop直接删掉表。</li>
<li>  truncate删除表中数据，再插入时自增长id又从1开始。</li>
<li>  delete删除表中数据，可以加where字句。</li>
</ul>
<ol>
<li> DELETE语句执行删除的过程是每次从表中删除一行，并且同时将该行的删除操作作为事务记录在日志中保存以便进行进行回滚操作。TRUNCATE TABLE 则一次性地从表中删除所有的数据并不把单独的删除操作记录记入日志保存，删除行是不能恢复的。并且在删除的过程中不会激活与表有关的删除触发器。执行速度快。</li>
<li> 表和索引所占空间。当表被TRUNCATE 后，这个表和索引所占用的空间会恢复到初始大小，而DELETE操作不会减少表或索引所占用的空间。drop语句将表所占用的空间全释放掉。</li>
<li> 一般而言，drop &gt; truncate &gt; delete</li>
<li> 应用范围。TRUNCATE 只能对TABLE；DELETE可以是table和view</li>
<li> TRUNCATE 和DELETE只删除数据，而DROP则删除整个表（结构和数据）。</li>
<li> truncate与不带where的delete ：只删除数据，而不删除表的结构（定义）drop语句将删除表的结构被依赖的约束（constrain),触发器（trigger)索引（index);依赖于该表的存储过程/函数将被保留，但其状态会变为：invalid。</li>
<li> delete语句为DML（data maintain Language),这个操作会被放到 rollback segment中,事务提交后才生效。如果有相应的 tigger,执行的时候将被触发。</li>
<li> truncate、drop是DLL（data define language),操作立即生效，原数据不放到 rollback segment中，不能回滚。</li>
<li> 在没有备份情况下，谨慎使用 drop 与 truncate。要删除部分数据行采用delete且注意结合where来约束影响范围。回滚段要足够大。要删除表用drop;若想保留表而将表中数据删除，如果于事务无关，用truncate即可实现。如果和事务有关，或老师想触发trigger,还是用delete。</li>
<li> Truncate table 表名 速度快,而且效率高,因为:?truncate table 在功能上与不带 WHERE 子句的 DELETE 语句相同：二者均删除表中的全部行。但 TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少。DELETE 语句每次删除一行，并在事务日志中为所删除的每行记录一项。TRUNCATE TABLE 通过释放存储表数据所用的数据页来删除数据，并且只在事务日志中记录页的释放。</li>
<li> TRUNCATE TABLE 删除表中的所有行，但表结构及其列、约束、索引等保持不变。新行标识所用的计数值重置为该列的种子。如果想保留标识计数值，请改用 DELETE。如果要删除表定义及其数据，请使用 DROP TABLE 语句。</li>
<li> 对于由 FOREIGN KEY 约束引用的表，不能使用 TRUNCATE TABLE，而应使用不带 WHERE 子句的 DELETE 语句。由于 TRUNCATE TABLE 不记录在日志中，所以它不能激活触发器。</li>
</ol>
<h4 id="10-什么是临时表，临时表什么时候删除"><a href="#10-什么是临时表，临时表什么时候删除" class="headerlink" title="10.什么是临时表，临时表什么时候删除?"></a><strong>10.什么是临时表，临时表什么时候删除?</strong></h4><p><strong>临时表可以手动删除：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TEMPORARY TABLE IF EXISTS temp_tb;</span><br></pre></td></tr></table></figure>

<p><strong>临时表只在当前连接可见，当关闭连接时，MySQL会自动删除表并释放所有空间。因此在不同的连接中可以创建同名的临时表，并且操作属于本连接的临时表。 创建临时表的语法与创建表语法类似，不同之处是增加关键字TEMPORARY，</strong> 如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TEMPORARY TABLE tmp_table (</span><br><span class="line"></span><br><span class="line">NAME VARCHAR (10) NOT NULL,</span><br><span class="line"></span><br><span class="line">time date NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">select * from tmp_table;</span><br></pre></td></tr></table></figure>

<h4 id="11-非关系型数据库和关系型数据库区别，优势比较"><a href="#11-非关系型数据库和关系型数据库区别，优势比较" class="headerlink" title="11.非关系型数据库和关系型数据库区别，优势比较?"></a><strong>11.非关系型数据库和关系型数据库区别，优势比较?</strong></h4><p><strong>非关系型数据库的优势：</strong></p>
<ul>
<li>  <strong>性能：</strong>NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。</li>
<li>  <strong>可扩展性：</strong>同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。</li>
</ul>
<p><strong>关系型数据库的优势：</strong></p>
<ul>
<li>  <strong>复杂查询：</strong>可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。</li>
<li>  <strong>事务支持：</strong>使得对于安全性能很高的数据访问要求得以实现。</li>
</ul>
<p><strong>其他：</strong> **1.**对于这两类数据库，对方的优势就是自己的弱势，反之亦然。 **2.**NOSQL数据库慢慢开始具备SQL数据库的一些复杂查询功能，比如MongoDB。 **3.**对于事务的支持也可以用一些系统级的原子操作来实现例如乐观锁之类的方法来曲线救国，比如Redis set nx。</p>
<h4 id="12-数据库范式，根据某个场景设计数据表"><a href="#12-数据库范式，根据某个场景设计数据表" class="headerlink" title="12.数据库范式，根据某个场景设计数据表?"></a><strong>12.数据库范式，根据某个场景设计数据表?</strong></h4><p>第一范式:(确保每列保持原子性)所有字段值都是不可分解的原子值。 <strong>第一范式是最基本的范式。</strong> 如果数据库表中的所有字段值都是不可分解的原子值，就说明该数据库表满足了第一范式。 <strong>第一范式的合理遵循需要根据系统的实际需求来定。</strong> 比如某些数据库系统中需要用到“地址”这个属性，本来直接将“地址”属性设计成一个数据库表的字段就行。但是如果系统经常会访问“地址”属性中的“城市”部分，那么就非要将“地址”这个属性重新拆分为省份、城市、详细地址等多个部分进行存储，这样在对地址中某一部分操作的时候将非常方便。这样设计才算满足了数据库的第一范式。 第二范式:(确保表中的每列都和主键相关)在一个数据库表中，一个表中只能保存一种数据，不可以把多种数据保存在同一张数据库表中。 <strong>第二范式在第一范式的基础之上更进一层。</strong> 第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。也就是说在一个数据库表中，一个表中只能保存一种数据，不可以把多种数据保存在同一张数据库表中。 比如要设计一个订单信息表，因为订单中可能会有多种商品，所以要将订单编号和商品编号作为数据库表的联合主键。 第三范式:(确保每列都和主键列直接相关,而不是间接相关) 数据表中的每一列数据都和主键直接相关，而不能间接相关。 <strong>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</strong> 比如在设计一个订单数据表的时候，可以将客户编号作为一个外键和订单表建立相应的关系。而不可以在订单表中添加关于客户其它信息（比如姓名、所属公司等）的字段。 <strong>BCNF:符合3NF，并且，主属性不依赖于主属性。</strong> 若关系模式属于第二范式，且每个属性都不传递依赖于键码，则R属于BC范式。 通常BC范式的条件有多种等价的表述：每个非平凡依赖的左边必须包含键码；每个决定因素必须包含键码。 BC范式既检查非主属性，又检查主属性。当只检查非主属性时，就成了第三范式。满足BC范式的关系都必然满足第三范式。 还可以这么说：<strong>若一个关系达到了第三范式，并且它只有一个候选码，或者它的每个候选码都是单属性，则该关系自然达到BC范式。</strong> 一般，一个数据库设计符合3NF或BCNF就可以了。 第四范式:要求把同一表内的多对多关系删除。 第五范式:从最终结构重新建立原始结构。 深入可看知乎大神解答：<a href="https://www.zhihu.com/question/24696366">https://www.zhihu.com/question/24696366</a></p>
<h4 id="13-什么是-内连接、外连接、交叉连接、笛卡尔积等"><a href="#13-什么是-内连接、外连接、交叉连接、笛卡尔积等" class="headerlink" title="13.什么是 内连接、外连接、交叉连接、笛卡尔积等?"></a><strong>13.什么是 内连接、外连接、交叉连接、笛卡尔积等?</strong></h4><p><strong>内连接:</strong> 只连接匹配的行 <strong>左外连接:</strong> 包含左边表的全部行（不管右边的表中是否存在与它们匹配的行），以及右边表中全部匹配的行 <strong>右外连接:</strong> 包含右边表的全部行（不管左边的表中是否存在与它们匹配的行），以及左边表中全部匹配的行 例如1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT a.*,b.* FROM roletable LEFT JOIN usertable as b ON a.username=b.username</span><br></pre></td></tr></table></figure>

<p>例如2：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT a.*,b.* FROM city as a RIGHT OUTER JOIN user as b ON a.username=b.username</span><br></pre></td></tr></table></figure>

<p><strong>全外连接:</strong> 包含左、右两个表的全部行，不管另外一边的表中是否存在与它们匹配的行。 <strong>交叉连接:</strong> 生成笛卡尔积－它不使用任何匹配或者选取条件，而是直接将一个数据源中的每个行与另一个数据源的每个行都一一匹配 例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT type,pub_name FROM titles CROSS JOIN publishers ORDER BY type</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> 很多公司都只是考察是否知道其概念，但是也有很多公司需要不仅仅知道概念，还需要动手写sql,一般都是简单的连接查询，具体关于连接查询的sql练习，参见以下链接： 牛客网–<a href="https://www.nowcoder.com/ta/sql">https://www.nowcoder.com/ta/sql</a> 力扣–<a href="https://leetcode-cn.com/problemset/database/">https://leetcode-cn.com/problemset/database/</a></p>
<h4 id="14-varchar和char的使用场景"><a href="#14-varchar和char的使用场景" class="headerlink" title="14.varchar和char的使用场景?"></a><strong>14.varchar和char的使用场景?</strong></h4><ol>
<li> char的长度是不可变的，而varchar的长度是可变的。</li>
<li> 定义一个char[10]和varchar[10]。 如果存进去的是‘glj’,那么char所占的长度依然为10，除了字符‘glj’外，后面跟7个空格，varchar就立马把长度变为3了，取数据的时候，char类型的要用trim()去掉多余的空格，而varchar是不需要的。</li>
<li> char的存取数度还是要比varchar要快得多，因为其长度固定，方便程序的存储与查找。 char也为此付出的是空间的代价，因为其长度固定，所以难免会有多余的空格占位符占据空间，可谓是以空间换取时间效率。 varchar是以空间效率为首位。</li>
<li> char的存储方式是：对英文字符（ASCII）占用1个字节，对一个汉字占用两个字节。 varchar的存储方式是：对每个英文字符占用2个字节，汉字也占用2个字节。</li>
<li> 两者的存储数据都非unicode的字符数据。</li>
</ol>
<h4 id="15-SQL语言分类"><a href="#15-SQL语言分类" class="headerlink" title="15.SQL语言分类"></a><strong>15.SQL语言分类</strong></h4><p><strong>SQL语言共分为四大类：</strong></p>
<ul>
<li>  数据查询语言DQL</li>
<li>  数据操纵语言DML</li>
<li>  数据定义语言DDL</li>
<li>  数据控制语言DCL。</li>
</ul>
<p><strong>1. 数据查询语言DQL</strong> 数据查询语言DQL基本结构是由SELECT子句，FROM子句，WHERE子句组成的查询块： SELECT FROM WHERE <strong>2 .数据操纵语言DML</strong> 数据操纵语言DML主要有三种形式：</p>
<ol>
<li> 插入：INSERT</li>
<li> 更新：UPDATE</li>
<li> 删除：DELETE</li>
</ol>
<p><strong>3. 数据定义语言DDL</strong> 数据定义语言DDL用来创建数据库中的各种对象—–表、视图、索引、同义词、聚簇等如： CREATE TABLE/VIEW/INDEX/SYN/CLUSTER 表 视图 索引 同义词 簇 DDL操作是隐性提交的！不能rollback <strong>4. 数据控制语言DCL</strong> 数据控制语言DCL用来授予或回收访问数据库的某种特权，并控制数据库操纵事务发生的时间及效果，对数据库实行监视等。如：</p>
<ol>
<li> GRANT：授权。</li>
<li> ROLLBACK [WORK] TO [SAVEPOINT]：回退到某一点。回滚—ROLLBACK；回滚命令使数据库状态回到上次最后提交的状态。其格式为： SQL&gt;ROLLBACK;</li>
<li> COMMIT [WORK]：提交。</li>
</ol>
<p>在数据库的插入、删除和修改操作时，只有当事务在提交到数据库时才算完成。在事务提交前，只有操作数据库的这个人才能有权看到所做的事情，别人只有在最后提交完成后才可以看到。 提交数据有三种类型：显式提交、隐式提交及自动提交。下面分别说明这三种类型。 (1) 显式提交 用COMMIT命令直接完成的提交为显式提交。其格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span><span class="keyword">COMMIT</span>；</span><br></pre></td></tr></table></figure>

<p>(2) 隐式提交 用SQL命令间接完成的提交为隐式提交。这些命令是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER，AUDIT，COMMENT，CONNECT，CREATE，DISCONNECT，DROP，EXIT，GRANT，NOAUDIT，QUIT，REVOKE，RENAME。</span><br></pre></td></tr></table></figure>

<p>(3) 自动提交 若把AUTOCOMMIT设置为ON，则在插入、修改、删除语句执行后，系统将自动进行提交，这就是自动提交。其格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span><span class="keyword">SET</span> AUTOCOMMIT <span class="keyword">ON</span>；</span><br></pre></td></tr></table></figure>

<h4 id="16-like-和-的区别"><a href="#16-like-和-的区别" class="headerlink" title="16.like %和-的区别"></a><strong>16.like %和-的区别</strong></h4><p><strong>通配符的分类:</strong> **%百分号通配符:**表示任何字符出现任意次数(可以是0次). **_下划线通配符:**表示只能匹配单个字符,不能多也不能少,就是一个字符. <strong>like操作符:</strong> LIKE作用是指示mysql后面的搜索模式是利用通配符而不是直接相等匹配进行比较. <strong>注意:</strong> 如果在使用like操作符时,后面的没有使用通用匹配符效果是和=一致的:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM products WHERE products.prod_name like &#x27;1000&#x27;;</span><br></pre></td></tr></table></figure>

<p>只能匹配的结果为1000,而不能匹配像JetPack 1000这样的结果. <strong>%通配符使用:</strong> 匹配以”yves”开头的记录:(包括记录”yves”)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT *FROM products WHERE products.prod_name like &#x27;yves%&#x27;;</span><br></pre></td></tr></table></figure>

<p>匹配包含”yves”的记录(包括记录”yves”)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT* FROM products WHERE products.prod_name like &#x27;%yves%&#x27;;</span><br></pre></td></tr></table></figure>

<p>匹配以”yves”结尾的记录(包括记录”yves”,不包括记录”yves “,也就是yves后面有空格的记录,这里需要注意)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM products WHERE products.prod_name like &#x27;%yves&#x27;;</span><br></pre></td></tr></table></figure>

<p>*通配符使用:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT \*FROM products WHERE products.prod_name like &#x27;_yves&#x27;; </span><br></pre></td></tr></table></figure>

<p>匹配结果为: 像”yyves”这样记录.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT\* FROM products WHERE products.prod\*name like &#x27;yves**&#x27;; </span><br></pre></td></tr></table></figure>

<p>匹配结果为: 像”yvesHe”这样的记录.(一个下划线只能匹配一个字符,不能多也不能少) <strong>注意事项:</strong></p>
<ul>
<li>  注意大小写,在使用模糊匹配时,也就是匹配文本时,mysql是可能区分大小的,也可能是不区分大小写的,这个结果是取决于用户对MySQL的配置方式.如果是区分大小写,那么像YvesHe这样记录是不能被”yves__“这样的匹配条件匹配的.</li>
<li>  注意尾部空格,”%yves”是不能匹配”heyves “这样的记录的.</li>
<li>  注意NULL,%通配符可以匹配任意字符,但是不能匹配NULL,也就是说SELECT * FROM products WHERE products.prod_name like ‘%;是匹配不到products.prod_name为NULL的的记录.</li>
</ul>
<p><strong>技巧与建议:</strong> 正如所见， MySQL的通配符很有用。但这种功能是有代价的：通配符搜索的处理一般要比前面讨论的其他搜索所花时间更长。这里给出一些使用通配符要记住的技巧。</p>
<ul>
<li>  不要过度使用通配符。如果其他操作符能达到相同的目的，应该 使用其他操作符。</li>
<li>  在确实需要使用通配符时，除非绝对有必要，否则不要把它们用 在搜索模式的开始处。把通配符置于搜索模式的开始处，搜索起 来是最慢的。</li>
<li>  仔细注意通配符的位置。如果放错地方，可能不会返回想要的数.</li>
</ul>
<p>参考博文： <em><a href="https://blog.csdn.net/u011479200/article/details/78513632">https://blog.csdn.net/u011479200/article/details/78513632</a></em></p>
<h4 id="17-count-、count-1-、count-column-的区别"><a href="#17-count-、count-1-、count-column-的区别" class="headerlink" title="17.count(*)、count(1)、count(column)的区别"></a><strong>17.count(*)、count(1)、count(column)的区别</strong></h4><ul>
<li>  count(*)对行的数目进行计算,包含NULL</li>
<li>  count(column)对特定的列的值具有的行数进行计算,不包含NULL值。</li>
<li>  count()还有一种使用方式,count(1)这个用法和count(*)的结果是一样的。</li>
</ul>
<p><strong>性能问题:</strong> 1.任何情况下SELECT COUNT(*) FROM tablename是最优选择; 2.尽量减少SELECT COUNT(*) FROM tablename WHERE COL = ‘value’ 这种查询; 3.杜绝SELECT COUNT(COL) FROM tablename WHERE COL2 = ‘value’ 的出现。</p>
<ul>
<li>  如果表没有主键,那么count(1)比count(*)快。</li>
<li>  如果有主键,那么count(主键,联合主键)比count(*)快。</li>
<li>  如果表只有一个字段,count(*)最快。</li>
</ul>
<p>count(1)跟count(主键)一样,只扫描主键。count(*)跟count(非主键)一样,扫描整个表。明显前者更快一些。</p>
<h4 id="18-最左前缀原则"><a href="#18-最左前缀原则" class="headerlink" title="18.最左前缀原则"></a><strong>18.最左前缀原则</strong></h4><p><strong>多列索引：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE people ADD INDEX lname_fname_age (lame,fname,age);</span><br></pre></td></tr></table></figure>

<p>为了提高搜索效率，我们需要考虑运用多列索引,由于索引文件以B－Tree格式保存，所以我们不用扫描任何记录，即可得到最终结果。 注：在mysql中执行查询时，只能使用一个索引，如果我们在lname,fname,age上分别建索引,执行查询时，只能使用一个索引，mysql会选择一个最严格(获得结果集记录数最少)的索引。 <strong>最左前缀原则：</strong>顾名思义，就是最左优先，上例中我们创建了lname_fname_age多列索引,相当于创建了(lname)单列索引，(lname,fname)组合索引以及(lname,fname,age)组合索引。</p>
<h2 id="二、索引"><a href="#二、索引" class="headerlink" title="二、索引"></a>二、索引</h2><h4 id="1-什么是索引？"><a href="#1-什么是索引？" class="headerlink" title="1.什么是索引？"></a><strong>1.什么是索引？</strong></h4><p><strong>何为索引：</strong> 数据库索引，是数据库管理系统中一个排序的数据结构，索引的实现通常使用B树及其变种B+树。 在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。</p>
<h4 id="2-索引的作用？"><a href="#2-索引的作用？" class="headerlink" title="2.索引的作用？"></a><strong>2.索引的作用？</strong></h4><p><strong>索引作用：</strong> 协助快速查询、更新数据库表中数据。 为表设置索引要付出代价的：</p>
<ul>
<li>  一是增加了数据库的存储空间</li>
<li>  二是在插入和修改数据时要花费较多的时间(因为索引也要随之变动)</li>
</ul>
<h4 id="3-索引的优缺点？"><a href="#3-索引的优缺点？" class="headerlink" title="3.索引的优缺点？"></a><strong>3.索引的优缺点？</strong></h4><p><strong>创建索引可以大大提高系统的性能（优点）：</strong> 1.通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。 2.可以大大加快数据的检索速度，这也是创建索引的最主要的原因。 3.可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。 4.在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。 5.通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。 <strong>增加索引也有许多不利的方面(缺点)：</strong> 1.创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。 2.索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。 3.当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，这样就降低了数据的维护速度。</p>
<h4 id="4-哪些列适合建立索引、哪些不适合建索引？"><a href="#4-哪些列适合建立索引、哪些不适合建索引？" class="headerlink" title="4.哪些列适合建立索引、哪些不适合建索引？"></a><strong>4.哪些列适合建立索引、哪些不适合建索引？</strong></h4><p>索引是建立在数据库表中的某些列的上面。在创建索引的时候，应该考虑在哪些列上可以创建索引，在哪些列上不能创建索引。 <strong>一般来说，应该在这些列上创建索引：</strong> （1）在经常需要搜索的列上，可以加快搜索的速度； （2）在作为主键的列上，强制该列的唯一性和组织表中数据的排列结构； （3）在经常用在连接的列上，这些列主要是一些外键，可以加快连接的速度； （4）在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，其指定的范围是连续的； （5）在经常需要排序的列上创建索引，因为索引已经排序，这样查询可以利用索引的排序，加快排序查询时间； （6）在经常使用在WHERE子句中的列上面创建索引，加快条件的判断速度。 <strong>对于有些列不应该创建索引：</strong> （1）对于那些在查询中很少使用或者参考的列不应该创建索引。 这是因为，既然这些列很少使用到，因此有索引或者无索引，并不能提高查询速度。相反，由于增加了索引，反而降低了系统的维护速度和增大了空间需求。 （2）对于那些只有很少数据值的列也不应该增加索引。 这是因为，由于这些列的取值很少，例如人事表的性别列，在查询的结果中，结果集的数据行占了表中数据行的很大比例，即需要在表中搜索的数据行的比例很大。增加索引，并不能明显加快检索速度。 （3）对于那些定义为text, image和bit数据类型的列不应该增加索引。 这是因为，这些列的数据量要么相当大，要么取值很少。 (4)当修改性能远远大于检索性能时，不应该创建索引。 这是因为，修改性能和检索性能是互相矛盾的。当增加索引时，会提高检索性能，但是会降低修改性能。当减少索引时，会提高修改性能，降低检索性能。因此，当修改性能远远大于检索性能时，不应该创建索引。</p>
<h4 id="5-什么样的字段适合建索引"><a href="#5-什么样的字段适合建索引" class="headerlink" title="5.什么样的字段适合建索引"></a><strong>5.什么样的字段适合建索引</strong></h4><p>唯一、不为空、经常被查询的字段</p>
<h4 id="6-MySQL-B-Tree索引和Hash索引的区别"><a href="#6-MySQL-B-Tree索引和Hash索引的区别" class="headerlink" title="6.MySQL B+Tree索引和Hash索引的区别?"></a><strong>6.MySQL B+Tree索引和Hash索引的区别?</strong></h4><p><strong>Hash索引和B+树索引的特点：</strong></p>
<ul>
<li>  Hash索引结构的特殊性，其检索效率非常高，索引的检索可以一次定位;</li>
<li>  B+树索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问;</li>
</ul>
<p><strong>为什么不都用Hash索引而使用B+树索引？</strong></p>
<ol>
<li> Hash索引仅仅能满足”=”,”IN”和””查询，不能使用范围查询,因为经过相应的Hash算法处理之后的Hash值的大小关系，并不能保证和Hash运算前完全一样；</li>
<li> Hash索引无法被用来避免数据的排序操作，因为Hash值的大小关系并不一定和Hash运算前的键值完全一样；</li>
<li> Hash索引不能利用部分索引键查询，对于组合索引，Hash索引在计算Hash值的时候是组合索引键合并后再一起计算Hash值，而不是单独计算Hash值，所以通过组合索引的前面一个或几个索引键进行查询的时候，Hash索引也无法被利用；</li>
<li> Hash索引在任何时候都不能避免表扫描，由于不同索引键存在相同Hash值，所以即使取满足某个Hash键值的数据的记录条数，也无法从Hash索引中直接完成查询，还是要回表查询数据；</li>
<li> Hash索引遇到大量Hash值相等的情况后性能并不一定就会比B+树索引高。</li>
</ol>
<p><strong>补充：</strong> 1.MySQL中，只有HEAP/MEMORY引擎才显示支持Hash索引。 2.常用的InnoDB引擎中默认使用的是B+树索引，它会实时监控表上索引的使用情况，如果认为建立哈希索引可以提高查询效率，则自动在内存中的“自适应哈希索引缓冲区”建立哈希索引（在InnoDB中默认开启自适应哈希索引），通过观察搜索模式，MySQL会利用index key的前缀建立哈希索引，如果一个表几乎大部分都在缓冲池中，那么建立一个哈希索引能够加快等值查询。 B+树索引和哈希索引的明显区别是： 3.如果是等值查询，那么哈希索引明显有绝对优势，因为只需要经过一次算法即可找到相应的键值；当然了，这个前提是，键值都是唯一的。如果键值不是唯一的，就需要先找到该键所在位置，然后再根据链表往后扫描，直到找到相应的数据； 4.如果是范围查询检索，这时候哈希索引就毫无用武之地了，因为原先是有序的键值，经过哈希算法后，有可能变成不连续的了，就没办法再利用索引完成范围查询检索； 同理，哈希索引没办法利用索引完成排序，以及like ‘xxx%’ 这样的部分模糊查询（这种部分模糊查询，其实本质上也是范围查询）； 5.哈希索引也不支持多列联合索引的最左匹配规则； 6.B+树索引的关键字检索效率比较平均，不像B树那样波动幅度大，在有大量重复键值情况下，哈希索引的效率也是极低的，因为存在所谓的哈希碰撞问题。 7.在大多数场景下，都会有范围查询、排序、分组等查询特征，用B+树索引就可以了。</p>
<h4 id="7-B树和B-树的区别"><a href="#7-B树和B-树的区别" class="headerlink" title="7.B树和B+树的区别"></a><strong>7.B树和B+树的区别</strong></h4><ol>
<li> B树，每个节点都存储key和data，所有节点组成这棵树，并且叶子节点指针为nul，叶子结点不包含任何关键字信息。</li>
</ol>
<p><img src="http://qn.199604.com/typoraImg/RbzI0R8.jpg" alt="img"></p>
<ol start="2">
<li> B+树，所有的叶子结点中包含了全部关键字的信息，及指向含有这些关键字记录的指针，且叶子结点本身依关键字的大小自小而大的顺序链接，所有的非终端结点可以看成是索引部分，结点中仅含有其子树根结点中最大（或最小）关键字。 (而B 树的非终节点也包含需要查找的有效信息)</li>
</ol>
<p><img src="http://qn.199604.com/typoraImg/9VbnDME.jpg" alt="img"></p>
<h4 id="8-为什么说B-比B树更适合实际应用中操作系统的文件索引和数据库索引？"><a href="#8-为什么说B-比B树更适合实际应用中操作系统的文件索引和数据库索引？" class="headerlink" title="8.为什么说B+比B树更适合实际应用中操作系统的文件索引和数据库索引？"></a><strong>8.为什么说B+比B树更适合实际应用中操作系统的文件索引和数据库索引？</strong></h4><p><strong>1. B+的磁盘读写代价更低</strong> B+的内部结点并没有指向关键字具体信息的指针。因此其内部结点相对B树更小。如果把所有同一内部结点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多。一次性读入内存中的需要查找的关键字也就越多。相对来说IO读写次数也就降低了。 <strong>2. B+tree的查询效率更加稳定</strong> 由于非终结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。</p>
<h4 id="9-聚集索引和非聚集索引区别"><a href="#9-聚集索引和非聚集索引区别" class="headerlink" title="9.聚集索引和非聚集索引区别?"></a><strong>9.聚集索引和非聚集索引区别?</strong></h4><p><strong>聚合索引(clustered index):</strong> 聚集索引<strong>表记录的排列顺序和索引的排列顺序一致，所以查询效率快，</strong>只要找到第一个索引值记录，其余就连续性的记录在物理也一样连续存放。聚集索引对应的缺点就是修改慢，因为为了保证表中记录的物理和索引顺序一致，在记录插入的时候，会对数据页重新排序。 聚集索引类似于新华字典中用拼音去查找汉字，拼音检索表于书记顺序都是按照a<del>z排列的，就像相同的逻辑顺序于物理顺序一样，当你需要查找a,ai两个读音的字，或是想一次寻找多个傻(sha)的同音字时，也许向后翻几页，或紧接着下一行就得到结果了。 <strong>非聚合索引(nonclustered index):</strong> 非聚集索引<strong>指定了表中记录的逻辑顺序，但是记录的物理和索引不一定一致，</strong>两种索引都采用B+树结构，非聚集索引的叶子层并不和实际数据页相重叠，而采用叶子层包含一个指向表中的记录在数据页中的指针方式。非聚集索引层次多，不会造成数据重排。 非聚集索引类似在新华字典上通过偏旁部首来查询汉字，检索表也许是按照横、竖、撇来排列的，但是由于正文中是a</del>z的拼音顺序，所以就类似于逻辑地址于物理地址的不对应。同时适用的情况就在于分组，大数目的不同值，频繁更新的列中，这些情况即不适合聚集索引。 <strong>根本区别：</strong> 聚集索引和非聚集索引的根本区别是表记录的排列顺序和与索引的排列顺序是否一致。</p>
<h2 id="三、事务"><a href="#三、事务" class="headerlink" title="三、事务"></a>三、事务</h2><h4 id="1-什么是事务？"><a href="#1-什么是事务？" class="headerlink" title="1.什么是事务？"></a><strong>1.什么是事务？</strong></h4><p>事务是对数据库中一系列操作进行统一的回滚或者提交的操作，主要用来保证数据的完整性和一致性。</p>
<h4 id="2-事务四大特性（ACID）原子性、一致性、隔离性、持久性"><a href="#2-事务四大特性（ACID）原子性、一致性、隔离性、持久性" class="headerlink" title="2.事务四大特性（ACID）原子性、一致性、隔离性、持久性?"></a><strong>2.事务四大特性（ACID）原子性、一致性、隔离性、持久性?</strong></h4><p><strong>原子性（Atomicity）:</strong> 原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。 <strong>一致性（Consistency）:</strong> 事务开始前和结束后，数据库的完整性约束没有被破坏。比如A向B转账，不可能A扣了钱，B却没收到。 <strong>隔离性（Isolation）:</strong> 隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。 <strong>持久性（Durability）:</strong> 持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。</p>
<h4 id="3-事务的并发-事务隔离级别，每个级别会引发什么问题，MySQL默认是哪个级别"><a href="#3-事务的并发-事务隔离级别，每个级别会引发什么问题，MySQL默认是哪个级别" class="headerlink" title="3.事务的并发?事务隔离级别，每个级别会引发什么问题，MySQL默认是哪个级别?"></a><strong>3.事务的并发?事务隔离级别，每个级别会引发什么问题，MySQL默认是哪个级别?</strong></h4><p>从理论上来说, 事务应该彼此完全隔离, 以避免并发事务所导致的问题，然而, 那样会对性能产生极大的影响, 因为事务必须按顺序运行， 在实际开发中, 为了提升性能, 事务会以较低的隔离级别运行， 事务的隔离级别可以通过隔离事务属性指定。 <strong>事务的并发问题</strong> <strong>1、脏读：</strong>事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据 <strong>2、不可重复读：</strong>事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果因此本事务先后两次读到的数据结果会不一致。 <strong>3、幻读：</strong>幻读解决了不重复读，保证了同一个事务里，查询的结果都是事务开始时的状态（一致性）。 例如：事务T1对一个表中所有的行的某个数据项做了从“1”修改为“2”的操作 这时事务T2又对这个表中插入了一行数据项，而这个数据项的数值还是为“1”并且提交给数据库。 而操作事务T1的用户如果再查看刚刚修改的数据，会发现还有跟没有修改一样，其实这行是从事务T2中添加的，就好像产生幻觉一样，这就是发生了幻读。 <strong>小结：不可重复读的和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表。</strong> <strong>事务的隔离级别</strong>： <img src="http://qn.199604.com/typoraImg/xAeWTSp.png" alt="img"> <strong>读未提交：</strong>另一个事务修改了数据，但尚未提交，而本事务中的SELECT会读到这些未被提交的数据脏读 <strong>不可重复读：</strong>事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果因此本事务先后两次读到的数据结果会不一致。 <strong>可重复读：</strong>在同一个事务里，SELECT的结果是事务开始时时间点的状态，因此，同样的SELECT操作读到的结果会是一致的。但是，会有幻读现象 <strong>串行化：</strong>最高的隔离级别，在这个隔离级别下，不会产生任何异常。并发的事务，就像事务是在一个个按照顺序执行一样 <strong>特别注意：</strong></p>
<blockquote>
<p>MySQL默认的事务隔离级别为repeatable-read MySQL 支持 4 中事务隔离级别. 事务的隔离级别要得到底层数据库引擎的支持, 而不是应用程序或者框架的支持. Oracle 支持的 2 种事务隔离级别：READ_COMMITED , SERIALIZABLE SQL规范所规定的标准，不同的数据库具体的实现可能会有些差异 <strong>MySQL中默认事务隔离级别是“可重复读”时并不会锁住读取到的行</strong> <strong>事务隔离级别：</strong>未提交读时，写数据只会锁住相应的行。 <strong>事务隔离级别为：</strong>可重复读时，写数据会锁住整张表。 <strong>事务隔离级别为：</strong>串行化时，读写数据都会锁住整张表。 隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大，鱼和熊掌不可兼得啊。对于多数应用程序，可以优先考虑把数据库系统的隔离级别设为Read Committed，它能够避免脏读取，而且具有较好的并发性能。尽管它会导致不可重复读、幻读这些并发问题，在可能出现这类问题的个别场合，可以由应用程序采用悲观锁或乐观锁来控制。</p>
</blockquote>
<h4 id="4-事务传播行为"><a href="#4-事务传播行为" class="headerlink" title="4.事务传播行为"></a><strong>4.事务传播行为</strong></h4><p><strong>1.PROPAGATION_REQUIRED：</strong>如果当前没有事务，就创建一个新事务，如果当前存在事务，就加入该事务，该设置是最常用的设置。 <strong>2.PROPAGATION_SUPPORTS：</strong>支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行。 <strong>3.PROPAGATION_MANDATORY：</strong>支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常。 <strong>4.PROPAGATION_REQUIRES_NEW：</strong>创建新事务，无论当前存不存在事务，都创建新事务。 <strong>5.PROPAGATION_NOT_SUPPORTED：</strong>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。 <strong>6.PROPAGATION_NEVER：</strong>以非事务方式执行，如果当前存在事务，则抛出异常。 <strong>7.PROPAGATION_NESTED：</strong>如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。</p>
<h4 id="5-嵌套事务"><a href="#5-嵌套事务" class="headerlink" title="5.嵌套事务"></a><strong>5.嵌套事务</strong></h4><p><strong>什么是嵌套事务？</strong> 嵌套是子事务套在父事务中执行，子事务是父事务的一部分，在进入子事务之前，父事务建立一个回滚点，叫save point，然后执行子事务，这个子事务的执行也算是父事务的一部分，然后子事务执行结束，父事务继续执行。重点就在于那个save point。看几个问题就明了了： <strong>如果子事务回滚，会发生什么？</strong> 父事务会回滚到进入子事务前建立的save point，然后尝试其他的事务或者其他的业务逻辑，父事务之前的操作不会受到影响，更不会自动回滚。 <strong>如果父事务回滚，会发生什么？</strong> 父事务回滚，子事务也会跟着回滚！为什么呢，因为父事务结束之前，子事务是不会提交的，我们说子事务是父事务的一部分，正是这个道理。那么： <strong>事务的提交，是什么情况？</strong> 是父事务先提交，然后子事务提交，还是子事务先提交，父事务再提交？答案是第二种情况，还是那句话，子事务是父事务的一部分，由父事务统一提交。</p>
<h2 id="四、存储引擎"><a href="#四、存储引擎" class="headerlink" title="四、存储引擎"></a>四、存储引擎</h2><h4 id="1-MySQL常见的三种存储引擎（InnoDB、MyISAM、MEMORY）的区别"><a href="#1-MySQL常见的三种存储引擎（InnoDB、MyISAM、MEMORY）的区别" class="headerlink" title="1.MySQL常见的三种存储引擎（InnoDB、MyISAM、MEMORY）的区别?"></a><strong>1.MySQL常见的三种存储引擎（InnoDB、MyISAM、MEMORY）的区别?</strong></h4><p><strong>两种存储引擎的大致区别表现在：</strong> 1.<strong>InnoDB支持事务，MyISAM不支持，</strong> <strong>这一点是非常之重要。</strong>事务是一种高级的处理方式，如在一些列增删改中只要哪个出错还可以回滚还原，而MyISAM就不可以了。 2.MyISAM适合查询以及插入为主的应用。 3.InnoDB适合频繁修改以及涉及到安全性较高的应用。 4.InnoDB支持外键，MyISAM不支持。 5.从MySQL5.5.5以后，InnoDB是默认引擎。 6.InnoDB不支持FULLTEXT类型的索引。 7.InnoDB中不保存表的行数，如select count(<em>) from table时，InnoDB需要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(</em>)语句包含where条件时MyISAM也需要扫描整个表。 8.对于自增长的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中可以和其他字段一起建立联合索引。 9.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的 删除，效率非常慢。MyISAM则会重建表。 10.InnoDB支持行锁（某些情况下还是锁整表，如 update table set a=1 where user like ‘%lee%’。</p>
<h4 id="2-MySQL存储引擎MyISAM与InnoDB如何选择"><a href="#2-MySQL存储引擎MyISAM与InnoDB如何选择" class="headerlink" title="2.MySQL存储引擎MyISAM与InnoDB如何选择"></a><strong>2.MySQL存储引擎MyISAM与InnoDB如何选择</strong></h4><p>MySQL有多种存储引擎，每种存储引擎有各自的优缺点，可以择优选择使用：MyISAM、InnoDB、MERGE、MEMORY(HEAP)、BDB(BerkeleyDB)、EXAMPLE、FEDERATED、ARCHIVE、CSV、BLACKHOLE。 虽然MySQL里的存储引擎不只是MyISAM与InnoDB这两个，但常用的就是两个。 关于MySQL数据库提供的两种存储引擎，MyISAM与InnoDB选择使用：</p>
<ul>
<li>  INNODB会支持一些关系数据库的高级功能，如事务功能和行级锁，MyISAM不支持。</li>
<li>  MyISAM的性能更优，占用的存储空间少，所以，选择何种存储引擎，视具体应用而定。</li>
</ul>
<h4 id="3-MySQL的MyISAM与InnoDB两种存储引擎在，事务、锁级别，各自的适用场景"><a href="#3-MySQL的MyISAM与InnoDB两种存储引擎在，事务、锁级别，各自的适用场景" class="headerlink" title="3.MySQL的MyISAM与InnoDB两种存储引擎在，事务、锁级别，各自的适用场景?"></a><strong>3.MySQL的MyISAM与InnoDB两种存储引擎在，事务、锁级别，各自的适用场景?</strong></h4><h5 id="事务处理上方面"><a href="#事务处理上方面" class="headerlink" title="事务处理上方面"></a><strong>事务处理上方面</strong></h5><ul>
<li>  MyISAM：强调的是性能，每次查询具有原子性,其执行数度比InnoDB类型更快，但是不提供事务支持。</li>
<li>  InnoDB：提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。</li>
</ul>
<h5 id="锁级别"><a href="#锁级别" class="headerlink" title="锁级别"></a><strong>锁级别</strong></h5><ul>
<li>  MyISAM：只支持表级锁，用户在操作MyISAM表时，select，update，delete，insert语句都会给表自动加锁，如果加锁以后的表满足insert并发的情况下，可以在表的尾部插入新的数据。</li>
<li>  InnoDB：支持事务和行级锁，是innodb的最大特色。行锁大幅度提高了多用户并发操作的新能。但是InnoDB的行锁，只是在WHERE的主键是有效的，非主键的WHERE都会锁全表的。</li>
</ul>
<h2 id="五、优化"><a href="#五、优化" class="headerlink" title="五、优化"></a>五、优化</h2><h4 id="1-查询语句不同元素（where、jion、limit、group-by、having等等）执行先后顺序"><a href="#1-查询语句不同元素（where、jion、limit、group-by、having等等）执行先后顺序" class="headerlink" title="1.查询语句不同元素（where、jion、limit、group by、having等等）执行先后顺序?"></a><strong>1.查询语句不同元素（where、jion、limit、group by、having等等）执行先后顺序?</strong></h4><p>查询中用到的关键词主要包含<strong>六个</strong>，并且他们的顺序依次为 <strong>select–from–where–group by–having–order by</strong></p>
<blockquote>
<p><strong>其中select和from是必须的，其他关键词是可选的，这六个关键词的执行顺序 与sql语句的书写顺序并不是一样的，而是按照下面的顺序来执行</strong> **from:**需要从哪个数据表检索数据 **where:**过滤表中数据的条件 **group by:**如何将上面过滤出的数据分组 **having:**对上面已经分组的数据进行过滤的条件 **select:**查看结果集中的哪个列，或列的计算结果 **order by :**按照什么样的顺序来查看返回的数据</p>
</blockquote>
<p><strong>from后面的表关联，是自右向左解析 而where条件的解析顺序是自下而上的。</strong> 也就是说，在写SQL语句的时候，尽量把数据量小的表放在最右边来进行关联（用小表去匹配大表），而把能筛选出小量数据的条件放在where语句的最左边 （用小表去匹配大表）</p>
<h4 id="2-使用explain优化sql和索引"><a href="#2-使用explain优化sql和索引" class="headerlink" title="2.使用explain优化sql和索引?"></a><strong>2.使用explain优化sql和索引?</strong></h4><p><strong>对于复杂、效率低的sql语句，我们通常是使用explain sql 来分析sql语句，这个语句可以打印出，语句的执行。这样方便我们分析，进行优化</strong> <strong>table：</strong>显示这一行的数据是关于哪张表的 <strong>type：</strong>这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、index和ALL **all:**full table scan ;MySQL将遍历全表以找到匹配的行； <strong>index:</strong> index scan; index 和 all的区别在于index类型只遍历索引； <strong>range：</strong>索引范围扫描，对索引的扫描开始于某一点，返回匹配值的行，常见与between ，等查询； <strong>ref：</strong>非唯一性索引扫描，返回匹配某个单独值的所有行，常见于使用非唯一索引即唯一索引的非唯一前缀进行查找； <strong>eq_ref：</strong>唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配，常用于主键或者唯一索引扫描； <strong>const，system：</strong>当MySQL对某查询某部分进行优化，并转为一个常量时，使用这些访问类型。如果将主键置于where列表中，MySQL就能将该查询转化为一个常量。 <strong>possible_keys：</strong>显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句 <strong>key：</strong> 实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MySQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MySQL忽略索引 <strong>key_len：</strong>使用的索引的长度。在不损失精确性的情况下，长度越短越好 <strong>ref：</strong>显示索引的哪一列被使用了，如果可能的话，是一个常数 <strong>rows：</strong>MySQL认为必须检查的用来返回请求数据的行数 <strong>Extra：</strong>关于MySQL如何解析查询的额外信息。</p>
<h4 id="3-MySQL慢查询怎么解决"><a href="#3-MySQL慢查询怎么解决" class="headerlink" title="3.MySQL慢查询怎么解决?"></a><strong>3.MySQL慢查询怎么解决?</strong></h4><ul>
<li>  slow_query_log 慢查询开启状态。</li>
<li>  slow_query_log_file 慢查询日志存放的位置（这个目录需要MySQL的运行帐号的可写权限，一般设置为MySQL的数据存放目录）。</li>
<li>  long_query_time 查询超过多少秒才记录。</li>
</ul>
<h2 id="六、数据库锁"><a href="#六、数据库锁" class="headerlink" title="六、数据库锁"></a>六、数据库锁</h2><h4 id="1-mysql都有什么锁，死锁判定原理和具体场景，死锁怎么解决"><a href="#1-mysql都有什么锁，死锁判定原理和具体场景，死锁怎么解决" class="headerlink" title="1.mysql都有什么锁，死锁判定原理和具体场景，死锁怎么解决?"></a><strong>1.mysql都有什么锁，死锁判定原理和具体场景，死锁怎么解决?</strong></h4><p><strong>MySQL有三种锁的级别：</strong>页级、表级、行级。</p>
<ul>
<li>  <strong>表级锁：</strong>开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高,并发度最低。</li>
<li>  <strong>行级锁：</strong>开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低,并发度也最高。</li>
<li>  <strong>页面锁：</strong>开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般</li>
</ul>
<h5 id="什么情况下会造成死锁"><a href="#什么情况下会造成死锁" class="headerlink" title="什么情况下会造成死锁?"></a><strong>什么情况下会造成死锁?</strong></h5><p><strong>什么是死锁？</strong> <strong>死锁:</strong> 是指两个或两个以上的进程在执行过程中。因争夺资源而造成的一种互相等待的现象,若无外力作用,它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁,这些永远在互相等竺的进程称为死锁进程。 表级锁不会产生死锁.所以解决死锁主要还是针对于最常用的InnoDB。 <strong>死锁的关键在于：</strong>两个(或以上)的Session加锁的顺序不一致。 那么对应的解决死锁问题的关键就是：让不同的session加锁有次序。 <strong>死锁的解决办法?</strong> 1.查出的线程杀死 kill</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT trx_MySQL_thread_id FROM information_schema.INNODB_TRX;</span><br></pre></td></tr></table></figure>

<p>2.设置锁的超时时间 Innodb 行锁的等待时间，单位秒。可在会话级别设置，RDS 实例该参数的默认值为 50（秒）。 生产环境不推荐使用过大的 innodb_lock_wait_timeout参数值 该参数支持在会话级别修改，方便应用在会话级别单独设置某些特殊操作的行锁等待超时时间，如下： set innodb_lock_wait_timeout=1000; —设置当前会话 Innodb 行锁等待超时时间，单位秒。 3.指定获取锁的顺序</p>
<h4 id="2-有哪些锁（乐观锁悲观锁），select-时怎么加排它锁"><a href="#2-有哪些锁（乐观锁悲观锁），select-时怎么加排它锁" class="headerlink" title="2.有哪些锁（乐观锁悲观锁），select 时怎么加排它锁?"></a><strong>2.有哪些锁（乐观锁悲观锁），select 时怎么加排它锁?</strong></h4><h5 id="悲观锁（Pessimistic-Lock）"><a href="#悲观锁（Pessimistic-Lock）" class="headerlink" title="悲观锁（Pessimistic Lock）:"></a><strong>悲观锁（Pessimistic Lock）:</strong></h5><p><strong>悲观锁特点:<strong>先获取锁，再进行业务操作。 即“悲观”的认为获取锁是非常有可能失败的，因此要先确保获取锁成功再进行业务操作。通常所说的</strong>“一锁二查三更新”即指的是使用悲观锁。</strong>通常来讲在数据库上的悲观锁需要数据库本身提供支持，即通过常用的select … for update操作来实现悲观锁。当数据库执行select for update时会获取被select中的数据行的行锁，因此其他并发执行的select for update如果试图选中同一行则会发生排斥（需要等待行锁被释放），因此达到锁的效果。select for update获取的行锁会在当前事务结束时自动释放，因此必须在事务中使用。 <strong>补充：</strong> 不同的数据库对select for update的实现和支持都是有所区别的，</p>
<ul>
<li>  oracle支持select for update no wait，表示如果拿不到锁立刻报错，而不是等待，MySQL就没有no wait这个选项。</li>
<li>  MySQL还有个问题是select for update语句执行中所有扫描过的行都会被锁上，这一点很容易造成问题。因此如果在MySQL中用悲观锁务必要确定走了索引，而不是全表扫描。</li>
</ul>
<h5 id="乐观锁（Optimistic-Lock）"><a href="#乐观锁（Optimistic-Lock）" class="headerlink" title="乐观锁（Optimistic Lock）:"></a><strong>乐观锁（Optimistic Lock）:</strong></h5><p><strong>1.<strong>乐观锁，也叫乐观并发控制，它假设多用户并发的事务在处理时不会彼此互相影响，各事务能够在不产生锁的情况下处理各自影响的那部分数据。在提交数据更新之前，每个事务会先检查在该事务读取数据后，有没有其他事务又修改了该数据。如果其他事务有更新的话，那么当前正在提交的事务会进行回滚。 <strong>2.乐观锁的特点先进行业务操作，不到万不得已不去拿锁。</strong>即“乐观”的认为拿锁多半是会成功的，因此在进行完业务操作需要实际更新数据的最后一步再去拿一下锁就好。 乐观锁在数据库上的实现完全是逻辑的，不需要数据库提供特殊的支持。 <strong>3.<strong>一般的做法是</strong>在需要锁的数据上增加一个版本号，或者时间戳</strong>， <strong>实现方式举例如下：</strong> <strong>乐观锁（给表加一个版本号字段）</strong> 这个并不是乐观锁的定义，给表加版本号，是</strong>数据库实现乐观锁的一种方式</strong>。</p>
<ol>
<li> SELECT data AS old_data, version AS old_version FROM …;</li>
<li> 根据获取的数据进行业务操作，得到new_data和new_version</li>
<li> UPDATE SET data = new_data, version = new_version WHERE version = old_version</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (updated row &gt; 0) &#123;</span><br><span class="line">// 乐观锁获取成功，操作完成</span><br><span class="line">&#125; else &#123;</span><br><span class="line">// 乐观锁获取失败，回滚并重试</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li>  乐观锁在不发生取锁失败的情况下开销比悲观锁小，但是一旦发生失败回滚开销则比较大，因此适合用在取锁失败概率比较小的场景，可以提升系统并发性能</li>
<li>  乐观锁还适用于一些比较特殊的场景，例如在业务操作过程中无法和数据库保持连接等悲观锁无法适用的地方。</li>
</ul>
<p><strong>总结：</strong> 悲观锁和乐观锁是数据库用来保证数据并发安全防止更新丢失的两种方法，例子在select … for update前加个事务就可以防止更新丢失。悲观锁和乐观锁大部分场景下差异不大，一些独特场景下有一些差别，一般我们可以从如下几个方面来判断。</p>
<ul>
<li>  <strong>响应速度：</strong> 如果需要非常高的响应速度，建议采用乐观锁方案，成功就执行，不成功就失败，不需要等待其他并发去释放锁。</li>
<li>  <strong>冲突频率：</strong> 如果冲突频率非常高，建议采用悲观锁，保证成功率，如果冲突频率大，乐观锁会需要多次重试才能成功，代价比较大。</li>
<li>  <strong>重试代价：</strong> 如果重试代价大，建议采用悲观锁。</li>
</ul>
<h2 id="七、其他"><a href="#七、其他" class="headerlink" title="七、其他"></a>七、其他</h2><h4 id="1-数据库的主从复制"><a href="#1-数据库的主从复制" class="headerlink" title="1.数据库的主从复制"></a><strong>1.数据库的主从复制</strong></h4><p><strong>主从复制的几种方式:</strong> <strong>同步复制:</strong> 所谓的同步复制，意思是master的变化，必须等待slave-1,slave-2,…,slave-n完成后才能返回。 这样，显然不可取，也不是MySQL复制的默认设置。比如，在WEB前端页面上，用户增加了条记录，需要等待很长时间。 <strong>异步复制:</strong> 如同AJAX请求一样。master只需要完成自己的数据库操作即可。至于slaves是否收到二进制日志，是否完成操作，不用关心,MySQL的默认设置。 <strong>半同步复制:</strong> master只保证slaves中的一个操作成功，就返回，其他slave不管。 这个功能，是由google为MySQL引入的。</p>
<h4 id="2-数据库主从复制分析的-7-个问题"><a href="#2-数据库主从复制分析的-7-个问题" class="headerlink" title="2.数据库主从复制分析的 7 个问题?"></a><strong>2.数据库主从复制分析的 7 个问题?</strong></h4><h5 id="问题1：master的写操作，slaves被动的进行一样的操作，保持数据一致性，那么slave是否可以主动的进行写操作？"><a href="#问题1：master的写操作，slaves被动的进行一样的操作，保持数据一致性，那么slave是否可以主动的进行写操作？" class="headerlink" title="问题1：master的写操作，slaves被动的进行一样的操作，保持数据一致性，那么slave是否可以主动的进行写操作？"></a><strong>问题1：</strong>master的写操作，slaves被动的进行一样的操作，保持数据一致性，那么slave是否可以主动的进行写操作？</h5><p>假设slave可以主动的进行写操作，slave又无法通知master，这样就导致了master和slave数据不一致了。因此slave不应该进行写操作，至少是slave上涉及到复制的数据库不可以写。实际上，这里已经揭示了读写分离的概念。</p>
<h5 id="问题2：主从复制中，可以有N个slave-可是这些slave又不能进行写操作，要他们干嘛？"><a href="#问题2：主从复制中，可以有N个slave-可是这些slave又不能进行写操作，要他们干嘛？" class="headerlink" title="问题2：主从复制中，可以有N个slave,可是这些slave又不能进行写操作，要他们干嘛？"></a><strong>问题2：</strong>主从复制中，可以有N个slave,可是这些slave又不能进行写操作，要他们干嘛？</h5><p><strong>实现数据备份:</strong> 类似于高可用的功能，一旦master挂了，可以让slave顶上去，同时slave提升为master。 **异地容灾:**比如master在北京，地震挂了，那么在上海的slave还可以继续。 主要用于实现scale out,分担负载,可以将读的任务分散到slaves上。</p>
<h5 id="问题3：主从复制中有master-slave1-slave2-…等等这么多MySQL数据库，那比如一个JAVA-WEB应用到底应该连接哪个数据库"><a href="#问题3：主从复制中有master-slave1-slave2-…等等这么多MySQL数据库，那比如一个JAVA-WEB应用到底应该连接哪个数据库" class="headerlink" title="问题3：主从复制中有master,slave1,slave2,…等等这么多MySQL数据库，那比如一个JAVA WEB应用到底应该连接哪个数据库?"></a><strong>问题3：</strong>主从复制中有master,slave1,slave2,…等等这么多MySQL数据库，那比如一个JAVA WEB应用到底应该连接哪个数据库?</h5><p>我们在应用程序中可以这样，insert/delete/update这些更新数据库的操作，用connection(for master)进行操作， select用connection(for slaves)进行操作。那我们的应用程序还要完成怎么从slaves选择一个来执行select，例如使用简单的轮循算法。 这样的话，相当于应用程序完成了SQL语句的路由，而且与MySQL的主从复制架构非常关联，一旦master挂了，某些slave挂了，那么应用程序就要修改了。能不能让应用程序与MySQL的主从复制架构没有什么太多关系呢？ 找一个组件，application program只需要与它打交道，用它来完成MySQL的代理，实现SQL语句的路由。 MySQL proxy并不负责，怎么从众多的slaves挑一个？可以交给另一个组件(比如haproxy)来完成。 这就是所谓的MySQL READ WRITE SPLITE，MySQL的读写分离。</p>
<h5 id="问题4：如果MySQL-proxy-direct-master他们中的某些挂了怎么办？"><a href="#问题4：如果MySQL-proxy-direct-master他们中的某些挂了怎么办？" class="headerlink" title="问题4：如果MySQL proxy , direct , master他们中的某些挂了怎么办？"></a><strong>问题4：</strong>如果MySQL proxy , direct , master他们中的某些挂了怎么办？</h5><p>总统一般都会弄个副总统，以防不测。同样的，可以给这些关键的节点来个备份。</p>
<h5 id="问题5：当master的二进制日志每产生一个事件，都需要发往slave，如果我们有N个slave-那是发N次，还是只发一次？如果只发一次，发给了slave-1，那slave-2-slave-3-…它们怎么办？"><a href="#问题5：当master的二进制日志每产生一个事件，都需要发往slave，如果我们有N个slave-那是发N次，还是只发一次？如果只发一次，发给了slave-1，那slave-2-slave-3-…它们怎么办？" class="headerlink" title="问题5：当master的二进制日志每产生一个事件，都需要发往slave，如果我们有N个slave,那是发N次，还是只发一次？如果只发一次，发给了slave-1，那slave-2,slave-3,…它们怎么办？"></a><strong>问题5：</strong>当master的二进制日志每产生一个事件，都需要发往slave，如果我们有N个slave,那是发N次，还是只发一次？如果只发一次，发给了slave-1，那slave-2,slave-3,…它们怎么办？</h5><p>显然，应该发N次。实际上，在MySQL master内部，维护N个线程，每一个线程负责将二进制日志文件发往对应的slave。master既要负责写操作，还的维护N个线程，负担会很重。可以这样，slave-1是master的从，slave-1又是slave-2,slave-3,…的主，同时slave-1不再负责select。 slave-1将master的复制线程的负担，转移到自己的身上。这就是所谓的多级复制的概念。</p>
<h5 id="问题6：当一个select发往MySQL-proxy，可能这次由slave-2响应，下次由slave-3响应，这样的话，就无法利用查询缓存了。"><a href="#问题6：当一个select发往MySQL-proxy，可能这次由slave-2响应，下次由slave-3响应，这样的话，就无法利用查询缓存了。" class="headerlink" title="问题6：当一个select发往MySQL proxy，可能这次由slave-2响应，下次由slave-3响应，这样的话，就无法利用查询缓存了。"></a><strong>问题6：</strong>当一个select发往MySQL proxy，可能这次由slave-2响应，下次由slave-3响应，这样的话，就无法利用查询缓存了。</h5><p>应该找一个共享式的缓存，比如memcache来解决。将slave-2,slave-3,…这些查询的结果都缓存至mamcache中。</p>
<h5 id="问题7：随着应用的日益增长，读操作很多，我们可以扩展slave，但是如果master满足不了写操作了，怎么办呢？"><a href="#问题7：随着应用的日益增长，读操作很多，我们可以扩展slave，但是如果master满足不了写操作了，怎么办呢？" class="headerlink" title="问题7：随着应用的日益增长，读操作很多，我们可以扩展slave，但是如果master满足不了写操作了，怎么办呢？"></a><strong>问题7：</strong>随着应用的日益增长，读操作很多，我们可以扩展slave，但是如果master满足不了写操作了，怎么办呢？</h5><p>scale on ?更好的服务器？ 没有最好的，只有更好的，太贵了。。。 scale out ? 主从复制架构已经满足不了。 可以分库【垂直拆分】，分表【水平拆分】。</p>
<h4 id="3-mysql-高并发环境解决方案"><a href="#3-mysql-高并发环境解决方案" class="headerlink" title="3.mysql 高并发环境解决方案?"></a><strong>3.mysql 高并发环境解决方案?</strong></h4><p><strong>MySQL 高并发环境解决方案：</strong> 分库 分表 分布式 增加二级缓存。。。。。 <strong>需求分析：</strong>互联网单位 每天大量数据读取，写入，并发性高。 <strong>现有解决方式：</strong>水平分库分表，由单点分布到多点数据库中，从而降低单点数据库压力。 <strong>集群方案：</strong>解决DB宕机带来的单点DB不能访问问题。 <strong>读写分离策略：</strong>极大限度提高了应用中Read数据的速度和并发量。无法解决高写入压力。 转载：<a href="https://cnblogs.com/wenxiaofei/p/9853682.html">https://cnblogs.com/wenxiaofei/p/9853682.html</a></p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Cluster集群搭建</title>
    <url>/1688/</url>
    <content><![CDATA[<h3 id="Redis-Cluster介绍"><a href="#Redis-Cluster介绍" class="headerlink" title="Redis Cluster介绍"></a>Redis Cluster介绍</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>Redis 集群是一个提供在多个Redis间节点间共享数据的程序集。 Redis集群并不支持处理多个keys的命令,因为这需要在不同的节点间移动数据,从而达不到像Redis那样的性能,在高负载的情况下可能会导致不可预料的错误. Redis 集群通过分区来提供一定程度的可用性,在实际环境中当某个节点宕机或者不可达的情况下继续处理命令. Redis 集群的优势:</p>
<ul>
<li>  自动分割数据到不同的节点上。</li>
<li>  整个集群的部分节点失败或者不可达的情况下能够继续处理命令。</li>
</ul>
<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>参考官网：<a href="https://redis.io/topics/cluster-tutorial/">https://redis.io/topics/cluster-tutorial/</a> Redis Cluster 可以看成是由多个 Redis 实例组成的数据集合。客户端不需要关注数 据的子集到底存储在哪个节点，只需要关注这个集合整体。 以 3 主 3 从为例，节点之间两两交互，共享数据分片、节点状态等信息； <img src="http://qn.199604.com/typoraImg/20200411235453287.png" alt="在这里插入图片描述"></p>
<h3 id="Redis-Cluster搭建"><a href="#Redis-Cluster搭建" class="headerlink" title="Redis Cluster搭建"></a>Redis Cluster搭建</h3><p>部署前提： 高可用Redis cluster集群(20)，主从+哨兵一台机器70个服务，每个服务限定10G内存(记得是运存，不是数据盘)</p>
<h4 id="1-上传redis安装包"><a href="#1-上传redis安装包" class="headerlink" title="1.上传redis安装包"></a>1.上传redis安装包</h4><p>这里用得是redis-5.0.9.tar.gz 上传文件到 目录<code>/usr/local</code> 或者外网直接下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-5.0.9.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="2-安装GCC"><a href="#2-安装GCC" class="headerlink" title="2.安装GCC"></a>2.安装GCC</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install gcc</span><br></pre></td></tr></table></figure>

<h4 id="3-解压并安装"><a href="#3-解压并安装" class="headerlink" title="3.解压并安装"></a>3.解压并安装</h4><p>解压</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar xzvf redis-5.0.9.tar.gz</span><br></pre></td></tr></table></figure>

<p>编译安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd redis-5.0.9</span><br><span class="line">make</span><br><span class="line">cd src</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>建立一个软连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s redis-5.0.9 redis</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：如出现/bin/sh: cc: command not found错误，是因为没有安装 gcc 环境，使用命令yum install gcc安装 gcc 环境即可</p>
</blockquote>
<p><img src="http://qn.199604.com/typoraImg/image-20210319173020188.png" alt="image-20210319173020188">   测试是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入redis目录</span><br><span class="line">cd redis</span><br><span class="line"># 执行启动命令 读取默认配置文件</span><br><span class="line">redis-server ./redis.conf </span><br><span class="line"># 连接测试，默认是6379</span><br><span class="line">redis-cli -p 6379</span><br></pre></td></tr></table></figure>

<h4 id="4-创建多个实例"><a href="#4-创建多个实例" class="headerlink" title="4.创建多个实例"></a>4.创建多个实例</h4><p>Redis 单机多实例部署方法十分简单，只要复制多个 redis 配置文件即可。需要注意每个实例的端口不能冲突。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /data/redis-cluster</span><br><span class="line"></span><br><span class="line">cd /data/redis-cluster/</span><br><span class="line"></span><br><span class="line">#创建 70个文件夹(70个服务)</span><br><span class="line">mkdir 700&#123;1..9&#125;</span><br><span class="line">mkdir 701&#123;0..9&#125;</span><br><span class="line">mkdir 702&#123;0..9&#125;</span><br><span class="line">mkdir 703&#123;0..9&#125;</span><br><span class="line">mkdir 704&#123;0..9&#125;</span><br><span class="line">mkdir 705&#123;0..9&#125;</span><br><span class="line">mkdir 706&#123;0..9&#125;</span><br><span class="line">mkdir 7070</span><br><span class="line"></span><br><span class="line">[root@pod3-highapp-a-23 local]# cd /data/redis-cluster/</span><br><span class="line">[root@pod3-highapp-a-23 redis-cluster]# ls</span><br><span class="line">7001  7003  7005  7007  7009  7011  7013  7015  7017  7019  7021  7023  7025  7027  7029  7031  7033  7035  7037  7039  7041  7043  7045  7047  7049  7051  7053  7055  7057  7059  7061  7063  7065  7067  7069</span><br><span class="line">7002  7004  7006  7008  7010  7012  7014  7016  7018  7020  7022  7024  7026  7028  7030  7032  7034  7036  7038  7040  7042  7044  7046  7048  7050  7052  7054  7056  7058  7060  7062  7064  7066  7068  7070</span><br></pre></td></tr></table></figure>

<h4 id="5-配置文件"><a href="#5-配置文件" class="headerlink" title="5.配置文件"></a>5.配置文件</h4><p>配置文件信息如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 守护进程模式</span><br><span class="line">daemonize yes </span><br><span class="line"># pid file 修改pidfile指向路径</span><br><span class="line">pidfile /data/redis-cluster/7001/7001.pid</span><br><span class="line"></span><br><span class="line"># 指明日志文件名</span><br><span class="line">logfile &quot;/data/redis-cluster/7001/7001.log&quot;</span><br><span class="line"></span><br><span class="line"># 工作目录</span><br><span class="line">dir /data/redis-cluster/7001/</span><br><span class="line"># 监听端口</span><br><span class="line">port 7001</span><br><span class="line"></span><br><span class="line">#如果是yes，表示启用集群，否则以单例模式启动</span><br><span class="line">cluster-enabled yes</span><br><span class="line"></span><br><span class="line">#请注意，尽管有此选项的名称</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line"></span><br><span class="line">#Redis群集节点超过不可用的最长时间</span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line"># TCP接收队列长度，受/proc/sys/net/core/somaxconn和tcp_max_syn_backlog这两个内核参数的影响</span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"># 一个客户端空闲多少秒后关闭连接(0代表禁用，永不关闭)</span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"># 如果非零，则设置SO_KEEPALIVE选项来向空闲连接的客户端发送ACK</span><br><span class="line">tcp-keepalive 300</span><br><span class="line"></span><br><span class="line"># 指定服务器调试等级</span><br><span class="line"># 可能值：</span><br><span class="line"># debug （大量信息，对开发/测试有用）</span><br><span class="line"># verbose （很多精简的有用信息，但是不像debug等级那么多）</span><br><span class="line"># notice （适量的信息，基本上是你生产环境中需要的）</span><br><span class="line"># warning （只有很重要/严重的信息会记录下来）</span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"># 设置数据库个数</span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"># 会在指定秒数和数据变化次数之后把数据库写到磁盘上</span><br><span class="line"># 900秒（15分钟）之后，且至少1次变更</span><br><span class="line"># 300秒（5分钟）之后，且至少10次变更</span><br><span class="line"># 60秒之后，且至少10000次变更</span><br><span class="line">save &quot;&quot;</span><br><span class="line">#save 900 1</span><br><span class="line">#save 300 10</span><br><span class="line">#save 60 10000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 默认如果开启RDB快照(至少一条save指令)并且最新的后台保存失败，Redis将会停止接受写操作</span><br><span class="line"># 这将使用户知道数据没有正确的持久化到硬盘，否则可能没人注意到并且造成一些灾难</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"># 当导出到 .rdb 数据库时是否用LZF压缩字符串对象</span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"># 版本5的RDB有一个CRC64算法的校验和放在了文件的最后。这将使文件格式更加可靠。</span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"># 持久化数据库的文件名</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"># 当master服务设置了密码保护时，slav服务连接master的密码</span><br><span class="line">masterauth NBD</span><br><span class="line"></span><br><span class="line"># 当一个slave失去和master的连接，或者同步正在进行中，slave的行为可以有两种：</span><br><span class="line">#</span><br><span class="line"># 1) 如果 slave-serve-stale-data 设置为 &quot;yes&quot; (默认值)，slave会继续响应客户端请求，</span><br><span class="line"># 可能是正常数据，或者是过时了的数据，也可能是还没获得值的空数据。</span><br><span class="line"># 2) 如果 slave-serve-stale-data 设置为 &quot;no&quot;，slave会回复&quot;正在从master同步</span><br><span class="line"># （SYNC with master in progress）&quot;来处理各种请求，除了 INFO 和 SLAVEOF 命令。</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"># 你可以配置salve实例是否接受写操作。可写的slave实例可能对存储临时数据比较有用(因为写入salve</span><br><span class="line"># 的数据在同master同步之后将很容易被删除</span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"># 是否在slave套接字发送SYNC之后禁用 TCP_NODELAY？</span><br><span class="line"># 如果你选择“yes”Redis将使用更少的TCP包和带宽来向slaves发送数据。但是这将使数据传输到slave</span><br><span class="line"># 上有延迟，Linux内核的默认配置会达到40毫秒</span><br><span class="line"># 如果你选择了 &quot;no&quot; 数据传输到salve的延迟将会减少但要使用更多的带宽</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"># slave的优先级是一个整数展示在Redis的Info输出中。如果master不再正常工作了，哨兵将用它来</span><br><span class="line"># 选择一个slave提升=升为master。</span><br><span class="line"># 优先级数字小的salve会优先考虑提升为master，所以例如有三个slave优先级分别为10，100，25，</span><br><span class="line"># 哨兵将挑选优先级最小数字为10的slave。</span><br><span class="line"># 0作为一个特殊的优先级，标识这个slave不能作为master，所以一个优先级为0的slave永远不会被</span><br><span class="line"># 哨兵挑选提升为master</span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 密码验证</span><br><span class="line"># 警告：因为Redis太快了，所以外面的人可以尝试每秒150k的密码来试图破解密码。这意味着你需要</span><br><span class="line"># 一个高强度的密码，否则破解太容易了</span><br><span class="line">requirepass NBD</span><br><span class="line"></span><br><span class="line"># redis实例最大占用内存，不要用比设置的上限更多的内存。一旦内存使用达到上限，Redis会根据选定的回收策略（参见：</span><br><span class="line"># maxmemmory-policy）删除key</span><br><span class="line">maxmemory 10gb</span><br><span class="line"></span><br><span class="line"># 最大内存策略：如果达到内存限制了，Redis如何选择删除key。你可以在下面五个行为里选：</span><br><span class="line"># volatile-lru -&gt; 根据LRU算法删除带有过期时间的key。</span><br><span class="line"># allkeys-lru -&gt; 根据LRU算法删除任何key。</span><br><span class="line"># volatile-random -&gt; 根据过期设置来随机删除key, 具备过期时间的key。 </span><br><span class="line"># allkeys-&gt;random -&gt; 无差别随机删, 任何一个key。 </span><br><span class="line"># volatile-ttl -&gt; 根据最近过期时间来删除（辅以TTL）, 这是对于有过期时间的key </span><br><span class="line"># noeviction -&gt; 谁也不删，直接在写操作时返回错误。</span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line"></span><br><span class="line"># 默认情况下，Redis是异步的把数据导出到磁盘上。这种模式在很多应用里已经足够好，但Redis进程</span><br><span class="line"># 出问题或断电时可能造成一段时间的写操作丢失(这取决于配置的save指令)。</span><br><span class="line">#</span><br><span class="line"># AOF是一种提供了更可靠的替代持久化模式，例如使用默认的数据写入文件策略（参见后面的配置）</span><br><span class="line"># 在遇到像服务器断电或单写情况下Redis自身进程出问题但操作系统仍正常运行等突发事件时，Redis</span><br><span class="line"># 能只丢失1秒的写操作。</span><br><span class="line">#</span><br><span class="line"># AOF和RDB持久化能同时启动并且不会有问题。</span><br><span class="line"># 如果AOF开启，那么在启动时Redis将加载AOF文件，它更能保证数据的可靠性。</span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"># aof文件名</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"># fsync() 系统调用告诉操作系统把数据写到磁盘上，而不是等更多的数据进入输出缓冲区。</span><br><span class="line"># 有些操作系统会真的把数据马上刷到磁盘上；有些则会尽快去尝试这么做。</span><br><span class="line">#</span><br><span class="line"># Redis支持三种不同的模式：</span><br><span class="line">#</span><br><span class="line"># no：不要立刻刷，只有在操作系统需要刷的时候再刷。比较快。</span><br><span class="line"># always：每次写操作都立刻写入到aof文件。慢，但是最安全。</span><br><span class="line"># everysec：每秒写一次。折中方案。 </span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"># 如果AOF的同步策略设置成 &quot;always&quot; 或者 &quot;everysec&quot;，并且后台的存储进程（后台存储或写入AOF</span><br><span class="line"># 日志）会产生很多磁盘I/O开销。某些Linux的配置下会使Redis因为 fsync()系统调用而阻塞很久。</span><br><span class="line"># 注意，目前对这个情况还没有完美修正，甚至不同线程的 fsync() 会阻塞我们同步的write(2)调用。</span><br><span class="line">#</span><br><span class="line"># 为了缓解这个问题，可以用下面这个选项。它可以在 BGSAVE 或 BGREWRITEAOF 处理时阻止主进程进行fsync()。</span><br><span class="line"># </span><br><span class="line"># 这就意味着如果有子进程在进行保存操作，那么Redis就处于&quot;不可同步&quot;的状态。</span><br><span class="line"># 这实际上是说，在最差的情况下可能会丢掉30秒钟的日志数据。（默认Linux设定）</span><br><span class="line"># </span><br><span class="line"># 如果你有延时问题把这个设置成&quot;yes&quot;，否则就保持&quot;no&quot;，这是保存持久数据的最安全的方式。</span><br><span class="line">no-appendfsync-on-rewrite yes</span><br><span class="line"></span><br><span class="line"># 自动重写AOF文件</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># AOF文件可能在尾部是不完整的（这跟system关闭有问题，尤其是mount ext4文件系统时</span><br><span class="line"># 没有加上data=ordered选项。只会发生在os死时，redis自己死不会不完整）。</span><br><span class="line"># 那redis重启时load进内存的时候就有问题了。</span><br><span class="line"># 发生的时候，可以选择redis启动报错，并且通知用户和写日志，或者load尽量多正常的数据。</span><br><span class="line"># 如果aof-load-truncated是yes，会自动发布一个log给客户端然后load（默认）。</span><br><span class="line"># 如果是no，用户必须手动redis-check-aof修复AOF文件才可以。</span><br><span class="line"># 注意，如果在读取的过程中，发现这个aof是损坏的，服务器也是会退出的，</span><br><span class="line"># 这个选项仅仅用于当服务器尝试读取更多的数据但又找不到相应的数据时。</span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"># Lua 脚本的最大执行时间，毫秒为单位</span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"># Redis慢查询日志可以记录超过指定时间的查询</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"># 这个长度没有限制。只是要主要会消耗内存。你可以通过 SLOWLOG RESET 来回收内存。</span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line"># redis延时监控系统在运行时会采样一些操作，以便收集可能导致延时的数据根源。</span><br><span class="line"># 通过 LATENCY命令 可以打印一些图样和获取一些报告，方便监控</span><br><span class="line"># 这个系统仅仅记录那个执行时间大于或等于预定时间（毫秒）的操作, </span><br><span class="line"># 这个预定时间是通过latency-monitor-threshold配置来指定的，</span><br><span class="line"># 当设置为0时，这个监控系统处于停止状态</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line"># Redis能通知 Pub/Sub 客户端关于键空间发生的事件，默认关闭</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line"># 当hash只有少量的entry时，并且最大的entry所占空间没有超过指定的限制时，会用一种节省内存的</span><br><span class="line"># 数据结构来编码。可以通过下面的指令来设定限制</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># set有一种特殊编码的情况：当set数据全是十进制64位有符号整型数字构成的字符串时。</span><br><span class="line"># 下面这个配置项就是用来设置set使用这种编码来节省内存的最大长度。</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"># 与hash和list相似，有序集合也可以用一种特别的编码方式来节省大量空间。</span><br><span class="line"># 这种编码只适合长度和元素都小于下面限制的有序集合</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># HyperLogLog稀疏结构表示字节的限制。该限制包括</span><br><span class="line"># 16个字节的头。当HyperLogLog使用稀疏结构表示</span><br><span class="line"># 这些限制，它会被转换成密度表示。</span><br><span class="line"># 值大于16000是完全没用的，因为在该点</span><br><span class="line"># 密集的表示是更多的内存效率。</span><br><span class="line"># 建议值是3000左右，以便具有的内存好处, 减少内存的消耗</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"># 启用哈希刷新，每100个CPU毫秒会拿出1个毫秒来刷新Redis的主哈希表（顶级键值映射表）</span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"># 客户端的输出缓冲区的限制，可用于强制断开那些因为某种原因从服务器读取数据的速度不够快的客户端</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"># 默认情况下，“hz”的被设定为10。提高该值将在Redis空闲时使用更多的CPU时，但同时当有多个key</span><br><span class="line"># 同时到期会使Redis的反应更灵敏，以及超时可以更精确地处理</span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"># 当一个子进程重写AOF文件时，如果启用下面的选项，则文件每生成32M数据会被同步</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure>

<p>将配置文件复制到其它文件夹下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp redis.conf /data/redis-cluster/7001/</span><br><span class="line">cp redis.conf /data/redis-cluster/7002/</span><br><span class="line">cp redis.conf /data/redis-cluster/7003/</span><br><span class="line">cp redis.conf /data/redis-cluster/7004/</span><br><span class="line">cp redis.conf /data/redis-cluster/7005/</span><br><span class="line">cp redis.conf /data/redis-cluster/7006/</span><br><span class="line">cp redis.conf /data/redis-cluster/7007/</span><br><span class="line">cp redis.conf /data/redis-cluster/7008/</span><br><span class="line">cp redis.conf /data/redis-cluster/7009/</span><br><span class="line">cp redis.conf /data/redis-cluster/7010/</span><br><span class="line"></span><br><span class="line">cp redis.conf /data/redis-cluster/7011/</span><br><span class="line">cp redis.conf /data/redis-cluster/7012/</span><br><span class="line">cp redis.conf /data/redis-cluster/7013/</span><br><span class="line">cp redis.conf /data/redis-cluster/7014/</span><br><span class="line">cp redis.conf /data/redis-cluster/7015/</span><br><span class="line">cp redis.conf /data/redis-cluster/7016/</span><br><span class="line">cp redis.conf /data/redis-cluster/7017/</span><br><span class="line">cp redis.conf /data/redis-cluster/7018/</span><br><span class="line">cp redis.conf /data/redis-cluster/7019/</span><br><span class="line">cp redis.conf /data/redis-cluster/7020/</span><br><span class="line"></span><br><span class="line">cp redis.conf /data/redis-cluster/7021/</span><br><span class="line">cp redis.conf /data/redis-cluster/7022/</span><br><span class="line">cp redis.conf /data/redis-cluster/7023/</span><br><span class="line">cp redis.conf /data/redis-cluster/7024/</span><br><span class="line">cp redis.conf /data/redis-cluster/7025/</span><br><span class="line">cp redis.conf /data/redis-cluster/7026/</span><br><span class="line">cp redis.conf /data/redis-cluster/7027/</span><br><span class="line">cp redis.conf /data/redis-cluster/7028/</span><br><span class="line">cp redis.conf /data/redis-cluster/7029/</span><br><span class="line"></span><br><span class="line">cp redis.conf /data/redis-cluster/7030/</span><br><span class="line">cp redis.conf /data/redis-cluster/7031/</span><br><span class="line">cp redis.conf /data/redis-cluster/7032/</span><br><span class="line">cp redis.conf /data/redis-cluster/7033/</span><br><span class="line">cp redis.conf /data/redis-cluster/7034/</span><br><span class="line">cp redis.conf /data/redis-cluster/7035/</span><br><span class="line">cp redis.conf /data/redis-cluster/7036/</span><br><span class="line">cp redis.conf /data/redis-cluster/7037/</span><br><span class="line">cp redis.conf /data/redis-cluster/7038/</span><br><span class="line">cp redis.conf /data/redis-cluster/7039/</span><br><span class="line"></span><br><span class="line">cp redis.conf /data/redis-cluster/7040/</span><br><span class="line">cp redis.conf /data/redis-cluster/7041/</span><br><span class="line">cp redis.conf /data/redis-cluster/7042/</span><br><span class="line">cp redis.conf /data/redis-cluster/7043/</span><br><span class="line">cp redis.conf /data/redis-cluster/7044/</span><br><span class="line">cp redis.conf /data/redis-cluster/7045/</span><br><span class="line">cp redis.conf /data/redis-cluster/7046/</span><br><span class="line">cp redis.conf /data/redis-cluster/7047/</span><br><span class="line">cp redis.conf /data/redis-cluster/7048/</span><br><span class="line">cp redis.conf /data/redis-cluster/7049/</span><br><span class="line"></span><br><span class="line">cp redis.conf /data/redis-cluster/7050/</span><br><span class="line">cp redis.conf /data/redis-cluster/7051/</span><br><span class="line">cp redis.conf /data/redis-cluster/7052/</span><br><span class="line">cp redis.conf /data/redis-cluster/7053/</span><br><span class="line">cp redis.conf /data/redis-cluster/7054/</span><br><span class="line">cp redis.conf /data/redis-cluster/7055/</span><br><span class="line">cp redis.conf /data/redis-cluster/7056/</span><br><span class="line">cp redis.conf /data/redis-cluster/7057/</span><br><span class="line">cp redis.conf /data/redis-cluster/7058/</span><br><span class="line">cp redis.conf /data/redis-cluster/7059/</span><br><span class="line"></span><br><span class="line">cp redis.conf /data/redis-cluster/7060/</span><br><span class="line">cp redis.conf /data/redis-cluster/7061/</span><br><span class="line">cp redis.conf /data/redis-cluster/7062/</span><br><span class="line">cp redis.conf /data/redis-cluster/7063/</span><br><span class="line">cp redis.conf /data/redis-cluster/7064/</span><br><span class="line">cp redis.conf /data/redis-cluster/7065/</span><br><span class="line">cp redis.conf /data/redis-cluster/7066/</span><br><span class="line">cp redis.conf /data/redis-cluster/7067/</span><br><span class="line">cp redis.conf /data/redis-cluster/7068/</span><br><span class="line">cp redis.conf /data/redis-cluster/7069/</span><br><span class="line">cp redis.conf /data/redis-cluster/7070/</span><br></pre></td></tr></table></figure>

<p>批量替换内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/7001/7001/g&#x27; 7001/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7002/g&#x27; 7002/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7003/g&#x27; 7003/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7004/g&#x27; 7004/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7005/g&#x27; 7005/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7006/g&#x27; 7006/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7007/g&#x27; 7007/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7008/g&#x27; 7008/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7009/g&#x27; 7009/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7010/g&#x27; 7010/redis.conf</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/7001/7011/g&#x27; 7011/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7012/g&#x27; 7012/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7013/g&#x27; 7013/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7014/g&#x27; 7014/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7015/g&#x27; 7015/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7016/g&#x27; 7016/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7017/g&#x27; 7017/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7018/g&#x27; 7018/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7019/g&#x27; 7019/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7020/g&#x27; 7020/redis.conf</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/7001/7021/g&#x27; 7021/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7022/g&#x27; 7022/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7023/g&#x27; 7023/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7024/g&#x27; 7024/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7025/g&#x27; 7025/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7026/g&#x27; 7026/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7027/g&#x27; 7027/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7028/g&#x27; 7028/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7029/g&#x27; 7029/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7030/g&#x27; 7030/redis.conf</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/7001/7031/g&#x27; 7031/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7032/g&#x27; 7032/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7033/g&#x27; 7033/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7034/g&#x27; 7034/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7035/g&#x27; 7035/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7036/g&#x27; 7036/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7037/g&#x27; 7037/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7038/g&#x27; 7038/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7039/g&#x27; 7039/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7040/g&#x27; 7040/redis.conf</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/7001/7041/g&#x27; 7041/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7042/g&#x27; 7042/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7043/g&#x27; 7043/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7044/g&#x27; 7044/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7045/g&#x27; 7045/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7046/g&#x27; 7046/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7047/g&#x27; 7047/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7048/g&#x27; 7048/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7049/g&#x27; 7049/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7050/g&#x27; 7050/redis.conf</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/7001/7051/g&#x27; 7051/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7052/g&#x27; 7052/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7053/g&#x27; 7053/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7054/g&#x27; 7054/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7055/g&#x27; 7055/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7056/g&#x27; 7056/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7057/g&#x27; 7057/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7058/g&#x27; 7058/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7059/g&#x27; 7059/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7060/g&#x27; 7060/redis.conf</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/7001/7061/g&#x27; 7061/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7062/g&#x27; 7062/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7063/g&#x27; 7063/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7064/g&#x27; 7064/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7065/g&#x27; 7065/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7066/g&#x27; 7066/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7067/g&#x27; 7067/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7068/g&#x27; 7068/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7069/g&#x27; 7069/redis.conf</span><br><span class="line">sed -i &#x27;s/7001/7070/g&#x27; 7070/redis.conf</span><br></pre></td></tr></table></figure>

<p>复制到其他19台机器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -rp redis-cluster root@10.209.17.101:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.103:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.105:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.106:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.11:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.110:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.117:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.12:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.122:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.13:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.14:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.15:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.16:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.17:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.18:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.19:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.2:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.20:/data/</span><br><span class="line">scp -rp redis-cluster root@10.209.17.21:/data/</span><br></pre></td></tr></table></figure>

<h4 id="6-Redis启动"><a href="#6-Redis启动" class="headerlink" title="6.Redis启动"></a>6.Redis启动</h4><p>启动70个redis实例。 建议直接建立一个startRedis.sh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server ./7001/redis.conf</span><br><span class="line">redis-server ./7002/redis.conf</span><br><span class="line">redis-server ./7003/redis.conf</span><br><span class="line">redis-server ./7004/redis.conf</span><br><span class="line">redis-server ./7005/redis.conf</span><br><span class="line">redis-server ./7006/redis.conf</span><br><span class="line">redis-server ./7007/redis.conf</span><br><span class="line">redis-server ./7008/redis.conf</span><br><span class="line">redis-server ./7009/redis.conf</span><br><span class="line">redis-server ./7010/redis.conf</span><br><span class="line">redis-server ./7011/redis.conf</span><br><span class="line">redis-server ./7012/redis.conf</span><br><span class="line">redis-server ./7013/redis.conf</span><br><span class="line">redis-server ./7014/redis.conf</span><br><span class="line">redis-server ./7015/redis.conf</span><br><span class="line">redis-server ./7016/redis.conf</span><br><span class="line">redis-server ./7017/redis.conf</span><br><span class="line">redis-server ./7018/redis.conf</span><br><span class="line">redis-server ./7019/redis.conf</span><br><span class="line">redis-server ./7020/redis.conf</span><br><span class="line">redis-server ./7021/redis.conf</span><br><span class="line">redis-server ./7022/redis.conf</span><br><span class="line">redis-server ./7023/redis.conf</span><br><span class="line">redis-server ./7024/redis.conf</span><br><span class="line">redis-server ./7025/redis.conf</span><br><span class="line">redis-server ./7026/redis.conf</span><br><span class="line">redis-server ./7027/redis.conf</span><br><span class="line">redis-server ./7028/redis.conf</span><br><span class="line">redis-server ./7029/redis.conf</span><br><span class="line">redis-server ./7030/redis.conf</span><br><span class="line">redis-server ./7031/redis.conf</span><br><span class="line">redis-server ./7032/redis.conf</span><br><span class="line">redis-server ./7033/redis.conf</span><br><span class="line">redis-server ./7034/redis.conf</span><br><span class="line">redis-server ./7035/redis.conf</span><br><span class="line">redis-server ./7036/redis.conf</span><br><span class="line">redis-server ./7037/redis.conf</span><br><span class="line">redis-server ./7038/redis.conf</span><br><span class="line">redis-server ./7039/redis.conf</span><br><span class="line">redis-server ./7040/redis.conf</span><br><span class="line">redis-server ./7041/redis.conf</span><br><span class="line">redis-server ./7042/redis.conf</span><br><span class="line">redis-server ./7043/redis.conf</span><br><span class="line">redis-server ./7044/redis.conf</span><br><span class="line">redis-server ./7045/redis.conf</span><br><span class="line">redis-server ./7046/redis.conf</span><br><span class="line">redis-server ./7047/redis.conf</span><br><span class="line">redis-server ./7048/redis.conf</span><br><span class="line">redis-server ./7049/redis.conf</span><br><span class="line">redis-server ./7050/redis.conf</span><br><span class="line">redis-server ./7051/redis.conf</span><br><span class="line">redis-server ./7052/redis.conf</span><br><span class="line">redis-server ./7053/redis.conf</span><br><span class="line">redis-server ./7054/redis.conf</span><br><span class="line">redis-server ./7055/redis.conf</span><br><span class="line">redis-server ./7056/redis.conf</span><br><span class="line">redis-server ./7057/redis.conf</span><br><span class="line">redis-server ./7058/redis.conf</span><br><span class="line">redis-server ./7059/redis.conf</span><br><span class="line">redis-server ./7060/redis.conf</span><br><span class="line">redis-server ./7061/redis.conf</span><br><span class="line">redis-server ./7062/redis.conf</span><br><span class="line">redis-server ./7063/redis.conf</span><br><span class="line">redis-server ./7064/redis.conf</span><br><span class="line">redis-server ./7065/redis.conf</span><br><span class="line">redis-server ./7066/redis.conf</span><br><span class="line">redis-server ./7067/redis.conf</span><br><span class="line">redis-server ./7068/redis.conf</span><br><span class="line">redis-server ./7069/redis.conf</span><br><span class="line">redis-server ./7070/redis.conf</span><br></pre></td></tr></table></figure>

<p>查看进程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@pod3-highapp-a-23 redis-cluster]# ps -ef  grep redis</span><br><span class="line">root      27936      1  2 15:50 ?        00:02:59 redis-server *:7001 [cluster]</span><br><span class="line">root      27941      1  3 15:50 ?        00:03:27 redis-server *:7002 [cluster]</span><br><span class="line">root      27946      1  3 15:50 ?        00:03:16 redis-server *:7003 [cluster]</span><br><span class="line">root      27951      1  3 15:50 ?        00:03:22 redis-server *:7004 [cluster]</span><br><span class="line">root      27956      1  3 15:50 ?        00:03:02 redis-server *:7005 [cluster]</span><br><span class="line">root      27961      1  3 15:50 ?        00:03:07 redis-server *:7006 [cluster]</span><br><span class="line">root      27966      1  3 15:50 ?        00:03:14 redis-server *:7007 [cluster]</span><br><span class="line">root      27971      1  3 15:50 ?        00:03:07 redis-server *:7008 [cluster]</span><br><span class="line">root      27976      1  3 15:50 ?        00:03:23 redis-server *:7009 [cluster]</span><br><span class="line">root      27981      1  3 15:50 ?        00:03:17 redis-server *:7010 [cluster]</span><br><span class="line">root      27986      1  3 15:50 ?        00:03:11 redis-server *:7011 [cluster]</span><br><span class="line">root      27991      1  3 15:50 ?        00:03:12 redis-server *:7012 [cluster]</span><br><span class="line">root      27996      1  3 15:50 ?        00:03:07 redis-server *:7013 [cluster]</span><br><span class="line">root      28001      1  3 15:50 ?        00:03:08 redis-server *:7014 [cluster]</span><br><span class="line">root      28006      1  3 15:50 ?        00:03:16 redis-server *:7015 [cluster]</span><br><span class="line">root      28011      1  3 15:50 ?        00:03:10 redis-server *:7016 [cluster]</span><br><span class="line">root      28023      1  3 15:50 ?        00:03:24 redis-server *:7017 [cluster]</span><br><span class="line">root      28028      1  3 15:50 ?        00:03:02 redis-server *:7018 [cluster]</span><br><span class="line">root      28033      1  3 15:50 ?        00:03:17 redis-server *:7019 [cluster]</span><br><span class="line">root      28039      1  3 15:50 ?        00:03:16 redis-server *:7020 [cluster]</span><br><span class="line">root      28082      1  3 15:50 ?        00:03:13 redis-server *:7021 [cluster]</span><br><span class="line">root      28087      1  3 15:50 ?        00:03:33 redis-server *:7022 [cluster]</span><br><span class="line">root      28089      1  3 15:50 ?        00:03:16 redis-server *:7023 [cluster]</span><br><span class="line">root      28097      1  3 15:50 ?        00:03:18 redis-server *:7024 [cluster]</span><br><span class="line">root      28100      1  3 15:50 ?        00:03:31 redis-server *:7025 [cluster]</span><br><span class="line">root      28107      1  3 15:50 ?        00:03:03 redis-server *:7026 [cluster]</span><br><span class="line">root      28112      1  3 15:50 ?        00:03:29 redis-server *:7027 [cluster]</span><br><span class="line">root      28117      1  3 15:50 ?        00:03:12 redis-server *:7028 [cluster]</span><br><span class="line">root      28122      1  3 15:50 ?        00:03:01 redis-server *:7029 [cluster]</span><br><span class="line">root      28127      1  3 15:50 ?        00:03:09 redis-server *:7030 [cluster]</span><br><span class="line">root      28132      1  3 15:50 ?        00:03:20 redis-server *:7031 [cluster]</span><br><span class="line">root      28137      1  2 15:50 ?        00:02:52 redis-server *:7032 [cluster]</span><br><span class="line">root      28142      1  3 15:50 ?        00:03:19 redis-server *:7033 [cluster]</span><br><span class="line">root      28147      1  3 15:50 ?        00:03:13 redis-server *:7034 [cluster]</span><br><span class="line">root      28152      1  3 15:50 ?        00:03:15 redis-server *:7035 [cluster]</span><br><span class="line">root      28157      1  3 15:50 ?        00:03:09 redis-server *:7036 [cluster]</span><br><span class="line">root      28162      1  3 15:50 ?        00:03:08 redis-server *:7037 [cluster]</span><br><span class="line">root      28168      1  3 15:50 ?        00:03:12 redis-server *:7038 [cluster]</span><br><span class="line">root      28173      1  3 15:50 ?        00:03:11 redis-server *:7039 [cluster]</span><br><span class="line">root      28178      1  3 15:50 ?        00:03:20 redis-server *:7040 [cluster]</span><br><span class="line">root      28231      1  3 15:51 ?        00:03:02 redis-server *:7041 [cluster]</span><br><span class="line">root      28236      1  3 15:51 ?        00:03:18 redis-server *:7042 [cluster]</span><br><span class="line">root      28241      1  3 15:51 ?        00:03:25 redis-server *:7043 [cluster]</span><br><span class="line">root      28246      1  3 15:51 ?        00:03:19 redis-server *:7044 [cluster]</span><br><span class="line">root      28251      1  3 15:51 ?        00:03:38 redis-server *:7045 [cluster]</span><br><span class="line">root      28256      1  3 15:51 ?        00:03:31 redis-server *:7046 [cluster]</span><br><span class="line">root      28261      1  3 15:51 ?        00:03:20 redis-server *:7047 [cluster]</span><br><span class="line">root      28266      1  3 15:51 ?        00:03:29 redis-server *:7048 [cluster]</span><br><span class="line">root      28272      1  3 15:51 ?        00:03:29 redis-server *:7049 [cluster]</span><br><span class="line">root      28277      1  3 15:51 ?        00:03:05 redis-server *:7050 [cluster]</span><br><span class="line">root      28282      1  3 15:51 ?        00:03:25 redis-server *:7051 [cluster]</span><br><span class="line">root      28287      1  3 15:51 ?        00:03:01 redis-server *:7052 [cluster]</span><br><span class="line">root      28292      1  3 15:51 ?        00:03:20 redis-server *:7053 [cluster]</span><br><span class="line">root      28299      1  3 15:51 ?        00:03:03 redis-server *:7054 [cluster]</span><br><span class="line">root      28304      1  3 15:51 ?        00:03:25 redis-server *:7055 [cluster]</span><br><span class="line">root      28309      1  3 15:51 ?        00:03:15 redis-server *:7056 [cluster]</span><br><span class="line">root      28314      1  3 15:51 ?        00:03:12 redis-server *:7057 [cluster]</span><br><span class="line">root      28319      1  3 15:51 ?        00:03:11 redis-server *:7058 [cluster]</span><br><span class="line">root      28324      1  3 15:51 ?        00:03:03 redis-server *:7059 [cluster]</span><br><span class="line">root      28329      1  3 15:51 ?        00:03:03 redis-server *:7060 [cluster]</span><br><span class="line">root      28356      1  3 15:51 ?        00:03:21 redis-server *:7061 [cluster]</span><br><span class="line">root      28361      1  3 15:51 ?        00:03:15 redis-server *:7062 [cluster]</span><br><span class="line">root      28366      1  2 15:51 ?        00:02:54 redis-server *:7063 [cluster]</span><br><span class="line">root      28372      1  3 15:51 ?        00:03:02 redis-server *:7064 [cluster]</span><br><span class="line">root      28377      1  3 15:51 ?        00:03:03 redis-server *:7065 [cluster]</span><br><span class="line">root      28382      1  3 15:51 ?        00:03:15 redis-server *:7066 [cluster]</span><br><span class="line">root      28387      1  3 15:51 ?        00:03:12 redis-server *:7067 [cluster]</span><br><span class="line">root      28392      1  3 15:51 ?        00:03:16 redis-server *:7068 [cluster]</span><br><span class="line">root      28397      1  3 15:51 ?        00:03:17 redis-server *:7069 [cluster]</span><br><span class="line">root      28402      1  3 15:51 ?        00:03:28 redis-server *:7070 [cluster]</span><br><span class="line">root      41658  15689  0 17:31 pts/1    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>

<h4 id="7-启动集群"><a href="#7-启动集群" class="headerlink" title="7.启动集群"></a>7.启动集群</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli -a NBD --cluster create --cluster-replicas 1 10.209.17.10:7001 10.209.17.10:7002 10.209.17.10:7003 10.209.17.10:7004 10.209.17.10:7005 10.209.17.10:7006 10.209.17.10:7007 10.209.17.10:7008 10.209.17.10:7009 10.209.17.10:7010 10.209.17.10:7011 10.209.17.10:7012 10.209.17.10:7013 10.209.17.10:7014 10.209.17.10:7015 10.209.17.10:7016 10.209.17.10:7017 10.209.17.10:7018 10.209.17.10:7019 10.209.17.10:7020 10.209.17.10:7021 10.209.17.10:7022 10.209.17.10:7023 10.209.17.10:7024 10.209.17.10:7025 10.209.17.10:7026 10.209.17.10:7027 10.209.17.10:7028 10.209.17.10:7029 10.209.17.10:7030 10.209.17.10:7031 10.209.17.10:7032 10.209.17.10:7033 10.209.17.10:7034 10.209.17.10:7035 10.209.17.10:7036 10.209.17.10:7037 10.209.17.10:7038 10.209.17.10:7039 10.209.17.10:7040 10.209.17.10:7041 10.209.17.10:7042 10.209.17.10:7043 10.209.17.10:7044 10.209.17.10:7045 10.209.17.10:7046 10.209.17.10:7047 10.209.17.10:7048 10.209.17.10:7049 10.209.17.10:7050 10.209.17.10:7051 10.209.17.10:7052 10.209.17.10:7053 10.209.17.10:7054 10.209.17.10:7055 10.209.17.10:7056 10.209.17.10:7057 10.209.17.10:7058 10.209.17.10:7059 10.209.17.10:7060 10.209.17.10:7061 10.209.17.10:7062 10.209.17.10:7063 10.209.17.10:7064 10.209.17.10:7065 10.209.17.10:7066 10.209.17.10:7067 10.209.17.10:7068 10.209.17.10:7069 10.209.17.10:7070 10.209.17.101:7001 10.209.17.101:7002 10.209.17.101:7003 10.209.17.101:7004 10.209.17.101:7005 10.209.17.101:7006 10.209.17.101:7007 10.209.17.101:7008 10.209.17.101:7009 10.209.17.101:7010 10.209.17.101:7011 10.209.17.101:7012 10.209.17.101:7013 10.209.17.101:7014 10.209.17.101:7015 10.209.17.101:7016 10.209.17.101:7017 10.209.17.101:7018 10.209.17.101:7019 10.209.17.101:7020 10.209.17.101:7021 10.209.17.101:7022 10.209.17.101:7023 10.209.17.101:7024 10.209.17.101:7025 10.209.17.101:7026 10.209.17.101:7027 10.209.17.101:7028 10.209.17.101:7029 10.209.17.101:7030 10.209.17.101:7031 10.209.17.101:7032 10.209.17.101:7033 10.209.17.101:7034 10.209.17.101:7035 10.209.17.101:7036 10.209.17.101:7037 10.209.17.101:7038 10.209.17.101:7039 10.209.17.101:7040 10.209.17.101:7041 10.209.17.101:7042 10.209.17.101:7043 10.209.17.101:7044 10.209.17.101:7045 10.209.17.101:7046 10.209.17.101:7047 10.209.17.101:7048 10.209.17.101:7049 10.209.17.101:7050 10.209.17.101:7051 10.209.17.101:7052 10.209.17.101:7053 10.209.17.101:7054 10.209.17.101:7055 10.209.17.101:7056 10.209.17.101:7057 10.209.17.101:7058 10.209.17.101:7059 10.209.17.101:7060 10.209.17.101:7061 10.209.17.101:7062 10.209.17.101:7063 10.209.17.101:7064 10.209.17.101:7065 10.209.17.101:7066 10.209.17.101:7067 10.209.17.101:7068 10.209.17.101:7069 10.209.17.101:7070 10.209.17.103:7001 10.209.17.103:7002 10.209.17.103:7003 10.209.17.103:7004 10.209.17.103:7005 10.209.17.103:7006 10.209.17.103:7007 10.209.17.103:7008 10.209.17.103:7009 10.209.17.103:7010 10.209.17.103:7011 10.209.17.103:7012 10.209.17.103:7013 10.209.17.103:7014 10.209.17.103:7015 10.209.17.103:7016 10.209.17.103:7017 10.209.17.103:7018 10.209.17.103:7019 10.209.17.103:7020 10.209.17.103:7021 10.209.17.103:7022 10.209.17.103:7023 10.209.17.103:7024 10.209.17.103:7025 10.209.17.103:7026 10.209.17.103:7027 10.209.17.103:7028 10.209.17.103:7029 10.209.17.103:7030 10.209.17.103:7031 10.209.17.103:7032 10.209.17.103:7033 10.209.17.103:7034 10.209.17.103:7035 10.209.17.103:7036 10.209.17.103:7037 10.209.17.103:7038 10.209.17.103:7039 10.209.17.103:7040 10.209.17.103:7041 10.209.17.103:7042 10.209.17.103:7043 10.209.17.103:7044 10.209.17.103:7045 10.209.17.103:7046 10.209.17.103:7047 10.209.17.103:7048 10.209.17.103:7049 10.209.17.103:7050 10.209.17.103:7051 10.209.17.103:7052 10.209.17.103:7053 10.209.17.103:7054 10.209.17.103:7055 10.209.17.103:7056 10.209.17.103:7057 10.209.17.103:7058 10.209.17.103:7059 10.209.17.103:7060 10.209.17.103:7061 10.209.17.103:7062 10.209.17.103:7063 10.209.17.103:7064 10.209.17.103:7065 10.209.17.103:7066 10.209.17.103:7067 10.209.17.103:7068 10.209.17.103:7069 10.209.17.103:7070 10.209.17.105:7001 10.209.17.105:7002 10.209.17.105:7003 10.209.17.105:7004 10.209.17.105:7005 10.209.17.105:7006 10.209.17.105:7007 10.209.17.105:7008 10.209.17.105:7009 10.209.17.105:7010 10.209.17.105:7011 10.209.17.105:7012 10.209.17.105:7013 10.209.17.105:7014 10.209.17.105:7015 10.209.17.105:7016 10.209.17.105:7017 10.209.17.105:7018 10.209.17.105:7019 10.209.17.105:7020 10.209.17.105:7021 10.209.17.105:7022 10.209.17.105:7023 10.209.17.105:7024 10.209.17.105:7025 10.209.17.105:7026 10.209.17.105:7027 10.209.17.105:7028 10.209.17.105:7029 10.209.17.105:7030 10.209.17.105:7031 10.209.17.105:7032 10.209.17.105:7033 10.209.17.105:7034 10.209.17.105:7035 10.209.17.105:7036 10.209.17.105:7037 10.209.17.105:7038 10.209.17.105:7039 10.209.17.105:7040 10.209.17.105:7041 10.209.17.105:7042 10.209.17.105:7043 10.209.17.105:7044 10.209.17.105:7045 10.209.17.105:7046 10.209.17.105:7047 10.209.17.105:7048 10.209.17.105:7049 10.209.17.105:7050 10.209.17.105:7051 10.209.17.105:7052 10.209.17.105:7053 10.209.17.105:7054 10.209.17.105:7055 10.209.17.105:7056 10.209.17.105:7057 10.209.17.105:7058 10.209.17.105:7059 10.209.17.105:7060 10.209.17.105:7061 10.209.17.105:7062 10.209.17.105:7063 10.209.17.105:7064 10.209.17.105:7065 10.209.17.105:7066 10.209.17.105:7067 10.209.17.105:7068 10.209.17.105:7069 10.209.17.105:7070 10.209.17.106:7001 10.209.17.106:7002 10.209.17.106:7003 10.209.17.106:7004 10.209.17.106:7005 10.209.17.106:7006 10.209.17.106:7007 10.209.17.106:7008 10.209.17.106:7009 10.209.17.106:7010 10.209.17.106:7011 10.209.17.106:7012 10.209.17.106:7013 10.209.17.106:7014 10.209.17.106:7015 10.209.17.106:7016 10.209.17.106:7017 10.209.17.106:7018 10.209.17.106:7019 10.209.17.106:7020 10.209.17.106:7021 10.209.17.106:7022 10.209.17.106:7023 10.209.17.106:7024 10.209.17.106:7025 10.209.17.106:7026 10.209.17.106:7027 10.209.17.106:7028 10.209.17.106:7029 10.209.17.106:7030 10.209.17.106:7031 10.209.17.106:7032 10.209.17.106:7033 10.209.17.106:7034 10.209.17.106:7035 10.209.17.106:7036 10.209.17.106:7037 10.209.17.106:7038 10.209.17.106:7039 10.209.17.106:7040 10.209.17.106:7041 10.209.17.106:7042 10.209.17.106:7043 10.209.17.106:7044 10.209.17.106:7045 10.209.17.106:7046 10.209.17.106:7047 10.209.17.106:7048 10.209.17.106:7049 10.209.17.106:7050 10.209.17.106:7051 10.209.17.106:7052 10.209.17.106:7053 10.209.17.106:7054 10.209.17.106:7055 10.209.17.106:7056 10.209.17.106:7057 10.209.17.106:7058 10.209.17.106:7059 10.209.17.106:7060 10.209.17.106:7061 10.209.17.106:7062 10.209.17.106:7063 10.209.17.106:7064 10.209.17.106:7065 10.209.17.106:7066 10.209.17.106:7067 10.209.17.106:7068 10.209.17.106:7069 10.209.17.106:7070 10.209.17.11:7001 10.209.17.11:7002 10.209.17.11:7003 10.209.17.11:7004 10.209.17.11:7005 10.209.17.11:7006 10.209.17.11:7007 10.209.17.11:7008 10.209.17.11:7009 10.209.17.11:7010 10.209.17.11:7011 10.209.17.11:7012 10.209.17.11:7013 10.209.17.11:7014 10.209.17.11:7015 10.209.17.11:7016 10.209.17.11:7017 10.209.17.11:7018 10.209.17.11:7019 10.209.17.11:7020 10.209.17.11:7021 10.209.17.11:7022 10.209.17.11:7023 10.209.17.11:7024 10.209.17.11:7025 10.209.17.11:7026 10.209.17.11:7027 10.209.17.11:7028 10.209.17.11:7029 10.209.17.11:7030 10.209.17.11:7031 10.209.17.11:7032 10.209.17.11:7033 10.209.17.11:7034 10.209.17.11:7035 10.209.17.11:7036 10.209.17.11:7037 10.209.17.11:7038 10.209.17.11:7039 10.209.17.11:7040 10.209.17.11:7041 10.209.17.11:7042 10.209.17.11:7043 10.209.17.11:7044 10.209.17.11:7045 10.209.17.11:7046 10.209.17.11:7047 10.209.17.11:7048 10.209.17.11:7049 10.209.17.11:7050 10.209.17.11:7051 10.209.17.11:7052 10.209.17.11:7053 10.209.17.11:7054 10.209.17.11:7055 10.209.17.11:7056 10.209.17.11:7057 10.209.17.11:7058 10.209.17.11:7059 10.209.17.11:7060 10.209.17.11:7061 10.209.17.11:7062 10.209.17.11:7063 10.209.17.11:7064 10.209.17.11:7065 10.209.17.11:7066 10.209.17.11:7067 10.209.17.11:7068 10.209.17.11:7069 10.209.17.11:7070 10.209.17.110:7001 10.209.17.110:7002 10.209.17.110:7003 10.209.17.110:7004 10.209.17.110:7005 10.209.17.110:7006 10.209.17.110:7007 10.209.17.110:7008 10.209.17.110:7009 10.209.17.110:7010 10.209.17.110:7011 10.209.17.110:7012 10.209.17.110:7013 10.209.17.110:7014 10.209.17.110:7015 10.209.17.110:7016 10.209.17.110:7017 10.209.17.110:7018 10.209.17.110:7019 10.209.17.110:7020 10.209.17.110:7021 10.209.17.110:7022 10.209.17.110:7023 10.209.17.110:7024 10.209.17.110:7025 10.209.17.110:7026 10.209.17.110:7027 10.209.17.110:7028 10.209.17.110:7029 10.209.17.110:7030 10.209.17.110:7031 10.209.17.110:7032 10.209.17.110:7033 10.209.17.110:7034 10.209.17.110:7035 10.209.17.110:7036 10.209.17.110:7037 10.209.17.110:7038 10.209.17.110:7039 10.209.17.110:7040 10.209.17.110:7041 10.209.17.110:7042 10.209.17.110:7043 10.209.17.110:7044 10.209.17.110:7045 10.209.17.110:7046 10.209.17.110:7047 10.209.17.110:7048 10.209.17.110:7049 10.209.17.110:7050 10.209.17.110:7051 10.209.17.110:7052 10.209.17.110:7053 10.209.17.110:7054 10.209.17.110:7055 10.209.17.110:7056 10.209.17.110:7057 10.209.17.110:7058 10.209.17.110:7059 10.209.17.110:7060 10.209.17.110:7061 10.209.17.110:7062 10.209.17.110:7063 10.209.17.110:7064 10.209.17.110:7065 10.209.17.110:7066 10.209.17.110:7067 10.209.17.110:7068 10.209.17.110:7069 10.209.17.110:7070 10.209.17.117:7001 10.209.17.117:7002 10.209.17.117:7003 10.209.17.117:7004 10.209.17.117:7005 10.209.17.117:7006 10.209.17.117:7007 10.209.17.117:7008 10.209.17.117:7009 10.209.17.117:7010 10.209.17.117:7011 10.209.17.117:7012 10.209.17.117:7013 10.209.17.117:7014 10.209.17.117:7015 10.209.17.117:7016 10.209.17.117:7017 10.209.17.117:7018 10.209.17.117:7019 10.209.17.117:7020 10.209.17.117:7021 10.209.17.117:7022 10.209.17.117:7023 10.209.17.117:7024 10.209.17.117:7025 10.209.17.117:7026 10.209.17.117:7027 10.209.17.117:7028 10.209.17.117:7029 10.209.17.117:7030 10.209.17.117:7031 10.209.17.117:7032 10.209.17.117:7033 10.209.17.117:7034 10.209.17.117:7035 10.209.17.117:7036 10.209.17.117:7037 10.209.17.117:7038 10.209.17.117:7039 10.209.17.117:7040 10.209.17.117:7041 10.209.17.117:7042 10.209.17.117:7043 10.209.17.117:7044 10.209.17.117:7045 10.209.17.117:7046 10.209.17.117:7047 10.209.17.117:7048 10.209.17.117:7049 10.209.17.117:7050 10.209.17.117:7051 10.209.17.117:7052 10.209.17.117:7053 10.209.17.117:7054 10.209.17.117:7055 10.209.17.117:7056 10.209.17.117:7057 10.209.17.117:7058 10.209.17.117:7059 10.209.17.117:7060 10.209.17.117:7061 10.209.17.117:7062 10.209.17.117:7063 10.209.17.117:7064 10.209.17.117:7065 10.209.17.117:7066 10.209.17.117:7067 10.209.17.117:7068 10.209.17.117:7069 10.209.17.117:7070 10.209.17.12:7001 10.209.17.12:7002 10.209.17.12:7003 10.209.17.12:7004 10.209.17.12:7005 10.209.17.12:7006 10.209.17.12:7007 10.209.17.12:7008 10.209.17.12:7009 10.209.17.12:7010 10.209.17.12:7011 10.209.17.12:7012 10.209.17.12:7013 10.209.17.12:7014 10.209.17.12:7015 10.209.17.12:7016 10.209.17.12:7017 10.209.17.12:7018 10.209.17.12:7019 10.209.17.12:7020 10.209.17.12:7021 10.209.17.12:7022 10.209.17.12:7023 10.209.17.12:7024 10.209.17.12:7025 10.209.17.12:7026 10.209.17.12:7027 10.209.17.12:7028 10.209.17.12:7029 10.209.17.12:7030 10.209.17.12:7031 10.209.17.12:7032 10.209.17.12:7033 10.209.17.12:7034 10.209.17.12:7035 10.209.17.12:7036 10.209.17.12:7037 10.209.17.12:7038 10.209.17.12:7039 10.209.17.12:7040 10.209.17.12:7041 10.209.17.12:7042 10.209.17.12:7043 10.209.17.12:7044 10.209.17.12:7045 10.209.17.12:7046 10.209.17.12:7047 10.209.17.12:7048 10.209.17.12:7049 10.209.17.12:7050 10.209.17.12:7051 10.209.17.12:7052 10.209.17.12:7053 10.209.17.12:7054 10.209.17.12:7055 10.209.17.12:7056 10.209.17.12:7057 10.209.17.12:7058 10.209.17.12:7059 10.209.17.12:7060 10.209.17.12:7061 10.209.17.12:7062 10.209.17.12:7063 10.209.17.12:7064 10.209.17.12:7065 10.209.17.12:7066 10.209.17.12:7067 10.209.17.12:7068 10.209.17.12:7069 10.209.17.12:7070 10.209.17.122:7001 10.209.17.122:7002 10.209.17.122:7003 10.209.17.122:7004 10.209.17.122:7005 10.209.17.122:7006 10.209.17.122:7007 10.209.17.122:7008 10.209.17.122:7009 10.209.17.122:7010 10.209.17.122:7011 10.209.17.122:7012 10.209.17.122:7013 10.209.17.122:7014 10.209.17.122:7015 10.209.17.122:7016 10.209.17.122:7017 10.209.17.122:7018 10.209.17.122:7019 10.209.17.122:7020 10.209.17.122:7021 10.209.17.122:7022 10.209.17.122:7023 10.209.17.122:7024 10.209.17.122:7025 10.209.17.122:7026 10.209.17.122:7027 10.209.17.122:7028 10.209.17.122:7029 10.209.17.122:7030 10.209.17.122:7031 10.209.17.122:7032 10.209.17.122:7033 10.209.17.122:7034 10.209.17.122:7035 10.209.17.122:7036 10.209.17.122:7037 10.209.17.122:7038 10.209.17.122:7039 10.209.17.122:7040 10.209.17.122:7041 10.209.17.122:7042 10.209.17.122:7043 10.209.17.122:7044 10.209.17.122:7045 10.209.17.122:7046 10.209.17.122:7047 10.209.17.122:7048 10.209.17.122:7049 10.209.17.122:7050 10.209.17.122:7051 10.209.17.122:7052 10.209.17.122:7053 10.209.17.122:7054 10.209.17.122:7055 10.209.17.122:7056 10.209.17.122:7057 10.209.17.122:7058 10.209.17.122:7059 10.209.17.122:7060 10.209.17.122:7061 10.209.17.122:7062 10.209.17.122:7063 10.209.17.122:7064 10.209.17.122:7065 10.209.17.122:7066 10.209.17.122:7067 10.209.17.122:7068 10.209.17.122:7069 10.209.17.122:7070 10.209.17.13:7001 10.209.17.13:7002 10.209.17.13:7003 10.209.17.13:7004 10.209.17.13:7005 10.209.17.13:7006 10.209.17.13:7007 10.209.17.13:7008 10.209.17.13:7009 10.209.17.13:7010 10.209.17.13:7011 10.209.17.13:7012 10.209.17.13:7013 10.209.17.13:7014 10.209.17.13:7015 10.209.17.13:7016 10.209.17.13:7017 10.209.17.13:7018 10.209.17.13:7019 10.209.17.13:7020 10.209.17.13:7021 10.209.17.13:7022 10.209.17.13:7023 10.209.17.13:7024 10.209.17.13:7025 10.209.17.13:7026 10.209.17.13:7027 10.209.17.13:7028 10.209.17.13:7029 10.209.17.13:7030 10.209.17.13:7031 10.209.17.13:7032 10.209.17.13:7033 10.209.17.13:7034 10.209.17.13:7035 10.209.17.13:7036 10.209.17.13:7037 10.209.17.13:7038 10.209.17.13:7039 10.209.17.13:7040 10.209.17.13:7041 10.209.17.13:7042 10.209.17.13:7043 10.209.17.13:7044 10.209.17.13:7045 10.209.17.13:7046 10.209.17.13:7047 10.209.17.13:7048 10.209.17.13:7049 10.209.17.13:7050 10.209.17.13:7051 10.209.17.13:7052 10.209.17.13:7053 10.209.17.13:7054 10.209.17.13:7055 10.209.17.13:7056 10.209.17.13:7057 10.209.17.13:7058 10.209.17.13:7059 10.209.17.13:7060 10.209.17.13:7061 10.209.17.13:7062 10.209.17.13:7063 10.209.17.13:7064 10.209.17.13:7065 10.209.17.13:7066 10.209.17.13:7067 10.209.17.13:7068 10.209.17.13:7069 10.209.17.13:7070 10.209.17.14:7001 10.209.17.14:7002 10.209.17.14:7003 10.209.17.14:7004 10.209.17.14:7005 10.209.17.14:7006 10.209.17.14:7007 10.209.17.14:7008 10.209.17.14:7009 10.209.17.14:7010 10.209.17.14:7011 10.209.17.14:7012 10.209.17.14:7013 10.209.17.14:7014 10.209.17.14:7015 10.209.17.14:7016 10.209.17.14:7017 10.209.17.14:7018 10.209.17.14:7019 10.209.17.14:7020 10.209.17.14:7021 10.209.17.14:7022 10.209.17.14:7023 10.209.17.14:7024 10.209.17.14:7025 10.209.17.14:7026 10.209.17.14:7027 10.209.17.14:7028 10.209.17.14:7029 10.209.17.14:7030 10.209.17.14:7031 10.209.17.14:7032 10.209.17.14:7033 10.209.17.14:7034 10.209.17.14:7035 10.209.17.14:7036 10.209.17.14:7037 10.209.17.14:7038 10.209.17.14:7039 10.209.17.14:7040 10.209.17.14:7041 10.209.17.14:7042 10.209.17.14:7043 10.209.17.14:7044 10.209.17.14:7045 10.209.17.14:7046 10.209.17.14:7047 10.209.17.14:7048 10.209.17.14:7049 10.209.17.14:7050 10.209.17.14:7051 10.209.17.14:7052 10.209.17.14:7053 10.209.17.14:7054 10.209.17.14:7055 10.209.17.14:7056 10.209.17.14:7057 10.209.17.14:7058 10.209.17.14:7059 10.209.17.14:7060 10.209.17.14:7061 10.209.17.14:7062 10.209.17.14:7063 10.209.17.14:7064 10.209.17.14:7065 10.209.17.14:7066 10.209.17.14:7067 10.209.17.14:7068 10.209.17.14:7069 10.209.17.14:7070 10.209.17.15:7001 10.209.17.15:7002 10.209.17.15:7003 10.209.17.15:7004 10.209.17.15:7005 10.209.17.15:7006 10.209.17.15:7007 10.209.17.15:7008 10.209.17.15:7009 10.209.17.15:7010 10.209.17.15:7011 10.209.17.15:7012 10.209.17.15:7013 10.209.17.15:7014 10.209.17.15:7015 10.209.17.15:7016 10.209.17.15:7017 10.209.17.15:7018 10.209.17.15:7019 10.209.17.15:7020 10.209.17.15:7021 10.209.17.15:7022 10.209.17.15:7023 10.209.17.15:7024 10.209.17.15:7025 10.209.17.15:7026 10.209.17.15:7027 10.209.17.15:7028 10.209.17.15:7029 10.209.17.15:7030 10.209.17.15:7031 10.209.17.15:7032 10.209.17.15:7033 10.209.17.15:7034 10.209.17.15:7035 10.209.17.15:7036 10.209.17.15:7037 10.209.17.15:7038 10.209.17.15:7039 10.209.17.15:7040 10.209.17.15:7041 10.209.17.15:7042 10.209.17.15:7043 10.209.17.15:7044 10.209.17.15:7045 10.209.17.15:7046 10.209.17.15:7047 10.209.17.15:7048 10.209.17.15:7049 10.209.17.15:7050 10.209.17.15:7051 10.209.17.15:7052 10.209.17.15:7053 10.209.17.15:7054 10.209.17.15:7055 10.209.17.15:7056 10.209.17.15:7057 10.209.17.15:7058 10.209.17.15:7059 10.209.17.15:7060 10.209.17.15:7061 10.209.17.15:7062 10.209.17.15:7063 10.209.17.15:7064 10.209.17.15:7065 10.209.17.15:7066 10.209.17.15:7067 10.209.17.15:7068 10.209.17.15:7069 10.209.17.15:7070 10.209.17.16:7001 10.209.17.16:7002 10.209.17.16:7003 10.209.17.16:7004 10.209.17.16:7005 10.209.17.16:7006 10.209.17.16:7007 10.209.17.16:7008 10.209.17.16:7009 10.209.17.16:7010 10.209.17.16:7011 10.209.17.16:7012 10.209.17.16:7013 10.209.17.16:7014 10.209.17.16:7015 10.209.17.16:7016 10.209.17.16:7017 10.209.17.16:7018 10.209.17.16:7019 10.209.17.16:7020 10.209.17.16:7021 10.209.17.16:7022 10.209.17.16:7023 10.209.17.16:7024 10.209.17.16:7025 10.209.17.16:7026 10.209.17.16:7027 10.209.17.16:7028 10.209.17.16:7029 10.209.17.16:7030 10.209.17.16:7031 10.209.17.16:7032 10.209.17.16:7033 10.209.17.16:7034 10.209.17.16:7035 10.209.17.16:7036 10.209.17.16:7037 10.209.17.16:7038 10.209.17.16:7039 10.209.17.16:7040 10.209.17.16:7041 10.209.17.16:7042 10.209.17.16:7043 10.209.17.16:7044 10.209.17.16:7045 10.209.17.16:7046 10.209.17.16:7047 10.209.17.16:7048 10.209.17.16:7049 10.209.17.16:7050 10.209.17.16:7051 10.209.17.16:7052 10.209.17.16:7053 10.209.17.16:7054 10.209.17.16:7055 10.209.17.16:7056 10.209.17.16:7057 10.209.17.16:7058 10.209.17.16:7059 10.209.17.16:7060 10.209.17.16:7061 10.209.17.16:7062 10.209.17.16:7063 10.209.17.16:7064 10.209.17.16:7065 10.209.17.16:7066 10.209.17.16:7067 10.209.17.16:7068 10.209.17.16:7069 10.209.17.16:7070 10.209.17.17:7001 10.209.17.17:7002 10.209.17.17:7003 10.209.17.17:7004 10.209.17.17:7005 10.209.17.17:7006 10.209.17.17:7007 10.209.17.17:7008 10.209.17.17:7009 10.209.17.17:7010 10.209.17.17:7011 10.209.17.17:7012 10.209.17.17:7013 10.209.17.17:7014 10.209.17.17:7015 10.209.17.17:7016 10.209.17.17:7017 10.209.17.17:7018 10.209.17.17:7019 10.209.17.17:7020 10.209.17.17:7021 10.209.17.17:7022 10.209.17.17:7023 10.209.17.17:7024 10.209.17.17:7025 10.209.17.17:7026 10.209.17.17:7027 10.209.17.17:7028 10.209.17.17:7029 10.209.17.17:7030 10.209.17.17:7031 10.209.17.17:7032 10.209.17.17:7033 10.209.17.17:7034 10.209.17.17:7035 10.209.17.17:7036 10.209.17.17:7037 10.209.17.17:7038 10.209.17.17:7039 10.209.17.17:7040 10.209.17.17:7041 10.209.17.17:7042 10.209.17.17:7043 10.209.17.17:7044 10.209.17.17:7045 10.209.17.17:7046 10.209.17.17:7047 10.209.17.17:7048 10.209.17.17:7049 10.209.17.17:7050 10.209.17.17:7051 10.209.17.17:7052 10.209.17.17:7053 10.209.17.17:7054 10.209.17.17:7055 10.209.17.17:7056 10.209.17.17:7057 10.209.17.17:7058 10.209.17.17:7059 10.209.17.17:7060 10.209.17.17:7061 10.209.17.17:7062 10.209.17.17:7063 10.209.17.17:7064 10.209.17.17:7065 10.209.17.17:7066 10.209.17.17:7067 10.209.17.17:7068 10.209.17.17:7069 10.209.17.17:7070 10.209.17.18:7001 10.209.17.18:7002 10.209.17.18:7003 10.209.17.18:7004 10.209.17.18:7005 10.209.17.18:7006 10.209.17.18:7007 10.209.17.18:7008 10.209.17.18:7009 10.209.17.18:7010 10.209.17.18:7011 10.209.17.18:7012 10.209.17.18:7013 10.209.17.18:7014 10.209.17.18:7015 10.209.17.18:7016 10.209.17.18:7017 10.209.17.18:7018 10.209.17.18:7019 10.209.17.18:7020 10.209.17.18:7021 10.209.17.18:7022 10.209.17.18:7023 10.209.17.18:7024 10.209.17.18:7025 10.209.17.18:7026 10.209.17.18:7027 10.209.17.18:7028 10.209.17.18:7029 10.209.17.18:7030 10.209.17.18:7031 10.209.17.18:7032 10.209.17.18:7033 10.209.17.18:7034 10.209.17.18:7035 10.209.17.18:7036 10.209.17.18:7037 10.209.17.18:7038 10.209.17.18:7039 10.209.17.18:7040 10.209.17.18:7041 10.209.17.18:7042 10.209.17.18:7043 10.209.17.18:7044 10.209.17.18:7045 10.209.17.18:7046 10.209.17.18:7047 10.209.17.18:7048 10.209.17.18:7049 10.209.17.18:7050 10.209.17.18:7051 10.209.17.18:7052 10.209.17.18:7053 10.209.17.18:7054 10.209.17.18:7055 10.209.17.18:7056 10.209.17.18:7057 10.209.17.18:7058 10.209.17.18:7059 10.209.17.18:7060 10.209.17.18:7061 10.209.17.18:7062 10.209.17.18:7063 10.209.17.18:7064 10.209.17.18:7065 10.209.17.18:7066 10.209.17.18:7067 10.209.17.18:7068 10.209.17.18:7069 10.209.17.18:7070 10.209.17.19:7001 10.209.17.19:7002 10.209.17.19:7003 10.209.17.19:7004 10.209.17.19:7005 10.209.17.19:7006 10.209.17.19:7007 10.209.17.19:7008 10.209.17.19:7009 10.209.17.19:7010 10.209.17.19:7011 10.209.17.19:7012 10.209.17.19:7013 10.209.17.19:7014 10.209.17.19:7015 10.209.17.19:7016 10.209.17.19:7017 10.209.17.19:7018 10.209.17.19:7019 10.209.17.19:7020 10.209.17.19:7021 10.209.17.19:7022 10.209.17.19:7023 10.209.17.19:7024 10.209.17.19:7025 10.209.17.19:7026 10.209.17.19:7027 10.209.17.19:7028 10.209.17.19:7029 10.209.17.19:7030 10.209.17.19:7031 10.209.17.19:7032 10.209.17.19:7033 10.209.17.19:7034 10.209.17.19:7035 10.209.17.19:7036 10.209.17.19:7037 10.209.17.19:7038 10.209.17.19:7039 10.209.17.19:7040 10.209.17.19:7041 10.209.17.19:7042 10.209.17.19:7043 10.209.17.19:7044 10.209.17.19:7045 10.209.17.19:7046 10.209.17.19:7047 10.209.17.19:7048 10.209.17.19:7049 10.209.17.19:7050 10.209.17.19:7051 10.209.17.19:7052 10.209.17.19:7053 10.209.17.19:7054 10.209.17.19:7055 10.209.17.19:7056 10.209.17.19:7057 10.209.17.19:7058 10.209.17.19:7059 10.209.17.19:7060 10.209.17.19:7061 10.209.17.19:7062 10.209.17.19:7063 10.209.17.19:7064 10.209.17.19:7065 10.209.17.19:7066 10.209.17.19:7067 10.209.17.19:7068 10.209.17.19:7069 10.209.17.19:7070 10.209.17.2:7001 10.209.17.2:7002 10.209.17.2:7003 10.209.17.2:7004 10.209.17.2:7005 10.209.17.2:7006 10.209.17.2:7007 10.209.17.2:7008 10.209.17.2:7009 10.209.17.2:7010 10.209.17.2:7011 10.209.17.2:7012 10.209.17.2:7013 10.209.17.2:7014 10.209.17.2:7015 10.209.17.2:7016 10.209.17.2:7017 10.209.17.2:7018 10.209.17.2:7019 10.209.17.2:7020 10.209.17.2:7021 10.209.17.2:7022 10.209.17.2:7023 10.209.17.2:7024 10.209.17.2:7025 10.209.17.2:7026 10.209.17.2:7027 10.209.17.2:7028 10.209.17.2:7029 10.209.17.2:7030 10.209.17.2:7031 10.209.17.2:7032 10.209.17.2:7033 10.209.17.2:7034 10.209.17.2:7035 10.209.17.2:7036 10.209.17.2:7037 10.209.17.2:7038 10.209.17.2:7039 10.209.17.2:7040 10.209.17.2:7041 10.209.17.2:7042 10.209.17.2:7043 10.209.17.2:7044 10.209.17.2:7045 10.209.17.2:7046 10.209.17.2:7047 10.209.17.2:7048 10.209.17.2:7049 10.209.17.2:7050 10.209.17.2:7051 10.209.17.2:7052 10.209.17.2:7053 10.209.17.2:7054 10.209.17.2:7055 10.209.17.2:7056 10.209.17.2:7057 10.209.17.2:7058 10.209.17.2:7059 10.209.17.2:7060 10.209.17.2:7061 10.209.17.2:7062 10.209.17.2:7063 10.209.17.2:7064 10.209.17.2:7065 10.209.17.2:7066 10.209.17.2:7067 10.209.17.2:7068 10.209.17.2:7069 10.209.17.2:7070 10.209.17.20:7001 10.209.17.20:7002 10.209.17.20:7003 10.209.17.20:7004 10.209.17.20:7005 10.209.17.20:7006 10.209.17.20:7007 10.209.17.20:7008 10.209.17.20:7009 10.209.17.20:7010 10.209.17.20:7011 10.209.17.20:7012 10.209.17.20:7013 10.209.17.20:7014 10.209.17.20:7015 10.209.17.20:7016 10.209.17.20:7017 10.209.17.20:7018 10.209.17.20:7019 10.209.17.20:7020 10.209.17.20:7021 10.209.17.20:7022 10.209.17.20:7023 10.209.17.20:7024 10.209.17.20:7025 10.209.17.20:7026 10.209.17.20:7027 10.209.17.20:7028 10.209.17.20:7029 10.209.17.20:7030 10.209.17.20:7031 10.209.17.20:7032 10.209.17.20:7033 10.209.17.20:7034 10.209.17.20:7035 10.209.17.20:7036 10.209.17.20:7037 10.209.17.20:7038 10.209.17.20:7039 10.209.17.20:7040 10.209.17.20:7041 10.209.17.20:7042 10.209.17.20:7043 10.209.17.20:7044 10.209.17.20:7045 10.209.17.20:7046 10.209.17.20:7047 10.209.17.20:7048 10.209.17.20:7049 10.209.17.20:7050 10.209.17.20:7051 10.209.17.20:7052 10.209.17.20:7053 10.209.17.20:7054 10.209.17.20:7055 10.209.17.20:7056 10.209.17.20:7057 10.209.17.20:7058 10.209.17.20:7059 10.209.17.20:7060 10.209.17.20:7061 10.209.17.20:7062 10.209.17.20:7063 10.209.17.20:7064 10.209.17.20:7065 10.209.17.20:7066 10.209.17.20:7067 10.209.17.20:7068 10.209.17.20:7069 10.209.17.20:7070 10.209.17.21:7001 10.209.17.21:7002 10.209.17.21:7003 10.209.17.21:7004 10.209.17.21:7005 10.209.17.21:7006 10.209.17.21:7007 10.209.17.21:7008 10.209.17.21:7009 10.209.17.21:7010 10.209.17.21:7011 10.209.17.21:7012 10.209.17.21:7013 10.209.17.21:7014 10.209.17.21:7015 10.209.17.21:7016 10.209.17.21:7017 10.209.17.21:7018 10.209.17.21:7019 10.209.17.21:7020 10.209.17.21:7021 10.209.17.21:7022 10.209.17.21:7023 10.209.17.21:7024 10.209.17.21:7025 10.209.17.21:7026 10.209.17.21:7027 10.209.17.21:7028 10.209.17.21:7029 10.209.17.21:7030 10.209.17.21:7031 10.209.17.21:7032 10.209.17.21:7033 10.209.17.21:7034 10.209.17.21:7035 10.209.17.21:7036 10.209.17.21:7037 10.209.17.21:7038 10.209.17.21:7039 10.209.17.21:7040 10.209.17.21:7041 10.209.17.21:7042 10.209.17.21:7043 10.209.17.21:7044 10.209.17.21:7045 10.209.17.21:7046 10.209.17.21:7047 10.209.17.21:7048 10.209.17.21:7049 10.209.17.21:7050 10.209.17.21:7051 10.209.17.21:7052 10.209.17.21:7053 10.209.17.21:7054 10.209.17.21:7055 10.209.17.21:7056 10.209.17.21:7057 10.209.17.21:7058 10.209.17.21:7059 10.209.17.21:7060 10.209.17.21:7061 10.209.17.21:7062 10.209.17.21:7063 10.209.17.21:7064 10.209.17.21:7065 10.209.17.21:7066 10.209.17.21:7067 10.209.17.21:7068 10.209.17.21:7069 10.209.17.21:7070</span><br></pre></td></tr></table></figure>

<p>系统会给出一个集群的预分配方案，没有问题，直接yes，继续操作。</p>
<blockquote>
<p>重置集群的方式是在每个节点上个执行<code>cluster reset</code>，然后重新创建集群. 如果加了密码，那么创建集群时就需要加-a NBD参数 不然会报以下错误:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ERR] Node 10.209.17.10:7001 NOAUTH Authentication required.</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="8-查看集群信息并且验证"><a href="#8-查看集群信息并且验证" class="headerlink" title="8.查看集群信息并且验证"></a>8.查看集群信息并且验证</h4><p>因为节点太多所以显示不全：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@wzy-cloud redis_cluster]# redis-cli -c -p 7001</span><br><span class="line">127.0.0.1:7001&gt; auth NBD</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:7001&gt; cluster nodes</span><br><span class="line">....</span><br><span class="line">efc817d0ac1c618cac2488e6b0d0b1dc2aa3ff9e 10.209.17.13:7051@17051 slave c0b20d79a24b7ddc92d9c57841630443e4fd3d3a 0 1616142660000 751 connected</span><br><span class="line">259c1bd8c636b591ddb20449d2a6597a96da71d3 10.209.17.18:7015@17015 master - 0 1616142661000 1065 connected 6905-6927</span><br><span class="line">11c304110820055891f6edbcf6f3014a7615626d 10.209.17.13:7010@17010 master - 0 1616142660000 710 connected 4447-4469</span><br><span class="line">0d19121bc7c131d62456bab5f4baea343bb20b2e 10.209.17.117:7061@17061 slave 512899081690267e773eb3e25e0013442555c735 0 1616142659000 551 connected</span><br><span class="line">b52b6d0b19604ff6b6fd4592659182651ebbec00 10.209.17.2:7014@17014 master - 0 1616142660000 1204 connected 6483-6506</span><br><span class="line">e71b0002c2744cd4a7718f088e9fb663994037f5 10.209.17.2:7033@17033 master - 0 1616142658000 1223 connected 15377-15400</span><br><span class="line">f11c898127be2107941eab0913ec394f6cbee5ca 10.209.17.20:7059@17059 slave 9139ffe08bde8e077ed741e3da49d497a9937541 0 1616142659000 1319 connected</span><br><span class="line">0c4bcd830ab65a3bee615e280594f93d1f8294bf 10.209.17.18:7063@17063 slave 65bd7c5e63a9e95c2fa0d627941543330cb3824c 0 1616142659000 1113 connected</span><br><span class="line">3e35ac8a0f49ef6ca05c29612cf2886d72eaa2de 10.209.17.20:7023@17023 master - 0 1616142660000 1283 connected 10720-10742</span><br><span class="line">127.0.0.1:7001&gt; set name hcxt_test</span><br><span class="line">-&gt; Redirected to slot [5798] located at 10.209.17.117:7013</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">10.209.17.117:7013&gt; auth NBD</span><br><span class="line">OK</span><br><span class="line">10.209.17.117:7013&gt; set name hcxt_test</span><br><span class="line">OK</span><br><span class="line">10.209.17.117:7013&gt; get name</span><br><span class="line">&quot;hcxt_test&quot;</span><br><span class="line">10.209.17.117:7013&gt; </span><br></pre></td></tr></table></figure>

<h4 id="6-Redis的三种启动方式、停止"><a href="#6-Redis的三种启动方式、停止" class="headerlink" title="6.Redis的三种启动方式、停止"></a>6.Redis的三种启动方式、停止</h4><p>redis的启动方式</p>
<h5 id="1-直接启动"><a href="#1-直接启动" class="headerlink" title="1.直接启动"></a>1.直接启动</h5><p>进入redis根目录，执行命令: #加上‘&amp;’号使redis以后台程序方式运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server &amp;</span><br></pre></td></tr></table></figure>

<h5 id="2-通过指定配置文件启动"><a href="#2-通过指定配置文件启动" class="headerlink" title="2.通过指定配置文件启动"></a>2.通过指定配置文件启动</h5><p>可以为redis服务启动指定配置文件，例如配置为/etc/redis/6379.conf 进入redis根目录，输入命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server /data//redis/xxx/redis.conf</span><br></pre></td></tr></table></figure>

<p>#如果更改了端口，使用<code>redis-cli</code>客户端连接时，也需要指定端口，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -p 6380 </span><br></pre></td></tr></table></figure>

<h5 id="3-启动指定IP的redis-cli-h-IP地址、-p-端口、-a-密码"><a href="#3-启动指定IP的redis-cli-h-IP地址、-p-端口、-a-密码" class="headerlink" title="3.启动指定IP的redis-cli(-h IP地址、-p 端口、-a 密码)"></a>3.启动指定IP的redis-cli(-h IP地址、-p 端口、-a 密码)</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a 12345</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">redis-cli  -p 6379 -a NBD</span><br></pre></td></tr></table></figure>

<h5 id="4-停止执行命令"><a href="#4-停止执行命令" class="headerlink" title="4.停止执行命令:"></a>4.停止执行命令:</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli -p 7068 shutdown -a testmaster123</span><br><span class="line">redis-cli -p 7000  -a NBD shutdown</span><br><span class="line"><span class="meta">#</span><span class="bash">哨兵</span></span><br><span class="line">redis-cli -p 26379  -a testmaster123 shutdown</span><br></pre></td></tr></table></figure>

<h5 id="5-redis集群删除"><a href="#5-redis集群删除" class="headerlink" title="5.redis集群删除"></a>5.redis集群删除</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">pid_name=&quot;redis&quot;</span><br><span class="line">echo &quot;杀死的进程名称：&quot; $pid_name</span><br><span class="line"> </span><br><span class="line">pid=$(ps -efgrep $pid_namegrep -v grepawk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"> </span><br><span class="line">echo &quot;pid列表：&quot; $pid</span><br><span class="line"> </span><br><span class="line">for item in $pid</span><br><span class="line">do</span><br><span class="line">  echo &quot;杀死进程pid=&quot; $item</span><br><span class="line">  kill -9 $item</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>参考： <a href="https://redis.io/documentation">https://redis.io/documentation</a> <a href="https://blog.csdn.net/aloneno/article/details/96370167">https://blog.csdn.net/aloneno/article/details/96370167</a> <a href="https://blog.csdn.net/qq_33996921/article/details/105462595">https://blog.csdn.net/qq_33996921/article/details/105462595</a> <a href="https://blog.csdn.net/qq_35887546/article/details/104799272">https://blog.csdn.net/qq_35887546/article/details/104799272</a></p>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>Redis Cluster</tag>
        <tag>集群</tag>
      </tags>
  </entry>
</search>
